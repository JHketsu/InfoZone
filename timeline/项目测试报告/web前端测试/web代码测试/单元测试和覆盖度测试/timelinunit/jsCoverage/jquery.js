/* automatically generated by JSCoverage - do not edit */
try {
  if (typeof top === 'object' && top !== null && typeof top.opener === 'object' && top.opener !== null) {
    // this is a browser window that was opened from another window

    if (! top.opener._$jscoverage) {
      top.opener._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null) {
    // this is a browser window

    try {
      if (typeof top.opener === 'object' && top.opener !== null && top.opener._$jscoverage) {
        top._$jscoverage = top.opener._$jscoverage;
      }
    }
    catch (e) {}

    if (! top._$jscoverage) {
      top._$jscoverage = {};
    }
  }
}
catch (e) {}

try {
  if (typeof top === 'object' && top !== null && top._$jscoverage) {
    _$jscoverage = top._$jscoverage;
  }
}
catch (e) {}
if (typeof _$jscoverage !== 'object') {
  _$jscoverage = {};
}
if (! _$jscoverage['jquery.js']) {
  _$jscoverage['jquery.js'] = [];
  _$jscoverage['jquery.js'][14] = 0;
  _$jscoverage['jquery.js'][16] = 0;
  _$jscoverage['jquery.js'][18] = 0;
  _$jscoverage['jquery.js'][27] = 0;
  _$jscoverage['jquery.js'][30] = 0;
  _$jscoverage['jquery.js'][31] = 0;
  _$jscoverage['jquery.js'][33] = 0;
  _$jscoverage['jquery.js'][36] = 0;
  _$jscoverage['jquery.js'][46] = 0;
  _$jscoverage['jquery.js'][48] = 0;
  _$jscoverage['jquery.js'][50] = 0;
  _$jscoverage['jquery.js'][52] = 0;
  _$jscoverage['jquery.js'][54] = 0;
  _$jscoverage['jquery.js'][56] = 0;
  _$jscoverage['jquery.js'][58] = 0;
  _$jscoverage['jquery.js'][60] = 0;
  _$jscoverage['jquery.js'][62] = 0;
  _$jscoverage['jquery.js'][64] = 0;
  _$jscoverage['jquery.js'][66] = 0;
  _$jscoverage['jquery.js'][68] = 0;
  _$jscoverage['jquery.js'][70] = 0;
  _$jscoverage['jquery.js'][72] = 0;
  _$jscoverage['jquery.js'][74] = 0;
  _$jscoverage['jquery.js'][80] = 0;
  _$jscoverage['jquery.js'][84] = 0;
  _$jscoverage['jquery.js'][85] = 0;
  _$jscoverage['jquery.js'][91] = 0;
  _$jscoverage['jquery.js'][97] = 0;
  _$jscoverage['jquery.js'][98] = 0;
  _$jscoverage['jquery.js'][100] = 0;
  _$jscoverage['jquery.js'][103] = 0;
  _$jscoverage['jquery.js'][104] = 0;
  _$jscoverage['jquery.js'][105] = 0;
  _$jscoverage['jquery.js'][106] = 0;
  _$jscoverage['jquery.js'][107] = 0;
  _$jscoverage['jquery.js'][111] = 0;
  _$jscoverage['jquery.js'][115] = 0;
  _$jscoverage['jquery.js'][116] = 0;
  _$jscoverage['jquery.js'][117] = 0;
  _$jscoverage['jquery.js'][121] = 0;
  _$jscoverage['jquery.js'][131] = 0;
  _$jscoverage['jquery.js'][139] = 0;
  _$jscoverage['jquery.js'][146] = 0;
  _$jscoverage['jquery.js'][157] = 0;
  _$jscoverage['jquery.js'][165] = 0;
  _$jscoverage['jquery.js'][166] = 0;
  _$jscoverage['jquery.js'][170] = 0;
  _$jscoverage['jquery.js'][178] = 0;
  _$jscoverage['jquery.js'][181] = 0;
  _$jscoverage['jquery.js'][184] = 0;
  _$jscoverage['jquery.js'][189] = 0;
  _$jscoverage['jquery.js'][193] = 0;
  _$jscoverage['jquery.js'][194] = 0;
  _$jscoverage['jquery.js'][199] = 0;
  _$jscoverage['jquery.js'][203] = 0;
  _$jscoverage['jquery.js'][207] = 0;
  _$jscoverage['jquery.js'][211] = 0;
  _$jscoverage['jquery.js'][213] = 0;
  _$jscoverage['jquery.js'][217] = 0;
  _$jscoverage['jquery.js'][227] = 0;
  _$jscoverage['jquery.js'][228] = 0;
  _$jscoverage['jquery.js'][235] = 0;
  _$jscoverage['jquery.js'][236] = 0;
  _$jscoverage['jquery.js'][239] = 0;
  _$jscoverage['jquery.js'][240] = 0;
  _$jscoverage['jquery.js'][244] = 0;
  _$jscoverage['jquery.js'][245] = 0;
  _$jscoverage['jquery.js'][249] = 0;
  _$jscoverage['jquery.js'][250] = 0;
  _$jscoverage['jquery.js'][251] = 0;
  _$jscoverage['jquery.js'][254] = 0;
  _$jscoverage['jquery.js'][257] = 0;
  _$jscoverage['jquery.js'][260] = 0;
  _$jscoverage['jquery.js'][261] = 0;
  _$jscoverage['jquery.js'][262] = 0;
  _$jscoverage['jquery.js'][265] = 0;
  _$jscoverage['jquery.js'][266] = 0;
  _$jscoverage['jquery.js'][270] = 0;
  _$jscoverage['jquery.js'][273] = 0;
  _$jscoverage['jquery.js'][274] = 0;
  _$jscoverage['jquery.js'][275] = 0;
  _$jscoverage['jquery.js'][278] = 0;
  _$jscoverage['jquery.js'][282] = 0;
  _$jscoverage['jquery.js'][285] = 0;
  _$jscoverage['jquery.js'][286] = 0;
  _$jscoverage['jquery.js'][293] = 0;
  _$jscoverage['jquery.js'][296] = 0;
  _$jscoverage['jquery.js'][305] = 0;
  _$jscoverage['jquery.js'][311] = 0;
  _$jscoverage['jquery.js'][315] = 0;
  _$jscoverage['jquery.js'][316] = 0;
  _$jscoverage['jquery.js'][319] = 0;
  _$jscoverage['jquery.js'][322] = 0;
  _$jscoverage['jquery.js'][323] = 0;
  _$jscoverage['jquery.js'][327] = 0;
  _$jscoverage['jquery.js'][328] = 0;
  _$jscoverage['jquery.js'][335] = 0;
  _$jscoverage['jquery.js'][337] = 0;
  _$jscoverage['jquery.js'][338] = 0;
  _$jscoverage['jquery.js'][340] = 0;
  _$jscoverage['jquery.js'][345] = 0;
  _$jscoverage['jquery.js'][349] = 0;
  _$jscoverage['jquery.js'][351] = 0;
  _$jscoverage['jquery.js'][352] = 0;
  _$jscoverage['jquery.js'][353] = 0;
  _$jscoverage['jquery.js'][354] = 0;
  _$jscoverage['jquery.js'][355] = 0;
  _$jscoverage['jquery.js'][359] = 0;
  _$jscoverage['jquery.js'][360] = 0;
  _$jscoverage['jquery.js'][361] = 0;
  _$jscoverage['jquery.js'][366] = 0;
  _$jscoverage['jquery.js'][371] = 0;
  _$jscoverage['jquery.js'][378] = 0;
  _$jscoverage['jquery.js'][380] = 0;
  _$jscoverage['jquery.js'][381] = 0;
  _$jscoverage['jquery.js'][382] = 0;
  _$jscoverage['jquery.js'][387] = 0;
  _$jscoverage['jquery.js'][391] = 0;
  _$jscoverage['jquery.js'][395] = 0;
  _$jscoverage['jquery.js'][401] = 0;
  _$jscoverage['jquery.js'][405] = 0;
  _$jscoverage['jquery.js'][406] = 0;
  _$jscoverage['jquery.js'][409] = 0;
  _$jscoverage['jquery.js'][411] = 0;
  _$jscoverage['jquery.js'][415] = 0;
  _$jscoverage['jquery.js'][423] = 0;
  _$jscoverage['jquery.js'][424] = 0;
  _$jscoverage['jquery.js'][425] = 0;
  _$jscoverage['jquery.js'][426] = 0;
  _$jscoverage['jquery.js'][430] = 0;
  _$jscoverage['jquery.js'][435] = 0;
  _$jscoverage['jquery.js'][440] = 0;
  _$jscoverage['jquery.js'][441] = 0;
  _$jscoverage['jquery.js'][442] = 0;
  _$jscoverage['jquery.js'][443] = 0;
  _$jscoverage['jquery.js'][445] = 0;
  _$jscoverage['jquery.js'][446] = 0;
  _$jscoverage['jquery.js'][452] = 0;
  _$jscoverage['jquery.js'][453] = 0;
  _$jscoverage['jquery.js'][455] = 0;
  _$jscoverage['jquery.js'][456] = 0;
  _$jscoverage['jquery.js'][462] = 0;
  _$jscoverage['jquery.js'][473] = 0;
  _$jscoverage['jquery.js'][474] = 0;
  _$jscoverage['jquery.js'][478] = 0;
  _$jscoverage['jquery.js'][480] = 0;
  _$jscoverage['jquery.js'][483] = 0;
  _$jscoverage['jquery.js'][489] = 0;
  _$jscoverage['jquery.js'][492] = 0;
  _$jscoverage['jquery.js'][493] = 0;
  _$jscoverage['jquery.js'][496] = 0;
  _$jscoverage['jquery.js'][499] = 0;
  _$jscoverage['jquery.js'][512] = 0;
  _$jscoverage['jquery.js'][543] = 0;
  _$jscoverage['jquery.js'][544] = 0;
  _$jscoverage['jquery.js'][546] = 0;
  _$jscoverage['jquery.js'][559] = 0;
  _$jscoverage['jquery.js'][561] = 0;
  _$jscoverage['jquery.js'][562] = 0;
  _$jscoverage['jquery.js'][563] = 0;
  _$jscoverage['jquery.js'][566] = 0;
  _$jscoverage['jquery.js'][639] = 0;
  _$jscoverage['jquery.js'][643] = 0;
  _$jscoverage['jquery.js'][656] = 0;
  _$jscoverage['jquery.js'][659] = 0;
  _$jscoverage['jquery.js'][660] = 0;
  _$jscoverage['jquery.js'][664] = 0;
  _$jscoverage['jquery.js'][668] = 0;
  _$jscoverage['jquery.js'][676] = 0;
  _$jscoverage['jquery.js'][681] = 0;
  _$jscoverage['jquery.js'][687] = 0;
  _$jscoverage['jquery.js'][688] = 0;
  _$jscoverage['jquery.js'][694] = 0;
  _$jscoverage['jquery.js'][696] = 0;
  _$jscoverage['jquery.js'][700] = 0;
  _$jscoverage['jquery.js'][706] = 0;
  _$jscoverage['jquery.js'][709] = 0;
  _$jscoverage['jquery.js'][710] = 0;
  _$jscoverage['jquery.js'][715] = 0;
  _$jscoverage['jquery.js'][716] = 0;
  _$jscoverage['jquery.js'][722] = 0;
  _$jscoverage['jquery.js'][725] = 0;
  _$jscoverage['jquery.js'][728] = 0;
  _$jscoverage['jquery.js'][732] = 0;
  _$jscoverage['jquery.js'][734] = 0;
  _$jscoverage['jquery.js'][735] = 0;
  _$jscoverage['jquery.js'][737] = 0;
  _$jscoverage['jquery.js'][739] = 0;
  _$jscoverage['jquery.js'][743] = 0;
  _$jscoverage['jquery.js'][746] = 0;
  _$jscoverage['jquery.js'][749] = 0;
  _$jscoverage['jquery.js'][750] = 0;
  _$jscoverage['jquery.js'][755] = 0;
  _$jscoverage['jquery.js'][756] = 0;
  _$jscoverage['jquery.js'][757] = 0;
  _$jscoverage['jquery.js'][760] = 0;
  _$jscoverage['jquery.js'][769] = 0;
  _$jscoverage['jquery.js'][773] = 0;
  _$jscoverage['jquery.js'][774] = 0;
  _$jscoverage['jquery.js'][779] = 0;
  _$jscoverage['jquery.js'][780] = 0;
  _$jscoverage['jquery.js'][781] = 0;
  _$jscoverage['jquery.js'][784] = 0;
  _$jscoverage['jquery.js'][787] = 0;
  _$jscoverage['jquery.js'][788] = 0;
  _$jscoverage['jquery.js'][793] = 0;
  _$jscoverage['jquery.js'][797] = 0;
  _$jscoverage['jquery.js'][798] = 0;
  _$jscoverage['jquery.js'][799] = 0;
  _$jscoverage['jquery.js'][805] = 0;
  _$jscoverage['jquery.js'][808] = 0;
  _$jscoverage['jquery.js'][809] = 0;
  _$jscoverage['jquery.js'][811] = 0;
  _$jscoverage['jquery.js'][815] = 0;
  _$jscoverage['jquery.js'][816] = 0;
  _$jscoverage['jquery.js'][817] = 0;
  _$jscoverage['jquery.js'][818] = 0;
  _$jscoverage['jquery.js'][820] = 0;
  _$jscoverage['jquery.js'][823] = 0;
  _$jscoverage['jquery.js'][827] = 0;
  _$jscoverage['jquery.js'][828] = 0;
  _$jscoverage['jquery.js'][829] = 0;
  _$jscoverage['jquery.js'][832] = 0;
  _$jscoverage['jquery.js'][835] = 0;
  _$jscoverage['jquery.js'][836] = 0;
  _$jscoverage['jquery.js'][845] = 0;
  _$jscoverage['jquery.js'][854] = 0;
  _$jscoverage['jquery.js'][855] = 0;
  _$jscoverage['jquery.js'][857] = 0;
  _$jscoverage['jquery.js'][859] = 0;
  _$jscoverage['jquery.js'][861] = 0;
  _$jscoverage['jquery.js'][863] = 0;
  _$jscoverage['jquery.js'][865] = 0;
  _$jscoverage['jquery.js'][872] = 0;
  _$jscoverage['jquery.js'][873] = 0;
  _$jscoverage['jquery.js'][874] = 0;
  _$jscoverage['jquery.js'][881] = 0;
  _$jscoverage['jquery.js'][882] = 0;
  _$jscoverage['jquery.js'][884] = 0;
  _$jscoverage['jquery.js'][885] = 0;
  _$jscoverage['jquery.js'][887] = 0;
  _$jscoverage['jquery.js'][890] = 0;
  _$jscoverage['jquery.js'][891] = 0;
  _$jscoverage['jquery.js'][894] = 0;
  _$jscoverage['jquery.js'][903] = 0;
  _$jscoverage['jquery.js'][904] = 0;
  _$jscoverage['jquery.js'][907] = 0;
  _$jscoverage['jquery.js'][908] = 0;
  _$jscoverage['jquery.js'][918] = 0;
  _$jscoverage['jquery.js'][919] = 0;
  _$jscoverage['jquery.js'][924] = 0;
  _$jscoverage['jquery.js'][925] = 0;
  _$jscoverage['jquery.js'][929] = 0;
  _$jscoverage['jquery.js'][930] = 0;
  _$jscoverage['jquery.js'][931] = 0;
  _$jscoverage['jquery.js'][932] = 0;
  _$jscoverage['jquery.js'][937] = 0;
  _$jscoverage['jquery.js'][944] = 0;
  _$jscoverage['jquery.js'][945] = 0;
  _$jscoverage['jquery.js'][946] = 0;
  _$jscoverage['jquery.js'][947] = 0;
  _$jscoverage['jquery.js'][955] = 0;
  _$jscoverage['jquery.js'][956] = 0;
  _$jscoverage['jquery.js'][957] = 0;
  _$jscoverage['jquery.js'][958] = 0;
  _$jscoverage['jquery.js'][966] = 0;
  _$jscoverage['jquery.js'][969] = 0;
  _$jscoverage['jquery.js'][974] = 0;
  _$jscoverage['jquery.js'][983] = 0;
  _$jscoverage['jquery.js'][986] = 0;
  _$jscoverage['jquery.js'][987] = 0;
  _$jscoverage['jquery.js'][988] = 0;
  _$jscoverage['jquery.js'][990] = 0;
  _$jscoverage['jquery.js'][996] = 0;
  _$jscoverage['jquery.js'][1004] = 0;
  _$jscoverage['jquery.js'][1009] = 0;
  _$jscoverage['jquery.js'][1010] = 0;
  _$jscoverage['jquery.js'][1014] = 0;
  _$jscoverage['jquery.js'][1022] = 0;
  _$jscoverage['jquery.js'][1023] = 0;
  _$jscoverage['jquery.js'][1024] = 0;
  _$jscoverage['jquery.js'][1025] = 0;
  _$jscoverage['jquery.js'][1026] = 0;
  _$jscoverage['jquery.js'][1031] = 0;
  _$jscoverage['jquery.js'][1032] = 0;
  _$jscoverage['jquery.js'][1033] = 0;
  _$jscoverage['jquery.js'][1045] = 0;
  _$jscoverage['jquery.js'][1046] = 0;
  _$jscoverage['jquery.js'][1050] = 0;
  _$jscoverage['jquery.js'][1057] = 0;
  _$jscoverage['jquery.js'][1060] = 0;
  _$jscoverage['jquery.js'][1061] = 0;
  _$jscoverage['jquery.js'][1069] = 0;
  _$jscoverage['jquery.js'][1070] = 0;
  _$jscoverage['jquery.js'][1074] = 0;
  _$jscoverage['jquery.js'][1075] = 0;
  _$jscoverage['jquery.js'][1079] = 0;
  _$jscoverage['jquery.js'][1080] = 0;
  _$jscoverage['jquery.js'][1081] = 0;
  _$jscoverage['jquery.js'][1085] = 0;
  _$jscoverage['jquery.js'][1089] = 0;
  _$jscoverage['jquery.js'][1090] = 0;
  _$jscoverage['jquery.js'][1093] = 0;
  _$jscoverage['jquery.js'][1094] = 0;
  _$jscoverage['jquery.js'][1104] = 0;
  _$jscoverage['jquery.js'][1105] = 0;
  _$jscoverage['jquery.js'][1106] = 0;
  _$jscoverage['jquery.js'][1113] = 0;
  _$jscoverage['jquery.js'][1114] = 0;
  _$jscoverage['jquery.js'][1115] = 0;
  _$jscoverage['jquery.js'][1119] = 0;
  _$jscoverage['jquery.js'][1125] = 0;
  _$jscoverage['jquery.js'][1126] = 0;
  _$jscoverage['jquery.js'][1127] = 0;
  _$jscoverage['jquery.js'][1131] = 0;
  _$jscoverage['jquery.js'][1132] = 0;
  _$jscoverage['jquery.js'][1133] = 0;
  _$jscoverage['jquery.js'][1134] = 0;
  _$jscoverage['jquery.js'][1135] = 0;
  _$jscoverage['jquery.js'][1138] = 0;
  _$jscoverage['jquery.js'][1139] = 0;
  _$jscoverage['jquery.js'][1140] = 0;
  _$jscoverage['jquery.js'][1141] = 0;
  _$jscoverage['jquery.js'][1145] = 0;
  _$jscoverage['jquery.js'][1146] = 0;
  _$jscoverage['jquery.js'][1147] = 0;
  _$jscoverage['jquery.js'][1148] = 0;
  _$jscoverage['jquery.js'][1150] = 0;
  _$jscoverage['jquery.js'][1156] = 0;
  _$jscoverage['jquery.js'][1157] = 0;
  _$jscoverage['jquery.js'][1158] = 0;
  _$jscoverage['jquery.js'][1161] = 0;
  _$jscoverage['jquery.js'][1164] = 0;
  _$jscoverage['jquery.js'][1165] = 0;
  _$jscoverage['jquery.js'][1166] = 0;
  _$jscoverage['jquery.js'][1170] = 0;
  _$jscoverage['jquery.js'][1171] = 0;
  _$jscoverage['jquery.js'][1172] = 0;
  _$jscoverage['jquery.js'][1173] = 0;
  _$jscoverage['jquery.js'][1174] = 0;
  _$jscoverage['jquery.js'][1175] = 0;
  _$jscoverage['jquery.js'][1180] = 0;
  _$jscoverage['jquery.js'][1186] = 0;
  _$jscoverage['jquery.js'][1188] = 0;
  _$jscoverage['jquery.js'][1189] = 0;
  _$jscoverage['jquery.js'][1192] = 0;
  _$jscoverage['jquery.js'][1193] = 0;
  _$jscoverage['jquery.js'][1198] = 0;
  _$jscoverage['jquery.js'][1205] = 0;
  _$jscoverage['jquery.js'][1206] = 0;
  _$jscoverage['jquery.js'][1207] = 0;
  _$jscoverage['jquery.js'][1208] = 0;
  _$jscoverage['jquery.js'][1212] = 0;
  _$jscoverage['jquery.js'][1214] = 0;
  _$jscoverage['jquery.js'][1218] = 0;
  _$jscoverage['jquery.js'][1219] = 0;
  _$jscoverage['jquery.js'][1220] = 0;
  _$jscoverage['jquery.js'][1230] = 0;
  _$jscoverage['jquery.js'][1237] = 0;
  _$jscoverage['jquery.js'][1239] = 0;
  _$jscoverage['jquery.js'][1242] = 0;
  _$jscoverage['jquery.js'][1248] = 0;
  _$jscoverage['jquery.js'][1256] = 0;
  _$jscoverage['jquery.js'][1257] = 0;
  _$jscoverage['jquery.js'][1262] = 0;
  _$jscoverage['jquery.js'][1263] = 0;
  _$jscoverage['jquery.js'][1267] = 0;
  _$jscoverage['jquery.js'][1268] = 0;
  _$jscoverage['jquery.js'][1274] = 0;
  _$jscoverage['jquery.js'][1275] = 0;
  _$jscoverage['jquery.js'][1281] = 0;
  _$jscoverage['jquery.js'][1282] = 0;
  _$jscoverage['jquery.js'][1286] = 0;
  _$jscoverage['jquery.js'][1287] = 0;
  _$jscoverage['jquery.js'][1292] = 0;
  _$jscoverage['jquery.js'][1293] = 0;
  _$jscoverage['jquery.js'][1294] = 0;
  _$jscoverage['jquery.js'][1298] = 0;
  _$jscoverage['jquery.js'][1299] = 0;
  _$jscoverage['jquery.js'][1304] = 0;
  _$jscoverage['jquery.js'][1305] = 0;
  _$jscoverage['jquery.js'][1310] = 0;
  _$jscoverage['jquery.js'][1311] = 0;
  _$jscoverage['jquery.js'][1312] = 0;
  _$jscoverage['jquery.js'][1316] = 0;
  _$jscoverage['jquery.js'][1317] = 0;
  _$jscoverage['jquery.js'][1321] = 0;
  _$jscoverage['jquery.js'][1327] = 0;
  _$jscoverage['jquery.js'][1330] = 0;
  _$jscoverage['jquery.js'][1334] = 0;
  _$jscoverage['jquery.js'][1335] = 0;
  _$jscoverage['jquery.js'][1339] = 0;
  _$jscoverage['jquery.js'][1340] = 0;
  _$jscoverage['jquery.js'][1344] = 0;
  _$jscoverage['jquery.js'][1349] = 0;
  _$jscoverage['jquery.js'][1351] = 0;
  _$jscoverage['jquery.js'][1353] = 0;
  _$jscoverage['jquery.js'][1360] = 0;
  _$jscoverage['jquery.js'][1361] = 0;
  _$jscoverage['jquery.js'][1362] = 0;
  _$jscoverage['jquery.js'][1363] = 0;
  _$jscoverage['jquery.js'][1367] = 0;
  _$jscoverage['jquery.js'][1374] = 0;
  _$jscoverage['jquery.js'][1378] = 0;
  _$jscoverage['jquery.js'][1379] = 0;
  _$jscoverage['jquery.js'][1380] = 0;
  _$jscoverage['jquery.js'][1384] = 0;
  _$jscoverage['jquery.js'][1385] = 0;
  _$jscoverage['jquery.js'][1386] = 0;
  _$jscoverage['jquery.js'][1390] = 0;
  _$jscoverage['jquery.js'][1397] = 0;
  _$jscoverage['jquery.js'][1401] = 0;
  _$jscoverage['jquery.js'][1402] = 0;
  _$jscoverage['jquery.js'][1404] = 0;
  _$jscoverage['jquery.js'][1405] = 0;
  _$jscoverage['jquery.js'][1409] = 0;
  _$jscoverage['jquery.js'][1414] = 0;
  _$jscoverage['jquery.js'][1418] = 0;
  _$jscoverage['jquery.js'][1419] = 0;
  _$jscoverage['jquery.js'][1420] = 0;
  _$jscoverage['jquery.js'][1423] = 0;
  _$jscoverage['jquery.js'][1431] = 0;
  _$jscoverage['jquery.js'][1432] = 0;
  _$jscoverage['jquery.js'][1441] = 0;
  _$jscoverage['jquery.js'][1442] = 0;
  _$jscoverage['jquery.js'][1446] = 0;
  _$jscoverage['jquery.js'][1447] = 0;
  _$jscoverage['jquery.js'][1448] = 0;
  _$jscoverage['jquery.js'][1450] = 0;
  _$jscoverage['jquery.js'][1451] = 0;
  _$jscoverage['jquery.js'][1452] = 0;
  _$jscoverage['jquery.js'][1456] = 0;
  _$jscoverage['jquery.js'][1457] = 0;
  _$jscoverage['jquery.js'][1460] = 0;
  _$jscoverage['jquery.js'][1470] = 0;
  _$jscoverage['jquery.js'][1473] = 0;
  _$jscoverage['jquery.js'][1474] = 0;
  _$jscoverage['jquery.js'][1477] = 0;
  _$jscoverage['jquery.js'][1479] = 0;
  _$jscoverage['jquery.js'][1480] = 0;
  _$jscoverage['jquery.js'][1484] = 0;
  _$jscoverage['jquery.js'][1486] = 0;
  _$jscoverage['jquery.js'][1491] = 0;
  _$jscoverage['jquery.js'][1492] = 0;
  _$jscoverage['jquery.js'][1495] = 0;
  _$jscoverage['jquery.js'][1499] = 0;
  _$jscoverage['jquery.js'][1504] = 0;
  _$jscoverage['jquery.js'][1507] = 0;
  _$jscoverage['jquery.js'][1509] = 0;
  _$jscoverage['jquery.js'][1510] = 0;
  _$jscoverage['jquery.js'][1512] = 0;
  _$jscoverage['jquery.js'][1515] = 0;
  _$jscoverage['jquery.js'][1517] = 0;
  _$jscoverage['jquery.js'][1518] = 0;
  _$jscoverage['jquery.js'][1521] = 0;
  _$jscoverage['jquery.js'][1527] = 0;
  _$jscoverage['jquery.js'][1536] = 0;
  _$jscoverage['jquery.js'][1537] = 0;
  _$jscoverage['jquery.js'][1540] = 0;
  _$jscoverage['jquery.js'][1541] = 0;
  _$jscoverage['jquery.js'][1548] = 0;
  _$jscoverage['jquery.js'][1549] = 0;
  _$jscoverage['jquery.js'][1555] = 0;
  _$jscoverage['jquery.js'][1556] = 0;
  _$jscoverage['jquery.js'][1557] = 0;
  _$jscoverage['jquery.js'][1559] = 0;
  _$jscoverage['jquery.js'][1560] = 0;
  _$jscoverage['jquery.js'][1561] = 0;
  _$jscoverage['jquery.js'][1562] = 0;
  _$jscoverage['jquery.js'][1565] = 0;
  _$jscoverage['jquery.js'][1566] = 0;
  _$jscoverage['jquery.js'][1572] = 0;
  _$jscoverage['jquery.js'][1574] = 0;
  _$jscoverage['jquery.js'][1581] = 0;
  _$jscoverage['jquery.js'][1582] = 0;
  _$jscoverage['jquery.js'][1587] = 0;
  _$jscoverage['jquery.js'][1589] = 0;
  _$jscoverage['jquery.js'][1591] = 0;
  _$jscoverage['jquery.js'][1593] = 0;
  _$jscoverage['jquery.js'][1596] = 0;
  _$jscoverage['jquery.js'][1597] = 0;
  _$jscoverage['jquery.js'][1600] = 0;
  _$jscoverage['jquery.js'][1601] = 0;
  _$jscoverage['jquery.js'][1604] = 0;
  _$jscoverage['jquery.js'][1605] = 0;
  _$jscoverage['jquery.js'][1609] = 0;
  _$jscoverage['jquery.js'][1612] = 0;
  _$jscoverage['jquery.js'][1634] = 0;
  _$jscoverage['jquery.js'][1637] = 0;
  _$jscoverage['jquery.js'][1639] = 0;
  _$jscoverage['jquery.js'][1640] = 0;
  _$jscoverage['jquery.js'][1643] = 0;
  _$jscoverage['jquery.js'][1657] = 0;
  _$jscoverage['jquery.js'][1659] = 0;
  _$jscoverage['jquery.js'][1661] = 0;
  _$jscoverage['jquery.js'][1662] = 0;
  _$jscoverage['jquery.js'][1667] = 0;
  _$jscoverage['jquery.js'][1668] = 0;
  _$jscoverage['jquery.js'][1671] = 0;
  _$jscoverage['jquery.js'][1672] = 0;
  _$jscoverage['jquery.js'][1675] = 0;
  _$jscoverage['jquery.js'][1679] = 0;
  _$jscoverage['jquery.js'][1682] = 0;
  _$jscoverage['jquery.js'][1683] = 0;
  _$jscoverage['jquery.js'][1687] = 0;
  _$jscoverage['jquery.js'][1688] = 0;
  _$jscoverage['jquery.js'][1691] = 0;
  _$jscoverage['jquery.js'][1698] = 0;
  _$jscoverage['jquery.js'][1699] = 0;
  _$jscoverage['jquery.js'][1703] = 0;
  _$jscoverage['jquery.js'][1710] = 0;
  _$jscoverage['jquery.js'][1711] = 0;
  _$jscoverage['jquery.js'][1712] = 0;
  _$jscoverage['jquery.js'][1714] = 0;
  _$jscoverage['jquery.js'][1719] = 0;
  _$jscoverage['jquery.js'][1721] = 0;
  _$jscoverage['jquery.js'][1724] = 0;
  _$jscoverage['jquery.js'][1729] = 0;
  _$jscoverage['jquery.js'][1730] = 0;
  _$jscoverage['jquery.js'][1732] = 0;
  _$jscoverage['jquery.js'][1733] = 0;
  _$jscoverage['jquery.js'][1735] = 0;
  _$jscoverage['jquery.js'][1736] = 0;
  _$jscoverage['jquery.js'][1739] = 0;
  _$jscoverage['jquery.js'][1741] = 0;
  _$jscoverage['jquery.js'][1753] = 0;
  _$jscoverage['jquery.js'][1757] = 0;
  _$jscoverage['jquery.js'][1761] = 0;
  _$jscoverage['jquery.js'][1765] = 0;
  _$jscoverage['jquery.js'][1772] = 0;
  _$jscoverage['jquery.js'][1775] = 0;
  _$jscoverage['jquery.js'][1776] = 0;
  _$jscoverage['jquery.js'][1777] = 0;
  _$jscoverage['jquery.js'][1778] = 0;
  _$jscoverage['jquery.js'][1779] = 0;
  _$jscoverage['jquery.js'][1783] = 0;
  _$jscoverage['jquery.js'][1787] = 0;
  _$jscoverage['jquery.js'][1789] = 0;
  _$jscoverage['jquery.js'][1792] = 0;
  _$jscoverage['jquery.js'][1795] = 0;
  _$jscoverage['jquery.js'][1800] = 0;
  _$jscoverage['jquery.js'][1801] = 0;
  _$jscoverage['jquery.js'][1805] = 0;
  _$jscoverage['jquery.js'][1808] = 0;
  _$jscoverage['jquery.js'][1809] = 0;
  _$jscoverage['jquery.js'][1810] = 0;
  _$jscoverage['jquery.js'][1811] = 0;
  _$jscoverage['jquery.js'][1813] = 0;
  _$jscoverage['jquery.js'][1819] = 0;
  _$jscoverage['jquery.js'][1820] = 0;
  _$jscoverage['jquery.js'][1821] = 0;
  _$jscoverage['jquery.js'][1827] = 0;
  _$jscoverage['jquery.js'][1829] = 0;
  _$jscoverage['jquery.js'][1830] = 0;
  _$jscoverage['jquery.js'][1834] = 0;
  _$jscoverage['jquery.js'][1837] = 0;
  _$jscoverage['jquery.js'][1838] = 0;
  _$jscoverage['jquery.js'][1839] = 0;
  _$jscoverage['jquery.js'][1844] = 0;
  _$jscoverage['jquery.js'][1846] = 0;
  _$jscoverage['jquery.js'][1849] = 0;
  _$jscoverage['jquery.js'][1855] = 0;
  _$jscoverage['jquery.js'][1856] = 0;
  _$jscoverage['jquery.js'][1860] = 0;
  _$jscoverage['jquery.js'][1863] = 0;
  _$jscoverage['jquery.js'][1866] = 0;
  _$jscoverage['jquery.js'][1867] = 0;
  _$jscoverage['jquery.js'][1875] = 0;
  _$jscoverage['jquery.js'][1876] = 0;
  _$jscoverage['jquery.js'][1886] = 0;
  _$jscoverage['jquery.js'][1893] = 0;
  _$jscoverage['jquery.js'][1894] = 0;
  _$jscoverage['jquery.js'][1898] = 0;
  _$jscoverage['jquery.js'][1899] = 0;
  _$jscoverage['jquery.js'][1900] = 0;
  _$jscoverage['jquery.js'][1902] = 0;
  _$jscoverage['jquery.js'][1905] = 0;
  _$jscoverage['jquery.js'][1906] = 0;
  _$jscoverage['jquery.js'][1907] = 0;
  _$jscoverage['jquery.js'][1911] = 0;
  _$jscoverage['jquery.js'][1915] = 0;
  _$jscoverage['jquery.js'][1925] = 0;
  _$jscoverage['jquery.js'][1929] = 0;
  _$jscoverage['jquery.js'][1931] = 0;
  _$jscoverage['jquery.js'][1936] = 0;
  _$jscoverage['jquery.js'][1937] = 0;
  _$jscoverage['jquery.js'][1938] = 0;
  _$jscoverage['jquery.js'][1943] = 0;
  _$jscoverage['jquery.js'][1944] = 0;
  _$jscoverage['jquery.js'][1946] = 0;
  _$jscoverage['jquery.js'][1947] = 0;
  _$jscoverage['jquery.js'][1952] = 0;
  _$jscoverage['jquery.js'][1953] = 0;
  _$jscoverage['jquery.js'][1958] = 0;
  _$jscoverage['jquery.js'][1959] = 0;
  _$jscoverage['jquery.js'][1960] = 0;
  _$jscoverage['jquery.js'][1973] = 0;
  _$jscoverage['jquery.js'][1974] = 0;
  _$jscoverage['jquery.js'][1976] = 0;
  _$jscoverage['jquery.js'][1977] = 0;
  _$jscoverage['jquery.js'][1978] = 0;
  _$jscoverage['jquery.js'][1979] = 0;
  _$jscoverage['jquery.js'][1980] = 0;
  _$jscoverage['jquery.js'][1984] = 0;
  _$jscoverage['jquery.js'][1985] = 0;
  _$jscoverage['jquery.js'][1988] = 0;
  _$jscoverage['jquery.js'][1994] = 0;
  _$jscoverage['jquery.js'][1995] = 0;
  _$jscoverage['jquery.js'][1999] = 0;
  _$jscoverage['jquery.js'][2003] = 0;
  _$jscoverage['jquery.js'][2013] = 0;
  _$jscoverage['jquery.js'][2014] = 0;
  _$jscoverage['jquery.js'][2020] = 0;
  _$jscoverage['jquery.js'][2021] = 0;
  _$jscoverage['jquery.js'][2024] = 0;
  _$jscoverage['jquery.js'][2033] = 0;
  _$jscoverage['jquery.js'][2034] = 0;
  _$jscoverage['jquery.js'][2035] = 0;
  _$jscoverage['jquery.js'][2038] = 0;
  _$jscoverage['jquery.js'][2042] = 0;
  _$jscoverage['jquery.js'][2047] = 0;
  _$jscoverage['jquery.js'][2051] = 0;
  _$jscoverage['jquery.js'][2055] = 0;
  _$jscoverage['jquery.js'][2056] = 0;
  _$jscoverage['jquery.js'][2060] = 0;
  _$jscoverage['jquery.js'][2061] = 0;
  _$jscoverage['jquery.js'][2071] = 0;
  _$jscoverage['jquery.js'][2075] = 0;
  _$jscoverage['jquery.js'][2079] = 0;
  _$jscoverage['jquery.js'][2083] = 0;
  _$jscoverage['jquery.js'][2084] = 0;
  _$jscoverage['jquery.js'][2085] = 0;
  _$jscoverage['jquery.js'][2087] = 0;
  _$jscoverage['jquery.js'][2091] = 0;
  _$jscoverage['jquery.js'][2092] = 0;
  _$jscoverage['jquery.js'][2093] = 0;
  _$jscoverage['jquery.js'][2095] = 0;
  _$jscoverage['jquery.js'][2099] = 0;
  _$jscoverage['jquery.js'][2100] = 0;
  _$jscoverage['jquery.js'][2101] = 0;
  _$jscoverage['jquery.js'][2103] = 0;
  _$jscoverage['jquery.js'][2107] = 0;
  _$jscoverage['jquery.js'][2108] = 0;
  _$jscoverage['jquery.js'][2109] = 0;
  _$jscoverage['jquery.js'][2111] = 0;
  _$jscoverage['jquery.js'][2116] = 0;
  _$jscoverage['jquery.js'][2119] = 0;
  _$jscoverage['jquery.js'][2120] = 0;
  _$jscoverage['jquery.js'][2122] = 0;
  _$jscoverage['jquery.js'][2123] = 0;
  _$jscoverage['jquery.js'][2127] = 0;
  _$jscoverage['jquery.js'][2128] = 0;
  _$jscoverage['jquery.js'][2129] = 0;
  _$jscoverage['jquery.js'][2131] = 0;
  _$jscoverage['jquery.js'][2132] = 0;
  _$jscoverage['jquery.js'][2136] = 0;
  _$jscoverage['jquery.js'][2137] = 0;
  _$jscoverage['jquery.js'][2140] = 0;
  _$jscoverage['jquery.js'][2141] = 0;
  _$jscoverage['jquery.js'][2142] = 0;
  _$jscoverage['jquery.js'][2144] = 0;
  _$jscoverage['jquery.js'][2147] = 0;
  _$jscoverage['jquery.js'][2148] = 0;
  _$jscoverage['jquery.js'][2150] = 0;
  _$jscoverage['jquery.js'][2152] = 0;
  _$jscoverage['jquery.js'][2155] = 0;
  _$jscoverage['jquery.js'][2158] = 0;
  _$jscoverage['jquery.js'][2159] = 0;
  _$jscoverage['jquery.js'][2160] = 0;
  _$jscoverage['jquery.js'][2165] = 0;
  _$jscoverage['jquery.js'][2169] = 0;
  _$jscoverage['jquery.js'][2170] = 0;
  _$jscoverage['jquery.js'][2172] = 0;
  _$jscoverage['jquery.js'][2173] = 0;
  _$jscoverage['jquery.js'][2178] = 0;
  _$jscoverage['jquery.js'][2182] = 0;
  _$jscoverage['jquery.js'][2183] = 0;
  _$jscoverage['jquery.js'][2190] = 0;
  _$jscoverage['jquery.js'][2198] = 0;
  _$jscoverage['jquery.js'][2199] = 0;
  _$jscoverage['jquery.js'][2202] = 0;
  _$jscoverage['jquery.js'][2203] = 0;
  _$jscoverage['jquery.js'][2205] = 0;
  _$jscoverage['jquery.js'][2208] = 0;
  _$jscoverage['jquery.js'][2209] = 0;
  _$jscoverage['jquery.js'][2215] = 0;
  _$jscoverage['jquery.js'][2218] = 0;
  _$jscoverage['jquery.js'][2219] = 0;
  _$jscoverage['jquery.js'][2220] = 0;
  _$jscoverage['jquery.js'][2223] = 0;
  _$jscoverage['jquery.js'][2228] = 0;
  _$jscoverage['jquery.js'][2232] = 0;
  _$jscoverage['jquery.js'][2233] = 0;
  _$jscoverage['jquery.js'][2234] = 0;
  _$jscoverage['jquery.js'][2235] = 0;
  _$jscoverage['jquery.js'][2236] = 0;
  _$jscoverage['jquery.js'][2241] = 0;
  _$jscoverage['jquery.js'][2242] = 0;
  _$jscoverage['jquery.js'][2243] = 0;
  _$jscoverage['jquery.js'][2247] = 0;
  _$jscoverage['jquery.js'][2249] = 0;
  _$jscoverage['jquery.js'][2250] = 0;
  _$jscoverage['jquery.js'][2251] = 0;
  _$jscoverage['jquery.js'][2255] = 0;
  _$jscoverage['jquery.js'][2258] = 0;
  _$jscoverage['jquery.js'][2261] = 0;
  _$jscoverage['jquery.js'][2262] = 0;
  _$jscoverage['jquery.js'][2268] = 0;
  _$jscoverage['jquery.js'][2272] = 0;
  _$jscoverage['jquery.js'][2273] = 0;
  _$jscoverage['jquery.js'][2275] = 0;
  _$jscoverage['jquery.js'][2276] = 0;
  _$jscoverage['jquery.js'][2277] = 0;
  _$jscoverage['jquery.js'][2278] = 0;
  _$jscoverage['jquery.js'][2281] = 0;
  _$jscoverage['jquery.js'][2286] = 0;
  _$jscoverage['jquery.js'][2287] = 0;
  _$jscoverage['jquery.js'][2289] = 0;
  _$jscoverage['jquery.js'][2290] = 0;
  _$jscoverage['jquery.js'][2292] = 0;
  _$jscoverage['jquery.js'][2295] = 0;
  _$jscoverage['jquery.js'][2296] = 0;
  _$jscoverage['jquery.js'][2302] = 0;
  _$jscoverage['jquery.js'][2303] = 0;
  _$jscoverage['jquery.js'][2304] = 0;
  _$jscoverage['jquery.js'][2305] = 0;
  _$jscoverage['jquery.js'][2306] = 0;
  _$jscoverage['jquery.js'][2307] = 0;
  _$jscoverage['jquery.js'][2313] = 0;
  _$jscoverage['jquery.js'][2316] = 0;
  _$jscoverage['jquery.js'][2317] = 0;
  _$jscoverage['jquery.js'][2318] = 0;
  _$jscoverage['jquery.js'][2320] = 0;
  _$jscoverage['jquery.js'][2321] = 0;
  _$jscoverage['jquery.js'][2323] = 0;
  _$jscoverage['jquery.js'][2324] = 0;
  _$jscoverage['jquery.js'][2349] = 0;
  _$jscoverage['jquery.js'][2350] = 0;
  _$jscoverage['jquery.js'][2354] = 0;
  _$jscoverage['jquery.js'][2355] = 0;
  _$jscoverage['jquery.js'][2356] = 0;
  _$jscoverage['jquery.js'][2359] = 0;
  _$jscoverage['jquery.js'][2360] = 0;
  _$jscoverage['jquery.js'][2361] = 0;
  _$jscoverage['jquery.js'][2362] = 0;
  _$jscoverage['jquery.js'][2367] = 0;
  _$jscoverage['jquery.js'][2368] = 0;
  _$jscoverage['jquery.js'][2369] = 0;
  _$jscoverage['jquery.js'][2371] = 0;
  _$jscoverage['jquery.js'][2372] = 0;
  _$jscoverage['jquery.js'][2373] = 0;
  _$jscoverage['jquery.js'][2374] = 0;
  _$jscoverage['jquery.js'][2376] = 0;
  _$jscoverage['jquery.js'][2379] = 0;
  _$jscoverage['jquery.js'][2383] = 0;
  _$jscoverage['jquery.js'][2384] = 0;
  _$jscoverage['jquery.js'][2385] = 0;
  _$jscoverage['jquery.js'][2388] = 0;
  _$jscoverage['jquery.js'][2395] = 0;
  _$jscoverage['jquery.js'][2400] = 0;
  _$jscoverage['jquery.js'][2401] = 0;
  _$jscoverage['jquery.js'][2403] = 0;
  _$jscoverage['jquery.js'][2409] = 0;
  _$jscoverage['jquery.js'][2410] = 0;
  _$jscoverage['jquery.js'][2418] = 0;
  _$jscoverage['jquery.js'][2421] = 0;
  _$jscoverage['jquery.js'][2424] = 0;
  _$jscoverage['jquery.js'][2429] = 0;
  _$jscoverage['jquery.js'][2430] = 0;
  _$jscoverage['jquery.js'][2433] = 0;
  _$jscoverage['jquery.js'][2434] = 0;
  _$jscoverage['jquery.js'][2435] = 0;
  _$jscoverage['jquery.js'][2437] = 0;
  _$jscoverage['jquery.js'][2440] = 0;
  _$jscoverage['jquery.js'][2442] = 0;
  _$jscoverage['jquery.js'][2443] = 0;
  _$jscoverage['jquery.js'][2444] = 0;
  _$jscoverage['jquery.js'][2445] = 0;
  _$jscoverage['jquery.js'][2448] = 0;
  _$jscoverage['jquery.js'][2460] = 0;
  _$jscoverage['jquery.js'][2464] = 0;
  _$jscoverage['jquery.js'][2467] = 0;
  _$jscoverage['jquery.js'][2468] = 0;
  _$jscoverage['jquery.js'][2471] = 0;
  _$jscoverage['jquery.js'][2483] = 0;
  _$jscoverage['jquery.js'][2484] = 0;
  _$jscoverage['jquery.js'][2490] = 0;
  _$jscoverage['jquery.js'][2491] = 0;
  _$jscoverage['jquery.js'][2492] = 0;
  _$jscoverage['jquery.js'][2493] = 0;
  _$jscoverage['jquery.js'][2494] = 0;
  _$jscoverage['jquery.js'][2495] = 0;
  _$jscoverage['jquery.js'][2497] = 0;
  _$jscoverage['jquery.js'][2498] = 0;
  _$jscoverage['jquery.js'][2499] = 0;
  _$jscoverage['jquery.js'][2500] = 0;
  _$jscoverage['jquery.js'][2503] = 0;
  _$jscoverage['jquery.js'][2504] = 0;
  _$jscoverage['jquery.js'][2509] = 0;
  _$jscoverage['jquery.js'][2511] = 0;
  _$jscoverage['jquery.js'][2512] = 0;
  _$jscoverage['jquery.js'][2516] = 0;
  _$jscoverage['jquery.js'][2517] = 0;
  _$jscoverage['jquery.js'][2524] = 0;
  _$jscoverage['jquery.js'][2533] = 0;
  _$jscoverage['jquery.js'][2534] = 0;
  _$jscoverage['jquery.js'][2535] = 0;
  _$jscoverage['jquery.js'][2536] = 0;
  _$jscoverage['jquery.js'][2539] = 0;
  _$jscoverage['jquery.js'][2541] = 0;
  _$jscoverage['jquery.js'][2542] = 0;
  _$jscoverage['jquery.js'][2543] = 0;
  _$jscoverage['jquery.js'][2544] = 0;
  _$jscoverage['jquery.js'][2550] = 0;
  _$jscoverage['jquery.js'][2554] = 0;
  _$jscoverage['jquery.js'][2557] = 0;
  _$jscoverage['jquery.js'][2560] = 0;
  _$jscoverage['jquery.js'][2565] = 0;
  _$jscoverage['jquery.js'][2566] = 0;
  _$jscoverage['jquery.js'][2567] = 0;
  _$jscoverage['jquery.js'][2570] = 0;
  _$jscoverage['jquery.js'][2573] = 0;
  _$jscoverage['jquery.js'][2578] = 0;
  _$jscoverage['jquery.js'][2579] = 0;
  _$jscoverage['jquery.js'][2584] = 0;
  _$jscoverage['jquery.js'][2586] = 0;
  _$jscoverage['jquery.js'][2587] = 0;
  _$jscoverage['jquery.js'][2589] = 0;
  _$jscoverage['jquery.js'][2590] = 0;
  _$jscoverage['jquery.js'][2591] = 0;
  _$jscoverage['jquery.js'][2592] = 0;
  _$jscoverage['jquery.js'][2593] = 0;
  _$jscoverage['jquery.js'][2595] = 0;
  _$jscoverage['jquery.js'][2600] = 0;
  _$jscoverage['jquery.js'][2603] = 0;
  _$jscoverage['jquery.js'][2605] = 0;
  _$jscoverage['jquery.js'][2617] = 0;
  _$jscoverage['jquery.js'][2618] = 0;
  _$jscoverage['jquery.js'][2622] = 0;
  _$jscoverage['jquery.js'][2626] = 0;
  _$jscoverage['jquery.js'][2629] = 0;
  _$jscoverage['jquery.js'][2630] = 0;
  _$jscoverage['jquery.js'][2633] = 0;
  _$jscoverage['jquery.js'][2634] = 0;
  _$jscoverage['jquery.js'][2635] = 0;
  _$jscoverage['jquery.js'][2638] = 0;
  _$jscoverage['jquery.js'][2639] = 0;
  _$jscoverage['jquery.js'][2642] = 0;
  _$jscoverage['jquery.js'][2646] = 0;
  _$jscoverage['jquery.js'][2647] = 0;
  _$jscoverage['jquery.js'][2648] = 0;
  _$jscoverage['jquery.js'][2651] = 0;
  _$jscoverage['jquery.js'][2652] = 0;
  _$jscoverage['jquery.js'][2654] = 0;
  _$jscoverage['jquery.js'][2656] = 0;
  _$jscoverage['jquery.js'][2662] = 0;
  _$jscoverage['jquery.js'][2663] = 0;
  _$jscoverage['jquery.js'][2664] = 0;
  _$jscoverage['jquery.js'][2665] = 0;
  _$jscoverage['jquery.js'][2666] = 0;
  _$jscoverage['jquery.js'][2669] = 0;
  _$jscoverage['jquery.js'][2677] = 0;
  _$jscoverage['jquery.js'][2684] = 0;
  _$jscoverage['jquery.js'][2690] = 0;
  _$jscoverage['jquery.js'][2694] = 0;
  _$jscoverage['jquery.js'][2697] = 0;
  _$jscoverage['jquery.js'][2701] = 0;
  _$jscoverage['jquery.js'][2703] = 0;
  _$jscoverage['jquery.js'][2709] = 0;
  _$jscoverage['jquery.js'][2710] = 0;
  _$jscoverage['jquery.js'][2711] = 0;
  _$jscoverage['jquery.js'][2713] = 0;
  _$jscoverage['jquery.js'][2714] = 0;
  _$jscoverage['jquery.js'][2715] = 0;
  _$jscoverage['jquery.js'][2722] = 0;
  _$jscoverage['jquery.js'][2723] = 0;
  _$jscoverage['jquery.js'][2724] = 0;
  _$jscoverage['jquery.js'][2725] = 0;
  _$jscoverage['jquery.js'][2727] = 0;
  _$jscoverage['jquery.js'][2728] = 0;
  _$jscoverage['jquery.js'][2729] = 0;
  _$jscoverage['jquery.js'][2736] = 0;
  _$jscoverage['jquery.js'][2737] = 0;
  _$jscoverage['jquery.js'][2739] = 0;
  _$jscoverage['jquery.js'][2740] = 0;
  _$jscoverage['jquery.js'][2741] = 0;
  _$jscoverage['jquery.js'][2742] = 0;
  _$jscoverage['jquery.js'][2750] = 0;
  _$jscoverage['jquery.js'][2756] = 0;
  _$jscoverage['jquery.js'][2757] = 0;
  _$jscoverage['jquery.js'][2760] = 0;
  _$jscoverage['jquery.js'][2761] = 0;
  _$jscoverage['jquery.js'][2762] = 0;
  _$jscoverage['jquery.js'][2763] = 0;
  _$jscoverage['jquery.js'][2764] = 0;
  _$jscoverage['jquery.js'][2765] = 0;
  _$jscoverage['jquery.js'][2770] = 0;
  _$jscoverage['jquery.js'][2771] = 0;
  _$jscoverage['jquery.js'][2774] = 0;
  _$jscoverage['jquery.js'][2775] = 0;
  _$jscoverage['jquery.js'][2776] = 0;
  _$jscoverage['jquery.js'][2777] = 0;
  _$jscoverage['jquery.js'][2779] = 0;
  _$jscoverage['jquery.js'][2782] = 0;
  _$jscoverage['jquery.js'][2786] = 0;
  _$jscoverage['jquery.js'][2787] = 0;
  _$jscoverage['jquery.js'][2789] = 0;
  _$jscoverage['jquery.js'][2790] = 0;
  _$jscoverage['jquery.js'][2791] = 0;
  _$jscoverage['jquery.js'][2795] = 0;
  _$jscoverage['jquery.js'][2799] = 0;
  _$jscoverage['jquery.js'][2803] = 0;
  _$jscoverage['jquery.js'][2805] = 0;
  _$jscoverage['jquery.js'][2807] = 0;
  _$jscoverage['jquery.js'][2808] = 0;
  _$jscoverage['jquery.js'][2813] = 0;
  _$jscoverage['jquery.js'][2814] = 0;
  _$jscoverage['jquery.js'][2815] = 0;
  _$jscoverage['jquery.js'][2816] = 0;
  _$jscoverage['jquery.js'][2821] = 0;
  _$jscoverage['jquery.js'][2822] = 0;
  _$jscoverage['jquery.js'][2823] = 0;
  _$jscoverage['jquery.js'][2828] = 0;
  _$jscoverage['jquery.js'][2829] = 0;
  _$jscoverage['jquery.js'][2830] = 0;
  _$jscoverage['jquery.js'][2835] = 0;
  _$jscoverage['jquery.js'][2838] = 0;
  _$jscoverage['jquery.js'][2839] = 0;
  _$jscoverage['jquery.js'][2841] = 0;
  _$jscoverage['jquery.js'][2842] = 0;
  _$jscoverage['jquery.js'][2845] = 0;
  _$jscoverage['jquery.js'][2846] = 0;
  _$jscoverage['jquery.js'][2849] = 0;
  _$jscoverage['jquery.js'][2850] = 0;
  _$jscoverage['jquery.js'][2854] = 0;
  _$jscoverage['jquery.js'][2856] = 0;
  _$jscoverage['jquery.js'][2860] = 0;
  _$jscoverage['jquery.js'][2861] = 0;
  _$jscoverage['jquery.js'][2862] = 0;
  _$jscoverage['jquery.js'][2863] = 0;
  _$jscoverage['jquery.js'][2864] = 0;
  _$jscoverage['jquery.js'][2870] = 0;
  _$jscoverage['jquery.js'][2872] = 0;
  _$jscoverage['jquery.js'][2873] = 0;
  _$jscoverage['jquery.js'][2876] = 0;
  _$jscoverage['jquery.js'][2879] = 0;
  _$jscoverage['jquery.js'][2882] = 0;
  _$jscoverage['jquery.js'][2885] = 0;
  _$jscoverage['jquery.js'][2903] = 0;
  _$jscoverage['jquery.js'][2912] = 0;
  _$jscoverage['jquery.js'][2915] = 0;
  _$jscoverage['jquery.js'][2916] = 0;
  _$jscoverage['jquery.js'][2921] = 0;
  _$jscoverage['jquery.js'][2924] = 0;
  _$jscoverage['jquery.js'][2925] = 0;
  _$jscoverage['jquery.js'][2930] = 0;
  _$jscoverage['jquery.js'][2933] = 0;
  _$jscoverage['jquery.js'][2937] = 0;
  _$jscoverage['jquery.js'][2940] = 0;
  _$jscoverage['jquery.js'][2941] = 0;
  _$jscoverage['jquery.js'][2945] = 0;
  _$jscoverage['jquery.js'][2952] = 0;
  _$jscoverage['jquery.js'][2953] = 0;
  _$jscoverage['jquery.js'][2956] = 0;
  _$jscoverage['jquery.js'][2957] = 0;
  _$jscoverage['jquery.js'][2961] = 0;
  _$jscoverage['jquery.js'][2966] = 0;
  _$jscoverage['jquery.js'][2970] = 0;
  _$jscoverage['jquery.js'][2972] = 0;
  _$jscoverage['jquery.js'][2975] = 0;
  _$jscoverage['jquery.js'][2976] = 0;
  _$jscoverage['jquery.js'][2978] = 0;
  _$jscoverage['jquery.js'][2982] = 0;
  _$jscoverage['jquery.js'][2983] = 0;
  _$jscoverage['jquery.js'][2988] = 0;
  _$jscoverage['jquery.js'][2992] = 0;
  _$jscoverage['jquery.js'][2993] = 0;
  _$jscoverage['jquery.js'][2994] = 0;
  _$jscoverage['jquery.js'][2995] = 0;
  _$jscoverage['jquery.js'][2999] = 0;
  _$jscoverage['jquery.js'][3000] = 0;
  _$jscoverage['jquery.js'][3007] = 0;
  _$jscoverage['jquery.js'][3011] = 0;
  _$jscoverage['jquery.js'][3014] = 0;
  _$jscoverage['jquery.js'][3017] = 0;
  _$jscoverage['jquery.js'][3027] = 0;
  _$jscoverage['jquery.js'][3029] = 0;
  _$jscoverage['jquery.js'][3032] = 0;
  _$jscoverage['jquery.js'][3033] = 0;
  _$jscoverage['jquery.js'][3034] = 0;
  _$jscoverage['jquery.js'][3035] = 0;
  _$jscoverage['jquery.js'][3036] = 0;
  _$jscoverage['jquery.js'][3043] = 0;
  _$jscoverage['jquery.js'][3050] = 0;
  _$jscoverage['jquery.js'][3051] = 0;
  _$jscoverage['jquery.js'][3052] = 0;
  _$jscoverage['jquery.js'][3055] = 0;
  _$jscoverage['jquery.js'][3062] = 0;
  _$jscoverage['jquery.js'][3063] = 0;
  _$jscoverage['jquery.js'][3069] = 0;
  _$jscoverage['jquery.js'][3076] = 0;
  _$jscoverage['jquery.js'][3077] = 0;
  _$jscoverage['jquery.js'][3081] = 0;
  _$jscoverage['jquery.js'][3082] = 0;
  _$jscoverage['jquery.js'][3086] = 0;
  _$jscoverage['jquery.js'][3094] = 0;
  _$jscoverage['jquery.js'][3102] = 0;
  _$jscoverage['jquery.js'][3108] = 0;
  _$jscoverage['jquery.js'][3109] = 0;
  _$jscoverage['jquery.js'][3110] = 0;
  _$jscoverage['jquery.js'][3113] = 0;
  _$jscoverage['jquery.js'][3115] = 0;
  _$jscoverage['jquery.js'][3116] = 0;
  _$jscoverage['jquery.js'][3119] = 0;
  _$jscoverage['jquery.js'][3122] = 0;
  _$jscoverage['jquery.js'][3125] = 0;
  _$jscoverage['jquery.js'][3128] = 0;
  _$jscoverage['jquery.js'][3131] = 0;
  _$jscoverage['jquery.js'][3134] = 0;
  _$jscoverage['jquery.js'][3137] = 0;
  _$jscoverage['jquery.js'][3140] = 0;
  _$jscoverage['jquery.js'][3143] = 0;
  _$jscoverage['jquery.js'][3146] = 0;
  _$jscoverage['jquery.js'][3149] = 0;
  _$jscoverage['jquery.js'][3150] = 0;
  _$jscoverage['jquery.js'][3156] = 0;
  _$jscoverage['jquery.js'][3157] = 0;
  _$jscoverage['jquery.js'][3160] = 0;
  _$jscoverage['jquery.js'][3163] = 0;
  _$jscoverage['jquery.js'][3164] = 0;
  _$jscoverage['jquery.js'][3166] = 0;
  _$jscoverage['jquery.js'][3167] = 0;
  _$jscoverage['jquery.js'][3170] = 0;
  _$jscoverage['jquery.js'][3171] = 0;
  _$jscoverage['jquery.js'][3174] = 0;
  _$jscoverage['jquery.js'][3177] = 0;
  _$jscoverage['jquery.js'][3178] = 0;
  _$jscoverage['jquery.js'][3182] = 0;
  _$jscoverage['jquery.js'][3183] = 0;
  _$jscoverage['jquery.js'][3187] = 0;
  _$jscoverage['jquery.js'][3190] = 0;
  _$jscoverage['jquery.js'][3195] = 0;
  _$jscoverage['jquery.js'][3196] = 0;
  _$jscoverage['jquery.js'][3197] = 0;
  _$jscoverage['jquery.js'][3198] = 0;
  _$jscoverage['jquery.js'][3200] = 0;
  _$jscoverage['jquery.js'][3225] = 0;
  _$jscoverage['jquery.js'][3229] = 0;
  _$jscoverage['jquery.js'][3233] = 0;
  _$jscoverage['jquery.js'][3258] = 0;
  _$jscoverage['jquery.js'][3262] = 0;
  _$jscoverage['jquery.js'][3263] = 0;
  _$jscoverage['jquery.js'][3264] = 0;
  _$jscoverage['jquery.js'][3265] = 0;
  _$jscoverage['jquery.js'][3268] = 0;
  _$jscoverage['jquery.js'][3272] = 0;
  _$jscoverage['jquery.js'][3273] = 0;
  _$jscoverage['jquery.js'][3279] = 0;
  _$jscoverage['jquery.js'][3280] = 0;
  _$jscoverage['jquery.js'][3283] = 0;
  _$jscoverage['jquery.js'][3286] = 0;
  _$jscoverage['jquery.js'][3289] = 0;
  _$jscoverage['jquery.js'][3290] = 0;
  _$jscoverage['jquery.js'][3294] = 0;
  _$jscoverage['jquery.js'][3304] = 0;
  _$jscoverage['jquery.js'][3307] = 0;
  _$jscoverage['jquery.js'][3308] = 0;
  _$jscoverage['jquery.js'][3309] = 0;
  _$jscoverage['jquery.js'][3312] = 0;
  _$jscoverage['jquery.js'][3313] = 0;
  _$jscoverage['jquery.js'][3314] = 0;
  _$jscoverage['jquery.js'][3315] = 0;
  _$jscoverage['jquery.js'][3316] = 0;
  _$jscoverage['jquery.js'][3318] = 0;
  _$jscoverage['jquery.js'][3321] = 0;
  _$jscoverage['jquery.js'][3326] = 0;
  _$jscoverage['jquery.js'][3327] = 0;
  _$jscoverage['jquery.js'][3330] = 0;
  _$jscoverage['jquery.js'][3335] = 0;
  _$jscoverage['jquery.js'][3336] = 0;
  _$jscoverage['jquery.js'][3337] = 0;
  _$jscoverage['jquery.js'][3338] = 0;
  _$jscoverage['jquery.js'][3341] = 0;
  _$jscoverage['jquery.js'][3342] = 0;
  _$jscoverage['jquery.js'][3346] = 0;
  _$jscoverage['jquery.js'][3352] = 0;
  _$jscoverage['jquery.js'][3359] = 0;
  _$jscoverage['jquery.js'][3360] = 0;
  _$jscoverage['jquery.js'][3362] = 0;
  _$jscoverage['jquery.js'][3369] = 0;
  _$jscoverage['jquery.js'][3370] = 0;
  _$jscoverage['jquery.js'][3371] = 0;
  _$jscoverage['jquery.js'][3374] = 0;
  _$jscoverage['jquery.js'][3381] = 0;
  _$jscoverage['jquery.js'][3382] = 0;
  _$jscoverage['jquery.js'][3383] = 0;
  _$jscoverage['jquery.js'][3385] = 0;
  _$jscoverage['jquery.js'][3388] = 0;
  _$jscoverage['jquery.js'][3393] = 0;
  _$jscoverage['jquery.js'][3394] = 0;
  _$jscoverage['jquery.js'][3395] = 0;
  _$jscoverage['jquery.js'][3396] = 0;
  _$jscoverage['jquery.js'][3397] = 0;
  _$jscoverage['jquery.js'][3398] = 0;
  _$jscoverage['jquery.js'][3401] = 0;
  _$jscoverage['jquery.js'][3406] = 0;
  _$jscoverage['jquery.js'][3407] = 0;
  _$jscoverage['jquery.js'][3412] = 0;
  _$jscoverage['jquery.js'][3416] = 0;
  _$jscoverage['jquery.js'][3420] = 0;
  _$jscoverage['jquery.js'][3421] = 0;
  _$jscoverage['jquery.js'][3423] = 0;
  _$jscoverage['jquery.js'][3424] = 0;
  _$jscoverage['jquery.js'][3427] = 0;
  _$jscoverage['jquery.js'][3428] = 0;
  _$jscoverage['jquery.js'][3430] = 0;
  _$jscoverage['jquery.js'][3433] = 0;
  _$jscoverage['jquery.js'][3434] = 0;
  _$jscoverage['jquery.js'][3437] = 0;
  _$jscoverage['jquery.js'][3438] = 0;
  _$jscoverage['jquery.js'][3446] = 0;
  _$jscoverage['jquery.js'][3456] = 0;
  _$jscoverage['jquery.js'][3460] = 0;
  _$jscoverage['jquery.js'][3463] = 0;
  _$jscoverage['jquery.js'][3477] = 0;
  _$jscoverage['jquery.js'][3480] = 0;
  _$jscoverage['jquery.js'][3481] = 0;
  _$jscoverage['jquery.js'][3484] = 0;
  _$jscoverage['jquery.js'][3489] = 0;
  _$jscoverage['jquery.js'][3491] = 0;
  _$jscoverage['jquery.js'][3492] = 0;
  _$jscoverage['jquery.js'][3495] = 0;
  _$jscoverage['jquery.js'][3500] = 0;
  _$jscoverage['jquery.js'][3501] = 0;
  _$jscoverage['jquery.js'][3502] = 0;
  _$jscoverage['jquery.js'][3503] = 0;
  _$jscoverage['jquery.js'][3508] = 0;
  _$jscoverage['jquery.js'][3515] = 0;
  _$jscoverage['jquery.js'][3519] = 0;
  _$jscoverage['jquery.js'][3520] = 0;
  _$jscoverage['jquery.js'][3521] = 0;
  _$jscoverage['jquery.js'][3522] = 0;
  _$jscoverage['jquery.js'][3525] = 0;
  _$jscoverage['jquery.js'][3530] = 0;
  _$jscoverage['jquery.js'][3531] = 0;
  _$jscoverage['jquery.js'][3534] = 0;
  _$jscoverage['jquery.js'][3538] = 0;
  _$jscoverage['jquery.js'][3539] = 0;
  _$jscoverage['jquery.js'][3546] = 0;
  _$jscoverage['jquery.js'][3556] = 0;
  _$jscoverage['jquery.js'][3559] = 0;
  _$jscoverage['jquery.js'][3560] = 0;
  _$jscoverage['jquery.js'][3570] = 0;
  _$jscoverage['jquery.js'][3572] = 0;
  _$jscoverage['jquery.js'][3586] = 0;
  _$jscoverage['jquery.js'][3587] = 0;
  _$jscoverage['jquery.js'][3588] = 0;
  _$jscoverage['jquery.js'][3593] = 0;
  _$jscoverage['jquery.js'][3601] = 0;
  _$jscoverage['jquery.js'][3602] = 0;
  _$jscoverage['jquery.js'][3605] = 0;
  _$jscoverage['jquery.js'][3606] = 0;
  _$jscoverage['jquery.js'][3613] = 0;
  _$jscoverage['jquery.js'][3617] = 0;
  _$jscoverage['jquery.js'][3618] = 0;
  _$jscoverage['jquery.js'][3619] = 0;
  _$jscoverage['jquery.js'][3622] = 0;
  _$jscoverage['jquery.js'][3631] = 0;
  _$jscoverage['jquery.js'][3632] = 0;
  _$jscoverage['jquery.js'][3637] = 0;
  _$jscoverage['jquery.js'][3638] = 0;
  _$jscoverage['jquery.js'][3640] = 0;
  _$jscoverage['jquery.js'][3645] = 0;
  _$jscoverage['jquery.js'][3648] = 0;
  _$jscoverage['jquery.js'][3660] = 0;
  _$jscoverage['jquery.js'][3671] = 0;
  _$jscoverage['jquery.js'][3686] = 0;
  _$jscoverage['jquery.js'][3692] = 0;
  _$jscoverage['jquery.js'][3693] = 0;
  _$jscoverage['jquery.js'][3699] = 0;
  _$jscoverage['jquery.js'][3702] = 0;
  _$jscoverage['jquery.js'][3703] = 0;
  _$jscoverage['jquery.js'][3708] = 0;
  _$jscoverage['jquery.js'][3730] = 0;
  _$jscoverage['jquery.js'][3735] = 0;
  _$jscoverage['jquery.js'][3736] = 0;
  _$jscoverage['jquery.js'][3737] = 0;
  _$jscoverage['jquery.js'][3743] = 0;
  _$jscoverage['jquery.js'][3747] = 0;
  _$jscoverage['jquery.js'][3750] = 0;
  _$jscoverage['jquery.js'][3751] = 0;
  _$jscoverage['jquery.js'][3755] = 0;
  _$jscoverage['jquery.js'][3760] = 0;
  _$jscoverage['jquery.js'][3777] = 0;
  _$jscoverage['jquery.js'][3778] = 0;
  _$jscoverage['jquery.js'][3779] = 0;
  _$jscoverage['jquery.js'][3780] = 0;
  _$jscoverage['jquery.js'][3781] = 0;
  _$jscoverage['jquery.js'][3787] = 0;
  _$jscoverage['jquery.js'][3788] = 0;
  _$jscoverage['jquery.js'][3792] = 0;
  _$jscoverage['jquery.js'][3795] = 0;
  _$jscoverage['jquery.js'][3800] = 0;
  _$jscoverage['jquery.js'][3801] = 0;
  _$jscoverage['jquery.js'][3804] = 0;
  _$jscoverage['jquery.js'][3811] = 0;
  _$jscoverage['jquery.js'][3813] = 0;
  _$jscoverage['jquery.js'][3817] = 0;
  _$jscoverage['jquery.js'][3818] = 0;
  _$jscoverage['jquery.js'][3825] = 0;
  _$jscoverage['jquery.js'][3826] = 0;
  _$jscoverage['jquery.js'][3827] = 0;
  _$jscoverage['jquery.js'][3835] = 0;
  _$jscoverage['jquery.js'][3837] = 0;
  _$jscoverage['jquery.js'][3839] = 0;
  _$jscoverage['jquery.js'][3846] = 0;
  _$jscoverage['jquery.js'][3849] = 0;
  _$jscoverage['jquery.js'][3852] = 0;
  _$jscoverage['jquery.js'][3865] = 0;
  _$jscoverage['jquery.js'][3866] = 0;
  _$jscoverage['jquery.js'][3870] = 0;
  _$jscoverage['jquery.js'][3873] = 0;
  _$jscoverage['jquery.js'][3874] = 0;
  _$jscoverage['jquery.js'][3878] = 0;
  _$jscoverage['jquery.js'][3882] = 0;
  _$jscoverage['jquery.js'][3885] = 0;
  _$jscoverage['jquery.js'][3886] = 0;
  _$jscoverage['jquery.js'][3887] = 0;
  _$jscoverage['jquery.js'][3888] = 0;
  _$jscoverage['jquery.js'][3895] = 0;
  _$jscoverage['jquery.js'][3899] = 0;
  _$jscoverage['jquery.js'][3904] = 0;
  _$jscoverage['jquery.js'][3907] = 0;
  _$jscoverage['jquery.js'][3915] = 0;
  _$jscoverage['jquery.js'][3916] = 0;
  _$jscoverage['jquery.js'][3921] = 0;
  _$jscoverage['jquery.js'][3922] = 0;
  _$jscoverage['jquery.js'][3923] = 0;
  _$jscoverage['jquery.js'][3924] = 0;
  _$jscoverage['jquery.js'][3928] = 0;
  _$jscoverage['jquery.js'][3929] = 0;
  _$jscoverage['jquery.js'][3931] = 0;
  _$jscoverage['jquery.js'][3932] = 0;
  _$jscoverage['jquery.js'][3935] = 0;
  _$jscoverage['jquery.js'][3938] = 0;
  _$jscoverage['jquery.js'][3939] = 0;
  _$jscoverage['jquery.js'][3940] = 0;
  _$jscoverage['jquery.js'][3944] = 0;
  _$jscoverage['jquery.js'][3945] = 0;
  _$jscoverage['jquery.js'][3946] = 0;
  _$jscoverage['jquery.js'][3951] = 0;
  _$jscoverage['jquery.js'][3952] = 0;
  _$jscoverage['jquery.js'][3953] = 0;
  _$jscoverage['jquery.js'][3962] = 0;
  _$jscoverage['jquery.js'][3963] = 0;
  _$jscoverage['jquery.js'][3967] = 0;
  _$jscoverage['jquery.js'][3968] = 0;
  _$jscoverage['jquery.js'][3971] = 0;
  _$jscoverage['jquery.js'][3976] = 0;
  _$jscoverage['jquery.js'][3980] = 0;
  _$jscoverage['jquery.js'][3981] = 0;
  _$jscoverage['jquery.js'][3987] = 0;
  _$jscoverage['jquery.js'][3988] = 0;
  _$jscoverage['jquery.js'][3990] = 0;
  _$jscoverage['jquery.js'][3998] = 0;
  _$jscoverage['jquery.js'][4004] = 0;
  _$jscoverage['jquery.js'][4005] = 0;
  _$jscoverage['jquery.js'][4008] = 0;
  _$jscoverage['jquery.js'][4010] = 0;
  _$jscoverage['jquery.js'][4015] = 0;
  _$jscoverage['jquery.js'][4018] = 0;
  _$jscoverage['jquery.js'][4019] = 0;
  _$jscoverage['jquery.js'][4024] = 0;
  _$jscoverage['jquery.js'][4028] = 0;
  _$jscoverage['jquery.js'][4029] = 0;
  _$jscoverage['jquery.js'][4035] = 0;
  _$jscoverage['jquery.js'][4043] = 0;
  _$jscoverage['jquery.js'][4046] = 0;
  _$jscoverage['jquery.js'][4051] = 0;
  _$jscoverage['jquery.js'][4052] = 0;
  _$jscoverage['jquery.js'][4058] = 0;
  _$jscoverage['jquery.js'][4059] = 0;
  _$jscoverage['jquery.js'][4062] = 0;
  _$jscoverage['jquery.js'][4065] = 0;
  _$jscoverage['jquery.js'][4084] = 0;
  _$jscoverage['jquery.js'][4087] = 0;
  _$jscoverage['jquery.js'][4096] = 0;
  _$jscoverage['jquery.js'][4100] = 0;
  _$jscoverage['jquery.js'][4103] = 0;
  _$jscoverage['jquery.js'][4106] = 0;
  _$jscoverage['jquery.js'][4107] = 0;
  _$jscoverage['jquery.js'][4110] = 0;
  _$jscoverage['jquery.js'][4113] = 0;
  _$jscoverage['jquery.js'][4117] = 0;
  _$jscoverage['jquery.js'][4119] = 0;
  _$jscoverage['jquery.js'][4123] = 0;
  _$jscoverage['jquery.js'][4128] = 0;
  _$jscoverage['jquery.js'][4130] = 0;
  _$jscoverage['jquery.js'][4131] = 0;
  _$jscoverage['jquery.js'][4136] = 0;
  _$jscoverage['jquery.js'][4142] = 0;
  _$jscoverage['jquery.js'][4143] = 0;
  _$jscoverage['jquery.js'][4145] = 0;
  _$jscoverage['jquery.js'][4150] = 0;
  _$jscoverage['jquery.js'][4151] = 0;
  _$jscoverage['jquery.js'][4154] = 0;
  _$jscoverage['jquery.js'][4156] = 0;
  _$jscoverage['jquery.js'][4170] = 0;
  _$jscoverage['jquery.js'][4173] = 0;
  _$jscoverage['jquery.js'][4174] = 0;
  _$jscoverage['jquery.js'][4175] = 0;
  _$jscoverage['jquery.js'][4178] = 0;
  _$jscoverage['jquery.js'][4179] = 0;
  _$jscoverage['jquery.js'][4182] = 0;
  _$jscoverage['jquery.js'][4183] = 0;
  _$jscoverage['jquery.js'][4187] = 0;
  _$jscoverage['jquery.js'][4188] = 0;
  _$jscoverage['jquery.js'][4191] = 0;
  _$jscoverage['jquery.js'][4192] = 0;
  _$jscoverage['jquery.js'][4195] = 0;
  _$jscoverage['jquery.js'][4198] = 0;
  _$jscoverage['jquery.js'][4199] = 0;
  _$jscoverage['jquery.js'][4203] = 0;
  _$jscoverage['jquery.js'][4204] = 0;
  _$jscoverage['jquery.js'][4205] = 0;
  _$jscoverage['jquery.js'][4207] = 0;
  _$jscoverage['jquery.js'][4208] = 0;
  _$jscoverage['jquery.js'][4209] = 0;
  _$jscoverage['jquery.js'][4213] = 0;
  _$jscoverage['jquery.js'][4215] = 0;
  _$jscoverage['jquery.js'][4218] = 0;
  _$jscoverage['jquery.js'][4221] = 0;
  _$jscoverage['jquery.js'][4223] = 0;
  _$jscoverage['jquery.js'][4227] = 0;
  _$jscoverage['jquery.js'][4231] = 0;
  _$jscoverage['jquery.js'][4237] = 0;
  _$jscoverage['jquery.js'][4241] = 0;
  _$jscoverage['jquery.js'][4245] = 0;
  _$jscoverage['jquery.js'][4247] = 0;
  _$jscoverage['jquery.js'][4252] = 0;
  _$jscoverage['jquery.js'][4253] = 0;
  _$jscoverage['jquery.js'][4254] = 0;
  _$jscoverage['jquery.js'][4256] = 0;
  _$jscoverage['jquery.js'][4257] = 0;
  _$jscoverage['jquery.js'][4258] = 0;
  _$jscoverage['jquery.js'][4262] = 0;
  _$jscoverage['jquery.js'][4263] = 0;
  _$jscoverage['jquery.js'][4264] = 0;
  _$jscoverage['jquery.js'][4265] = 0;
  _$jscoverage['jquery.js'][4266] = 0;
  _$jscoverage['jquery.js'][4270] = 0;
  _$jscoverage['jquery.js'][4274] = 0;
  _$jscoverage['jquery.js'][4278] = 0;
  _$jscoverage['jquery.js'][4279] = 0;
  _$jscoverage['jquery.js'][4280] = 0;
  _$jscoverage['jquery.js'][4284] = 0;
  _$jscoverage['jquery.js'][4285] = 0;
  _$jscoverage['jquery.js'][4292] = 0;
  _$jscoverage['jquery.js'][4296] = 0;
  _$jscoverage['jquery.js'][4297] = 0;
  _$jscoverage['jquery.js'][4298] = 0;
  _$jscoverage['jquery.js'][4303] = 0;
  _$jscoverage['jquery.js'][4304] = 0;
  _$jscoverage['jquery.js'][4305] = 0;
  _$jscoverage['jquery.js'][4309] = 0;
  _$jscoverage['jquery.js'][4313] = 0;
  _$jscoverage['jquery.js'][4316] = 0;
  _$jscoverage['jquery.js'][4322] = 0;
  _$jscoverage['jquery.js'][4323] = 0;
  _$jscoverage['jquery.js'][4329] = 0;
  _$jscoverage['jquery.js'][4331] = 0;
  _$jscoverage['jquery.js'][4333] = 0;
  _$jscoverage['jquery.js'][4334] = 0;
  _$jscoverage['jquery.js'][4335] = 0;
  _$jscoverage['jquery.js'][4338] = 0;
  _$jscoverage['jquery.js'][4339] = 0;
  _$jscoverage['jquery.js'][4340] = 0;
  _$jscoverage['jquery.js'][4342] = 0;
  _$jscoverage['jquery.js'][4345] = 0;
  _$jscoverage['jquery.js'][4350] = 0;
  _$jscoverage['jquery.js'][4352] = 0;
  _$jscoverage['jquery.js'][4357] = 0;
  _$jscoverage['jquery.js'][4361] = 0;
  _$jscoverage['jquery.js'][4362] = 0;
  _$jscoverage['jquery.js'][4363] = 0;
  _$jscoverage['jquery.js'][4366] = 0;
  _$jscoverage['jquery.js'][4370] = 0;
  _$jscoverage['jquery.js'][4371] = 0;
  _$jscoverage['jquery.js'][4375] = 0;
  _$jscoverage['jquery.js'][4376] = 0;
  _$jscoverage['jquery.js'][4379] = 0;
  _$jscoverage['jquery.js'][4380] = 0;
  _$jscoverage['jquery.js'][4386] = 0;
  _$jscoverage['jquery.js'][4387] = 0;
  _$jscoverage['jquery.js'][4389] = 0;
  _$jscoverage['jquery.js'][4395] = 0;
  _$jscoverage['jquery.js'][4397] = 0;
  _$jscoverage['jquery.js'][4399] = 0;
  _$jscoverage['jquery.js'][4400] = 0;
  _$jscoverage['jquery.js'][4401] = 0;
  _$jscoverage['jquery.js'][4402] = 0;
  _$jscoverage['jquery.js'][4405] = 0;
  _$jscoverage['jquery.js'][4406] = 0;
  _$jscoverage['jquery.js'][4409] = 0;
  _$jscoverage['jquery.js'][4412] = 0;
  _$jscoverage['jquery.js'][4415] = 0;
  _$jscoverage['jquery.js'][4417] = 0;
  _$jscoverage['jquery.js'][4418] = 0;
  _$jscoverage['jquery.js'][4423] = 0;
  _$jscoverage['jquery.js'][4424] = 0;
  _$jscoverage['jquery.js'][4428] = 0;
  _$jscoverage['jquery.js'][4434] = 0;
  _$jscoverage['jquery.js'][4440] = 0;
  _$jscoverage['jquery.js'][4441] = 0;
  _$jscoverage['jquery.js'][4445] = 0;
  _$jscoverage['jquery.js'][4446] = 0;
  _$jscoverage['jquery.js'][4447] = 0;
  _$jscoverage['jquery.js'][4449] = 0;
  _$jscoverage['jquery.js'][4451] = 0;
  _$jscoverage['jquery.js'][4452] = 0;
  _$jscoverage['jquery.js'][4453] = 0;
  _$jscoverage['jquery.js'][4454] = 0;
  _$jscoverage['jquery.js'][4455] = 0;
  _$jscoverage['jquery.js'][4458] = 0;
  _$jscoverage['jquery.js'][4459] = 0;
  _$jscoverage['jquery.js'][4462] = 0;
  _$jscoverage['jquery.js'][4464] = 0;
  _$jscoverage['jquery.js'][4467] = 0;
  _$jscoverage['jquery.js'][4469] = 0;
  _$jscoverage['jquery.js'][4473] = 0;
  _$jscoverage['jquery.js'][4476] = 0;
  _$jscoverage['jquery.js'][4488] = 0;
  _$jscoverage['jquery.js'][4489] = 0;
  _$jscoverage['jquery.js'][4493] = 0;
  _$jscoverage['jquery.js'][4494] = 0;
  _$jscoverage['jquery.js'][4495] = 0;
  _$jscoverage['jquery.js'][4498] = 0;
  _$jscoverage['jquery.js'][4501] = 0;
  _$jscoverage['jquery.js'][4502] = 0;
  _$jscoverage['jquery.js'][4505] = 0;
  _$jscoverage['jquery.js'][4511] = 0;
  _$jscoverage['jquery.js'][4512] = 0;
  _$jscoverage['jquery.js'][4516] = 0;
  _$jscoverage['jquery.js'][4519] = 0;
  _$jscoverage['jquery.js'][4528] = 0;
  _$jscoverage['jquery.js'][4532] = 0;
  _$jscoverage['jquery.js'][4535] = 0;
  _$jscoverage['jquery.js'][4538] = 0;
  _$jscoverage['jquery.js'][4540] = 0;
  _$jscoverage['jquery.js'][4544] = 0;
  _$jscoverage['jquery.js'][4545] = 0;
  _$jscoverage['jquery.js'][4546] = 0;
  _$jscoverage['jquery.js'][4548] = 0;
  _$jscoverage['jquery.js'][4552] = 0;
  _$jscoverage['jquery.js'][4553] = 0;
  _$jscoverage['jquery.js'][4556] = 0;
  _$jscoverage['jquery.js'][4559] = 0;
  _$jscoverage['jquery.js'][4560] = 0;
  _$jscoverage['jquery.js'][4563] = 0;
  _$jscoverage['jquery.js'][4566] = 0;
  _$jscoverage['jquery.js'][4567] = 0;
  _$jscoverage['jquery.js'][4568] = 0;
  _$jscoverage['jquery.js'][4569] = 0;
  _$jscoverage['jquery.js'][4572] = 0;
  _$jscoverage['jquery.js'][4576] = 0;
  _$jscoverage['jquery.js'][4578] = 0;
  _$jscoverage['jquery.js'][4579] = 0;
  _$jscoverage['jquery.js'][4584] = 0;
  _$jscoverage['jquery.js'][4585] = 0;
  _$jscoverage['jquery.js'][4588] = 0;
  _$jscoverage['jquery.js'][4589] = 0;
  _$jscoverage['jquery.js'][4591] = 0;
  _$jscoverage['jquery.js'][4593] = 0;
  _$jscoverage['jquery.js'][4594] = 0;
  _$jscoverage['jquery.js'][4596] = 0;
  _$jscoverage['jquery.js'][4598] = 0;
  _$jscoverage['jquery.js'][4601] = 0;
  _$jscoverage['jquery.js'][4602] = 0;
  _$jscoverage['jquery.js'][4608] = 0;
  _$jscoverage['jquery.js'][4609] = 0;
  _$jscoverage['jquery.js'][4610] = 0;
  _$jscoverage['jquery.js'][4611] = 0;
  _$jscoverage['jquery.js'][4614] = 0;
  _$jscoverage['jquery.js'][4615] = 0;
  _$jscoverage['jquery.js'][4620] = 0;
  _$jscoverage['jquery.js'][4621] = 0;
  _$jscoverage['jquery.js'][4622] = 0;
  _$jscoverage['jquery.js'][4623] = 0;
  _$jscoverage['jquery.js'][4626] = 0;
  _$jscoverage['jquery.js'][4627] = 0;
  _$jscoverage['jquery.js'][4630] = 0;
  _$jscoverage['jquery.js'][4631] = 0;
  _$jscoverage['jquery.js'][4634] = 0;
  _$jscoverage['jquery.js'][4640] = 0;
  _$jscoverage['jquery.js'][4641] = 0;
  _$jscoverage['jquery.js'][4642] = 0;
  _$jscoverage['jquery.js'][4646] = 0;
  _$jscoverage['jquery.js'][4649] = 0;
  _$jscoverage['jquery.js'][4651] = 0;
  _$jscoverage['jquery.js'][4654] = 0;
  _$jscoverage['jquery.js'][4657] = 0;
  _$jscoverage['jquery.js'][4658] = 0;
  _$jscoverage['jquery.js'][4661] = 0;
  _$jscoverage['jquery.js'][4662] = 0;
  _$jscoverage['jquery.js'][4663] = 0;
  _$jscoverage['jquery.js'][4665] = 0;
  _$jscoverage['jquery.js'][4670] = 0;
  _$jscoverage['jquery.js'][4672] = 0;
  _$jscoverage['jquery.js'][4674] = 0;
  _$jscoverage['jquery.js'][4679] = 0;
  _$jscoverage['jquery.js'][4696] = 0;
  _$jscoverage['jquery.js'][4698] = 0;
  _$jscoverage['jquery.js'][4699] = 0;
  _$jscoverage['jquery.js'][4702] = 0;
  _$jscoverage['jquery.js'][4706] = 0;
  _$jscoverage['jquery.js'][4708] = 0;
  _$jscoverage['jquery.js'][4709] = 0;
  _$jscoverage['jquery.js'][4711] = 0;
  _$jscoverage['jquery.js'][4712] = 0;
  _$jscoverage['jquery.js'][4715] = 0;
  _$jscoverage['jquery.js'][4718] = 0;
  _$jscoverage['jquery.js'][4719] = 0;
  _$jscoverage['jquery.js'][4722] = 0;
  _$jscoverage['jquery.js'][4727] = 0;
  _$jscoverage['jquery.js'][4728] = 0;
  _$jscoverage['jquery.js'][4731] = 0;
  _$jscoverage['jquery.js'][4732] = 0;
  _$jscoverage['jquery.js'][4741] = 0;
  _$jscoverage['jquery.js'][4743] = 0;
  _$jscoverage['jquery.js'][4744] = 0;
  _$jscoverage['jquery.js'][4750] = 0;
  _$jscoverage['jquery.js'][4751] = 0;
  _$jscoverage['jquery.js'][4753] = 0;
  _$jscoverage['jquery.js'][4756] = 0;
  _$jscoverage['jquery.js'][4760] = 0;
  _$jscoverage['jquery.js'][4763] = 0;
  _$jscoverage['jquery.js'][4764] = 0;
  _$jscoverage['jquery.js'][4768] = 0;
  _$jscoverage['jquery.js'][4771] = 0;
  _$jscoverage['jquery.js'][4772] = 0;
  _$jscoverage['jquery.js'][4773] = 0;
  _$jscoverage['jquery.js'][4776] = 0;
  _$jscoverage['jquery.js'][4777] = 0;
  _$jscoverage['jquery.js'][4778] = 0;
  _$jscoverage['jquery.js'][4783] = 0;
  _$jscoverage['jquery.js'][4786] = 0;
  _$jscoverage['jquery.js'][4789] = 0;
  _$jscoverage['jquery.js'][4795] = 0;
  _$jscoverage['jquery.js'][4797] = 0;
  _$jscoverage['jquery.js'][4798] = 0;
  _$jscoverage['jquery.js'][4801] = 0;
  _$jscoverage['jquery.js'][4802] = 0;
  _$jscoverage['jquery.js'][4803] = 0;
  _$jscoverage['jquery.js'][4805] = 0;
  _$jscoverage['jquery.js'][4808] = 0;
  _$jscoverage['jquery.js'][4811] = 0;
  _$jscoverage['jquery.js'][4814] = 0;
  _$jscoverage['jquery.js'][4815] = 0;
  _$jscoverage['jquery.js'][4819] = 0;
  _$jscoverage['jquery.js'][4820] = 0;
  _$jscoverage['jquery.js'][4821] = 0;
  _$jscoverage['jquery.js'][4822] = 0;
  _$jscoverage['jquery.js'][4823] = 0;
  _$jscoverage['jquery.js'][4829] = 0;
  _$jscoverage['jquery.js'][4833] = 0;
  _$jscoverage['jquery.js'][4834] = 0;
  _$jscoverage['jquery.js'][4842] = 0;
  _$jscoverage['jquery.js'][4843] = 0;
  _$jscoverage['jquery.js'][4844] = 0;
  _$jscoverage['jquery.js'][4846] = 0;
  _$jscoverage['jquery.js'][4850] = 0;
  _$jscoverage['jquery.js'][4854] = 0;
  _$jscoverage['jquery.js'][4855] = 0;
  _$jscoverage['jquery.js'][4857] = 0;
  _$jscoverage['jquery.js'][4861] = 0;
  _$jscoverage['jquery.js'][4866] = 0;
  _$jscoverage['jquery.js'][4867] = 0;
  _$jscoverage['jquery.js'][4870] = 0;
  _$jscoverage['jquery.js'][4871] = 0;
  _$jscoverage['jquery.js'][4876] = 0;
  _$jscoverage['jquery.js'][4877] = 0;
  _$jscoverage['jquery.js'][4878] = 0;
  _$jscoverage['jquery.js'][4882] = 0;
  _$jscoverage['jquery.js'][4883] = 0;
  _$jscoverage['jquery.js'][4886] = 0;
  _$jscoverage['jquery.js'][4889] = 0;
  _$jscoverage['jquery.js'][4892] = 0;
  _$jscoverage['jquery.js'][4893] = 0;
  _$jscoverage['jquery.js'][4895] = 0;
  _$jscoverage['jquery.js'][4896] = 0;
  _$jscoverage['jquery.js'][4898] = 0;
  _$jscoverage['jquery.js'][4901] = 0;
  _$jscoverage['jquery.js'][4904] = 0;
  _$jscoverage['jquery.js'][4905] = 0;
  _$jscoverage['jquery.js'][4906] = 0;
  _$jscoverage['jquery.js'][4907] = 0;
  _$jscoverage['jquery.js'][4910] = 0;
  _$jscoverage['jquery.js'][4911] = 0;
  _$jscoverage['jquery.js'][4915] = 0;
  _$jscoverage['jquery.js'][4916] = 0;
  _$jscoverage['jquery.js'][4917] = 0;
  _$jscoverage['jquery.js'][4920] = 0;
  _$jscoverage['jquery.js'][4921] = 0;
  _$jscoverage['jquery.js'][4922] = 0;
  _$jscoverage['jquery.js'][4923] = 0;
  _$jscoverage['jquery.js'][4926] = 0;
  _$jscoverage['jquery.js'][4927] = 0;
  _$jscoverage['jquery.js'][4928] = 0;
  _$jscoverage['jquery.js'][4931] = 0;
  _$jscoverage['jquery.js'][4932] = 0;
  _$jscoverage['jquery.js'][4936] = 0;
  _$jscoverage['jquery.js'][4938] = 0;
  _$jscoverage['jquery.js'][4939] = 0;
  _$jscoverage['jquery.js'][4947] = 0;
  _$jscoverage['jquery.js'][4953] = 0;
  _$jscoverage['jquery.js'][4959] = 0;
  _$jscoverage['jquery.js'][4960] = 0;
  _$jscoverage['jquery.js'][4964] = 0;
  _$jscoverage['jquery.js'][4965] = 0;
  _$jscoverage['jquery.js'][4966] = 0;
  _$jscoverage['jquery.js'][4967] = 0;
  _$jscoverage['jquery.js'][4972] = 0;
  _$jscoverage['jquery.js'][4973] = 0;
  _$jscoverage['jquery.js'][4977] = 0;
  _$jscoverage['jquery.js'][4978] = 0;
  _$jscoverage['jquery.js'][4982] = 0;
  _$jscoverage['jquery.js'][4983] = 0;
  _$jscoverage['jquery.js'][4985] = 0;
  _$jscoverage['jquery.js'][4986] = 0;
  _$jscoverage['jquery.js'][4990] = 0;
  _$jscoverage['jquery.js'][4996] = 0;
  _$jscoverage['jquery.js'][4997] = 0;
  _$jscoverage['jquery.js'][4998] = 0;
  _$jscoverage['jquery.js'][4999] = 0;
  _$jscoverage['jquery.js'][5000] = 0;
  _$jscoverage['jquery.js'][5001] = 0;
  _$jscoverage['jquery.js'][5004] = 0;
  _$jscoverage['jquery.js'][5005] = 0;
  _$jscoverage['jquery.js'][5009] = 0;
  _$jscoverage['jquery.js'][5012] = 0;
  _$jscoverage['jquery.js'][5015] = 0;
  _$jscoverage['jquery.js'][5018] = 0;
  _$jscoverage['jquery.js'][5030] = 0;
  _$jscoverage['jquery.js'][5031] = 0;
  _$jscoverage['jquery.js'][5032] = 0;
  _$jscoverage['jquery.js'][5035] = 0;
  _$jscoverage['jquery.js'][5038] = 0;
  _$jscoverage['jquery.js'][5039] = 0;
  _$jscoverage['jquery.js'][5044] = 0;
  _$jscoverage['jquery.js'][5045] = 0;
  _$jscoverage['jquery.js'][5047] = 0;
  _$jscoverage['jquery.js'][5048] = 0;
  _$jscoverage['jquery.js'][5053] = 0;
  _$jscoverage['jquery.js'][5054] = 0;
  _$jscoverage['jquery.js'][5056] = 0;
  _$jscoverage['jquery.js'][5060] = 0;
  _$jscoverage['jquery.js'][5068] = 0;
  _$jscoverage['jquery.js'][5073] = 0;
  _$jscoverage['jquery.js'][5074] = 0;
  _$jscoverage['jquery.js'][5078] = 0;
  _$jscoverage['jquery.js'][5079] = 0;
  _$jscoverage['jquery.js'][5080] = 0;
  _$jscoverage['jquery.js'][5081] = 0;
  _$jscoverage['jquery.js'][5082] = 0;
  _$jscoverage['jquery.js'][5083] = 0;
  _$jscoverage['jquery.js'][5086] = 0;
  _$jscoverage['jquery.js'][5087] = 0;
  _$jscoverage['jquery.js'][5088] = 0;
  _$jscoverage['jquery.js'][5090] = 0;
  _$jscoverage['jquery.js'][5093] = 0;
  _$jscoverage['jquery.js'][5094] = 0;
  _$jscoverage['jquery.js'][5095] = 0;
  _$jscoverage['jquery.js'][5096] = 0;
  _$jscoverage['jquery.js'][5100] = 0;
  _$jscoverage['jquery.js'][5101] = 0;
  _$jscoverage['jquery.js'][5102] = 0;
  _$jscoverage['jquery.js'][5104] = 0;
  _$jscoverage['jquery.js'][5109] = 0;
  _$jscoverage['jquery.js'][5111] = 0;
  _$jscoverage['jquery.js'][5112] = 0;
  _$jscoverage['jquery.js'][5114] = 0;
  _$jscoverage['jquery.js'][5115] = 0;
  _$jscoverage['jquery.js'][5122] = 0;
  _$jscoverage['jquery.js'][5123] = 0;
  _$jscoverage['jquery.js'][5126] = 0;
  _$jscoverage['jquery.js'][5129] = 0;
  _$jscoverage['jquery.js'][5134] = 0;
  _$jscoverage['jquery.js'][5135] = 0;
  _$jscoverage['jquery.js'][5142] = 0;
  _$jscoverage['jquery.js'][5144] = 0;
  _$jscoverage['jquery.js'][5150] = 0;
  _$jscoverage['jquery.js'][5152] = 0;
  _$jscoverage['jquery.js'][5153] = 0;
  _$jscoverage['jquery.js'][5156] = 0;
  _$jscoverage['jquery.js'][5159] = 0;
  _$jscoverage['jquery.js'][5160] = 0;
  _$jscoverage['jquery.js'][5164] = 0;
  _$jscoverage['jquery.js'][5167] = 0;
  _$jscoverage['jquery.js'][5168] = 0;
  _$jscoverage['jquery.js'][5169] = 0;
  _$jscoverage['jquery.js'][5171] = 0;
  _$jscoverage['jquery.js'][5172] = 0;
  _$jscoverage['jquery.js'][5177] = 0;
  _$jscoverage['jquery.js'][5179] = 0;
  _$jscoverage['jquery.js'][5180] = 0;
  _$jscoverage['jquery.js'][5182] = 0;
  _$jscoverage['jquery.js'][5185] = 0;
  _$jscoverage['jquery.js'][5186] = 0;
  _$jscoverage['jquery.js'][5187] = 0;
  _$jscoverage['jquery.js'][5188] = 0;
  _$jscoverage['jquery.js'][5196] = 0;
  _$jscoverage['jquery.js'][5197] = 0;
  _$jscoverage['jquery.js'][5200] = 0;
  _$jscoverage['jquery.js'][5204] = 0;
  _$jscoverage['jquery.js'][5210] = 0;
  _$jscoverage['jquery.js'][5223] = 0;
  _$jscoverage['jquery.js'][5227] = 0;
  _$jscoverage['jquery.js'][5228] = 0;
  _$jscoverage['jquery.js'][5229] = 0;
  _$jscoverage['jquery.js'][5230] = 0;
  _$jscoverage['jquery.js'][5231] = 0;
  _$jscoverage['jquery.js'][5234] = 0;
  _$jscoverage['jquery.js'][5236] = 0;
  _$jscoverage['jquery.js'][5237] = 0;
  _$jscoverage['jquery.js'][5241] = 0;
  _$jscoverage['jquery.js'][5242] = 0;
  _$jscoverage['jquery.js'][5245] = 0;
  _$jscoverage['jquery.js'][5246] = 0;
  _$jscoverage['jquery.js'][5253] = 0;
  _$jscoverage['jquery.js'][5254] = 0;
  _$jscoverage['jquery.js'][5255] = 0;
  _$jscoverage['jquery.js'][5258] = 0;
  _$jscoverage['jquery.js'][5262] = 0;
  _$jscoverage['jquery.js'][5268] = 0;
  _$jscoverage['jquery.js'][5269] = 0;
  _$jscoverage['jquery.js'][5273] = 0;
  _$jscoverage['jquery.js'][5274] = 0;
  _$jscoverage['jquery.js'][5279] = 0;
  _$jscoverage['jquery.js'][5290] = 0;
  _$jscoverage['jquery.js'][5305] = 0;
  _$jscoverage['jquery.js'][5306] = 0;
  _$jscoverage['jquery.js'][5307] = 0;
  _$jscoverage['jquery.js'][5314] = 0;
  _$jscoverage['jquery.js'][5315] = 0;
  _$jscoverage['jquery.js'][5316] = 0;
  _$jscoverage['jquery.js'][5325] = 0;
  _$jscoverage['jquery.js'][5326] = 0;
  _$jscoverage['jquery.js'][5327] = 0;
  _$jscoverage['jquery.js'][5333] = 0;
  _$jscoverage['jquery.js'][5342] = 0;
  _$jscoverage['jquery.js'][5343] = 0;
  _$jscoverage['jquery.js'][5350] = 0;
  _$jscoverage['jquery.js'][5353] = 0;
  _$jscoverage['jquery.js'][5354] = 0;
  _$jscoverage['jquery.js'][5358] = 0;
  _$jscoverage['jquery.js'][5361] = 0;
  _$jscoverage['jquery.js'][5362] = 0;
  _$jscoverage['jquery.js'][5366] = 0;
  _$jscoverage['jquery.js'][5367] = 0;
  _$jscoverage['jquery.js'][5368] = 0;
  _$jscoverage['jquery.js'][5372] = 0;
  _$jscoverage['jquery.js'][5383] = 0;
  _$jscoverage['jquery.js'][5387] = 0;
  _$jscoverage['jquery.js'][5388] = 0;
  _$jscoverage['jquery.js'][5392] = 0;
  _$jscoverage['jquery.js'][5396] = 0;
  _$jscoverage['jquery.js'][5397] = 0;
  _$jscoverage['jquery.js'][5401] = 0;
  _$jscoverage['jquery.js'][5404] = 0;
  _$jscoverage['jquery.js'][5409] = 0;
  _$jscoverage['jquery.js'][5417] = 0;
  _$jscoverage['jquery.js'][5419] = 0;
  _$jscoverage['jquery.js'][5421] = 0;
  _$jscoverage['jquery.js'][5422] = 0;
  _$jscoverage['jquery.js'][5426] = 0;
  _$jscoverage['jquery.js'][5428] = 0;
  _$jscoverage['jquery.js'][5430] = 0;
  _$jscoverage['jquery.js'][5431] = 0;
  _$jscoverage['jquery.js'][5435] = 0;
  _$jscoverage['jquery.js'][5437] = 0;
  _$jscoverage['jquery.js'][5439] = 0;
  _$jscoverage['jquery.js'][5440] = 0;
  _$jscoverage['jquery.js'][5443] = 0;
  _$jscoverage['jquery.js'][5448] = 0;
  _$jscoverage['jquery.js'][5480] = 0;
  _$jscoverage['jquery.js'][5483] = 0;
  _$jscoverage['jquery.js'][5484] = 0;
  _$jscoverage['jquery.js'][5488] = 0;
  _$jscoverage['jquery.js'][5489] = 0;
  _$jscoverage['jquery.js'][5490] = 0;
  _$jscoverage['jquery.js'][5493] = 0;
  _$jscoverage['jquery.js'][5494] = 0;
  _$jscoverage['jquery.js'][5497] = 0;
  _$jscoverage['jquery.js'][5498] = 0;
  _$jscoverage['jquery.js'][5501] = 0;
  _$jscoverage['jquery.js'][5504] = 0;
  _$jscoverage['jquery.js'][5516] = 0;
  _$jscoverage['jquery.js'][5522] = 0;
  _$jscoverage['jquery.js'][5527] = 0;
  _$jscoverage['jquery.js'][5534] = 0;
  _$jscoverage['jquery.js'][5535] = 0;
  _$jscoverage['jquery.js'][5536] = 0;
  _$jscoverage['jquery.js'][5537] = 0;
  _$jscoverage['jquery.js'][5539] = 0;
  _$jscoverage['jquery.js'][5544] = 0;
  _$jscoverage['jquery.js'][5547] = 0;
  _$jscoverage['jquery.js'][5550] = 0;
  _$jscoverage['jquery.js'][5553] = 0;
  _$jscoverage['jquery.js'][5554] = 0;
  _$jscoverage['jquery.js'][5557] = 0;
  _$jscoverage['jquery.js'][5558] = 0;
  _$jscoverage['jquery.js'][5565] = 0;
  _$jscoverage['jquery.js'][5567] = 0;
  _$jscoverage['jquery.js'][5570] = 0;
  _$jscoverage['jquery.js'][5571] = 0;
  _$jscoverage['jquery.js'][5573] = 0;
  _$jscoverage['jquery.js'][5575] = 0;
  _$jscoverage['jquery.js'][5578] = 0;
  _$jscoverage['jquery.js'][5579] = 0;
  _$jscoverage['jquery.js'][5581] = 0;
  _$jscoverage['jquery.js'][5582] = 0;
  _$jscoverage['jquery.js'][5584] = 0;
  _$jscoverage['jquery.js'][5585] = 0;
  _$jscoverage['jquery.js'][5591] = 0;
  _$jscoverage['jquery.js'][5610] = 0;
  _$jscoverage['jquery.js'][5611] = 0;
  _$jscoverage['jquery.js'][5614] = 0;
  _$jscoverage['jquery.js'][5617] = 0;
  _$jscoverage['jquery.js'][5621] = 0;
  _$jscoverage['jquery.js'][5622] = 0;
  _$jscoverage['jquery.js'][5623] = 0;
  _$jscoverage['jquery.js'][5625] = 0;
  _$jscoverage['jquery.js'][5626] = 0;
  _$jscoverage['jquery.js'][5627] = 0;
  _$jscoverage['jquery.js'][5629] = 0;
  _$jscoverage['jquery.js'][5632] = 0;
  _$jscoverage['jquery.js'][5635] = 0;
  _$jscoverage['jquery.js'][5636] = 0;
  _$jscoverage['jquery.js'][5638] = 0;
  _$jscoverage['jquery.js'][5639] = 0;
  _$jscoverage['jquery.js'][5643] = 0;
  _$jscoverage['jquery.js'][5644] = 0;
  _$jscoverage['jquery.js'][5645] = 0;
  _$jscoverage['jquery.js'][5646] = 0;
  _$jscoverage['jquery.js'][5648] = 0;
  _$jscoverage['jquery.js'][5649] = 0;
  _$jscoverage['jquery.js'][5650] = 0;
  _$jscoverage['jquery.js'][5652] = 0;
  _$jscoverage['jquery.js'][5653] = 0;
  _$jscoverage['jquery.js'][5654] = 0;
  _$jscoverage['jquery.js'][5661] = 0;
  _$jscoverage['jquery.js'][5662] = 0;
  _$jscoverage['jquery.js'][5663] = 0;
  _$jscoverage['jquery.js'][5665] = 0;
  _$jscoverage['jquery.js'][5670] = 0;
  _$jscoverage['jquery.js'][5671] = 0;
  _$jscoverage['jquery.js'][5674] = 0;
  _$jscoverage['jquery.js'][5675] = 0;
  _$jscoverage['jquery.js'][5678] = 0;
  _$jscoverage['jquery.js'][5679] = 0;
  _$jscoverage['jquery.js'][5683] = 0;
  _$jscoverage['jquery.js'][5686] = 0;
  _$jscoverage['jquery.js'][5688] = 0;
  _$jscoverage['jquery.js'][5696] = 0;
  _$jscoverage['jquery.js'][5699] = 0;
  _$jscoverage['jquery.js'][5700] = 0;
  _$jscoverage['jquery.js'][5701] = 0;
  _$jscoverage['jquery.js'][5702] = 0;
  _$jscoverage['jquery.js'][5704] = 0;
  _$jscoverage['jquery.js'][5708] = 0;
  _$jscoverage['jquery.js'][5709] = 0;
  _$jscoverage['jquery.js'][5710] = 0;
  _$jscoverage['jquery.js'][5712] = 0;
  _$jscoverage['jquery.js'][5713] = 0;
  _$jscoverage['jquery.js'][5717] = 0;
  _$jscoverage['jquery.js'][5718] = 0;
  _$jscoverage['jquery.js'][5719] = 0;
  _$jscoverage['jquery.js'][5724] = 0;
  _$jscoverage['jquery.js'][5725] = 0;
  _$jscoverage['jquery.js'][5727] = 0;
  _$jscoverage['jquery.js'][5728] = 0;
  _$jscoverage['jquery.js'][5731] = 0;
  _$jscoverage['jquery.js'][5735] = 0;
  _$jscoverage['jquery.js'][5739] = 0;
  _$jscoverage['jquery.js'][5742] = 0;
  _$jscoverage['jquery.js'][5743] = 0;
  _$jscoverage['jquery.js'][5746] = 0;
  _$jscoverage['jquery.js'][5749] = 0;
  _$jscoverage['jquery.js'][5750] = 0;
  _$jscoverage['jquery.js'][5751] = 0;
  _$jscoverage['jquery.js'][5755] = 0;
  _$jscoverage['jquery.js'][5758] = 0;
  _$jscoverage['jquery.js'][5759] = 0;
  _$jscoverage['jquery.js'][5762] = 0;
  _$jscoverage['jquery.js'][5770] = 0;
  _$jscoverage['jquery.js'][5773] = 0;
  _$jscoverage['jquery.js'][5774] = 0;
  _$jscoverage['jquery.js'][5778] = 0;
  _$jscoverage['jquery.js'][5779] = 0;
  _$jscoverage['jquery.js'][5780] = 0;
  _$jscoverage['jquery.js'][5783] = 0;
  _$jscoverage['jquery.js'][5784] = 0;
  _$jscoverage['jquery.js'][5785] = 0;
  _$jscoverage['jquery.js'][5787] = 0;
  _$jscoverage['jquery.js'][5791] = 0;
  _$jscoverage['jquery.js'][5794] = 0;
  _$jscoverage['jquery.js'][5796] = 0;
  _$jscoverage['jquery.js'][5800] = 0;
  _$jscoverage['jquery.js'][5805] = 0;
  _$jscoverage['jquery.js'][5809] = 0;
  _$jscoverage['jquery.js'][5810] = 0;
  _$jscoverage['jquery.js'][5812] = 0;
  _$jscoverage['jquery.js'][5813] = 0;
  _$jscoverage['jquery.js'][5818] = 0;
  _$jscoverage['jquery.js'][5819] = 0;
  _$jscoverage['jquery.js'][5820] = 0;
  _$jscoverage['jquery.js'][5821] = 0;
  _$jscoverage['jquery.js'][5823] = 0;
  _$jscoverage['jquery.js'][5824] = 0;
  _$jscoverage['jquery.js'][5827] = 0;
  _$jscoverage['jquery.js'][5832] = 0;
  _$jscoverage['jquery.js'][5833] = 0;
  _$jscoverage['jquery.js'][5834] = 0;
  _$jscoverage['jquery.js'][5838] = 0;
  _$jscoverage['jquery.js'][5842] = 0;
  _$jscoverage['jquery.js'][5846] = 0;
  _$jscoverage['jquery.js'][5847] = 0;
  _$jscoverage['jquery.js'][5848] = 0;
  _$jscoverage['jquery.js'][5849] = 0;
  _$jscoverage['jquery.js'][5850] = 0;
  _$jscoverage['jquery.js'][5851] = 0;
  _$jscoverage['jquery.js'][5852] = 0;
  _$jscoverage['jquery.js'][5856] = 0;
  _$jscoverage['jquery.js'][5863] = 0;
  _$jscoverage['jquery.js'][5865] = 0;
  _$jscoverage['jquery.js'][5869] = 0;
  _$jscoverage['jquery.js'][5876] = 0;
  _$jscoverage['jquery.js'][5878] = 0;
  _$jscoverage['jquery.js'][5882] = 0;
  _$jscoverage['jquery.js'][5886] = 0;
  _$jscoverage['jquery.js'][5887] = 0;
  _$jscoverage['jquery.js'][5890] = 0;
  _$jscoverage['jquery.js'][5891] = 0;
  _$jscoverage['jquery.js'][5898] = 0;
  _$jscoverage['jquery.js'][5899] = 0;
  _$jscoverage['jquery.js'][5900] = 0;
  _$jscoverage['jquery.js'][5901] = 0;
  _$jscoverage['jquery.js'][5907] = 0;
  _$jscoverage['jquery.js'][5908] = 0;
  _$jscoverage['jquery.js'][5909] = 0;
  _$jscoverage['jquery.js'][5910] = 0;
  _$jscoverage['jquery.js'][5916] = 0;
  _$jscoverage['jquery.js'][5917] = 0;
  _$jscoverage['jquery.js'][5918] = 0;
  _$jscoverage['jquery.js'][5924] = 0;
  _$jscoverage['jquery.js'][5925] = 0;
  _$jscoverage['jquery.js'][5926] = 0;
  _$jscoverage['jquery.js'][5932] = 0;
  _$jscoverage['jquery.js'][5935] = 0;
  _$jscoverage['jquery.js'][5936] = 0;
  _$jscoverage['jquery.js'][5939] = 0;
  _$jscoverage['jquery.js'][5942] = 0;
  _$jscoverage['jquery.js'][5946] = 0;
  _$jscoverage['jquery.js'][5950] = 0;
  _$jscoverage['jquery.js'][5951] = 0;
  _$jscoverage['jquery.js'][5953] = 0;
  _$jscoverage['jquery.js'][5954] = 0;
  _$jscoverage['jquery.js'][5959] = 0;
  _$jscoverage['jquery.js'][5960] = 0;
  _$jscoverage['jquery.js'][5964] = 0;
  _$jscoverage['jquery.js'][5965] = 0;
  _$jscoverage['jquery.js'][5969] = 0;
  _$jscoverage['jquery.js'][5972] = 0;
  _$jscoverage['jquery.js'][5974] = 0;
  _$jscoverage['jquery.js'][5975] = 0;
  _$jscoverage['jquery.js'][5976] = 0;
  _$jscoverage['jquery.js'][5979] = 0;
  _$jscoverage['jquery.js'][5980] = 0;
  _$jscoverage['jquery.js'][5981] = 0;
  _$jscoverage['jquery.js'][5985] = 0;
  _$jscoverage['jquery.js'][5991] = 0;
  _$jscoverage['jquery.js'][5992] = 0;
  _$jscoverage['jquery.js'][5998] = 0;
  _$jscoverage['jquery.js'][6001] = 0;
  _$jscoverage['jquery.js'][6002] = 0;
  _$jscoverage['jquery.js'][6004] = 0;
  _$jscoverage['jquery.js'][6005] = 0;
  _$jscoverage['jquery.js'][6006] = 0;
  _$jscoverage['jquery.js'][6007] = 0;
  _$jscoverage['jquery.js'][6016] = 0;
  _$jscoverage['jquery.js'][6023] = 0;
  _$jscoverage['jquery.js'][6024] = 0;
  _$jscoverage['jquery.js'][6030] = 0;
  _$jscoverage['jquery.js'][6031] = 0;
  _$jscoverage['jquery.js'][6032] = 0;
  _$jscoverage['jquery.js'][6036] = 0;
  _$jscoverage['jquery.js'][6039] = 0;
  _$jscoverage['jquery.js'][6042] = 0;
  _$jscoverage['jquery.js'][6044] = 0;
  _$jscoverage['jquery.js'][6049] = 0;
  _$jscoverage['jquery.js'][6051] = 0;
  _$jscoverage['jquery.js'][6052] = 0;
  _$jscoverage['jquery.js'][6055] = 0;
  _$jscoverage['jquery.js'][6058] = 0;
  _$jscoverage['jquery.js'][6062] = 0;
  _$jscoverage['jquery.js'][6066] = 0;
  _$jscoverage['jquery.js'][6069] = 0;
  _$jscoverage['jquery.js'][6070] = 0;
  _$jscoverage['jquery.js'][6073] = 0;
  _$jscoverage['jquery.js'][6075] = 0;
  _$jscoverage['jquery.js'][6079] = 0;
  _$jscoverage['jquery.js'][6081] = 0;
  _$jscoverage['jquery.js'][6082] = 0;
  _$jscoverage['jquery.js'][6085] = 0;
  _$jscoverage['jquery.js'][6089] = 0;
  _$jscoverage['jquery.js'][6090] = 0;
  _$jscoverage['jquery.js'][6094] = 0;
  _$jscoverage['jquery.js'][6098] = 0;
  _$jscoverage['jquery.js'][6099] = 0;
  _$jscoverage['jquery.js'][6101] = 0;
  _$jscoverage['jquery.js'][6105] = 0;
  _$jscoverage['jquery.js'][6108] = 0;
  _$jscoverage['jquery.js'][6109] = 0;
  _$jscoverage['jquery.js'][6112] = 0;
  _$jscoverage['jquery.js'][6118] = 0;
  _$jscoverage['jquery.js'][6119] = 0;
  _$jscoverage['jquery.js'][6124] = 0;
  _$jscoverage['jquery.js'][6125] = 0;
  _$jscoverage['jquery.js'][6126] = 0;
  _$jscoverage['jquery.js'][6128] = 0;
  _$jscoverage['jquery.js'][6130] = 0;
  _$jscoverage['jquery.js'][6131] = 0;
  _$jscoverage['jquery.js'][6134] = 0;
  _$jscoverage['jquery.js'][6135] = 0;
  _$jscoverage['jquery.js'][6138] = 0;
  _$jscoverage['jquery.js'][6139] = 0;
  _$jscoverage['jquery.js'][6142] = 0;
  _$jscoverage['jquery.js'][6143] = 0;
  _$jscoverage['jquery.js'][6146] = 0;
  _$jscoverage['jquery.js'][6147] = 0;
  _$jscoverage['jquery.js'][6153] = 0;
  _$jscoverage['jquery.js'][6154] = 0;
  _$jscoverage['jquery.js'][6162] = 0;
  _$jscoverage['jquery.js'][6167] = 0;
  _$jscoverage['jquery.js'][6168] = 0;
  _$jscoverage['jquery.js'][6170] = 0;
  _$jscoverage['jquery.js'][6171] = 0;
  _$jscoverage['jquery.js'][6179] = 0;
  _$jscoverage['jquery.js'][6182] = 0;
  _$jscoverage['jquery.js'][6183] = 0;
  _$jscoverage['jquery.js'][6184] = 0;
  _$jscoverage['jquery.js'][6187] = 0;
  _$jscoverage['jquery.js'][6188] = 0;
  _$jscoverage['jquery.js'][6191] = 0;
  _$jscoverage['jquery.js'][6192] = 0;
  _$jscoverage['jquery.js'][6193] = 0;
  _$jscoverage['jquery.js'][6197] = 0;
  _$jscoverage['jquery.js'][6206] = 0;
  _$jscoverage['jquery.js'][6209] = 0;
  _$jscoverage['jquery.js'][6211] = 0;
  _$jscoverage['jquery.js'][6215] = 0;
  _$jscoverage['jquery.js'][6216] = 0;
  _$jscoverage['jquery.js'][6220] = 0;
  _$jscoverage['jquery.js'][6226] = 0;
  _$jscoverage['jquery.js'][6243] = 0;
  _$jscoverage['jquery.js'][6246] = 0;
  _$jscoverage['jquery.js'][6247] = 0;
  _$jscoverage['jquery.js'][6251] = 0;
  _$jscoverage['jquery.js'][6254] = 0;
  _$jscoverage['jquery.js'][6255] = 0;
  _$jscoverage['jquery.js'][6256] = 0;
  _$jscoverage['jquery.js'][6257] = 0;
  _$jscoverage['jquery.js'][6264] = 0;
  _$jscoverage['jquery.js'][6265] = 0;
  _$jscoverage['jquery.js'][6266] = 0;
  _$jscoverage['jquery.js'][6267] = 0;
  _$jscoverage['jquery.js'][6269] = 0;
  _$jscoverage['jquery.js'][6272] = 0;
  _$jscoverage['jquery.js'][6276] = 0;
  _$jscoverage['jquery.js'][6277] = 0;
  _$jscoverage['jquery.js'][6284] = 0;
  _$jscoverage['jquery.js'][6285] = 0;
  _$jscoverage['jquery.js'][6290] = 0;
  _$jscoverage['jquery.js'][6291] = 0;
  _$jscoverage['jquery.js'][6294] = 0;
  _$jscoverage['jquery.js'][6297] = 0;
  _$jscoverage['jquery.js'][6298] = 0;
  _$jscoverage['jquery.js'][6302] = 0;
  _$jscoverage['jquery.js'][6305] = 0;
  _$jscoverage['jquery.js'][6308] = 0;
  _$jscoverage['jquery.js'][6309] = 0;
  _$jscoverage['jquery.js'][6313] = 0;
  _$jscoverage['jquery.js'][6321] = 0;
  _$jscoverage['jquery.js'][6322] = 0;
  _$jscoverage['jquery.js'][6326] = 0;
  _$jscoverage['jquery.js'][6327] = 0;
  _$jscoverage['jquery.js'][6333] = 0;
  _$jscoverage['jquery.js'][6337] = 0;
  _$jscoverage['jquery.js'][6346] = 0;
  _$jscoverage['jquery.js'][6349] = 0;
  _$jscoverage['jquery.js'][6352] = 0;
  _$jscoverage['jquery.js'][6359] = 0;
  _$jscoverage['jquery.js'][6360] = 0;
  _$jscoverage['jquery.js'][6361] = 0;
  _$jscoverage['jquery.js'][6363] = 0;
  _$jscoverage['jquery.js'][6368] = 0;
  _$jscoverage['jquery.js'][6375] = 0;
  _$jscoverage['jquery.js'][6378] = 0;
  _$jscoverage['jquery.js'][6381] = 0;
  _$jscoverage['jquery.js'][6385] = 0;
  _$jscoverage['jquery.js'][6388] = 0;
  _$jscoverage['jquery.js'][6402] = 0;
  _$jscoverage['jquery.js'][6409] = 0;
  _$jscoverage['jquery.js'][6412] = 0;
  _$jscoverage['jquery.js'][6413] = 0;
  _$jscoverage['jquery.js'][6444] = 0;
  _$jscoverage['jquery.js'][6445] = 0;
  _$jscoverage['jquery.js'][6449] = 0;
  _$jscoverage['jquery.js'][6457] = 0;
  _$jscoverage['jquery.js'][6458] = 0;
  _$jscoverage['jquery.js'][6462] = 0;
  _$jscoverage['jquery.js'][6465] = 0;
  _$jscoverage['jquery.js'][6466] = 0;
  _$jscoverage['jquery.js'][6469] = 0;
  _$jscoverage['jquery.js'][6470] = 0;
  _$jscoverage['jquery.js'][6473] = 0;
  _$jscoverage['jquery.js'][6477] = 0;
  _$jscoverage['jquery.js'][6478] = 0;
  _$jscoverage['jquery.js'][6482] = 0;
  _$jscoverage['jquery.js'][6483] = 0;
  _$jscoverage['jquery.js'][6487] = 0;
  _$jscoverage['jquery.js'][6488] = 0;
  _$jscoverage['jquery.js'][6492] = 0;
  _$jscoverage['jquery.js'][6495] = 0;
  _$jscoverage['jquery.js'][6496] = 0;
  _$jscoverage['jquery.js'][6498] = 0;
  _$jscoverage['jquery.js'][6505] = 0;
  _$jscoverage['jquery.js'][6508] = 0;
  _$jscoverage['jquery.js'][6512] = 0;
  _$jscoverage['jquery.js'][6517] = 0;
  _$jscoverage['jquery.js'][6524] = 0;
  _$jscoverage['jquery.js'][6525] = 0;
  _$jscoverage['jquery.js'][6529] = 0;
  _$jscoverage['jquery.js'][6532] = 0;
  _$jscoverage['jquery.js'][6533] = 0;
  _$jscoverage['jquery.js'][6537] = 0;
  _$jscoverage['jquery.js'][6538] = 0;
  _$jscoverage['jquery.js'][6542] = 0;
  _$jscoverage['jquery.js'][6543] = 0;
  _$jscoverage['jquery.js'][6547] = 0;
  _$jscoverage['jquery.js'][6548] = 0;
  _$jscoverage['jquery.js'][6549] = 0;
  _$jscoverage['jquery.js'][6552] = 0;
  _$jscoverage['jquery.js'][6556] = 0;
  _$jscoverage['jquery.js'][6557] = 0;
  _$jscoverage['jquery.js'][6559] = 0;
  _$jscoverage['jquery.js'][6563] = 0;
  _$jscoverage['jquery.js'][6573] = 0;
  _$jscoverage['jquery.js'][6580] = 0;
  _$jscoverage['jquery.js'][6593] = 0;
  _$jscoverage['jquery.js'][6594] = 0;
  _$jscoverage['jquery.js'][6603] = 0;
  _$jscoverage['jquery.js'][6606] = 0;
  _$jscoverage['jquery.js'][6607] = 0;
  _$jscoverage['jquery.js'][6610] = 0;
  _$jscoverage['jquery.js'][6615] = 0;
  _$jscoverage['jquery.js'][6617] = 0;
  _$jscoverage['jquery.js'][6618] = 0;
  _$jscoverage['jquery.js'][6621] = 0;
  _$jscoverage['jquery.js'][6629] = 0;
  _$jscoverage['jquery.js'][6634] = 0;
  _$jscoverage['jquery.js'][6636] = 0;
  _$jscoverage['jquery.js'][6642] = 0;
  _$jscoverage['jquery.js'][6643] = 0;
  _$jscoverage['jquery.js'][6647] = 0;
  _$jscoverage['jquery.js'][6651] = 0;
  _$jscoverage['jquery.js'][6652] = 0;
  _$jscoverage['jquery.js'][6656] = 0;
  _$jscoverage['jquery.js'][6658] = 0;
  _$jscoverage['jquery.js'][6659] = 0;
  _$jscoverage['jquery.js'][6663] = 0;
  _$jscoverage['jquery.js'][6664] = 0;
  _$jscoverage['jquery.js'][6665] = 0;
  _$jscoverage['jquery.js'][6667] = 0;
  _$jscoverage['jquery.js'][6668] = 0;
  _$jscoverage['jquery.js'][6671] = 0;
  _$jscoverage['jquery.js'][6674] = 0;
  _$jscoverage['jquery.js'][6682] = 0;
  _$jscoverage['jquery.js'][6683] = 0;
  _$jscoverage['jquery.js'][6685] = 0;
  _$jscoverage['jquery.js'][6687] = 0;
  _$jscoverage['jquery.js'][6690] = 0;
  _$jscoverage['jquery.js'][6691] = 0;
  _$jscoverage['jquery.js'][6692] = 0;
  _$jscoverage['jquery.js'][6693] = 0;
  _$jscoverage['jquery.js'][6694] = 0;
  _$jscoverage['jquery.js'][6695] = 0;
  _$jscoverage['jquery.js'][6696] = 0;
  _$jscoverage['jquery.js'][6699] = 0;
  _$jscoverage['jquery.js'][6701] = 0;
  _$jscoverage['jquery.js'][6706] = 0;
  _$jscoverage['jquery.js'][6709] = 0;
  _$jscoverage['jquery.js'][6710] = 0;
  _$jscoverage['jquery.js'][6714] = 0;
  _$jscoverage['jquery.js'][6716] = 0;
  _$jscoverage['jquery.js'][6718] = 0;
  _$jscoverage['jquery.js'][6719] = 0;
  _$jscoverage['jquery.js'][6722] = 0;
  _$jscoverage['jquery.js'][6723] = 0;
  _$jscoverage['jquery.js'][6725] = 0;
  _$jscoverage['jquery.js'][6727] = 0;
  _$jscoverage['jquery.js'][6731] = 0;
  _$jscoverage['jquery.js'][6733] = 0;
  _$jscoverage['jquery.js'][6736] = 0;
  _$jscoverage['jquery.js'][6740] = 0;
  _$jscoverage['jquery.js'][6742] = 0;
  _$jscoverage['jquery.js'][6749] = 0;
  _$jscoverage['jquery.js'][6752] = 0;
  _$jscoverage['jquery.js'][6759] = 0;
  _$jscoverage['jquery.js'][6760] = 0;
  _$jscoverage['jquery.js'][6761] = 0;
  _$jscoverage['jquery.js'][6764] = 0;
  _$jscoverage['jquery.js'][6766] = 0;
  _$jscoverage['jquery.js'][6774] = 0;
  _$jscoverage['jquery.js'][6776] = 0;
  _$jscoverage['jquery.js'][6777] = 0;
  _$jscoverage['jquery.js'][6782] = 0;
  _$jscoverage['jquery.js'][6784] = 0;
  _$jscoverage['jquery.js'][6787] = 0;
  _$jscoverage['jquery.js'][6792] = 0;
  _$jscoverage['jquery.js'][6795] = 0;
  _$jscoverage['jquery.js'][6800] = 0;
  _$jscoverage['jquery.js'][6805] = 0;
  _$jscoverage['jquery.js'][6806] = 0;
  _$jscoverage['jquery.js'][6807] = 0;
  _$jscoverage['jquery.js'][6808] = 0;
  _$jscoverage['jquery.js'][6810] = 0;
  _$jscoverage['jquery.js'][6813] = 0;
  _$jscoverage['jquery.js'][6818] = 0;
  _$jscoverage['jquery.js'][6819] = 0;
  _$jscoverage['jquery.js'][6820] = 0;
  _$jscoverage['jquery.js'][6822] = 0;
  _$jscoverage['jquery.js'][6826] = 0;
  _$jscoverage['jquery.js'][6827] = 0;
  _$jscoverage['jquery.js'][6833] = 0;
  _$jscoverage['jquery.js'][6834] = 0;
  _$jscoverage['jquery.js'][6835] = 0;
  _$jscoverage['jquery.js'][6836] = 0;
  _$jscoverage['jquery.js'][6839] = 0;
  _$jscoverage['jquery.js'][6840] = 0;
  _$jscoverage['jquery.js'][6843] = 0;
  _$jscoverage['jquery.js'][6846] = 0;
  _$jscoverage['jquery.js'][6847] = 0;
  _$jscoverage['jquery.js'][6851] = 0;
  _$jscoverage['jquery.js'][6852] = 0;
  _$jscoverage['jquery.js'][6855] = 0;
  _$jscoverage['jquery.js'][6860] = 0;
  _$jscoverage['jquery.js'][6861] = 0;
  _$jscoverage['jquery.js'][6870] = 0;
  _$jscoverage['jquery.js'][6871] = 0;
  _$jscoverage['jquery.js'][6872] = 0;
  _$jscoverage['jquery.js'][6873] = 0;
  _$jscoverage['jquery.js'][6874] = 0;
  _$jscoverage['jquery.js'][6875] = 0;
  _$jscoverage['jquery.js'][6876] = 0;
  _$jscoverage['jquery.js'][6877] = 0;
  _$jscoverage['jquery.js'][6881] = 0;
  _$jscoverage['jquery.js'][6883] = 0;
  _$jscoverage['jquery.js'][6886] = 0;
  _$jscoverage['jquery.js'][6887] = 0;
  _$jscoverage['jquery.js'][6888] = 0;
  _$jscoverage['jquery.js'][6889] = 0;
  _$jscoverage['jquery.js'][6896] = 0;
  _$jscoverage['jquery.js'][6897] = 0;
  _$jscoverage['jquery.js'][6898] = 0;
  _$jscoverage['jquery.js'][6899] = 0;
  _$jscoverage['jquery.js'][6900] = 0;
  _$jscoverage['jquery.js'][6901] = 0;
  _$jscoverage['jquery.js'][6905] = 0;
  _$jscoverage['jquery.js'][6906] = 0;
  _$jscoverage['jquery.js'][6910] = 0;
  _$jscoverage['jquery.js'][6913] = 0;
  _$jscoverage['jquery.js'][6918] = 0;
  _$jscoverage['jquery.js'][6919] = 0;
  _$jscoverage['jquery.js'][6920] = 0;
  _$jscoverage['jquery.js'][6924] = 0;
  _$jscoverage['jquery.js'][6930] = 0;
  _$jscoverage['jquery.js'][6933] = 0;
  _$jscoverage['jquery.js'][6934] = 0;
  _$jscoverage['jquery.js'][6935] = 0;
  _$jscoverage['jquery.js'][6937] = 0;
  _$jscoverage['jquery.js'][6938] = 0;
  _$jscoverage['jquery.js'][6939] = 0;
  _$jscoverage['jquery.js'][6940] = 0;
  _$jscoverage['jquery.js'][6944] = 0;
  _$jscoverage['jquery.js'][6945] = 0;
  _$jscoverage['jquery.js'][6946] = 0;
  _$jscoverage['jquery.js'][6947] = 0;
  _$jscoverage['jquery.js'][6952] = 0;
  _$jscoverage['jquery.js'][6953] = 0;
  _$jscoverage['jquery.js'][6956] = 0;
  _$jscoverage['jquery.js'][6957] = 0;
  _$jscoverage['jquery.js'][6958] = 0;
  _$jscoverage['jquery.js'][6960] = 0;
  _$jscoverage['jquery.js'][6961] = 0;
  _$jscoverage['jquery.js'][6962] = 0;
  _$jscoverage['jquery.js'][6965] = 0;
  _$jscoverage['jquery.js'][6970] = 0;
  _$jscoverage['jquery.js'][6971] = 0;
  _$jscoverage['jquery.js'][6972] = 0;
  _$jscoverage['jquery.js'][6973] = 0;
  _$jscoverage['jquery.js'][6974] = 0;
  _$jscoverage['jquery.js'][6975] = 0;
  _$jscoverage['jquery.js'][6980] = 0;
  _$jscoverage['jquery.js'][6981] = 0;
  _$jscoverage['jquery.js'][6984] = 0;
  _$jscoverage['jquery.js'][6985] = 0;
  _$jscoverage['jquery.js'][6986] = 0;
  _$jscoverage['jquery.js'][6987] = 0;
  _$jscoverage['jquery.js'][6990] = 0;
  _$jscoverage['jquery.js'][6994] = 0;
  _$jscoverage['jquery.js'][6995] = 0;
  _$jscoverage['jquery.js'][6999] = 0;
  _$jscoverage['jquery.js'][7000] = 0;
  _$jscoverage['jquery.js'][7005] = 0;
  _$jscoverage['jquery.js'][7010] = 0;
  _$jscoverage['jquery.js'][7011] = 0;
  _$jscoverage['jquery.js'][7013] = 0;
  _$jscoverage['jquery.js'][7014] = 0;
  _$jscoverage['jquery.js'][7015] = 0;
  _$jscoverage['jquery.js'][7021] = 0;
  _$jscoverage['jquery.js'][7022] = 0;
  _$jscoverage['jquery.js'][7023] = 0;
  _$jscoverage['jquery.js'][7024] = 0;
  _$jscoverage['jquery.js'][7025] = 0;
  _$jscoverage['jquery.js'][7026] = 0;
  _$jscoverage['jquery.js'][7032] = 0;
  _$jscoverage['jquery.js'][7033] = 0;
  _$jscoverage['jquery.js'][7036] = 0;
  _$jscoverage['jquery.js'][7037] = 0;
  _$jscoverage['jquery.js'][7038] = 0;
  _$jscoverage['jquery.js'][7039] = 0;
  _$jscoverage['jquery.js'][7040] = 0;
  _$jscoverage['jquery.js'][7041] = 0;
  _$jscoverage['jquery.js'][7042] = 0;
  _$jscoverage['jquery.js'][7045] = 0;
  _$jscoverage['jquery.js'][7046] = 0;
  _$jscoverage['jquery.js'][7047] = 0;
  _$jscoverage['jquery.js'][7050] = 0;
  _$jscoverage['jquery.js'][7051] = 0;
  _$jscoverage['jquery.js'][7052] = 0;
  _$jscoverage['jquery.js'][7053] = 0;
  _$jscoverage['jquery.js'][7057] = 0;
  _$jscoverage['jquery.js'][7058] = 0;
  _$jscoverage['jquery.js'][7059] = 0;
  _$jscoverage['jquery.js'][7060] = 0;
  _$jscoverage['jquery.js'][7064] = 0;
  _$jscoverage['jquery.js'][7069] = 0;
  _$jscoverage['jquery.js'][7070] = 0;
  _$jscoverage['jquery.js'][7077] = 0;
  _$jscoverage['jquery.js'][7080] = 0;
  _$jscoverage['jquery.js'][7081] = 0;
  _$jscoverage['jquery.js'][7083] = 0;
  _$jscoverage['jquery.js'][7093] = 0;
  _$jscoverage['jquery.js'][7094] = 0;
  _$jscoverage['jquery.js'][7097] = 0;
  _$jscoverage['jquery.js'][7100] = 0;
  _$jscoverage['jquery.js'][7101] = 0;
  _$jscoverage['jquery.js'][7105] = 0;
  _$jscoverage['jquery.js'][7106] = 0;
  _$jscoverage['jquery.js'][7110] = 0;
  _$jscoverage['jquery.js'][7111] = 0;
  _$jscoverage['jquery.js'][7126] = 0;
  _$jscoverage['jquery.js'][7128] = 0;
  _$jscoverage['jquery.js'][7129] = 0;
  _$jscoverage['jquery.js'][7132] = 0;
  _$jscoverage['jquery.js'][7137] = 0;
  _$jscoverage['jquery.js'][7138] = 0;
  _$jscoverage['jquery.js'][7140] = 0;
  _$jscoverage['jquery.js'][7141] = 0;
  _$jscoverage['jquery.js'][7142] = 0;
  _$jscoverage['jquery.js'][7146] = 0;
  _$jscoverage['jquery.js'][7147] = 0;
  _$jscoverage['jquery.js'][7148] = 0;
  _$jscoverage['jquery.js'][7150] = 0;
  _$jscoverage['jquery.js'][7152] = 0;
  _$jscoverage['jquery.js'][7157] = 0;
  _$jscoverage['jquery.js'][7159] = 0;
  _$jscoverage['jquery.js'][7160] = 0;
  _$jscoverage['jquery.js'][7161] = 0;
  _$jscoverage['jquery.js'][7162] = 0;
  _$jscoverage['jquery.js'][7163] = 0;
  _$jscoverage['jquery.js'][7166] = 0;
  _$jscoverage['jquery.js'][7170] = 0;
  _$jscoverage['jquery.js'][7172] = 0;
  _$jscoverage['jquery.js'][7173] = 0;
  _$jscoverage['jquery.js'][7177] = 0;
  _$jscoverage['jquery.js'][7183] = 0;
  _$jscoverage['jquery.js'][7191] = 0;
  _$jscoverage['jquery.js'][7194] = 0;
  _$jscoverage['jquery.js'][7198] = 0;
  _$jscoverage['jquery.js'][7199] = 0;
  _$jscoverage['jquery.js'][7200] = 0;
  _$jscoverage['jquery.js'][7205] = 0;
  _$jscoverage['jquery.js'][7206] = 0;
  _$jscoverage['jquery.js'][7207] = 0;
  _$jscoverage['jquery.js'][7209] = 0;
  _$jscoverage['jquery.js'][7212] = 0;
  _$jscoverage['jquery.js'][7216] = 0;
  _$jscoverage['jquery.js'][7217] = 0;
  _$jscoverage['jquery.js'][7218] = 0;
  _$jscoverage['jquery.js'][7219] = 0;
  _$jscoverage['jquery.js'][7226] = 0;
  _$jscoverage['jquery.js'][7227] = 0;
  _$jscoverage['jquery.js'][7229] = 0;
  _$jscoverage['jquery.js'][7234] = 0;
  _$jscoverage['jquery.js'][7235] = 0;
  _$jscoverage['jquery.js'][7243] = 0;
  _$jscoverage['jquery.js'][7244] = 0;
  _$jscoverage['jquery.js'][7247] = 0;
  _$jscoverage['jquery.js'][7248] = 0;
  _$jscoverage['jquery.js'][7249] = 0;
  _$jscoverage['jquery.js'][7252] = 0;
  _$jscoverage['jquery.js'][7258] = 0;
  _$jscoverage['jquery.js'][7259] = 0;
  _$jscoverage['jquery.js'][7263] = 0;
  _$jscoverage['jquery.js'][7265] = 0;
  _$jscoverage['jquery.js'][7266] = 0;
  _$jscoverage['jquery.js'][7267] = 0;
  _$jscoverage['jquery.js'][7270] = 0;
  _$jscoverage['jquery.js'][7271] = 0;
  _$jscoverage['jquery.js'][7275] = 0;
  _$jscoverage['jquery.js'][7278] = 0;
  _$jscoverage['jquery.js'][7282] = 0;
  _$jscoverage['jquery.js'][7288] = 0;
  _$jscoverage['jquery.js'][7293] = 0;
  _$jscoverage['jquery.js'][7296] = 0;
  _$jscoverage['jquery.js'][7297] = 0;
  _$jscoverage['jquery.js'][7300] = 0;
  _$jscoverage['jquery.js'][7302] = 0;
  _$jscoverage['jquery.js'][7307] = 0;
  _$jscoverage['jquery.js'][7308] = 0;
  _$jscoverage['jquery.js'][7309] = 0;
  _$jscoverage['jquery.js'][7310] = 0;
  _$jscoverage['jquery.js'][7313] = 0;
  _$jscoverage['jquery.js'][7314] = 0;
  _$jscoverage['jquery.js'][7315] = 0;
  _$jscoverage['jquery.js'][7316] = 0;
  _$jscoverage['jquery.js'][7318] = 0;
  _$jscoverage['jquery.js'][7319] = 0;
  _$jscoverage['jquery.js'][7322] = 0;
  _$jscoverage['jquery.js'][7323] = 0;
  _$jscoverage['jquery.js'][7328] = 0;
  _$jscoverage['jquery.js'][7329] = 0;
  _$jscoverage['jquery.js'][7330] = 0;
  _$jscoverage['jquery.js'][7333] = 0;
  _$jscoverage['jquery.js'][7334] = 0;
  _$jscoverage['jquery.js'][7335] = 0;
  _$jscoverage['jquery.js'][7340] = 0;
  _$jscoverage['jquery.js'][7341] = 0;
  _$jscoverage['jquery.js'][7344] = 0;
  _$jscoverage['jquery.js'][7345] = 0;
  _$jscoverage['jquery.js'][7346] = 0;
  _$jscoverage['jquery.js'][7353] = 0;
  _$jscoverage['jquery.js'][7354] = 0;
  _$jscoverage['jquery.js'][7359] = 0;
  _$jscoverage['jquery.js'][7360] = 0;
  _$jscoverage['jquery.js'][7362] = 0;
  _$jscoverage['jquery.js'][7363] = 0;
  _$jscoverage['jquery.js'][7371] = 0;
  _$jscoverage['jquery.js'][7374] = 0;
  _$jscoverage['jquery.js'][7376] = 0;
  _$jscoverage['jquery.js'][7377] = 0;
  _$jscoverage['jquery.js'][7381] = 0;
  _$jscoverage['jquery.js'][7382] = 0;
  _$jscoverage['jquery.js'][7383] = 0;
  _$jscoverage['jquery.js'][7384] = 0;
  _$jscoverage['jquery.js'][7389] = 0;
  _$jscoverage['jquery.js'][7390] = 0;
  _$jscoverage['jquery.js'][7391] = 0;
  _$jscoverage['jquery.js'][7396] = 0;
  _$jscoverage['jquery.js'][7401] = 0;
  _$jscoverage['jquery.js'][7402] = 0;
  _$jscoverage['jquery.js'][7403] = 0;
  _$jscoverage['jquery.js'][7404] = 0;
  _$jscoverage['jquery.js'][7411] = 0;
  _$jscoverage['jquery.js'][7419] = 0;
  _$jscoverage['jquery.js'][7420] = 0;
  _$jscoverage['jquery.js'][7424] = 0;
  _$jscoverage['jquery.js'][7425] = 0;
  _$jscoverage['jquery.js'][7426] = 0;
  _$jscoverage['jquery.js'][7430] = 0;
  _$jscoverage['jquery.js'][7432] = 0;
  _$jscoverage['jquery.js'][7433] = 0;
  _$jscoverage['jquery.js'][7436] = 0;
  _$jscoverage['jquery.js'][7437] = 0;
  _$jscoverage['jquery.js'][7441] = 0;
  _$jscoverage['jquery.js'][7442] = 0;
  _$jscoverage['jquery.js'][7444] = 0;
  _$jscoverage['jquery.js'][7447] = 0;
  _$jscoverage['jquery.js'][7448] = 0;
  _$jscoverage['jquery.js'][7449] = 0;
  _$jscoverage['jquery.js'][7452] = 0;
  _$jscoverage['jquery.js'][7453] = 0;
  _$jscoverage['jquery.js'][7454] = 0;
  _$jscoverage['jquery.js'][7455] = 0;
  _$jscoverage['jquery.js'][7458] = 0;
  _$jscoverage['jquery.js'][7459] = 0;
  _$jscoverage['jquery.js'][7462] = 0;
  _$jscoverage['jquery.js'][7463] = 0;
  _$jscoverage['jquery.js'][7466] = 0;
  _$jscoverage['jquery.js'][7477] = 0;
  _$jscoverage['jquery.js'][7478] = 0;
  _$jscoverage['jquery.js'][7479] = 0;
  _$jscoverage['jquery.js'][7481] = 0;
  _$jscoverage['jquery.js'][7482] = 0;
  _$jscoverage['jquery.js'][7483] = 0;
  _$jscoverage['jquery.js'][7484] = 0;
  _$jscoverage['jquery.js'][7490] = 0;
  _$jscoverage['jquery.js'][7491] = 0;
  _$jscoverage['jquery.js'][7495] = 0;
  _$jscoverage['jquery.js'][7499] = 0;
  _$jscoverage['jquery.js'][7503] = 0;
  _$jscoverage['jquery.js'][7507] = 0;
  _$jscoverage['jquery.js'][7508] = 0;
  _$jscoverage['jquery.js'][7509] = 0;
  _$jscoverage['jquery.js'][7510] = 0;
  _$jscoverage['jquery.js'][7514] = 0;
  _$jscoverage['jquery.js'][7517] = 0;
  _$jscoverage['jquery.js'][7519] = 0;
  _$jscoverage['jquery.js'][7523] = 0;
  _$jscoverage['jquery.js'][7524] = 0;
  _$jscoverage['jquery.js'][7529] = 0;
  _$jscoverage['jquery.js'][7531] = 0;
  _$jscoverage['jquery.js'][7535] = 0;
  _$jscoverage['jquery.js'][7536] = 0;
  _$jscoverage['jquery.js'][7540] = 0;
  _$jscoverage['jquery.js'][7541] = 0;
  _$jscoverage['jquery.js'][7546] = 0;
  _$jscoverage['jquery.js'][7547] = 0;
  _$jscoverage['jquery.js'][7551] = 0;
  _$jscoverage['jquery.js'][7552] = 0;
  _$jscoverage['jquery.js'][7553] = 0;
  _$jscoverage['jquery.js'][7554] = 0;
  _$jscoverage['jquery.js'][7557] = 0;
  _$jscoverage['jquery.js'][7559] = 0;
  _$jscoverage['jquery.js'][7562] = 0;
  _$jscoverage['jquery.js'][7563] = 0;
  _$jscoverage['jquery.js'][7566] = 0;
  _$jscoverage['jquery.js'][7567] = 0;
  _$jscoverage['jquery.js'][7570] = 0;
  _$jscoverage['jquery.js'][7573] = 0;
  _$jscoverage['jquery.js'][7579] = 0;
  _$jscoverage['jquery.js'][7581] = 0;
  _$jscoverage['jquery.js'][7582] = 0;
  _$jscoverage['jquery.js'][7583] = 0;
  _$jscoverage['jquery.js'][7584] = 0;
  _$jscoverage['jquery.js'][7586] = 0;
  _$jscoverage['jquery.js'][7593] = 0;
  _$jscoverage['jquery.js'][7600] = 0;
  _$jscoverage['jquery.js'][7601] = 0;
  _$jscoverage['jquery.js'][7602] = 0;
  _$jscoverage['jquery.js'][7609] = 0;
  _$jscoverage['jquery.js'][7611] = 0;
  _$jscoverage['jquery.js'][7614] = 0;
  _$jscoverage['jquery.js'][7616] = 0;
  _$jscoverage['jquery.js'][7618] = 0;
  _$jscoverage['jquery.js'][7622] = 0;
  _$jscoverage['jquery.js'][7623] = 0;
  _$jscoverage['jquery.js'][7625] = 0;
  _$jscoverage['jquery.js'][7626] = 0;
  _$jscoverage['jquery.js'][7629] = 0;
  _$jscoverage['jquery.js'][7632] = 0;
  _$jscoverage['jquery.js'][7633] = 0;
  _$jscoverage['jquery.js'][7634] = 0;
  _$jscoverage['jquery.js'][7637] = 0;
  _$jscoverage['jquery.js'][7639] = 0;
  _$jscoverage['jquery.js'][7646] = 0;
  _$jscoverage['jquery.js'][7649] = 0;
  _$jscoverage['jquery.js'][7651] = 0;
  _$jscoverage['jquery.js'][7655] = 0;
  _$jscoverage['jquery.js'][7656] = 0;
  _$jscoverage['jquery.js'][7661] = 0;
  _$jscoverage['jquery.js'][7663] = 0;
  _$jscoverage['jquery.js'][7667] = 0;
  _$jscoverage['jquery.js'][7668] = 0;
  _$jscoverage['jquery.js'][7671] = 0;
  _$jscoverage['jquery.js'][7674] = 0;
  _$jscoverage['jquery.js'][7675] = 0;
  _$jscoverage['jquery.js'][7678] = 0;
  _$jscoverage['jquery.js'][7679] = 0;
  _$jscoverage['jquery.js'][7681] = 0;
  _$jscoverage['jquery.js'][7684] = 0;
  _$jscoverage['jquery.js'][7687] = 0;
  _$jscoverage['jquery.js'][7688] = 0;
  _$jscoverage['jquery.js'][7691] = 0;
  _$jscoverage['jquery.js'][7703] = 0;
  _$jscoverage['jquery.js'][7705] = 0;
  _$jscoverage['jquery.js'][7706] = 0;
  _$jscoverage['jquery.js'][7709] = 0;
  _$jscoverage['jquery.js'][7714] = 0;
  _$jscoverage['jquery.js'][7717] = 0;
  _$jscoverage['jquery.js'][7736] = 0;
  _$jscoverage['jquery.js'][7737] = 0;
  _$jscoverage['jquery.js'][7742] = 0;
  _$jscoverage['jquery.js'][7743] = 0;
  _$jscoverage['jquery.js'][7744] = 0;
  _$jscoverage['jquery.js'][7746] = 0;
  _$jscoverage['jquery.js'][7752] = 0;
  _$jscoverage['jquery.js'][7753] = 0;
  _$jscoverage['jquery.js'][7754] = 0;
  _$jscoverage['jquery.js'][7756] = 0;
  _$jscoverage['jquery.js'][7757] = 0;
  _$jscoverage['jquery.js'][7764] = 0;
  _$jscoverage['jquery.js'][7776] = 0;
  _$jscoverage['jquery.js'][7784] = 0;
  _$jscoverage['jquery.js'][7785] = 0;
  _$jscoverage['jquery.js'][7786] = 0;
  _$jscoverage['jquery.js'][7790] = 0;
  _$jscoverage['jquery.js'][7791] = 0;
  _$jscoverage['jquery.js'][7794] = 0;
  _$jscoverage['jquery.js'][7795] = 0;
  _$jscoverage['jquery.js'][7796] = 0;
  _$jscoverage['jquery.js'][7798] = 0;
  _$jscoverage['jquery.js'][7799] = 0;
  _$jscoverage['jquery.js'][7801] = 0;
  _$jscoverage['jquery.js'][7804] = 0;
  _$jscoverage['jquery.js'][7806] = 0;
  _$jscoverage['jquery.js'][7809] = 0;
  _$jscoverage['jquery.js'][7810] = 0;
  _$jscoverage['jquery.js'][7811] = 0;
  _$jscoverage['jquery.js'][7815] = 0;
  _$jscoverage['jquery.js'][7817] = 0;
  _$jscoverage['jquery.js'][7818] = 0;
  _$jscoverage['jquery.js'][7819] = 0;
  _$jscoverage['jquery.js'][7820] = 0;
  _$jscoverage['jquery.js'][7822] = 0;
  _$jscoverage['jquery.js'][7823] = 0;
  _$jscoverage['jquery.js'][7824] = 0;
  _$jscoverage['jquery.js'][7825] = 0;
  _$jscoverage['jquery.js'][7826] = 0;
  _$jscoverage['jquery.js'][7831] = 0;
  _$jscoverage['jquery.js'][7832] = 0;
  _$jscoverage['jquery.js'][7833] = 0;
  _$jscoverage['jquery.js'][7839] = 0;
  _$jscoverage['jquery.js'][7843] = 0;
  _$jscoverage['jquery.js'][7846] = 0;
  _$jscoverage['jquery.js'][7847] = 0;
  _$jscoverage['jquery.js'][7848] = 0;
  _$jscoverage['jquery.js'][7852] = 0;
  _$jscoverage['jquery.js'][7853] = 0;
  _$jscoverage['jquery.js'][7856] = 0;
  _$jscoverage['jquery.js'][7858] = 0;
  _$jscoverage['jquery.js'][7859] = 0;
  _$jscoverage['jquery.js'][7860] = 0;
  _$jscoverage['jquery.js'][7863] = 0;
  _$jscoverage['jquery.js'][7865] = 0;
  _$jscoverage['jquery.js'][7866] = 0;
  _$jscoverage['jquery.js'][7867] = 0;
  _$jscoverage['jquery.js'][7870] = 0;
  _$jscoverage['jquery.js'][7871] = 0;
  _$jscoverage['jquery.js'][7876] = 0;
  _$jscoverage['jquery.js'][7877] = 0;
  _$jscoverage['jquery.js'][7878] = 0;
  _$jscoverage['jquery.js'][7884] = 0;
  _$jscoverage['jquery.js'][7888] = 0;
  _$jscoverage['jquery.js'][7891] = 0;
  _$jscoverage['jquery.js'][7892] = 0;
  _$jscoverage['jquery.js'][7895] = 0;
  _$jscoverage['jquery.js'][7896] = 0;
  _$jscoverage['jquery.js'][7897] = 0;
  _$jscoverage['jquery.js'][7904] = 0;
  _$jscoverage['jquery.js'][7905] = 0;
  _$jscoverage['jquery.js'][7907] = 0;
  _$jscoverage['jquery.js'][7910] = 0;
  _$jscoverage['jquery.js'][7911] = 0;
  _$jscoverage['jquery.js'][7912] = 0;
  _$jscoverage['jquery.js'][7914] = 0;
  _$jscoverage['jquery.js'][7917] = 0;
  _$jscoverage['jquery.js'][7918] = 0;
  _$jscoverage['jquery.js'][7920] = 0;
  _$jscoverage['jquery.js'][7925] = 0;
  _$jscoverage['jquery.js'][7926] = 0;
  _$jscoverage['jquery.js'][7927] = 0;
  _$jscoverage['jquery.js'][7930] = 0;
  _$jscoverage['jquery.js'][7937] = 0;
  _$jscoverage['jquery.js'][7938] = 0;
  _$jscoverage['jquery.js'][7949] = 0;
  _$jscoverage['jquery.js'][7952] = 0;
  _$jscoverage['jquery.js'][7953] = 0;
  _$jscoverage['jquery.js'][7954] = 0;
  _$jscoverage['jquery.js'][7956] = 0;
  _$jscoverage['jquery.js'][7960] = 0;
  _$jscoverage['jquery.js'][7967] = 0;
  _$jscoverage['jquery.js'][7969] = 0;
  _$jscoverage['jquery.js'][7971] = 0;
  _$jscoverage['jquery.js'][7974] = 0;
  _$jscoverage['jquery.js'][7975] = 0;
  _$jscoverage['jquery.js'][7976] = 0;
  _$jscoverage['jquery.js'][7979] = 0;
  _$jscoverage['jquery.js'][7983] = 0;
  _$jscoverage['jquery.js'][7986] = 0;
  _$jscoverage['jquery.js'][7989] = 0;
  _$jscoverage['jquery.js'][7990] = 0;
  _$jscoverage['jquery.js'][7994] = 0;
  _$jscoverage['jquery.js'][7997] = 0;
  _$jscoverage['jquery.js'][8000] = 0;
  _$jscoverage['jquery.js'][8002] = 0;
  _$jscoverage['jquery.js'][8003] = 0;
  _$jscoverage['jquery.js'][8005] = 0;
  _$jscoverage['jquery.js'][8006] = 0;
  _$jscoverage['jquery.js'][8009] = 0;
  _$jscoverage['jquery.js'][8010] = 0;
  _$jscoverage['jquery.js'][8012] = 0;
  _$jscoverage['jquery.js'][8016] = 0;
  _$jscoverage['jquery.js'][8017] = 0;
  _$jscoverage['jquery.js'][8019] = 0;
  _$jscoverage['jquery.js'][8020] = 0;
  _$jscoverage['jquery.js'][8022] = 0;
  _$jscoverage['jquery.js'][8023] = 0;
  _$jscoverage['jquery.js'][8024] = 0;
  _$jscoverage['jquery.js'][8028] = 0;
  _$jscoverage['jquery.js'][8031] = 0;
  _$jscoverage['jquery.js'][8032] = 0;
  _$jscoverage['jquery.js'][8038] = 0;
  _$jscoverage['jquery.js'][8043] = 0;
  _$jscoverage['jquery.js'][8044] = 0;
  _$jscoverage['jquery.js'][8056] = 0;
  _$jscoverage['jquery.js'][8063] = 0;
  _$jscoverage['jquery.js'][8064] = 0;
  _$jscoverage['jquery.js'][8067] = 0;
  _$jscoverage['jquery.js'][8071] = 0;
  _$jscoverage['jquery.js'][8072] = 0;
  _$jscoverage['jquery.js'][8076] = 0;
  _$jscoverage['jquery.js'][8084] = 0;
  _$jscoverage['jquery.js'][8087] = 0;
  _$jscoverage['jquery.js'][8088] = 0;
  _$jscoverage['jquery.js'][8092] = 0;
  _$jscoverage['jquery.js'][8096] = 0;
  _$jscoverage['jquery.js'][8100] = 0;
  _$jscoverage['jquery.js'][8105] = 0;
  _$jscoverage['jquery.js'][8106] = 0;
  _$jscoverage['jquery.js'][8110] = 0;
  _$jscoverage['jquery.js'][8113] = 0;
  _$jscoverage['jquery.js'][8120] = 0;
  _$jscoverage['jquery.js'][8121] = 0;
  _$jscoverage['jquery.js'][8123] = 0;
  _$jscoverage['jquery.js'][8130] = 0;
  _$jscoverage['jquery.js'][8131] = 0;
  _$jscoverage['jquery.js'][8133] = 0;
  _$jscoverage['jquery.js'][8134] = 0;
  _$jscoverage['jquery.js'][8138] = 0;
  _$jscoverage['jquery.js'][8139] = 0;
  _$jscoverage['jquery.js'][8140] = 0;
  _$jscoverage['jquery.js'][8151] = 0;
  _$jscoverage['jquery.js'][8154] = 0;
  _$jscoverage['jquery.js'][8156] = 0;
  _$jscoverage['jquery.js'][8159] = 0;
  _$jscoverage['jquery.js'][8163] = 0;
  _$jscoverage['jquery.js'][8168] = 0;
  _$jscoverage['jquery.js'][8171] = 0;
  _$jscoverage['jquery.js'][8172] = 0;
  _$jscoverage['jquery.js'][8176] = 0;
  _$jscoverage['jquery.js'][8177] = 0;
  _$jscoverage['jquery.js'][8180] = 0;
  _$jscoverage['jquery.js'][8183] = 0;
  _$jscoverage['jquery.js'][8184] = 0;
  _$jscoverage['jquery.js'][8185] = 0;
  _$jscoverage['jquery.js'][8187] = 0;
  _$jscoverage['jquery.js'][8190] = 0;
  _$jscoverage['jquery.js'][8195] = 0;
  _$jscoverage['jquery.js'][8196] = 0;
  _$jscoverage['jquery.js'][8197] = 0;
  _$jscoverage['jquery.js'][8202] = 0;
  _$jscoverage['jquery.js'][8203] = 0;
  _$jscoverage['jquery.js'][8204] = 0;
  _$jscoverage['jquery.js'][8208] = 0;
  _$jscoverage['jquery.js'][8213] = 0;
  _$jscoverage['jquery.js'][8214] = 0;
  _$jscoverage['jquery.js'][8215] = 0;
  _$jscoverage['jquery.js'][8220] = 0;
  _$jscoverage['jquery.js'][8222] = 0;
  _$jscoverage['jquery.js'][8223] = 0;
  _$jscoverage['jquery.js'][8224] = 0;
  _$jscoverage['jquery.js'][8226] = 0;
  _$jscoverage['jquery.js'][8227] = 0;
  _$jscoverage['jquery.js'][8228] = 0;
  _$jscoverage['jquery.js'][8232] = 0;
  _$jscoverage['jquery.js'][8233] = 0;
  _$jscoverage['jquery.js'][8238] = 0;
  _$jscoverage['jquery.js'][8239] = 0;
  _$jscoverage['jquery.js'][8240] = 0;
  _$jscoverage['jquery.js'][8241] = 0;
  _$jscoverage['jquery.js'][8246] = 0;
  _$jscoverage['jquery.js'][8248] = 0;
  _$jscoverage['jquery.js'][8249] = 0;
  _$jscoverage['jquery.js'][8253] = 0;
  _$jscoverage['jquery.js'][8254] = 0;
  _$jscoverage['jquery.js'][8255] = 0;
  _$jscoverage['jquery.js'][8256] = 0;
  _$jscoverage['jquery.js'][8257] = 0;
  _$jscoverage['jquery.js'][8261] = 0;
  _$jscoverage['jquery.js'][8264] = 0;
  _$jscoverage['jquery.js'][8266] = 0;
  _$jscoverage['jquery.js'][8272] = 0;
  _$jscoverage['jquery.js'][8275] = 0;
  _$jscoverage['jquery.js'][8277] = 0;
  _$jscoverage['jquery.js'][8278] = 0;
  _$jscoverage['jquery.js'][8282] = 0;
  _$jscoverage['jquery.js'][8284] = 0;
  _$jscoverage['jquery.js'][8285] = 0;
  _$jscoverage['jquery.js'][8288] = 0;
  _$jscoverage['jquery.js'][8290] = 0;
  _$jscoverage['jquery.js'][8291] = 0;
  _$jscoverage['jquery.js'][8294] = 0;
  _$jscoverage['jquery.js'][8296] = 0;
  _$jscoverage['jquery.js'][8297] = 0;
  _$jscoverage['jquery.js'][8303] = 0;
  _$jscoverage['jquery.js'][8309] = 0;
  _$jscoverage['jquery.js'][8318] = 0;
  _$jscoverage['jquery.js'][8323] = 0;
  _$jscoverage['jquery.js'][8326] = 0;
  _$jscoverage['jquery.js'][8327] = 0;
  _$jscoverage['jquery.js'][8331] = 0;
  _$jscoverage['jquery.js'][8332] = 0;
  _$jscoverage['jquery.js'][8333] = 0;
  _$jscoverage['jquery.js'][8347] = 0;
  _$jscoverage['jquery.js'][8348] = 0;
  _$jscoverage['jquery.js'][8351] = 0;
  _$jscoverage['jquery.js'][8352] = 0;
  _$jscoverage['jquery.js'][8355] = 0;
  _$jscoverage['jquery.js'][8357] = 0;
  _$jscoverage['jquery.js'][8360] = 0;
  _$jscoverage['jquery.js'][8361] = 0;
  _$jscoverage['jquery.js'][8363] = 0;
  _$jscoverage['jquery.js'][8366] = 0;
  _$jscoverage['jquery.js'][8369] = 0;
  _$jscoverage['jquery.js'][8370] = 0;
  _$jscoverage['jquery.js'][8371] = 0;
  _$jscoverage['jquery.js'][8374] = 0;
  _$jscoverage['jquery.js'][8380] = 0;
  _$jscoverage['jquery.js'][8382] = 0;
  _$jscoverage['jquery.js'][8384] = 0;
  _$jscoverage['jquery.js'][8389] = 0;
  _$jscoverage['jquery.js'][8390] = 0;
  _$jscoverage['jquery.js'][8391] = 0;
  _$jscoverage['jquery.js'][8392] = 0;
  _$jscoverage['jquery.js'][8397] = 0;
  _$jscoverage['jquery.js'][8398] = 0;
  _$jscoverage['jquery.js'][8400] = 0;
  _$jscoverage['jquery.js'][8403] = 0;
  _$jscoverage['jquery.js'][8404] = 0;
  _$jscoverage['jquery.js'][8406] = 0;
  _$jscoverage['jquery.js'][8410] = 0;
  _$jscoverage['jquery.js'][8416] = 0;
  _$jscoverage['jquery.js'][8417] = 0;
  _$jscoverage['jquery.js'][8419] = 0;
  _$jscoverage['jquery.js'][8422] = 0;
  _$jscoverage['jquery.js'][8423] = 0;
  _$jscoverage['jquery.js'][8426] = 0;
  _$jscoverage['jquery.js'][8431] = 0;
  _$jscoverage['jquery.js'][8440] = 0;
  _$jscoverage['jquery.js'][8443] = 0;
  _$jscoverage['jquery.js'][8444] = 0;
  _$jscoverage['jquery.js'][8450] = 0;
  _$jscoverage['jquery.js'][8456] = 0;
  _$jscoverage['jquery.js'][8457] = 0;
  _$jscoverage['jquery.js'][8462] = 0;
  _$jscoverage['jquery.js'][8466] = 0;
  _$jscoverage['jquery.js'][8471] = 0;
  _$jscoverage['jquery.js'][8474] = 0;
  _$jscoverage['jquery.js'][8475] = 0;
  _$jscoverage['jquery.js'][8482] = 0;
  _$jscoverage['jquery.js'][8483] = 0;
  _$jscoverage['jquery.js'][8488] = 0;
  _$jscoverage['jquery.js'][8491] = 0;
  _$jscoverage['jquery.js'][8493] = 0;
  _$jscoverage['jquery.js'][8496] = 0;
  _$jscoverage['jquery.js'][8499] = 0;
  _$jscoverage['jquery.js'][8500] = 0;
  _$jscoverage['jquery.js'][8503] = 0;
  _$jscoverage['jquery.js'][8506] = 0;
  _$jscoverage['jquery.js'][8511] = 0;
  _$jscoverage['jquery.js'][8513] = 0;
  _$jscoverage['jquery.js'][8514] = 0;
  _$jscoverage['jquery.js'][8517] = 0;
  _$jscoverage['jquery.js'][8518] = 0;
  _$jscoverage['jquery.js'][8519] = 0;
  _$jscoverage['jquery.js'][8523] = 0;
  _$jscoverage['jquery.js'][8529] = 0;
  _$jscoverage['jquery.js'][8563] = 0;
  _$jscoverage['jquery.js'][8566] = 0;
  _$jscoverage['jquery.js'][8569] = 0;
  _$jscoverage['jquery.js'][8571] = 0;
  _$jscoverage['jquery.js'][8572] = 0;
  _$jscoverage['jquery.js'][8573] = 0;
  _$jscoverage['jquery.js'][8576] = 0;
  _$jscoverage['jquery.js'][8580] = 0;
  _$jscoverage['jquery.js'][8583] = 0;
  _$jscoverage['jquery.js'][8586] = 0;
  _$jscoverage['jquery.js'][8587] = 0;
  _$jscoverage['jquery.js'][8588] = 0;
  _$jscoverage['jquery.js'][8592] = 0;
  _$jscoverage['jquery.js'][8600] = 0;
  _$jscoverage['jquery.js'][8602] = 0;
  _$jscoverage['jquery.js'][8605] = 0;
  _$jscoverage['jquery.js'][8606] = 0;
  _$jscoverage['jquery.js'][8607] = 0;
  _$jscoverage['jquery.js'][8608] = 0;
  _$jscoverage['jquery.js'][8609] = 0;
  _$jscoverage['jquery.js'][8610] = 0;
  _$jscoverage['jquery.js'][8613] = 0;
  _$jscoverage['jquery.js'][8614] = 0;
  _$jscoverage['jquery.js'][8615] = 0;
  _$jscoverage['jquery.js'][8616] = 0;
  _$jscoverage['jquery.js'][8617] = 0;
  _$jscoverage['jquery.js'][8620] = 0;
  _$jscoverage['jquery.js'][8623] = 0;
  _$jscoverage['jquery.js'][8629] = 0;
  _$jscoverage['jquery.js'][8630] = 0;
  _$jscoverage['jquery.js'][8633] = 0;
  _$jscoverage['jquery.js'][8634] = 0;
  _$jscoverage['jquery.js'][8635] = 0;
  _$jscoverage['jquery.js'][8638] = 0;
  _$jscoverage['jquery.js'][8639] = 0;
  _$jscoverage['jquery.js'][8642] = 0;
  _$jscoverage['jquery.js'][8649] = 0;
  _$jscoverage['jquery.js'][8651] = 0;
  _$jscoverage['jquery.js'][8656] = 0;
  _$jscoverage['jquery.js'][8657] = 0;
  _$jscoverage['jquery.js'][8658] = 0;
  _$jscoverage['jquery.js'][8659] = 0;
  _$jscoverage['jquery.js'][8664] = 0;
  _$jscoverage['jquery.js'][8665] = 0;
  _$jscoverage['jquery.js'][8666] = 0;
  _$jscoverage['jquery.js'][8667] = 0;
  _$jscoverage['jquery.js'][8668] = 0;
  _$jscoverage['jquery.js'][8674] = 0;
  _$jscoverage['jquery.js'][8675] = 0;
  _$jscoverage['jquery.js'][8679] = 0;
  _$jscoverage['jquery.js'][8680] = 0;
  _$jscoverage['jquery.js'][8681] = 0;
  _$jscoverage['jquery.js'][8682] = 0;
  _$jscoverage['jquery.js'][8684] = 0;
  _$jscoverage['jquery.js'][8685] = 0;
  _$jscoverage['jquery.js'][8690] = 0;
  _$jscoverage['jquery.js'][8696] = 0;
  _$jscoverage['jquery.js'][8697] = 0;
  _$jscoverage['jquery.js'][8698] = 0;
  _$jscoverage['jquery.js'][8700] = 0;
  _$jscoverage['jquery.js'][8707] = 0;
  _$jscoverage['jquery.js'][8708] = 0;
  _$jscoverage['jquery.js'][8715] = 0;
  _$jscoverage['jquery.js'][8716] = 0;
  _$jscoverage['jquery.js'][8717] = 0;
  _$jscoverage['jquery.js'][8721] = 0;
  _$jscoverage['jquery.js'][8724] = 0;
  _$jscoverage['jquery.js'][8726] = 0;
  _$jscoverage['jquery.js'][8727] = 0;
  _$jscoverage['jquery.js'][8731] = 0;
  _$jscoverage['jquery.js'][8732] = 0;
  _$jscoverage['jquery.js'][8735] = 0;
  _$jscoverage['jquery.js'][8736] = 0;
  _$jscoverage['jquery.js'][8738] = 0;
  _$jscoverage['jquery.js'][8741] = 0;
  _$jscoverage['jquery.js'][8743] = 0;
  _$jscoverage['jquery.js'][8746] = 0;
  _$jscoverage['jquery.js'][8749] = 0;
  _$jscoverage['jquery.js'][8752] = 0;
  _$jscoverage['jquery.js'][8753] = 0;
  _$jscoverage['jquery.js'][8756] = 0;
  _$jscoverage['jquery.js'][8757] = 0;
  _$jscoverage['jquery.js'][8760] = 0;
  _$jscoverage['jquery.js'][8762] = 0;
  _$jscoverage['jquery.js'][8765] = 0;
  _$jscoverage['jquery.js'][8766] = 0;
  _$jscoverage['jquery.js'][8769] = 0;
  _$jscoverage['jquery.js'][8770] = 0;
  _$jscoverage['jquery.js'][8771] = 0;
  _$jscoverage['jquery.js'][8773] = 0;
  _$jscoverage['jquery.js'][8780] = 0;
  _$jscoverage['jquery.js'][8783] = 0;
  _$jscoverage['jquery.js'][8784] = 0;
  _$jscoverage['jquery.js'][8786] = 0;
  _$jscoverage['jquery.js'][8787] = 0;
  _$jscoverage['jquery.js'][8789] = 0;
  _$jscoverage['jquery.js'][8800] = 0;
  _$jscoverage['jquery.js'][8803] = 0;
  _$jscoverage['jquery.js'][8884] = 0;
  _$jscoverage['jquery.js'][8900] = 0;
  _$jscoverage['jquery.js'][8901] = 0;
  _$jscoverage['jquery.js'][8902] = 0;
  _$jscoverage['jquery.js'][8906] = 0;
  _$jscoverage['jquery.js'][8908] = 0;
  _$jscoverage['jquery.js'][8967] = 0;
  _$jscoverage['jquery.js'][8968] = 0;
  _$jscoverage['jquery.js'][8969] = 0;
  _$jscoverage['jquery.js'][8970] = 0;
  _$jscoverage['jquery.js'][8971] = 0;
  _$jscoverage['jquery.js'][8972] = 0;
  _$jscoverage['jquery.js'][8975] = 0;
  _$jscoverage['jquery.js'][8977] = 0;
  _$jscoverage['jquery.js'][8982] = 0;
  _$jscoverage['jquery.js'][8987] = 0;
  _$jscoverage['jquery.js'][8988] = 0;
  _$jscoverage['jquery.js'][8990] = 0;
  _$jscoverage['jquery.js'][8992] = 0;
  _$jscoverage['jquery.js'][8997] = 0;
  _$jscoverage['jquery.js'][8998] = 0;
  _$jscoverage['jquery.js'][9000] = 0;
  _$jscoverage['jquery.js'][9005] = 0;
  _$jscoverage['jquery.js'][9006] = 0;
  _$jscoverage['jquery.js'][9007] = 0;
  _$jscoverage['jquery.js'][9010] = 0;
  _$jscoverage['jquery.js'][9014] = 0;
  _$jscoverage['jquery.js'][9015] = 0;
  _$jscoverage['jquery.js'][9019] = 0;
  _$jscoverage['jquery.js'][9024] = 0;
  _$jscoverage['jquery.js'][9025] = 0;
  _$jscoverage['jquery.js'][9026] = 0;
  _$jscoverage['jquery.js'][9028] = 0;
  _$jscoverage['jquery.js'][9029] = 0;
  _$jscoverage['jquery.js'][9034] = 0;
  _$jscoverage['jquery.js'][9039] = 0;
  _$jscoverage['jquery.js'][9043] = 0;
  _$jscoverage['jquery.js'][9046] = 0;
  _$jscoverage['jquery.js'][9049] = 0;
  _$jscoverage['jquery.js'][9050] = 0;
  _$jscoverage['jquery.js'][9055] = 0;
  _$jscoverage['jquery.js'][9056] = 0;
  _$jscoverage['jquery.js'][9060] = 0;
  _$jscoverage['jquery.js'][9061] = 0;
  _$jscoverage['jquery.js'][9067] = 0;
  _$jscoverage['jquery.js'][9072] = 0;
  _$jscoverage['jquery.js'][9073] = 0;
  _$jscoverage['jquery.js'][9077] = 0;
  _$jscoverage['jquery.js'][9080] = 0;
  _$jscoverage['jquery.js'][9081] = 0;
  _$jscoverage['jquery.js'][9086] = 0;
  _$jscoverage['jquery.js'][9089] = 0;
  _$jscoverage['jquery.js'][9090] = 0;
  _$jscoverage['jquery.js'][9094] = 0;
  _$jscoverage['jquery.js'][9097] = 0;
  _$jscoverage['jquery.js'][9102] = 0;
  _$jscoverage['jquery.js'][9105] = 0;
  _$jscoverage['jquery.js'][9108] = 0;
  _$jscoverage['jquery.js'][9111] = 0;
  _$jscoverage['jquery.js'][9112] = 0;
  _$jscoverage['jquery.js'][9115] = 0;
  _$jscoverage['jquery.js'][9119] = 0;
  _$jscoverage['jquery.js'][9120] = 0;
  _$jscoverage['jquery.js'][9121] = 0;
  _$jscoverage['jquery.js'][9125] = 0;
  _$jscoverage['jquery.js'][9128] = 0;
  _$jscoverage['jquery.js'][9130] = 0;
  _$jscoverage['jquery.js'][9134] = 0;
  _$jscoverage['jquery.js'][9135] = 0;
  _$jscoverage['jquery.js'][9136] = 0;
  _$jscoverage['jquery.js'][9138] = 0;
  _$jscoverage['jquery.js'][9139] = 0;
  _$jscoverage['jquery.js'][9144] = 0;
  _$jscoverage['jquery.js'][9145] = 0;
  _$jscoverage['jquery.js'][9149] = 0;
  _$jscoverage['jquery.js'][9158] = 0;
  _$jscoverage['jquery.js'][9159] = 0;
  _$jscoverage['jquery.js'][9163] = 0;
  _$jscoverage['jquery.js'][9167] = 0;
  _$jscoverage['jquery.js'][9171] = 0;
  _$jscoverage['jquery.js'][9174] = 0;
  _$jscoverage['jquery.js'][9175] = 0;
  _$jscoverage['jquery.js'][9176] = 0;
  _$jscoverage['jquery.js'][9179] = 0;
  _$jscoverage['jquery.js'][9182] = 0;
  _$jscoverage['jquery.js'][9183] = 0;
  _$jscoverage['jquery.js'][9185] = 0;
  _$jscoverage['jquery.js'][9188] = 0;
  _$jscoverage['jquery.js'][9189] = 0;
  _$jscoverage['jquery.js'][9193] = 0;
  _$jscoverage['jquery.js'][9194] = 0;
  _$jscoverage['jquery.js'][9198] = 0;
  _$jscoverage['jquery.js'][9199] = 0;
  _$jscoverage['jquery.js'][9200] = 0;
  _$jscoverage['jquery.js'][9204] = 0;
  _$jscoverage['jquery.js'][9205] = 0;
  _$jscoverage['jquery.js'][9206] = 0;
  _$jscoverage['jquery.js'][9210] = 0;
  _$jscoverage['jquery.js'][9211] = 0;
  _$jscoverage['jquery.js'][9215] = 0;
  _$jscoverage['jquery.js'][9220] = 0;
  _$jscoverage['jquery.js'][9221] = 0;
  _$jscoverage['jquery.js'][9225] = 0;
  _$jscoverage['jquery.js'][9226] = 0;
  _$jscoverage['jquery.js'][9229] = 0;
  _$jscoverage['jquery.js'][9232] = 0;
  _$jscoverage['jquery.js'][9233] = 0;
  _$jscoverage['jquery.js'][9238] = 0;
  _$jscoverage['jquery.js'][9241] = 0;
  _$jscoverage['jquery.js'][9244] = 0;
  _$jscoverage['jquery.js'][9247] = 0;
  _$jscoverage['jquery.js'][9250] = 0;
  _$jscoverage['jquery.js'][9251] = 0;
  _$jscoverage['jquery.js'][9255] = 0;
  _$jscoverage['jquery.js'][9258] = 0;
  _$jscoverage['jquery.js'][9261] = 0;
  _$jscoverage['jquery.js'][9262] = 0;
  _$jscoverage['jquery.js'][9263] = 0;
  _$jscoverage['jquery.js'][9264] = 0;
  _$jscoverage['jquery.js'][9266] = 0;
  _$jscoverage['jquery.js'][9267] = 0;
  _$jscoverage['jquery.js'][9268] = 0;
  _$jscoverage['jquery.js'][9273] = 0;
  _$jscoverage['jquery.js'][9274] = 0;
  _$jscoverage['jquery.js'][9277] = 0;
  _$jscoverage['jquery.js'][9278] = 0;
  _$jscoverage['jquery.js'][9282] = 0;
  _$jscoverage['jquery.js'][9283] = 0;
  _$jscoverage['jquery.js'][9284] = 0;
  _$jscoverage['jquery.js'][9285] = 0;
  _$jscoverage['jquery.js'][9290] = 0;
  _$jscoverage['jquery.js'][9291] = 0;
  _$jscoverage['jquery.js'][9292] = 0;
  _$jscoverage['jquery.js'][9293] = 0;
  _$jscoverage['jquery.js'][9294] = 0;
  _$jscoverage['jquery.js'][9300] = 0;
  _$jscoverage['jquery.js'][9301] = 0;
  _$jscoverage['jquery.js'][9304] = 0;
  _$jscoverage['jquery.js'][9305] = 0;
  _$jscoverage['jquery.js'][9307] = 0;
  _$jscoverage['jquery.js'][9311] = 0;
  _$jscoverage['jquery.js'][9312] = 0;
  _$jscoverage['jquery.js'][9314] = 0;
  _$jscoverage['jquery.js'][9315] = 0;
  _$jscoverage['jquery.js'][9320] = 0;
  _$jscoverage['jquery.js'][9322] = 0;
  _$jscoverage['jquery.js'][9323] = 0;
  _$jscoverage['jquery.js'][9326] = 0;
  _$jscoverage['jquery.js'][9327] = 0;
  _$jscoverage['jquery.js'][9332] = 0;
  _$jscoverage['jquery.js'][9336] = 0;
  _$jscoverage['jquery.js'][9340] = 0;
  _$jscoverage['jquery.js'][9344] = 0;
  _$jscoverage['jquery.js'][9345] = 0;
  _$jscoverage['jquery.js'][9348] = 0;
  _$jscoverage['jquery.js'][9349] = 0;
  _$jscoverage['jquery.js'][9350] = 0;
  _$jscoverage['jquery.js'][9351] = 0;
  _$jscoverage['jquery.js'][9355] = 0;
  _$jscoverage['jquery.js'][9366] = 0;
  _$jscoverage['jquery.js'][9367] = 0;
  _$jscoverage['jquery.js'][9381] = 0;
  _$jscoverage['jquery.js'][9383] = 0;
  _$jscoverage['jquery.js'][9385] = 0;
  _$jscoverage['jquery.js'][9386] = 0;
  _$jscoverage['jquery.js'][9387] = 0;
  _$jscoverage['jquery.js'][9391] = 0;
  _$jscoverage['jquery.js'][9393] = 0;
  _$jscoverage['jquery.js'][9394] = 0;
  _$jscoverage['jquery.js'][9397] = 0;
  _$jscoverage['jquery.js'][9398] = 0;
  _$jscoverage['jquery.js'][9400] = 0;
  _$jscoverage['jquery.js'][9401] = 0;
  _$jscoverage['jquery.js'][9404] = 0;
  _$jscoverage['jquery.js'][9408] = 0;
  _$jscoverage['jquery.js'][9412] = 0;
  _$jscoverage['jquery.js'][9413] = 0;
  _$jscoverage['jquery.js'][9414] = 0;
  _$jscoverage['jquery.js'][9418] = 0;
  _$jscoverage['jquery.js'][9419] = 0;
  _$jscoverage['jquery.js'][9422] = 0;
  _$jscoverage['jquery.js'][9423] = 0;
  _$jscoverage['jquery.js'][9426] = 0;
  _$jscoverage['jquery.js'][9432] = 0;
  _$jscoverage['jquery.js'][9434] = 0;
  _$jscoverage['jquery.js'][9435] = 0;
  _$jscoverage['jquery.js'][9440] = 0;
  _$jscoverage['jquery.js'][9441] = 0;
  _$jscoverage['jquery.js'][9443] = 0;
  _$jscoverage['jquery.js'][9448] = 0;
  _$jscoverage['jquery.js'][9449] = 0;
  _$jscoverage['jquery.js'][9451] = 0;
  _$jscoverage['jquery.js'][9452] = 0;
  _$jscoverage['jquery.js'][9458] = 0;
  _$jscoverage['jquery.js'][9459] = 0;
  _$jscoverage['jquery.js'][9460] = 0;
  _$jscoverage['jquery.js'][9464] = 0;
  _$jscoverage['jquery.js'][9475] = 0;
  _$jscoverage['jquery.js'][9476] = 0;
  _$jscoverage['jquery.js'][9478] = 0;
  _$jscoverage['jquery.js'][9479] = 0;
  _$jscoverage['jquery.js'][9482] = 0;
  _$jscoverage['jquery.js'][9483] = 0;
  _$jscoverage['jquery.js'][9485] = 0;
  _$jscoverage['jquery.js'][9488] = 0;
  _$jscoverage['jquery.js'][9497] = 0;
  _$jscoverage['jquery.js'][9498] = 0;
  _$jscoverage['jquery.js'][9499] = 0;
  _$jscoverage['jquery.js'][9504] = 0;
  _$jscoverage['jquery.js'][9505] = 0;
  _$jscoverage['jquery.js'][9513] = 0;
  _$jscoverage['jquery.js'][9514] = 0;
  _$jscoverage['jquery.js'][9518] = 0;
  _$jscoverage['jquery.js'][9519] = 0;
  _$jscoverage['jquery.js'][9523] = 0;
  _$jscoverage['jquery.js'][9524] = 0;
  _$jscoverage['jquery.js'][9525] = 0;
  _$jscoverage['jquery.js'][9526] = 0;
  _$jscoverage['jquery.js'][9530] = 0;
  _$jscoverage['jquery.js'][9531] = 0;
  _$jscoverage['jquery.js'][9532] = 0;
  _$jscoverage['jquery.js'][9537] = 0;
  _$jscoverage['jquery.js'][9538] = 0;
  _$jscoverage['jquery.js'][9540] = 0;
  _$jscoverage['jquery.js'][9548] = 0;
  _$jscoverage['jquery.js'][9567] = 0;
  _$jscoverage['jquery.js'][9568] = 0;
  _$jscoverage['jquery.js'][9573] = 0;
  _$jscoverage['jquery.js'][9574] = 0;
  _$jscoverage['jquery.js'][9576] = 0;
  _$jscoverage['jquery.js'][9579] = 0;
  _$jscoverage['jquery.js'][9585] = 0;
  _$jscoverage['jquery.js'][9586] = 0;
  _$jscoverage['jquery.js'][9587] = 0;
  _$jscoverage['jquery.js'][9595] = 0;
  _$jscoverage['jquery.js'][9597] = 0;
  _$jscoverage['jquery.js'][9600] = 0;
  _$jscoverage['jquery.js'][9604] = 0;
  _$jscoverage['jquery.js'][9605] = 0;
  _$jscoverage['jquery.js'][9611] = 0;
  _$jscoverage['jquery.js'][9612] = 0;
  _$jscoverage['jquery.js'][9623] = 0;
  _$jscoverage['jquery.js'][9624] = 0;
  _$jscoverage['jquery.js'][9625] = 0;
  _$jscoverage['jquery.js'][9630] = 0;
  _$jscoverage['jquery.js'][9640] = 0;
  _$jscoverage['jquery.js'][9641] = 0;
  _$jscoverage['jquery.js'][9647] = 0;
  _$jscoverage['jquery.js'][9648] = 0;
  _$jscoverage['jquery.js'][9649] = 0;
  _$jscoverage['jquery.js'][9651] = 0;
  _$jscoverage['jquery.js'][9652] = 0;
  _$jscoverage['jquery.js'][9657] = 0;
  _$jscoverage['jquery.js'][9660] = 0;
  _$jscoverage['jquery.js'][9661] = 0;
  _$jscoverage['jquery.js'][9662] = 0;
  _$jscoverage['jquery.js'][9664] = 0;
  _$jscoverage['jquery.js'][9670] = 0;
  _$jscoverage['jquery.js'][9671] = 0;
  _$jscoverage['jquery.js'][9672] = 0;
  _$jscoverage['jquery.js'][9673] = 0;
  _$jscoverage['jquery.js'][9679] = 0;
  _$jscoverage['jquery.js'][9682] = 0;
  _$jscoverage['jquery.js'][9683] = 0;
  _$jscoverage['jquery.js'][9693] = 0;
  _$jscoverage['jquery.js'][9697] = 0;
  _$jscoverage['jquery.js'][9700] = 0;
  _$jscoverage['jquery.js'][9701] = 0;
  _$jscoverage['jquery.js'][9702] = 0;
  _$jscoverage['jquery.js'][9707] = 0;
  _$jscoverage['jquery.js'][9709] = 0;
  _$jscoverage['jquery.js'][9719] = 0;
  _$jscoverage['jquery.js'][9722] = 0;
  _$jscoverage['jquery.js'][9727] = 0;
  _$jscoverage['jquery.js'][9728] = 0;
  _$jscoverage['jquery.js'][9729] = 0;
  _$jscoverage['jquery.js'][9730] = 0;
  _$jscoverage['jquery.js'][9734] = 0;
  _$jscoverage['jquery.js'][9735] = 0;
  _$jscoverage['jquery.js'][9736] = 0;
  _$jscoverage['jquery.js'][9738] = 0;
  _$jscoverage['jquery.js'][9742] = 0;
  _$jscoverage['jquery.js'][9745] = 0;
  _$jscoverage['jquery.js'][9746] = 0;
  _$jscoverage['jquery.js'][9747] = 0;
  _$jscoverage['jquery.js'][9751] = 0;
  _$jscoverage['jquery.js'][9754] = 0;
  _$jscoverage['jquery.js'][9755] = 0;
  _$jscoverage['jquery.js'][9759] = 0;
  _$jscoverage['jquery.js'][9763] = 0;
  _$jscoverage['jquery.js'][9766] = 0;
  _$jscoverage['jquery.js'][9769] = 0;
  _$jscoverage['jquery.js'][9773] = 0;
  _$jscoverage['jquery.js'][9774] = 0;
  _$jscoverage['jquery.js'][9777] = 0;
  _$jscoverage['jquery.js'][9781] = 0;
  _$jscoverage['jquery.js'][9793] = 0;
  _$jscoverage['jquery.js'][9794] = 0;
  _$jscoverage['jquery.js'][9795] = 0;
  _$jscoverage['jquery.js'][9796] = 0;
  _$jscoverage['jquery.js'][9804] = 0;
  _$jscoverage['jquery.js'][9805] = 0;
  _$jscoverage['jquery.js'][9806] = 0;
  _$jscoverage['jquery.js'][9808] = 0;
  _$jscoverage['jquery.js'][9809] = 0;
  _$jscoverage['jquery.js'][9810] = 0;
  _$jscoverage['jquery.js'][9813] = 0;
  _$jscoverage['jquery.js'][9815] = 0;
  _$jscoverage['jquery.js'][9819] = 0;
  _$jscoverage['jquery.js'][9820] = 0;
  _$jscoverage['jquery.js'][9825] = 0;
  _$jscoverage['jquery.js'][9826] = 0;
  _$jscoverage['jquery.js'][9827] = 0;
  _$jscoverage['jquery.js'][9829] = 0;
  _$jscoverage['jquery.js'][9833] = 0;
  _$jscoverage['jquery.js'][9834] = 0;
  _$jscoverage['jquery.js'][9837] = 0;
  _$jscoverage['jquery.js'][9838] = 0;
  _$jscoverage['jquery.js'][9841] = 0;
  _$jscoverage['jquery.js'][9843] = 0;
  _$jscoverage['jquery.js'][9844] = 0;
  _$jscoverage['jquery.js'][9847] = 0;
  _$jscoverage['jquery.js'][9854] = 0;
  _$jscoverage['jquery.js'][9855] = 0;
  _$jscoverage['jquery.js'][9859] = 0;
  _$jscoverage['jquery.js'][9860] = 0;
  _$jscoverage['jquery.js'][9861] = 0;
  _$jscoverage['jquery.js'][9865] = 0;
  _$jscoverage['jquery.js'][9868] = 0;
  _$jscoverage['jquery.js'][9869] = 0;
  _$jscoverage['jquery.js'][9872] = 0;
  _$jscoverage['jquery.js'][9873] = 0;
  _$jscoverage['jquery.js'][9877] = 0;
  _$jscoverage['jquery.js'][9878] = 0;
  _$jscoverage['jquery.js'][9890] = 0;
  _$jscoverage['jquery.js'][9892] = 0;
  _$jscoverage['jquery.js'][9905] = 0;
  _$jscoverage['jquery.js'][9906] = 0;
  _$jscoverage['jquery.js'][9911] = 0;
  _$jscoverage['jquery.js'][9918] = 0;
  _$jscoverage['jquery.js'][9926] = 0;
  _$jscoverage['jquery.js'][9927] = 0;
  _$jscoverage['jquery.js'][9934] = 0;
  _$jscoverage['jquery.js'][9935] = 0;
  _$jscoverage['jquery.js'][9936] = 0;
  _$jscoverage['jquery.js'][9943] = 0;
  _$jscoverage['jquery.js'][9945] = 0;
  _$jscoverage['jquery.js'][9951] = 0;
  _$jscoverage['jquery.js'][9952] = 0;
  _$jscoverage['jquery.js'][9955] = 0;
  _$jscoverage['jquery.js'][9956] = 0;
  _$jscoverage['jquery.js'][9957] = 0;
  _$jscoverage['jquery.js'][9958] = 0;
  _$jscoverage['jquery.js'][9963] = 0;
  _$jscoverage['jquery.js'][9964] = 0;
  _$jscoverage['jquery.js'][9965] = 0;
  _$jscoverage['jquery.js'][9966] = 0;
  _$jscoverage['jquery.js'][9969] = 0;
  _$jscoverage['jquery.js'][9970] = 0;
  _$jscoverage['jquery.js'][9973] = 0;
  _$jscoverage['jquery.js'][9976] = 0;
  _$jscoverage['jquery.js'][9979] = 0;
  _$jscoverage['jquery.js'][9980] = 0;
  _$jscoverage['jquery.js'][9982] = 0;
  _$jscoverage['jquery.js'][9983] = 0;
  _$jscoverage['jquery.js'][9986] = 0;
  _$jscoverage['jquery.js'][9987] = 0;
  _$jscoverage['jquery.js'][9990] = 0;
  _$jscoverage['jquery.js'][9995] = 0;
  _$jscoverage['jquery.js'][10001] = 0;
  _$jscoverage['jquery.js'][10002] = 0;
  _$jscoverage['jquery.js'][10005] = 0;
  _$jscoverage['jquery.js'][10009] = 0;
  _$jscoverage['jquery.js'][10012] = 0;
  _$jscoverage['jquery.js'][10013] = 0;
  _$jscoverage['jquery.js'][10020] = 0;
  _$jscoverage['jquery.js'][10021] = 0;
  _$jscoverage['jquery.js'][10025] = 0;
  _$jscoverage['jquery.js'][10026] = 0;
  _$jscoverage['jquery.js'][10027] = 0;
  _$jscoverage['jquery.js'][10036] = 0;
  _$jscoverage['jquery.js'][10037] = 0;
  _$jscoverage['jquery.js'][10040] = 0;
  _$jscoverage['jquery.js'][10045] = 0;
  _$jscoverage['jquery.js'][10048] = 0;
  _$jscoverage['jquery.js'][10051] = 0;
  _$jscoverage['jquery.js'][10055] = 0;
  _$jscoverage['jquery.js'][10056] = 0;
  _$jscoverage['jquery.js'][10057] = 0;
  _$jscoverage['jquery.js'][10061] = 0;
  _$jscoverage['jquery.js'][10063] = 0;
  _$jscoverage['jquery.js'][10066] = 0;
  _$jscoverage['jquery.js'][10067] = 0;
  _$jscoverage['jquery.js'][10068] = 0;
  _$jscoverage['jquery.js'][10073] = 0;
  _$jscoverage['jquery.js'][10090] = 0;
  _$jscoverage['jquery.js'][10091] = 0;
  _$jscoverage['jquery.js'][10093] = 0;
  _$jscoverage['jquery.js'][10094] = 0;
  _$jscoverage['jquery.js'][10097] = 0;
  _$jscoverage['jquery.js'][10103] = 0;
  _$jscoverage['jquery.js'][10104] = 0;
  _$jscoverage['jquery.js'][10106] = 0;
  _$jscoverage['jquery.js'][10107] = 0;
  _$jscoverage['jquery.js'][10110] = 0;
  _$jscoverage['jquery.js'][10111] = 0;
  _$jscoverage['jquery.js'][10112] = 0;
  _$jscoverage['jquery.js'][10113] = 0;
  _$jscoverage['jquery.js'][10114] = 0;
  _$jscoverage['jquery.js'][10117] = 0;
  _$jscoverage['jquery.js'][10118] = 0;
  _$jscoverage['jquery.js'][10121] = 0;
  _$jscoverage['jquery.js'][10122] = 0;
  _$jscoverage['jquery.js'][10128] = 0;
  _$jscoverage['jquery.js'][10140] = 0;
  _$jscoverage['jquery.js'][10141] = 0;
  _$jscoverage['jquery.js'][10143] = 0;
  _$jscoverage['jquery.js'][10144] = 0;
  _$jscoverage['jquery.js'][10147] = 0;
  _$jscoverage['jquery.js'][10157] = 0;
  _$jscoverage['jquery.js'][10158] = 0;
  _$jscoverage['jquery.js'][10162] = 0;
  _$jscoverage['jquery.js'][10163] = 0;
  _$jscoverage['jquery.js'][10166] = 0;
  _$jscoverage['jquery.js'][10167] = 0;
  _$jscoverage['jquery.js'][10169] = 0;
  _$jscoverage['jquery.js'][10172] = 0;
  _$jscoverage['jquery.js'][10178] = 0;
  _$jscoverage['jquery.js'][10179] = 0;
  _$jscoverage['jquery.js'][10183] = 0;
  _$jscoverage['jquery.js'][10190] = 0;
  _$jscoverage['jquery.js'][10203] = 0;
  _$jscoverage['jquery.js'][10209] = 0;
  _$jscoverage['jquery.js'][10210] = 0;
  _$jscoverage['jquery.js'][10216] = 0;
  _$jscoverage['jquery.js'][10218] = 0;
  _$jscoverage['jquery.js'][10225] = 0;
  _$jscoverage['jquery.js'][10228] = 0;
  _$jscoverage['jquery.js'][10231] = 0;
  _$jscoverage['jquery.js'][10235] = 0;
  _$jscoverage['jquery.js'][10240] = 0;
  _$jscoverage['jquery.js'][10250] = 0;
  _$jscoverage['jquery.js'][10251] = 0;
  _$jscoverage['jquery.js'][10253] = 0;
  _$jscoverage['jquery.js'][10254] = 0;
  _$jscoverage['jquery.js'][10255] = 0;
  _$jscoverage['jquery.js'][10256] = 0;
  _$jscoverage['jquery.js'][10261] = 0;
  _$jscoverage['jquery.js'][10262] = 0;
  _$jscoverage['jquery.js'][10266] = 0;
  _$jscoverage['jquery.js'][10267] = 0;
  _$jscoverage['jquery.js'][10268] = 0;
  _$jscoverage['jquery.js'][10272] = 0;
  _$jscoverage['jquery.js'][10274] = 0;
  _$jscoverage['jquery.js'][10277] = 0;
  _$jscoverage['jquery.js'][10278] = 0;
  _$jscoverage['jquery.js'][10279] = 0;
  _$jscoverage['jquery.js'][10281] = 0;
  _$jscoverage['jquery.js'][10284] = 0;
  _$jscoverage['jquery.js'][10285] = 0;
  _$jscoverage['jquery.js'][10286] = 0;
  _$jscoverage['jquery.js'][10287] = 0;
  _$jscoverage['jquery.js'][10288] = 0;
  _$jscoverage['jquery.js'][10289] = 0;
  _$jscoverage['jquery.js'][10290] = 0;
  _$jscoverage['jquery.js'][10292] = 0;
  _$jscoverage['jquery.js'][10294] = 0;
  _$jscoverage['jquery.js'][10299] = 0;
  _$jscoverage['jquery.js'][10300] = 0;
  _$jscoverage['jquery.js'][10324] = 0;
  _$jscoverage['jquery.js'][10325] = 0;
  _$jscoverage['jquery.js'][10326] = 0;
  _$jscoverage['jquery.js'][10333] = 0;
  _$jscoverage['jquery.js'][10341] = 0;
  _$jscoverage['jquery.js'][10342] = 0;
  _$jscoverage['jquery.js'][10343] = 0;
  _$jscoverage['jquery.js'][10346] = 0;
  _$jscoverage['jquery.js'][10347] = 0;
  _$jscoverage['jquery.js'][10350] = 0;
  _$jscoverage['jquery.js'][10356] = 0;
  _$jscoverage['jquery.js'][10357] = 0;
  _$jscoverage['jquery.js'][10363] = 0;
}
_$jscoverage['jquery.js'].source = ["<span class=\"c\">/*!</span>","<span class=\"c\"> * jQuery JavaScript Library v3.3.1</span>","<span class=\"c\"> * https://jquery.com/</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * Includes Sizzle.js</span>","<span class=\"c\"> * https://sizzlejs.com/</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * Copyright JS Foundation and other contributors</span>","<span class=\"c\"> * Released under the MIT license</span>","<span class=\"c\"> * https://jquery.org/license</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * Date: 2018-01-20T17:24Z</span>","<span class=\"c\"> */</span>","<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">(</span> global<span class=\"k\">,</span> factory <span class=\"k\">)</span> <span class=\"k\">{</span>","","    <span class=\"s\">\"use strict\"</span><span class=\"k\">;</span>","","    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">typeof</span> module <span class=\"k\">===</span> <span class=\"s\">\"object\"</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">typeof</span> module<span class=\"k\">.</span>exports <span class=\"k\">===</span> <span class=\"s\">\"object\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","        <span class=\"c\">// For CommonJS and CommonJS-like environments where a proper `window`</span>","        <span class=\"c\">// is present, execute the factory and get jQuery.</span>","        <span class=\"c\">// For environments that do not have a `window` with a `document`</span>","        <span class=\"c\">// (such as Node.js), expose a factory as module.exports.</span>","        <span class=\"c\">// This accentuates the need for the creation of a real `window`.</span>","        <span class=\"c\">// e.g. var jQuery = require(\"jquery\")(window);</span>","        <span class=\"c\">// See ticket #14549 for more info.</span>","        module<span class=\"k\">.</span>exports <span class=\"k\">=</span> global<span class=\"k\">.</span>document <span class=\"k\">?</span>","            factory<span class=\"k\">(</span> global<span class=\"k\">,</span> <span class=\"k\">true</span> <span class=\"k\">)</span> <span class=\"k\">:</span>","            <span class=\"k\">function</span><span class=\"k\">(</span> w <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>w<span class=\"k\">.</span>document <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">throw</span> <span class=\"k\">new</span> Error<span class=\"k\">(</span> <span class=\"s\">\"jQuery requires a window with a document\"</span> <span class=\"k\">);</span>","                <span class=\"k\">}</span>","                <span class=\"k\">return</span> factory<span class=\"k\">(</span> w <span class=\"k\">);</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","        factory<span class=\"k\">(</span> global <span class=\"k\">);</span>","    <span class=\"k\">}</span>","","<span class=\"c\">// Pass this if window is not defined yet</span>","<span class=\"k\">}</span> <span class=\"k\">)(</span> <span class=\"k\">typeof</span> window <span class=\"k\">!==</span> <span class=\"s\">\"undefined\"</span> <span class=\"k\">?</span> window <span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span> window<span class=\"k\">,</span> noGlobal <span class=\"k\">)</span> <span class=\"k\">{</span>","","<span class=\"c\">// Edge &lt;= 12 - 13+, Firefox &lt;=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1</span>","<span class=\"c\">// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode</span>","<span class=\"c\">// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common</span>","<span class=\"c\">// enough that all such attempts are guarded in a try block.</span>","    <span class=\"s\">\"use strict\"</span><span class=\"k\">;</span>","","    <span class=\"k\">var</span> arr <span class=\"k\">=</span> <span class=\"k\">[];</span>","","    <span class=\"k\">var</span> document <span class=\"k\">=</span> window<span class=\"k\">.</span>document<span class=\"k\">;</span>","","    <span class=\"k\">var</span> getProto <span class=\"k\">=</span> Object<span class=\"k\">.</span>getPrototypeOf<span class=\"k\">;</span>","","    <span class=\"k\">var</span> slice <span class=\"k\">=</span> arr<span class=\"k\">.</span>slice<span class=\"k\">;</span>","","    <span class=\"k\">var</span> concat <span class=\"k\">=</span> arr<span class=\"k\">.</span>concat<span class=\"k\">;</span>","","    <span class=\"k\">var</span> push <span class=\"k\">=</span> arr<span class=\"k\">.</span>push<span class=\"k\">;</span>","","    <span class=\"k\">var</span> indexOf <span class=\"k\">=</span> arr<span class=\"k\">.</span>indexOf<span class=\"k\">;</span>","","    <span class=\"k\">var</span> class2type <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","","    <span class=\"k\">var</span> toString <span class=\"k\">=</span> class2type<span class=\"k\">.</span>toString<span class=\"k\">;</span>","","    <span class=\"k\">var</span> hasOwn <span class=\"k\">=</span> class2type<span class=\"k\">.</span>hasOwnProperty<span class=\"k\">;</span>","","    <span class=\"k\">var</span> fnToString <span class=\"k\">=</span> hasOwn<span class=\"k\">.</span>toString<span class=\"k\">;</span>","","    <span class=\"k\">var</span> ObjectFunctionString <span class=\"k\">=</span> fnToString<span class=\"k\">.</span>call<span class=\"k\">(</span> Object <span class=\"k\">);</span>","","    <span class=\"k\">var</span> support <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","","    <span class=\"k\">var</span> isFunction <span class=\"k\">=</span> <span class=\"k\">function</span> isFunction<span class=\"k\">(</span> obj <span class=\"k\">)</span> <span class=\"k\">{</span>","","        <span class=\"c\">// Support: Chrome &lt;=57, Firefox &lt;=52</span>","        <span class=\"c\">// In some browsers, typeof returns \"function\" for HTML &lt;object&gt; elements</span>","        <span class=\"c\">// (i.e., `typeof document.createElement( \"object\" ) === \"function\"`).</span>","        <span class=\"c\">// We don't want to classify *any* DOM node as a function.</span>","        <span class=\"k\">return</span> <span class=\"k\">typeof</span> obj <span class=\"k\">===</span> <span class=\"s\">\"function\"</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">typeof</span> obj<span class=\"k\">.</span>nodeType <span class=\"k\">!==</span> <span class=\"s\">\"number\"</span><span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","","    <span class=\"k\">var</span> isWindow <span class=\"k\">=</span> <span class=\"k\">function</span> isWindow<span class=\"k\">(</span> obj <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> obj <span class=\"k\">!=</span> <span class=\"k\">null</span> <span class=\"k\">&amp;&amp;</span> obj <span class=\"k\">===</span> obj<span class=\"k\">.</span>window<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","","","","    <span class=\"k\">var</span> preservedScriptAttributes <span class=\"k\">=</span> <span class=\"k\">{</span>","        type<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","        src<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","        noModule<span class=\"k\">:</span> <span class=\"k\">true</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    <span class=\"k\">function</span> DOMEval<span class=\"k\">(</span> code<span class=\"k\">,</span> doc<span class=\"k\">,</span> node <span class=\"k\">)</span> <span class=\"k\">{</span>","        doc <span class=\"k\">=</span> doc <span class=\"k\">||</span> document<span class=\"k\">;</span>","","        <span class=\"k\">var</span> i<span class=\"k\">,</span>","            script <span class=\"k\">=</span> doc<span class=\"k\">.</span>createElement<span class=\"k\">(</span> <span class=\"s\">\"script\"</span> <span class=\"k\">);</span>","","        script<span class=\"k\">.</span>text <span class=\"k\">=</span> code<span class=\"k\">;</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> node <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">for</span> <span class=\"k\">(</span> i <span class=\"k\">in</span> preservedScriptAttributes <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> node<span class=\"k\">[</span> i <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    script<span class=\"k\">[</span> i <span class=\"k\">]</span> <span class=\"k\">=</span> node<span class=\"k\">[</span> i <span class=\"k\">];</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        doc<span class=\"k\">.</span>head<span class=\"k\">.</span>appendChild<span class=\"k\">(</span> script <span class=\"k\">).</span>parentNode<span class=\"k\">.</span>removeChild<span class=\"k\">(</span> script <span class=\"k\">);</span>","    <span class=\"k\">}</span>","","","    <span class=\"k\">function</span> toType<span class=\"k\">(</span> obj <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> obj <span class=\"k\">==</span> <span class=\"k\">null</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> obj <span class=\"k\">+</span> <span class=\"s\">\"\"</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"c\">// Support: Android &lt;=2.3 only (functionish RegExp)</span>","        <span class=\"k\">return</span> <span class=\"k\">typeof</span> obj <span class=\"k\">===</span> <span class=\"s\">\"object\"</span> <span class=\"k\">||</span> <span class=\"k\">typeof</span> obj <span class=\"k\">===</span> <span class=\"s\">\"function\"</span> <span class=\"k\">?</span>","            class2type<span class=\"k\">[</span> toString<span class=\"k\">.</span>call<span class=\"k\">(</span> obj <span class=\"k\">)</span> <span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"s\">\"object\"</span> <span class=\"k\">:</span>","            <span class=\"k\">typeof</span> obj<span class=\"k\">;</span>","    <span class=\"k\">}</span>","    <span class=\"c\">/* global Symbol */</span>","<span class=\"c\">// Defining this global in .eslintrc.json would create a danger of using the global</span>","<span class=\"c\">// unguarded in another place, it seems safer to define global only for this module</span>","","","","    <span class=\"k\">var</span>","        version <span class=\"k\">=</span> <span class=\"s\">\"3.3.1\"</span><span class=\"k\">,</span>","","        <span class=\"c\">// Define a local copy of jQuery</span>","        jQuery <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> selector<span class=\"k\">,</span> context <span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"c\">// The jQuery object is actually just the init constructor 'enhanced'</span>","            <span class=\"c\">// Need init if jQuery is called (just allow error to be thrown if not included)</span>","            <span class=\"k\">return</span> <span class=\"k\">new</span> jQuery<span class=\"k\">.</span>fn<span class=\"k\">.</span>init<span class=\"k\">(</span> selector<span class=\"k\">,</span> context <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        <span class=\"c\">// Support: Android &lt;=4.0 only</span>","        <span class=\"c\">// Make sure we trim BOM and NBSP</span>","        rtrim <span class=\"k\">=</span> <span class=\"s\">/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g</span><span class=\"k\">;</span>","","    jQuery<span class=\"k\">.</span>fn <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>prototype <span class=\"k\">=</span> <span class=\"k\">{</span>","","        <span class=\"c\">// The current version of jQuery being used</span>","        jquery<span class=\"k\">:</span> version<span class=\"k\">,</span>","","        constructor<span class=\"k\">:</span> jQuery<span class=\"k\">,</span>","","        <span class=\"c\">// The default length of a jQuery object is 0</span>","        length<span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span>","","        toArray<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> slice<span class=\"k\">.</span>call<span class=\"k\">(</span> <span class=\"k\">this</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        <span class=\"c\">// Get the Nth element in the matched element set OR</span>","        <span class=\"c\">// Get the whole matched element set as a clean array</span>","        get<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> num <span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"c\">// Return all the elements in a clean array</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> num <span class=\"k\">==</span> <span class=\"k\">null</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> slice<span class=\"k\">.</span>call<span class=\"k\">(</span> <span class=\"k\">this</span> <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Return just the one element from the set</span>","            <span class=\"k\">return</span> num <span class=\"k\">&lt;</span> <span class=\"s\">0</span> <span class=\"k\">?</span> <span class=\"k\">this</span><span class=\"k\">[</span> num <span class=\"k\">+</span> <span class=\"k\">this</span><span class=\"k\">.</span>length <span class=\"k\">]</span> <span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">[</span> num <span class=\"k\">];</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        <span class=\"c\">// Take an array of elements and push it onto the stack</span>","        <span class=\"c\">// (returning the new matched element set)</span>","        pushStack<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elems <span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"c\">// Build a new jQuery matched element set</span>","            <span class=\"k\">var</span> ret <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>merge<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">.</span>constructor<span class=\"k\">(),</span> elems <span class=\"k\">);</span>","","            <span class=\"c\">// Add the old object onto the stack (as a reference)</span>","            ret<span class=\"k\">.</span>prevObject <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">;</span>","","            <span class=\"c\">// Return the newly-formed element set</span>","            <span class=\"k\">return</span> ret<span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        <span class=\"c\">// Execute a callback for every element in the matched set.</span>","        each<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> callback <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> jQuery<span class=\"k\">.</span>each<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> callback <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        map<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> callback <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>pushStack<span class=\"k\">(</span> jQuery<span class=\"k\">.</span>map<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> i <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> callback<span class=\"k\">.</span>call<span class=\"k\">(</span> elem<span class=\"k\">,</span> i<span class=\"k\">,</span> elem <span class=\"k\">);</span>","            <span class=\"k\">}</span> <span class=\"k\">)</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        slice<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>pushStack<span class=\"k\">(</span> slice<span class=\"k\">.</span>apply<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> arguments <span class=\"k\">)</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        first<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>eq<span class=\"k\">(</span> <span class=\"s\">0</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        last<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>eq<span class=\"k\">(</span> <span class=\"k\">-</span><span class=\"s\">1</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        eq<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> i <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> len <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>length<span class=\"k\">,</span>","                j <span class=\"k\">=</span> <span class=\"k\">+</span>i <span class=\"k\">+</span> <span class=\"k\">(</span> i <span class=\"k\">&lt;</span> <span class=\"s\">0</span> <span class=\"k\">?</span> len <span class=\"k\">:</span> <span class=\"s\">0</span> <span class=\"k\">);</span>","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>pushStack<span class=\"k\">(</span> j <span class=\"k\">&gt;=</span> <span class=\"s\">0</span> <span class=\"k\">&amp;&amp;</span> j <span class=\"k\">&lt;</span> len <span class=\"k\">?</span> <span class=\"k\">[</span> <span class=\"k\">this</span><span class=\"k\">[</span> j <span class=\"k\">]</span> <span class=\"k\">]</span> <span class=\"k\">:</span> <span class=\"k\">[]</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        end<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>prevObject <span class=\"k\">||</span> <span class=\"k\">this</span><span class=\"k\">.</span>constructor<span class=\"k\">();</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        <span class=\"c\">// For internal use only.</span>","        <span class=\"c\">// Behaves like an Array's method, not like a jQuery method.</span>","        push<span class=\"k\">:</span> push<span class=\"k\">,</span>","        sort<span class=\"k\">:</span> arr<span class=\"k\">.</span>sort<span class=\"k\">,</span>","        splice<span class=\"k\">:</span> arr<span class=\"k\">.</span>splice","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    jQuery<span class=\"k\">.</span>extend <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>fn<span class=\"k\">.</span>extend <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> options<span class=\"k\">,</span> name<span class=\"k\">,</span> src<span class=\"k\">,</span> copy<span class=\"k\">,</span> copyIsArray<span class=\"k\">,</span> clone<span class=\"k\">,</span>","            target <span class=\"k\">=</span> arguments<span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">,</span>","            i <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">,</span>","            length <span class=\"k\">=</span> arguments<span class=\"k\">.</span>length<span class=\"k\">,</span>","            deep <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","","        <span class=\"c\">// Handle a deep copy situation</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">typeof</span> target <span class=\"k\">===</span> <span class=\"s\">\"boolean\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            deep <span class=\"k\">=</span> target<span class=\"k\">;</span>","","            <span class=\"c\">// Skip the boolean and the target</span>","            target <span class=\"k\">=</span> arguments<span class=\"k\">[</span> i <span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","            i<span class=\"k\">++;</span>","        <span class=\"k\">}</span>","","        <span class=\"c\">// Handle case when target is a string or something (possible in deep copy)</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">typeof</span> target <span class=\"k\">!==</span> <span class=\"s\">\"object\"</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>isFunction<span class=\"k\">(</span> target <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            target <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"c\">// Extend jQuery itself if only one argument is passed</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> i <span class=\"k\">===</span> length <span class=\"k\">)</span> <span class=\"k\">{</span>","            target <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">;</span>","            i<span class=\"k\">--;</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">;</span> i <span class=\"k\">&lt;</span> length<span class=\"k\">;</span> i<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"c\">// Only deal with non-null/undefined values</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">(</span> options <span class=\"k\">=</span> arguments<span class=\"k\">[</span> i <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">!=</span> <span class=\"k\">null</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                <span class=\"c\">// Extend the base object</span>","                <span class=\"k\">for</span> <span class=\"k\">(</span> name <span class=\"k\">in</span> options <span class=\"k\">)</span> <span class=\"k\">{</span>","                    src <span class=\"k\">=</span> target<span class=\"k\">[</span> name <span class=\"k\">];</span>","                    copy <span class=\"k\">=</span> options<span class=\"k\">[</span> name <span class=\"k\">];</span>","","                    <span class=\"c\">// Prevent never-ending loop</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> target <span class=\"k\">===</span> copy <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">continue</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","","                    <span class=\"c\">// Recurse if we're merging plain objects or arrays</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> deep <span class=\"k\">&amp;&amp;</span> copy <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span> jQuery<span class=\"k\">.</span>isPlainObject<span class=\"k\">(</span> copy <span class=\"k\">)</span> <span class=\"k\">||</span>","                        <span class=\"k\">(</span> copyIsArray <span class=\"k\">=</span> Array<span class=\"k\">.</span>isArray<span class=\"k\">(</span> copy <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                        <span class=\"k\">if</span> <span class=\"k\">(</span> copyIsArray <span class=\"k\">)</span> <span class=\"k\">{</span>","                            copyIsArray <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","                            clone <span class=\"k\">=</span> src <span class=\"k\">&amp;&amp;</span> Array<span class=\"k\">.</span>isArray<span class=\"k\">(</span> src <span class=\"k\">)</span> <span class=\"k\">?</span> src <span class=\"k\">:</span> <span class=\"k\">[];</span>","","                        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                            clone <span class=\"k\">=</span> src <span class=\"k\">&amp;&amp;</span> jQuery<span class=\"k\">.</span>isPlainObject<span class=\"k\">(</span> src <span class=\"k\">)</span> <span class=\"k\">?</span> src <span class=\"k\">:</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","                        <span class=\"k\">}</span>","","                        <span class=\"c\">// Never move original objects, clone them</span>","                        target<span class=\"k\">[</span> name <span class=\"k\">]</span> <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>extend<span class=\"k\">(</span> deep<span class=\"k\">,</span> clone<span class=\"k\">,</span> copy <span class=\"k\">);</span>","","                        <span class=\"c\">// Don't bring in undefined values</span>","                    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> copy <span class=\"k\">!==</span> undefined <span class=\"k\">)</span> <span class=\"k\">{</span>","                        target<span class=\"k\">[</span> name <span class=\"k\">]</span> <span class=\"k\">=</span> copy<span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","","        <span class=\"c\">// Return the modified object</span>","        <span class=\"k\">return</span> target<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    jQuery<span class=\"k\">.</span>extend<span class=\"k\">(</span> <span class=\"k\">{</span>","","        <span class=\"c\">// Unique for each copy of jQuery on the page</span>","        expando<span class=\"k\">:</span> <span class=\"s\">\"jQuery\"</span> <span class=\"k\">+</span> <span class=\"k\">(</span> version <span class=\"k\">+</span> Math<span class=\"k\">.</span>random<span class=\"k\">()</span> <span class=\"k\">).</span>replace<span class=\"k\">(</span> <span class=\"s\">/\\D/g</span><span class=\"k\">,</span> <span class=\"s\">\"\"</span> <span class=\"k\">),</span>","","        <span class=\"c\">// Assume jQuery is ready without the ready module</span>","        isReady<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","","        error<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> msg <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">throw</span> <span class=\"k\">new</span> Error<span class=\"k\">(</span> msg <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        noop<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{}</span><span class=\"k\">,</span>","","        isPlainObject<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> obj <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> proto<span class=\"k\">,</span> Ctor<span class=\"k\">;</span>","","            <span class=\"c\">// Detect obvious negatives</span>","            <span class=\"c\">// Use toString instead of jQuery.type to catch host objects</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>obj <span class=\"k\">||</span> toString<span class=\"k\">.</span>call<span class=\"k\">(</span> obj <span class=\"k\">)</span> <span class=\"k\">!==</span> <span class=\"s\">\"[object Object]\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            proto <span class=\"k\">=</span> getProto<span class=\"k\">(</span> obj <span class=\"k\">);</span>","","            <span class=\"c\">// Objects with no prototype (e.g., `Object.create( null )`) are plain</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>proto <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Objects with prototype are plain iff they were constructed by a global Object function</span>","            Ctor <span class=\"k\">=</span> hasOwn<span class=\"k\">.</span>call<span class=\"k\">(</span> proto<span class=\"k\">,</span> <span class=\"s\">\"constructor\"</span> <span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> proto<span class=\"k\">.</span>constructor<span class=\"k\">;</span>","            <span class=\"k\">return</span> <span class=\"k\">typeof</span> Ctor <span class=\"k\">===</span> <span class=\"s\">\"function\"</span> <span class=\"k\">&amp;&amp;</span> fnToString<span class=\"k\">.</span>call<span class=\"k\">(</span> Ctor <span class=\"k\">)</span> <span class=\"k\">===</span> ObjectFunctionString<span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        isEmptyObject<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> obj <span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"c\">/* eslint-disable no-unused-vars */</span>","            <span class=\"c\">// See https://github.com/eslint/eslint/issues/6125</span>","            <span class=\"k\">var</span> name<span class=\"k\">;</span>","","            <span class=\"k\">for</span> <span class=\"k\">(</span> name <span class=\"k\">in</span> obj <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","            <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        <span class=\"c\">// Evaluates a script in a global context</span>","        globalEval<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> code <span class=\"k\">)</span> <span class=\"k\">{</span>","            DOMEval<span class=\"k\">(</span> code <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        each<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> obj<span class=\"k\">,</span> callback <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> length<span class=\"k\">,</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> isArrayLike<span class=\"k\">(</span> obj <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                length <span class=\"k\">=</span> obj<span class=\"k\">.</span>length<span class=\"k\">;</span>","                <span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">;</span> i <span class=\"k\">&lt;</span> length<span class=\"k\">;</span> i<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> callback<span class=\"k\">.</span>call<span class=\"k\">(</span> obj<span class=\"k\">[</span> i <span class=\"k\">],</span> i<span class=\"k\">,</span> obj<span class=\"k\">[</span> i <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"k\">false</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">break</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                <span class=\"k\">for</span> <span class=\"k\">(</span> i <span class=\"k\">in</span> obj <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> callback<span class=\"k\">.</span>call<span class=\"k\">(</span> obj<span class=\"k\">[</span> i <span class=\"k\">],</span> i<span class=\"k\">,</span> obj<span class=\"k\">[</span> i <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"k\">false</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">break</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">return</span> obj<span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        <span class=\"c\">// Support: Android &lt;=4.0 only</span>","        trim<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> text <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> text <span class=\"k\">==</span> <span class=\"k\">null</span> <span class=\"k\">?</span>","                <span class=\"s\">\"\"</span> <span class=\"k\">:</span>","                <span class=\"k\">(</span> text <span class=\"k\">+</span> <span class=\"s\">\"\"</span> <span class=\"k\">).</span>replace<span class=\"k\">(</span> rtrim<span class=\"k\">,</span> <span class=\"s\">\"\"</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        <span class=\"c\">// results is for internal usage only</span>","        makeArray<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> arr<span class=\"k\">,</span> results <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> ret <span class=\"k\">=</span> results <span class=\"k\">||</span> <span class=\"k\">[];</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> arr <span class=\"k\">!=</span> <span class=\"k\">null</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> isArrayLike<span class=\"k\">(</span> Object<span class=\"k\">(</span> arr <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    jQuery<span class=\"k\">.</span>merge<span class=\"k\">(</span> ret<span class=\"k\">,</span>","                        <span class=\"k\">typeof</span> arr <span class=\"k\">===</span> <span class=\"s\">\"string\"</span> <span class=\"k\">?</span>","                            <span class=\"k\">[</span> arr <span class=\"k\">]</span> <span class=\"k\">:</span> arr","                    <span class=\"k\">);</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    push<span class=\"k\">.</span>call<span class=\"k\">(</span> ret<span class=\"k\">,</span> arr <span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">return</span> ret<span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        inArray<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> arr<span class=\"k\">,</span> i <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> arr <span class=\"k\">==</span> <span class=\"k\">null</span> <span class=\"k\">?</span> <span class=\"k\">-</span><span class=\"s\">1</span> <span class=\"k\">:</span> indexOf<span class=\"k\">.</span>call<span class=\"k\">(</span> arr<span class=\"k\">,</span> elem<span class=\"k\">,</span> i <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        <span class=\"c\">// Support: Android &lt;=4.0 only, PhantomJS 1 only</span>","        <span class=\"c\">// push.apply(_, arraylike) throws on ancient WebKit</span>","        merge<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> first<span class=\"k\">,</span> second <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> len <span class=\"k\">=</span> <span class=\"k\">+</span>second<span class=\"k\">.</span>length<span class=\"k\">,</span>","                j <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","                i <span class=\"k\">=</span> first<span class=\"k\">.</span>length<span class=\"k\">;</span>","","            <span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">;</span> j <span class=\"k\">&lt;</span> len<span class=\"k\">;</span> j<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                first<span class=\"k\">[</span> i<span class=\"k\">++</span> <span class=\"k\">]</span> <span class=\"k\">=</span> second<span class=\"k\">[</span> j <span class=\"k\">];</span>","            <span class=\"k\">}</span>","","            first<span class=\"k\">.</span>length <span class=\"k\">=</span> i<span class=\"k\">;</span>","","            <span class=\"k\">return</span> first<span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        grep<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elems<span class=\"k\">,</span> callback<span class=\"k\">,</span> invert <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> callbackInverse<span class=\"k\">,</span>","                matches <span class=\"k\">=</span> <span class=\"k\">[],</span>","                i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","                length <span class=\"k\">=</span> elems<span class=\"k\">.</span>length<span class=\"k\">,</span>","                callbackExpect <span class=\"k\">=</span> <span class=\"k\">!</span>invert<span class=\"k\">;</span>","","            <span class=\"c\">// Go through the array, only saving the items</span>","            <span class=\"c\">// that pass the validator function</span>","            <span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">;</span> i <span class=\"k\">&lt;</span> length<span class=\"k\">;</span> i<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                callbackInverse <span class=\"k\">=</span> <span class=\"k\">!</span>callback<span class=\"k\">(</span> elems<span class=\"k\">[</span> i <span class=\"k\">],</span> i <span class=\"k\">);</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> callbackInverse <span class=\"k\">!==</span> callbackExpect <span class=\"k\">)</span> <span class=\"k\">{</span>","                    matches<span class=\"k\">.</span>push<span class=\"k\">(</span> elems<span class=\"k\">[</span> i <span class=\"k\">]</span> <span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">return</span> matches<span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        <span class=\"c\">// arg is for internal usage only</span>","        map<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elems<span class=\"k\">,</span> callback<span class=\"k\">,</span> arg <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> length<span class=\"k\">,</span> value<span class=\"k\">,</span>","                i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","                ret <span class=\"k\">=</span> <span class=\"k\">[];</span>","","            <span class=\"c\">// Go through the array, translating each of the items to their new values</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> isArrayLike<span class=\"k\">(</span> elems <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                length <span class=\"k\">=</span> elems<span class=\"k\">.</span>length<span class=\"k\">;</span>","                <span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">;</span> i <span class=\"k\">&lt;</span> length<span class=\"k\">;</span> i<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    value <span class=\"k\">=</span> callback<span class=\"k\">(</span> elems<span class=\"k\">[</span> i <span class=\"k\">],</span> i<span class=\"k\">,</span> arg <span class=\"k\">);</span>","","                    <span class=\"k\">if</span> <span class=\"k\">(</span> value <span class=\"k\">!=</span> <span class=\"k\">null</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        ret<span class=\"k\">.</span>push<span class=\"k\">(</span> value <span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// Go through every key on the object,</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                <span class=\"k\">for</span> <span class=\"k\">(</span> i <span class=\"k\">in</span> elems <span class=\"k\">)</span> <span class=\"k\">{</span>","                    value <span class=\"k\">=</span> callback<span class=\"k\">(</span> elems<span class=\"k\">[</span> i <span class=\"k\">],</span> i<span class=\"k\">,</span> arg <span class=\"k\">);</span>","","                    <span class=\"k\">if</span> <span class=\"k\">(</span> value <span class=\"k\">!=</span> <span class=\"k\">null</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        ret<span class=\"k\">.</span>push<span class=\"k\">(</span> value <span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Flatten any nested arrays</span>","            <span class=\"k\">return</span> concat<span class=\"k\">.</span>apply<span class=\"k\">(</span> <span class=\"k\">[],</span> ret <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        <span class=\"c\">// A global GUID counter for objects</span>","        guid<span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span>","","        <span class=\"c\">// jQuery.support is not used in Core but other projects attach their</span>","        <span class=\"c\">// properties to it so it needs to exist.</span>","        support<span class=\"k\">:</span> support","    <span class=\"k\">}</span> <span class=\"k\">);</span>","","    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">typeof</span> Symbol <span class=\"k\">===</span> <span class=\"s\">\"function\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","        jQuery<span class=\"k\">.</span>fn<span class=\"k\">[</span> Symbol<span class=\"k\">.</span>iterator <span class=\"k\">]</span> <span class=\"k\">=</span> arr<span class=\"k\">[</span> Symbol<span class=\"k\">.</span>iterator <span class=\"k\">];</span>","    <span class=\"k\">}</span>","","<span class=\"c\">// Populate the class2type map</span>","    jQuery<span class=\"k\">.</span>each<span class=\"k\">(</span> <span class=\"s\">\"Boolean Number String Function Array Date RegExp Object Error Symbol\"</span><span class=\"k\">.</span>split<span class=\"k\">(</span> <span class=\"s\">\" \"</span> <span class=\"k\">),</span>","        <span class=\"k\">function</span><span class=\"k\">(</span> i<span class=\"k\">,</span> name <span class=\"k\">)</span> <span class=\"k\">{</span>","            class2type<span class=\"k\">[</span> <span class=\"s\">\"[object \"</span> <span class=\"k\">+</span> name <span class=\"k\">+</span> <span class=\"s\">\"]\"</span> <span class=\"k\">]</span> <span class=\"k\">=</span> name<span class=\"k\">.</span>toLowerCase<span class=\"k\">();</span>","        <span class=\"k\">}</span> <span class=\"k\">);</span>","","    <span class=\"k\">function</span> isArrayLike<span class=\"k\">(</span> obj <span class=\"k\">)</span> <span class=\"k\">{</span>","","        <span class=\"c\">// Support: real iOS 8.2 only (not reproducible in simulator)</span>","        <span class=\"c\">// `in` check used to prevent JIT error (gh-2145)</span>","        <span class=\"c\">// hasOwn isn't used here due to false negatives</span>","        <span class=\"c\">// regarding Nodelist length in IE</span>","        <span class=\"k\">var</span> length <span class=\"k\">=</span> <span class=\"k\">!!</span>obj <span class=\"k\">&amp;&amp;</span> <span class=\"s\">\"length\"</span> <span class=\"k\">in</span> obj <span class=\"k\">&amp;&amp;</span> obj<span class=\"k\">.</span>length<span class=\"k\">,</span>","            type <span class=\"k\">=</span> toType<span class=\"k\">(</span> obj <span class=\"k\">);</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span> isFunction<span class=\"k\">(</span> obj <span class=\"k\">)</span> <span class=\"k\">||</span> isWindow<span class=\"k\">(</span> obj <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">return</span> type <span class=\"k\">===</span> <span class=\"s\">\"array\"</span> <span class=\"k\">||</span> length <span class=\"k\">===</span> <span class=\"s\">0</span> <span class=\"k\">||</span>","            <span class=\"k\">typeof</span> length <span class=\"k\">===</span> <span class=\"s\">\"number\"</span> <span class=\"k\">&amp;&amp;</span> length <span class=\"k\">&gt;</span> <span class=\"s\">0</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span> length <span class=\"k\">-</span> <span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">in</span> obj<span class=\"k\">;</span>","    <span class=\"k\">}</span>","    <span class=\"k\">var</span> Sizzle <span class=\"k\">=</span>","        <span class=\"c\">/*!</span>","<span class=\"c\"> * Sizzle CSS Selector Engine v2.3.3</span>","<span class=\"c\"> * https://sizzlejs.com/</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * Copyright jQuery Foundation and other contributors</span>","<span class=\"c\"> * Released under the MIT license</span>","<span class=\"c\"> * http://jquery.org/license</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * Date: 2016-08-08</span>","<span class=\"c\"> */</span>","        <span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span> window <span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"k\">var</span> i<span class=\"k\">,</span>","                support<span class=\"k\">,</span>","                Expr<span class=\"k\">,</span>","                getText<span class=\"k\">,</span>","                isXML<span class=\"k\">,</span>","                tokenize<span class=\"k\">,</span>","                compile<span class=\"k\">,</span>","                select<span class=\"k\">,</span>","                outermostContext<span class=\"k\">,</span>","                sortInput<span class=\"k\">,</span>","                hasDuplicate<span class=\"k\">,</span>","","                <span class=\"c\">// Local document vars</span>","                setDocument<span class=\"k\">,</span>","                document<span class=\"k\">,</span>","                docElem<span class=\"k\">,</span>","                documentIsHTML<span class=\"k\">,</span>","                rbuggyQSA<span class=\"k\">,</span>","                rbuggyMatches<span class=\"k\">,</span>","                matches<span class=\"k\">,</span>","                contains<span class=\"k\">,</span>","","                <span class=\"c\">// Instance-specific data</span>","                expando <span class=\"k\">=</span> <span class=\"s\">\"sizzle\"</span> <span class=\"k\">+</span> <span class=\"s\">1</span> <span class=\"k\">*</span> <span class=\"k\">new</span> Date<span class=\"k\">(),</span>","                preferredDoc <span class=\"k\">=</span> window<span class=\"k\">.</span>document<span class=\"k\">,</span>","                dirruns <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","                done <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","                classCache <span class=\"k\">=</span> createCache<span class=\"k\">(),</span>","                tokenCache <span class=\"k\">=</span> createCache<span class=\"k\">(),</span>","                compilerCache <span class=\"k\">=</span> createCache<span class=\"k\">(),</span>","                sortOrder <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> a<span class=\"k\">,</span> b <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> a <span class=\"k\">===</span> b <span class=\"k\">)</span> <span class=\"k\">{</span>","                        hasDuplicate <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                    <span class=\"k\">return</span> <span class=\"s\">0</span><span class=\"k\">;</span>","                <span class=\"k\">}</span><span class=\"k\">,</span>","","                <span class=\"c\">// Instance methods</span>","                hasOwn <span class=\"k\">=</span> <span class=\"k\">(</span><span class=\"k\">{}</span><span class=\"k\">).</span>hasOwnProperty<span class=\"k\">,</span>","                arr <span class=\"k\">=</span> <span class=\"k\">[],</span>","                pop <span class=\"k\">=</span> arr<span class=\"k\">.</span>pop<span class=\"k\">,</span>","                push_native <span class=\"k\">=</span> arr<span class=\"k\">.</span>push<span class=\"k\">,</span>","                push <span class=\"k\">=</span> arr<span class=\"k\">.</span>push<span class=\"k\">,</span>","                slice <span class=\"k\">=</span> arr<span class=\"k\">.</span>slice<span class=\"k\">,</span>","                <span class=\"c\">// Use a stripped-down indexOf as it's faster than native</span>","                <span class=\"c\">// https://jsperf.com/thor-indexof-vs-for/5</span>","                indexOf <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> list<span class=\"k\">,</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","                        len <span class=\"k\">=</span> list<span class=\"k\">.</span>length<span class=\"k\">;</span>","                    <span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">;</span> i <span class=\"k\">&lt;</span> len<span class=\"k\">;</span> i<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> list<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">===</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">return</span> i<span class=\"k\">;</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span>","                    <span class=\"k\">return</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","                <span class=\"k\">}</span><span class=\"k\">,</span>","","                booleans <span class=\"k\">=</span> <span class=\"s\">\"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\"</span><span class=\"k\">,</span>","","                <span class=\"c\">// Regular expressions</span>","","                <span class=\"c\">// http://www.w3.org/TR/css3-selectors/#whitespace</span>","                whitespace <span class=\"k\">=</span> <span class=\"s\">\"[</span><span class=\"t\">\\\\</span><span class=\"s\">x20</span><span class=\"t\">\\\\</span><span class=\"s\">t</span><span class=\"t\">\\\\</span><span class=\"s\">r</span><span class=\"t\">\\\\</span><span class=\"s\">n</span><span class=\"t\">\\\\</span><span class=\"s\">f]\"</span><span class=\"k\">,</span>","","                <span class=\"c\">// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier</span>","                identifier <span class=\"k\">=</span> <span class=\"s\">\"(?:</span><span class=\"t\">\\\\\\\\</span><span class=\"s\">.|[</span><span class=\"t\">\\\\</span><span class=\"s\">w-]|[^</span><span class=\"t\">\\0</span><span class=\"s\">-</span><span class=\"t\">\\\\</span><span class=\"s\">xa0])+\"</span><span class=\"k\">,</span>","","                <span class=\"c\">// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors</span>","                attributes <span class=\"k\">=</span> <span class=\"s\">\"</span><span class=\"t\">\\\\</span><span class=\"s\">[\"</span> <span class=\"k\">+</span> whitespace <span class=\"k\">+</span> <span class=\"s\">\"*(\"</span> <span class=\"k\">+</span> identifier <span class=\"k\">+</span> <span class=\"s\">\")(?:\"</span> <span class=\"k\">+</span> whitespace <span class=\"k\">+</span>","                    <span class=\"c\">// Operator (capture 2)</span>","                    <span class=\"s\">\"*([*^$|!~]?=)\"</span> <span class=\"k\">+</span> whitespace <span class=\"k\">+</span>","                    <span class=\"c\">// \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"</span>","                    <span class=\"s\">\"*(?:'((?:</span><span class=\"t\">\\\\\\\\</span><span class=\"s\">.|[^</span><span class=\"t\">\\\\\\\\</span><span class=\"s\">'])*)'|</span><span class=\"t\">\\\"</span><span class=\"s\">((?:</span><span class=\"t\">\\\\\\\\</span><span class=\"s\">.|[^</span><span class=\"t\">\\\\\\\\\\\"</span><span class=\"s\">])*)</span><span class=\"t\">\\\"</span><span class=\"s\">|(\"</span> <span class=\"k\">+</span> identifier <span class=\"k\">+</span> <span class=\"s\">\"))|)\"</span> <span class=\"k\">+</span> whitespace <span class=\"k\">+</span>","                    <span class=\"s\">\"*</span><span class=\"t\">\\\\</span><span class=\"s\">]\"</span><span class=\"k\">,</span>","","                pseudos <span class=\"k\">=</span> <span class=\"s\">\":(\"</span> <span class=\"k\">+</span> identifier <span class=\"k\">+</span> <span class=\"s\">\")(?:</span><span class=\"t\">\\\\</span><span class=\"s\">((\"</span> <span class=\"k\">+</span>","                    <span class=\"c\">// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:</span>","                    <span class=\"c\">// 1. quoted (capture 3; capture 4 or capture 5)</span>","                    <span class=\"s\">\"('((?:</span><span class=\"t\">\\\\\\\\</span><span class=\"s\">.|[^</span><span class=\"t\">\\\\\\\\</span><span class=\"s\">'])*)'|</span><span class=\"t\">\\\"</span><span class=\"s\">((?:</span><span class=\"t\">\\\\\\\\</span><span class=\"s\">.|[^</span><span class=\"t\">\\\\\\\\\\\"</span><span class=\"s\">])*)</span><span class=\"t\">\\\"</span><span class=\"s\">)|\"</span> <span class=\"k\">+</span>","                    <span class=\"c\">// 2. simple (capture 6)</span>","                    <span class=\"s\">\"((?:</span><span class=\"t\">\\\\\\\\</span><span class=\"s\">.|[^</span><span class=\"t\">\\\\\\\\</span><span class=\"s\">()[</span><span class=\"t\">\\\\</span><span class=\"s\">]]|\"</span> <span class=\"k\">+</span> attributes <span class=\"k\">+</span> <span class=\"s\">\")*)|\"</span> <span class=\"k\">+</span>","                    <span class=\"c\">// 3. anything else (capture 2)</span>","                    <span class=\"s\">\".*\"</span> <span class=\"k\">+</span>","                    <span class=\"s\">\")</span><span class=\"t\">\\\\</span><span class=\"s\">)|)\"</span><span class=\"k\">,</span>","","                <span class=\"c\">// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter</span>","                rwhitespace <span class=\"k\">=</span> <span class=\"k\">new</span> RegExp<span class=\"k\">(</span> whitespace <span class=\"k\">+</span> <span class=\"s\">\"+\"</span><span class=\"k\">,</span> <span class=\"s\">\"g\"</span> <span class=\"k\">),</span>","                rtrim <span class=\"k\">=</span> <span class=\"k\">new</span> RegExp<span class=\"k\">(</span> <span class=\"s\">\"^\"</span> <span class=\"k\">+</span> whitespace <span class=\"k\">+</span> <span class=\"s\">\"+|((?:^|[^</span><span class=\"t\">\\\\\\\\</span><span class=\"s\">])(?:</span><span class=\"t\">\\\\\\\\</span><span class=\"s\">.)*)\"</span> <span class=\"k\">+</span> whitespace <span class=\"k\">+</span> <span class=\"s\">\"+$\"</span><span class=\"k\">,</span> <span class=\"s\">\"g\"</span> <span class=\"k\">),</span>","","                rcomma <span class=\"k\">=</span> <span class=\"k\">new</span> RegExp<span class=\"k\">(</span> <span class=\"s\">\"^\"</span> <span class=\"k\">+</span> whitespace <span class=\"k\">+</span> <span class=\"s\">\"*,\"</span> <span class=\"k\">+</span> whitespace <span class=\"k\">+</span> <span class=\"s\">\"*\"</span> <span class=\"k\">),</span>","                rcombinators <span class=\"k\">=</span> <span class=\"k\">new</span> RegExp<span class=\"k\">(</span> <span class=\"s\">\"^\"</span> <span class=\"k\">+</span> whitespace <span class=\"k\">+</span> <span class=\"s\">\"*([&gt;+~]|\"</span> <span class=\"k\">+</span> whitespace <span class=\"k\">+</span> <span class=\"s\">\")\"</span> <span class=\"k\">+</span> whitespace <span class=\"k\">+</span> <span class=\"s\">\"*\"</span> <span class=\"k\">),</span>","","                rattributeQuotes <span class=\"k\">=</span> <span class=\"k\">new</span> RegExp<span class=\"k\">(</span> <span class=\"s\">\"=\"</span> <span class=\"k\">+</span> whitespace <span class=\"k\">+</span> <span class=\"s\">\"*([^</span><span class=\"t\">\\\\</span><span class=\"s\">]'</span><span class=\"t\">\\\"</span><span class=\"s\">]*?)\"</span> <span class=\"k\">+</span> whitespace <span class=\"k\">+</span> <span class=\"s\">\"*</span><span class=\"t\">\\\\</span><span class=\"s\">]\"</span><span class=\"k\">,</span> <span class=\"s\">\"g\"</span> <span class=\"k\">),</span>","","                rpseudo <span class=\"k\">=</span> <span class=\"k\">new</span> RegExp<span class=\"k\">(</span> pseudos <span class=\"k\">),</span>","                ridentifier <span class=\"k\">=</span> <span class=\"k\">new</span> RegExp<span class=\"k\">(</span> <span class=\"s\">\"^\"</span> <span class=\"k\">+</span> identifier <span class=\"k\">+</span> <span class=\"s\">\"$\"</span> <span class=\"k\">),</span>","","                matchExpr <span class=\"k\">=</span> <span class=\"k\">{</span>","                    <span class=\"s\">\"ID\"</span><span class=\"k\">:</span> <span class=\"k\">new</span> RegExp<span class=\"k\">(</span> <span class=\"s\">\"^#(\"</span> <span class=\"k\">+</span> identifier <span class=\"k\">+</span> <span class=\"s\">\")\"</span> <span class=\"k\">),</span>","                    <span class=\"s\">\"CLASS\"</span><span class=\"k\">:</span> <span class=\"k\">new</span> RegExp<span class=\"k\">(</span> <span class=\"s\">\"^</span><span class=\"t\">\\\\</span><span class=\"s\">.(\"</span> <span class=\"k\">+</span> identifier <span class=\"k\">+</span> <span class=\"s\">\")\"</span> <span class=\"k\">),</span>","                    <span class=\"s\">\"TAG\"</span><span class=\"k\">:</span> <span class=\"k\">new</span> RegExp<span class=\"k\">(</span> <span class=\"s\">\"^(\"</span> <span class=\"k\">+</span> identifier <span class=\"k\">+</span> <span class=\"s\">\"|[*])\"</span> <span class=\"k\">),</span>","                    <span class=\"s\">\"ATTR\"</span><span class=\"k\">:</span> <span class=\"k\">new</span> RegExp<span class=\"k\">(</span> <span class=\"s\">\"^\"</span> <span class=\"k\">+</span> attributes <span class=\"k\">),</span>","                    <span class=\"s\">\"PSEUDO\"</span><span class=\"k\">:</span> <span class=\"k\">new</span> RegExp<span class=\"k\">(</span> <span class=\"s\">\"^\"</span> <span class=\"k\">+</span> pseudos <span class=\"k\">),</span>","                    <span class=\"s\">\"CHILD\"</span><span class=\"k\">:</span> <span class=\"k\">new</span> RegExp<span class=\"k\">(</span> <span class=\"s\">\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:</span><span class=\"t\">\\\\</span><span class=\"s\">(\"</span> <span class=\"k\">+</span> whitespace <span class=\"k\">+</span>","                        <span class=\"s\">\"*(even|odd|(([+-]|)(</span><span class=\"t\">\\\\</span><span class=\"s\">d*)n|)\"</span> <span class=\"k\">+</span> whitespace <span class=\"k\">+</span> <span class=\"s\">\"*(?:([+-]|)\"</span> <span class=\"k\">+</span> whitespace <span class=\"k\">+</span>","                        <span class=\"s\">\"*(</span><span class=\"t\">\\\\</span><span class=\"s\">d+)|))\"</span> <span class=\"k\">+</span> whitespace <span class=\"k\">+</span> <span class=\"s\">\"*</span><span class=\"t\">\\\\</span><span class=\"s\">)|)\"</span><span class=\"k\">,</span> <span class=\"s\">\"i\"</span> <span class=\"k\">),</span>","                    <span class=\"s\">\"bool\"</span><span class=\"k\">:</span> <span class=\"k\">new</span> RegExp<span class=\"k\">(</span> <span class=\"s\">\"^(?:\"</span> <span class=\"k\">+</span> booleans <span class=\"k\">+</span> <span class=\"s\">\")$\"</span><span class=\"k\">,</span> <span class=\"s\">\"i\"</span> <span class=\"k\">),</span>","                    <span class=\"c\">// For use in libraries implementing .is()</span>","                    <span class=\"c\">// We use this for POS matching in `select`</span>","                    <span class=\"s\">\"needsContext\"</span><span class=\"k\">:</span> <span class=\"k\">new</span> RegExp<span class=\"k\">(</span> <span class=\"s\">\"^\"</span> <span class=\"k\">+</span> whitespace <span class=\"k\">+</span> <span class=\"s\">\"*[&gt;+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:</span><span class=\"t\">\\\\</span><span class=\"s\">(\"</span> <span class=\"k\">+</span>","                        whitespace <span class=\"k\">+</span> <span class=\"s\">\"*((?:-</span><span class=\"t\">\\\\</span><span class=\"s\">d)?</span><span class=\"t\">\\\\</span><span class=\"s\">d*)\"</span> <span class=\"k\">+</span> whitespace <span class=\"k\">+</span> <span class=\"s\">\"*</span><span class=\"t\">\\\\</span><span class=\"s\">)|)(?=[^-]|$)\"</span><span class=\"k\">,</span> <span class=\"s\">\"i\"</span> <span class=\"k\">)</span>","                <span class=\"k\">}</span><span class=\"k\">,</span>","","                rinputs <span class=\"k\">=</span> <span class=\"s\">/^(?:input|select|textarea|button)$/i</span><span class=\"k\">,</span>","                rheader <span class=\"k\">=</span> <span class=\"s\">/^h\\d$/i</span><span class=\"k\">,</span>","","                rnative <span class=\"k\">=</span> <span class=\"s\">/^[^{]+\\{\\s*\\[native \\w/</span><span class=\"k\">,</span>","","                <span class=\"c\">// Easily-parseable/retrievable ID or TAG or CLASS selectors</span>","                rquickExpr <span class=\"k\">=</span> <span class=\"s\">/^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/</span><span class=\"k\">,</span>","","                rsibling <span class=\"k\">=</span> <span class=\"s\">/[+~]/</span><span class=\"k\">,</span>","","                <span class=\"c\">// CSS escapes</span>","                <span class=\"c\">// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters</span>","                runescape <span class=\"k\">=</span> <span class=\"k\">new</span> RegExp<span class=\"k\">(</span> <span class=\"s\">\"</span><span class=\"t\">\\\\\\\\</span><span class=\"s\">([</span><span class=\"t\">\\\\</span><span class=\"s\">da-f]{1,6}\"</span> <span class=\"k\">+</span> whitespace <span class=\"k\">+</span> <span class=\"s\">\"?|(\"</span> <span class=\"k\">+</span> whitespace <span class=\"k\">+</span> <span class=\"s\">\")|.)\"</span><span class=\"k\">,</span> <span class=\"s\">\"ig\"</span> <span class=\"k\">),</span>","                funescape <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> _<span class=\"k\">,</span> escaped<span class=\"k\">,</span> escapedWhitespace <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> high <span class=\"k\">=</span> <span class=\"s\">\"0x\"</span> <span class=\"k\">+</span> escaped <span class=\"k\">-</span> <span class=\"s\">0x10000</span><span class=\"k\">;</span>","                    <span class=\"c\">// NaN means non-codepoint</span>","                    <span class=\"c\">// Support: Firefox&lt;24</span>","                    <span class=\"c\">// Workaround erroneous numeric interpretation of +\"0x\"</span>","                    <span class=\"k\">return</span> high <span class=\"k\">!==</span> high <span class=\"k\">||</span> escapedWhitespace <span class=\"k\">?</span>","                        escaped <span class=\"k\">:</span>","                        high <span class=\"k\">&lt;</span> <span class=\"s\">0</span> <span class=\"k\">?</span>","                            <span class=\"c\">// BMP codepoint</span>","                            String<span class=\"k\">.</span>fromCharCode<span class=\"k\">(</span> high <span class=\"k\">+</span> <span class=\"s\">0x10000</span> <span class=\"k\">)</span> <span class=\"k\">:</span>","                            <span class=\"c\">// Supplemental Plane codepoint (surrogate pair)</span>","                            String<span class=\"k\">.</span>fromCharCode<span class=\"k\">(</span> high <span class=\"k\">&gt;&gt;</span> <span class=\"s\">10</span> <span class=\"k\">|</span> <span class=\"s\">0xD800</span><span class=\"k\">,</span> high <span class=\"k\">&amp;</span> <span class=\"s\">0x3FF</span> <span class=\"k\">|</span> <span class=\"s\">0xDC00</span> <span class=\"k\">);</span>","                <span class=\"k\">}</span><span class=\"k\">,</span>","","                <span class=\"c\">// CSS string/identifier serialization</span>","                <span class=\"c\">// https://drafts.csswg.org/cssom/#common-serializing-idioms</span>","                rcssescape <span class=\"k\">=</span> <span class=\"s\">/([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g</span><span class=\"k\">,</span>","                fcssescape <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> ch<span class=\"k\">,</span> asCodePoint <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> asCodePoint <span class=\"k\">)</span> <span class=\"k\">{</span>","","                        <span class=\"c\">// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> ch <span class=\"k\">===</span> <span class=\"s\">\"</span><span class=\"t\">\\0</span><span class=\"s\">\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">return</span> <span class=\"s\">\"</span><span class=\"t\">\\u</span><span class=\"s\">FFFD\"</span><span class=\"k\">;</span>","                        <span class=\"k\">}</span>","","                        <span class=\"c\">// Control characters and (dependent upon position) numbers get escaped as code points</span>","                        <span class=\"k\">return</span> ch<span class=\"k\">.</span>slice<span class=\"k\">(</span> <span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"k\">-</span><span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">\"</span><span class=\"t\">\\\\</span><span class=\"s\">\"</span> <span class=\"k\">+</span> ch<span class=\"k\">.</span>charCodeAt<span class=\"k\">(</span> ch<span class=\"k\">.</span>length <span class=\"k\">-</span> <span class=\"s\">1</span> <span class=\"k\">).</span>toString<span class=\"k\">(</span> <span class=\"s\">16</span> <span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">\" \"</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","","                    <span class=\"c\">// Other potentially-special ASCII characters get backslash-escaped</span>","                    <span class=\"k\">return</span> <span class=\"s\">\"</span><span class=\"t\">\\\\</span><span class=\"s\">\"</span> <span class=\"k\">+</span> ch<span class=\"k\">;</span>","                <span class=\"k\">}</span><span class=\"k\">,</span>","","                <span class=\"c\">// Used for iframes</span>","                <span class=\"c\">// See setDocument()</span>","                <span class=\"c\">// Removing the function wrapper causes a \"Permission Denied\"</span>","                <span class=\"c\">// error in IE</span>","                unloadHandler <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                    setDocument<span class=\"k\">();</span>","                <span class=\"k\">}</span><span class=\"k\">,</span>","","                disabledAncestor <span class=\"k\">=</span> addCombinator<span class=\"k\">(</span>","                    <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">return</span> elem<span class=\"k\">.</span>disabled <span class=\"k\">===</span> <span class=\"k\">true</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span><span class=\"s\">\"form\"</span> <span class=\"k\">in</span> elem <span class=\"k\">||</span> <span class=\"s\">\"label\"</span> <span class=\"k\">in</span> elem<span class=\"k\">);</span>","                    <span class=\"k\">}</span><span class=\"k\">,</span>","                    <span class=\"k\">{</span> dir<span class=\"k\">:</span> <span class=\"s\">\"parentNode\"</span><span class=\"k\">,</span> next<span class=\"k\">:</span> <span class=\"s\">\"legend\"</span> <span class=\"k\">}</span>","                <span class=\"k\">);</span>","","<span class=\"c\">// Optimize for push.apply( _, NodeList )</span>","            <span class=\"k\">try</span> <span class=\"k\">{</span>","                push<span class=\"k\">.</span>apply<span class=\"k\">(</span>","                    <span class=\"k\">(</span>arr <span class=\"k\">=</span> slice<span class=\"k\">.</span>call<span class=\"k\">(</span> preferredDoc<span class=\"k\">.</span>childNodes <span class=\"k\">)),</span>","                    preferredDoc<span class=\"k\">.</span>childNodes","                <span class=\"k\">);</span>","                <span class=\"c\">// Support: Android&lt;4.0</span>","                <span class=\"c\">// Detect silently failing push.apply</span>","                arr<span class=\"k\">[</span> preferredDoc<span class=\"k\">.</span>childNodes<span class=\"k\">.</span>length <span class=\"k\">].</span>nodeType<span class=\"k\">;</span>","            <span class=\"k\">}</span> <span class=\"k\">catch</span> <span class=\"k\">(</span> e <span class=\"k\">)</span> <span class=\"k\">{</span>","                push <span class=\"k\">=</span> <span class=\"k\">{</span> apply<span class=\"k\">:</span> arr<span class=\"k\">.</span>length <span class=\"k\">?</span>","","                        <span class=\"c\">// Leverage slice if possible</span>","                        <span class=\"k\">function</span><span class=\"k\">(</span> target<span class=\"k\">,</span> els <span class=\"k\">)</span> <span class=\"k\">{</span>","                            push_native<span class=\"k\">.</span>apply<span class=\"k\">(</span> target<span class=\"k\">,</span> slice<span class=\"k\">.</span>call<span class=\"k\">(</span>els<span class=\"k\">)</span> <span class=\"k\">);</span>","                        <span class=\"k\">}</span> <span class=\"k\">:</span>","","                        <span class=\"c\">// Support: IE&lt;9</span>","                        <span class=\"c\">// Otherwise append directly</span>","                        <span class=\"k\">function</span><span class=\"k\">(</span> target<span class=\"k\">,</span> els <span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">var</span> j <span class=\"k\">=</span> target<span class=\"k\">.</span>length<span class=\"k\">,</span>","                                i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","                            <span class=\"c\">// Can't trust NodeList.length</span>","                            <span class=\"k\">while</span> <span class=\"k\">(</span> <span class=\"k\">(</span>target<span class=\"k\">[</span>j<span class=\"k\">++]</span> <span class=\"k\">=</span> els<span class=\"k\">[</span>i<span class=\"k\">++])</span> <span class=\"k\">)</span> <span class=\"k\">{}</span>","                            target<span class=\"k\">.</span>length <span class=\"k\">=</span> j <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">;</span>","                        <span class=\"k\">}</span>","                <span class=\"k\">}</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">function</span> Sizzle<span class=\"k\">(</span> selector<span class=\"k\">,</span> context<span class=\"k\">,</span> results<span class=\"k\">,</span> seed <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> m<span class=\"k\">,</span> i<span class=\"k\">,</span> elem<span class=\"k\">,</span> nid<span class=\"k\">,</span> match<span class=\"k\">,</span> groups<span class=\"k\">,</span> newSelector<span class=\"k\">,</span>","                    newContext <span class=\"k\">=</span> context <span class=\"k\">&amp;&amp;</span> context<span class=\"k\">.</span>ownerDocument<span class=\"k\">,</span>","","                    <span class=\"c\">// nodeType defaults to 9, since context defaults to document</span>","                    nodeType <span class=\"k\">=</span> context <span class=\"k\">?</span> context<span class=\"k\">.</span>nodeType <span class=\"k\">:</span> <span class=\"s\">9</span><span class=\"k\">;</span>","","                results <span class=\"k\">=</span> results <span class=\"k\">||</span> <span class=\"k\">[];</span>","","                <span class=\"c\">// Return early from calls with invalid selector or context</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">typeof</span> selector <span class=\"k\">!==</span> <span class=\"s\">\"string\"</span> <span class=\"k\">||</span> <span class=\"k\">!</span>selector <span class=\"k\">||</span>","                    nodeType <span class=\"k\">!==</span> <span class=\"s\">1</span> <span class=\"k\">&amp;&amp;</span> nodeType <span class=\"k\">!==</span> <span class=\"s\">9</span> <span class=\"k\">&amp;&amp;</span> nodeType <span class=\"k\">!==</span> <span class=\"s\">11</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                    <span class=\"k\">return</span> results<span class=\"k\">;</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// Try to shortcut find operations (as opposed to filters) in HTML documents</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>seed <span class=\"k\">)</span> <span class=\"k\">{</span>","","                    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">(</span> context <span class=\"k\">?</span> context<span class=\"k\">.</span>ownerDocument <span class=\"k\">||</span> context <span class=\"k\">:</span> preferredDoc <span class=\"k\">)</span> <span class=\"k\">!==</span> document <span class=\"k\">)</span> <span class=\"k\">{</span>","                        setDocument<span class=\"k\">(</span> context <span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                    context <span class=\"k\">=</span> context <span class=\"k\">||</span> document<span class=\"k\">;</span>","","                    <span class=\"k\">if</span> <span class=\"k\">(</span> documentIsHTML <span class=\"k\">)</span> <span class=\"k\">{</span>","","                        <span class=\"c\">// If the selector is sufficiently simple, try using a \"get*By*\" DOM method</span>","                        <span class=\"c\">// (excepting DocumentFragment context, where the methods don't exist)</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> nodeType <span class=\"k\">!==</span> <span class=\"s\">11</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>match <span class=\"k\">=</span> rquickExpr<span class=\"k\">.</span>exec<span class=\"k\">(</span> selector <span class=\"k\">))</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                            <span class=\"c\">// ID selector</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">(</span>m <span class=\"k\">=</span> match<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">])</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                                <span class=\"c\">// Document context</span>","                                <span class=\"k\">if</span> <span class=\"k\">(</span> nodeType <span class=\"k\">===</span> <span class=\"s\">9</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">(</span>elem <span class=\"k\">=</span> context<span class=\"k\">.</span>getElementById<span class=\"k\">(</span> m <span class=\"k\">))</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                                        <span class=\"c\">// Support: IE, Opera, Webkit</span>","                                        <span class=\"c\">// TODO: identify versions</span>","                                        <span class=\"c\">// getElementById can match elements by name instead of ID</span>","                                        <span class=\"k\">if</span> <span class=\"k\">(</span> elem<span class=\"k\">.</span>id <span class=\"k\">===</span> m <span class=\"k\">)</span> <span class=\"k\">{</span>","                                            results<span class=\"k\">.</span>push<span class=\"k\">(</span> elem <span class=\"k\">);</span>","                                            <span class=\"k\">return</span> results<span class=\"k\">;</span>","                                        <span class=\"k\">}</span>","                                    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                                        <span class=\"k\">return</span> results<span class=\"k\">;</span>","                                    <span class=\"k\">}</span>","","                                    <span class=\"c\">// Element context</span>","                                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","","                                    <span class=\"c\">// Support: IE, Opera, Webkit</span>","                                    <span class=\"c\">// TODO: identify versions</span>","                                    <span class=\"c\">// getElementById can match elements by name instead of ID</span>","                                    <span class=\"k\">if</span> <span class=\"k\">(</span> newContext <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>elem <span class=\"k\">=</span> newContext<span class=\"k\">.</span>getElementById<span class=\"k\">(</span> m <span class=\"k\">))</span> <span class=\"k\">&amp;&amp;</span>","                                        contains<span class=\"k\">(</span> context<span class=\"k\">,</span> elem <span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span>","                                        elem<span class=\"k\">.</span>id <span class=\"k\">===</span> m <span class=\"k\">)</span> <span class=\"k\">{</span>","","                                        results<span class=\"k\">.</span>push<span class=\"k\">(</span> elem <span class=\"k\">);</span>","                                        <span class=\"k\">return</span> results<span class=\"k\">;</span>","                                    <span class=\"k\">}</span>","                                <span class=\"k\">}</span>","","                                <span class=\"c\">// Type selector</span>","                            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> match<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                push<span class=\"k\">.</span>apply<span class=\"k\">(</span> results<span class=\"k\">,</span> context<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span> selector <span class=\"k\">)</span> <span class=\"k\">);</span>","                                <span class=\"k\">return</span> results<span class=\"k\">;</span>","","                                <span class=\"c\">// Class selector</span>","                            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">(</span>m <span class=\"k\">=</span> match<span class=\"k\">[</span><span class=\"s\">3</span><span class=\"k\">])</span> <span class=\"k\">&amp;&amp;</span> support<span class=\"k\">.</span>getElementsByClassName <span class=\"k\">&amp;&amp;</span>","                                context<span class=\"k\">.</span>getElementsByClassName <span class=\"k\">)</span> <span class=\"k\">{</span>","","                                push<span class=\"k\">.</span>apply<span class=\"k\">(</span> results<span class=\"k\">,</span> context<span class=\"k\">.</span>getElementsByClassName<span class=\"k\">(</span> m <span class=\"k\">)</span> <span class=\"k\">);</span>","                                <span class=\"k\">return</span> results<span class=\"k\">;</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span>","","                        <span class=\"c\">// Take advantage of querySelectorAll</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> support<span class=\"k\">.</span>qsa <span class=\"k\">&amp;&amp;</span>","                            <span class=\"k\">!</span>compilerCache<span class=\"k\">[</span> selector <span class=\"k\">+</span> <span class=\"s\">\" \"</span> <span class=\"k\">]</span> <span class=\"k\">&amp;&amp;</span>","                            <span class=\"k\">(!</span>rbuggyQSA <span class=\"k\">||</span> <span class=\"k\">!</span>rbuggyQSA<span class=\"k\">.</span>test<span class=\"k\">(</span> selector <span class=\"k\">))</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                            <span class=\"k\">if</span> <span class=\"k\">(</span> nodeType <span class=\"k\">!==</span> <span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                newContext <span class=\"k\">=</span> context<span class=\"k\">;</span>","                                newSelector <span class=\"k\">=</span> selector<span class=\"k\">;</span>","","                                <span class=\"c\">// qSA looks outside Element context, which is not what we want</span>","                                <span class=\"c\">// Thanks to Andrew Dupont for this workaround technique</span>","                                <span class=\"c\">// Support: IE &lt;=8</span>","                                <span class=\"c\">// Exclude object elements</span>","                            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> context<span class=\"k\">.</span>nodeName<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">!==</span> <span class=\"s\">\"object\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                                <span class=\"c\">// Capture the context ID, setting it first if necessary</span>","                                <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">(</span>nid <span class=\"k\">=</span> context<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span> <span class=\"s\">\"id\"</span> <span class=\"k\">))</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                    nid <span class=\"k\">=</span> nid<span class=\"k\">.</span>replace<span class=\"k\">(</span> rcssescape<span class=\"k\">,</span> fcssescape <span class=\"k\">);</span>","                                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                                    context<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span> <span class=\"s\">\"id\"</span><span class=\"k\">,</span> <span class=\"k\">(</span>nid <span class=\"k\">=</span> expando<span class=\"k\">)</span> <span class=\"k\">);</span>","                                <span class=\"k\">}</span>","","                                <span class=\"c\">// Prefix every selector in the list</span>","                                groups <span class=\"k\">=</span> tokenize<span class=\"k\">(</span> selector <span class=\"k\">);</span>","                                i <span class=\"k\">=</span> groups<span class=\"k\">.</span>length<span class=\"k\">;</span>","                                <span class=\"k\">while</span> <span class=\"k\">(</span> i<span class=\"k\">--</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                    groups<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">\"#\"</span> <span class=\"k\">+</span> nid <span class=\"k\">+</span> <span class=\"s\">\" \"</span> <span class=\"k\">+</span> toSelector<span class=\"k\">(</span> groups<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">);</span>","                                <span class=\"k\">}</span>","                                newSelector <span class=\"k\">=</span> groups<span class=\"k\">.</span>join<span class=\"k\">(</span> <span class=\"s\">\",\"</span> <span class=\"k\">);</span>","","                                <span class=\"c\">// Expand context for sibling selectors</span>","                                newContext <span class=\"k\">=</span> rsibling<span class=\"k\">.</span>test<span class=\"k\">(</span> selector <span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> testContext<span class=\"k\">(</span> context<span class=\"k\">.</span>parentNode <span class=\"k\">)</span> <span class=\"k\">||</span>","                                    context<span class=\"k\">;</span>","                            <span class=\"k\">}</span>","","                            <span class=\"k\">if</span> <span class=\"k\">(</span> newSelector <span class=\"k\">)</span> <span class=\"k\">{</span>","                                <span class=\"k\">try</span> <span class=\"k\">{</span>","                                    push<span class=\"k\">.</span>apply<span class=\"k\">(</span> results<span class=\"k\">,</span>","                                        newContext<span class=\"k\">.</span>querySelectorAll<span class=\"k\">(</span> newSelector <span class=\"k\">)</span>","                                    <span class=\"k\">);</span>","                                    <span class=\"k\">return</span> results<span class=\"k\">;</span>","                                <span class=\"k\">}</span> <span class=\"k\">catch</span> <span class=\"k\">(</span> qsaError <span class=\"k\">)</span> <span class=\"k\">{</span>","                                <span class=\"k\">}</span> <span class=\"k\">finally</span> <span class=\"k\">{</span>","                                    <span class=\"k\">if</span> <span class=\"k\">(</span> nid <span class=\"k\">===</span> expando <span class=\"k\">)</span> <span class=\"k\">{</span>","                                        context<span class=\"k\">.</span>removeAttribute<span class=\"k\">(</span> <span class=\"s\">\"id\"</span> <span class=\"k\">);</span>","                                    <span class=\"k\">}</span>","                                <span class=\"k\">}</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// All others</span>","                <span class=\"k\">return</span> select<span class=\"k\">(</span> selector<span class=\"k\">.</span>replace<span class=\"k\">(</span> rtrim<span class=\"k\">,</span> <span class=\"s\">\"$1\"</span> <span class=\"k\">),</span> context<span class=\"k\">,</span> results<span class=\"k\">,</span> seed <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">/**</span>","<span class=\"c\">             * Create key-value caches of limited size</span>","<span class=\"c\">             * @returns {function(string, object)} Returns the Object data after storing it on itself with</span>","<span class=\"c\">             *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)</span>","<span class=\"c\">             *\tdeleting the oldest entry</span>","<span class=\"c\">             */</span>","            <span class=\"k\">function</span> createCache<span class=\"k\">()</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> keys <span class=\"k\">=</span> <span class=\"k\">[];</span>","","                <span class=\"k\">function</span> cache<span class=\"k\">(</span> key<span class=\"k\">,</span> value <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"c\">// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> keys<span class=\"k\">.</span>push<span class=\"k\">(</span> key <span class=\"k\">+</span> <span class=\"s\">\" \"</span> <span class=\"k\">)</span> <span class=\"k\">&gt;</span> Expr<span class=\"k\">.</span>cacheLength <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"c\">// Only keep the most recent entries</span>","                        <span class=\"k\">delete</span> cache<span class=\"k\">[</span> keys<span class=\"k\">.</span>shift<span class=\"k\">()</span> <span class=\"k\">];</span>","                    <span class=\"k\">}</span>","                    <span class=\"k\">return</span> <span class=\"k\">(</span>cache<span class=\"k\">[</span> key <span class=\"k\">+</span> <span class=\"s\">\" \"</span> <span class=\"k\">]</span> <span class=\"k\">=</span> value<span class=\"k\">);</span>","                <span class=\"k\">}</span>","                <span class=\"k\">return</span> cache<span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">/**</span>","<span class=\"c\">             * Mark a function for special use by Sizzle</span>","<span class=\"c\">             * @param {Function} fn The function to mark</span>","<span class=\"c\">             */</span>","            <span class=\"k\">function</span> markFunction<span class=\"k\">(</span> fn <span class=\"k\">)</span> <span class=\"k\">{</span>","                fn<span class=\"k\">[</span> expando <span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","                <span class=\"k\">return</span> fn<span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">/**</span>","<span class=\"c\">             * Support testing using an element</span>","<span class=\"c\">             * @param {Function} fn Passed the created element and returns a boolean result</span>","<span class=\"c\">             */</span>","            <span class=\"k\">function</span> assert<span class=\"k\">(</span> fn <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> el <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">\"fieldset\"</span><span class=\"k\">);</span>","","                <span class=\"k\">try</span> <span class=\"k\">{</span>","                    <span class=\"k\">return</span> <span class=\"k\">!!</span>fn<span class=\"k\">(</span> el <span class=\"k\">);</span>","                <span class=\"k\">}</span> <span class=\"k\">catch</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","                <span class=\"k\">}</span> <span class=\"k\">finally</span> <span class=\"k\">{</span>","                    <span class=\"c\">// Remove from its parent by default</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> el<span class=\"k\">.</span>parentNode <span class=\"k\">)</span> <span class=\"k\">{</span>","                        el<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>removeChild<span class=\"k\">(</span> el <span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                    <span class=\"c\">// release memory in IE</span>","                    el <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">/**</span>","<span class=\"c\">             * Adds the same handler for all of the specified attrs</span>","<span class=\"c\">             * @param {String} attrs Pipe-separated list of attributes</span>","<span class=\"c\">             * @param {Function} handler The method that will be applied</span>","<span class=\"c\">             */</span>","            <span class=\"k\">function</span> addHandle<span class=\"k\">(</span> attrs<span class=\"k\">,</span> handler <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> arr <span class=\"k\">=</span> attrs<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">\"|\"</span><span class=\"k\">),</span>","                    i <span class=\"k\">=</span> arr<span class=\"k\">.</span>length<span class=\"k\">;</span>","","                <span class=\"k\">while</span> <span class=\"k\">(</span> i<span class=\"k\">--</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    Expr<span class=\"k\">.</span>attrHandle<span class=\"k\">[</span> arr<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">]</span> <span class=\"k\">=</span> handler<span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">/**</span>","<span class=\"c\">             * Checks document order of two siblings</span>","<span class=\"c\">             * @param {Element} a</span>","<span class=\"c\">             * @param {Element} b</span>","<span class=\"c\">             * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b</span>","<span class=\"c\">             */</span>","            <span class=\"k\">function</span> siblingCheck<span class=\"k\">(</span> a<span class=\"k\">,</span> b <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> cur <span class=\"k\">=</span> b <span class=\"k\">&amp;&amp;</span> a<span class=\"k\">,</span>","                    diff <span class=\"k\">=</span> cur <span class=\"k\">&amp;&amp;</span> a<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">&amp;&amp;</span> b<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">&amp;&amp;</span>","                        a<span class=\"k\">.</span>sourceIndex <span class=\"k\">-</span> b<span class=\"k\">.</span>sourceIndex<span class=\"k\">;</span>","","                <span class=\"c\">// Use IE sourceIndex if available on both nodes</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> diff <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">return</span> diff<span class=\"k\">;</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// Check if b follows a</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> cur <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">while</span> <span class=\"k\">(</span> <span class=\"k\">(</span>cur <span class=\"k\">=</span> cur<span class=\"k\">.</span>nextSibling<span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> cur <span class=\"k\">===</span> b <span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">return</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","","                <span class=\"k\">return</span> a <span class=\"k\">?</span> <span class=\"s\">1</span> <span class=\"k\">:</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">/**</span>","<span class=\"c\">             * Returns a function to use in pseudos for input types</span>","<span class=\"c\">             * @param {String} type</span>","<span class=\"c\">             */</span>","            <span class=\"k\">function</span> createInputPseudo<span class=\"k\">(</span> type <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> name <span class=\"k\">=</span> elem<span class=\"k\">.</span>nodeName<span class=\"k\">.</span>toLowerCase<span class=\"k\">();</span>","                    <span class=\"k\">return</span> name <span class=\"k\">===</span> <span class=\"s\">\"input\"</span> <span class=\"k\">&amp;&amp;</span> elem<span class=\"k\">.</span>type <span class=\"k\">===</span> type<span class=\"k\">;</span>","                <span class=\"k\">}</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">/**</span>","<span class=\"c\">             * Returns a function to use in pseudos for buttons</span>","<span class=\"c\">             * @param {String} type</span>","<span class=\"c\">             */</span>","            <span class=\"k\">function</span> createButtonPseudo<span class=\"k\">(</span> type <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> name <span class=\"k\">=</span> elem<span class=\"k\">.</span>nodeName<span class=\"k\">.</span>toLowerCase<span class=\"k\">();</span>","                    <span class=\"k\">return</span> <span class=\"k\">(</span>name <span class=\"k\">===</span> <span class=\"s\">\"input\"</span> <span class=\"k\">||</span> name <span class=\"k\">===</span> <span class=\"s\">\"button\"</span><span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> elem<span class=\"k\">.</span>type <span class=\"k\">===</span> type<span class=\"k\">;</span>","                <span class=\"k\">}</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">/**</span>","<span class=\"c\">             * Returns a function to use in pseudos for :enabled/:disabled</span>","<span class=\"c\">             * @param {Boolean} disabled true for :disabled; false for :enabled</span>","<span class=\"c\">             */</span>","            <span class=\"k\">function</span> createDisabledPseudo<span class=\"k\">(</span> disabled <span class=\"k\">)</span> <span class=\"k\">{</span>","","                <span class=\"c\">// Known :disabled false positives: fieldset[disabled] &gt; legend:nth-of-type(n+2) :can-disable</span>","                <span class=\"k\">return</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","","                    <span class=\"c\">// Only certain elements can match :enabled or :disabled</span>","                    <span class=\"c\">// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled</span>","                    <span class=\"c\">// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"s\">\"form\"</span> <span class=\"k\">in</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","","                        <span class=\"c\">// Check for inherited disabledness on relevant non-disabled elements:</span>","                        <span class=\"c\">// * listed form-associated elements in a disabled fieldset</span>","                        <span class=\"c\">//   https://html.spec.whatwg.org/multipage/forms.html#category-listed</span>","                        <span class=\"c\">//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled</span>","                        <span class=\"c\">// * option elements in a disabled optgroup</span>","                        <span class=\"c\">//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled</span>","                        <span class=\"c\">// All such elements have a \"form\" property.</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> elem<span class=\"k\">.</span>parentNode <span class=\"k\">&amp;&amp;</span> elem<span class=\"k\">.</span>disabled <span class=\"k\">===</span> <span class=\"k\">false</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                            <span class=\"c\">// Option elements defer to a parent optgroup if present</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"s\">\"label\"</span> <span class=\"k\">in</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","                                <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"s\">\"label\"</span> <span class=\"k\">in</span> elem<span class=\"k\">.</span>parentNode <span class=\"k\">)</span> <span class=\"k\">{</span>","                                    <span class=\"k\">return</span> elem<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>disabled <span class=\"k\">===</span> disabled<span class=\"k\">;</span>","                                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                                    <span class=\"k\">return</span> elem<span class=\"k\">.</span>disabled <span class=\"k\">===</span> disabled<span class=\"k\">;</span>","                                <span class=\"k\">}</span>","                            <span class=\"k\">}</span>","","                            <span class=\"c\">// Support: IE 6 - 11</span>","                            <span class=\"c\">// Use the isDisabled shortcut property to check for disabled fieldset ancestors</span>","                            <span class=\"k\">return</span> elem<span class=\"k\">.</span>isDisabled <span class=\"k\">===</span> disabled <span class=\"k\">||</span>","","                                <span class=\"c\">// Where there is no isDisabled, check manually</span>","                                <span class=\"c\">/* jshint -W018 */</span>","                                elem<span class=\"k\">.</span>isDisabled <span class=\"k\">!==</span> <span class=\"k\">!</span>disabled <span class=\"k\">&amp;&amp;</span>","                                disabledAncestor<span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">===</span> disabled<span class=\"k\">;</span>","                        <span class=\"k\">}</span>","","                        <span class=\"k\">return</span> elem<span class=\"k\">.</span>disabled <span class=\"k\">===</span> disabled<span class=\"k\">;</span>","","                        <span class=\"c\">// Try to winnow out elements that can't be disabled before trusting the disabled property.</span>","                        <span class=\"c\">// Some victims get caught in our net (label, legend, menu, track), but it shouldn't</span>","                        <span class=\"c\">// even exist on them, let alone have a boolean value.</span>","                    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"s\">\"label\"</span> <span class=\"k\">in</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">return</span> elem<span class=\"k\">.</span>disabled <span class=\"k\">===</span> disabled<span class=\"k\">;</span>","                    <span class=\"k\">}</span>","","                    <span class=\"c\">// Remaining elements are neither :enabled nor :disabled</span>","                    <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","                <span class=\"k\">}</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">/**</span>","<span class=\"c\">             * Returns a function to use in pseudos for positionals</span>","<span class=\"c\">             * @param {Function} fn</span>","<span class=\"c\">             */</span>","            <span class=\"k\">function</span> createPositionalPseudo<span class=\"k\">(</span> fn <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> markFunction<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span> argument <span class=\"k\">)</span> <span class=\"k\">{</span>","                    argument <span class=\"k\">=</span> <span class=\"k\">+</span>argument<span class=\"k\">;</span>","                    <span class=\"k\">return</span> markFunction<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span> seed<span class=\"k\">,</span> matches <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">var</span> j<span class=\"k\">,</span>","                            matchIndexes <span class=\"k\">=</span> fn<span class=\"k\">(</span> <span class=\"k\">[],</span> seed<span class=\"k\">.</span>length<span class=\"k\">,</span> argument <span class=\"k\">),</span>","                            i <span class=\"k\">=</span> matchIndexes<span class=\"k\">.</span>length<span class=\"k\">;</span>","","                        <span class=\"c\">// Match elements found at the specified indexes</span>","                        <span class=\"k\">while</span> <span class=\"k\">(</span> i<span class=\"k\">--</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span> seed<span class=\"k\">[</span> <span class=\"k\">(</span>j <span class=\"k\">=</span> matchIndexes<span class=\"k\">[</span>i<span class=\"k\">])</span> <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                seed<span class=\"k\">[</span>j<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">!(</span>matches<span class=\"k\">[</span>j<span class=\"k\">]</span> <span class=\"k\">=</span> seed<span class=\"k\">[</span>j<span class=\"k\">]);</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span><span class=\"k\">);</span>","                <span class=\"k\">}</span><span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">/**</span>","<span class=\"c\">             * Checks a node for validity as a Sizzle context</span>","<span class=\"c\">             * @param {Element|Object=} context</span>","<span class=\"c\">             * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value</span>","<span class=\"c\">             */</span>","            <span class=\"k\">function</span> testContext<span class=\"k\">(</span> context <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> context <span class=\"k\">&amp;&amp;</span> <span class=\"k\">typeof</span> context<span class=\"k\">.</span>getElementsByTagName <span class=\"k\">!==</span> <span class=\"s\">\"undefined\"</span> <span class=\"k\">&amp;&amp;</span> context<span class=\"k\">;</span>","            <span class=\"k\">}</span>","","<span class=\"c\">// Expose support vars for convenience</span>","            support <span class=\"k\">=</span> Sizzle<span class=\"k\">.</span>support <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","","            <span class=\"c\">/**</span>","<span class=\"c\">             * Detects XML nodes</span>","<span class=\"c\">             * @param {Element|Object} elem An element or a document</span>","<span class=\"c\">             * @returns {Boolean} True iff elem is a non-HTML XML node</span>","<span class=\"c\">             */</span>","            isXML <span class=\"k\">=</span> Sizzle<span class=\"k\">.</span>isXML <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"c\">// documentElement is verified for cases where it doesn't yet exist</span>","                <span class=\"c\">// (such as loading iframes in IE - #4833)</span>","                <span class=\"k\">var</span> documentElement <span class=\"k\">=</span> elem <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>elem<span class=\"k\">.</span>ownerDocument <span class=\"k\">||</span> elem<span class=\"k\">).</span>documentElement<span class=\"k\">;</span>","                <span class=\"k\">return</span> documentElement <span class=\"k\">?</span> documentElement<span class=\"k\">.</span>nodeName <span class=\"k\">!==</span> <span class=\"s\">\"HTML\"</span> <span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">;</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","","            <span class=\"c\">/**</span>","<span class=\"c\">             * Sets document-related variables once based on the current document</span>","<span class=\"c\">             * @param {Element|Object} [doc] An element or document object to use to set the document</span>","<span class=\"c\">             * @returns {Object} Returns the current document</span>","<span class=\"c\">             */</span>","            setDocument <span class=\"k\">=</span> Sizzle<span class=\"k\">.</span>setDocument <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> node <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> hasCompare<span class=\"k\">,</span> subWindow<span class=\"k\">,</span>","                    doc <span class=\"k\">=</span> node <span class=\"k\">?</span> node<span class=\"k\">.</span>ownerDocument <span class=\"k\">||</span> node <span class=\"k\">:</span> preferredDoc<span class=\"k\">;</span>","","                <span class=\"c\">// Return early if doc is invalid or already selected</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> doc <span class=\"k\">===</span> document <span class=\"k\">||</span> doc<span class=\"k\">.</span>nodeType <span class=\"k\">!==</span> <span class=\"s\">9</span> <span class=\"k\">||</span> <span class=\"k\">!</span>doc<span class=\"k\">.</span>documentElement <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">return</span> document<span class=\"k\">;</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// Update global variables</span>","                document <span class=\"k\">=</span> doc<span class=\"k\">;</span>","                docElem <span class=\"k\">=</span> document<span class=\"k\">.</span>documentElement<span class=\"k\">;</span>","                documentIsHTML <span class=\"k\">=</span> <span class=\"k\">!</span>isXML<span class=\"k\">(</span> document <span class=\"k\">);</span>","","                <span class=\"c\">// Support: IE 9-11, Edge</span>","                <span class=\"c\">// Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> preferredDoc <span class=\"k\">!==</span> document <span class=\"k\">&amp;&amp;</span>","                    <span class=\"k\">(</span>subWindow <span class=\"k\">=</span> document<span class=\"k\">.</span>defaultView<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> subWindow<span class=\"k\">.</span>top <span class=\"k\">!==</span> subWindow <span class=\"k\">)</span> <span class=\"k\">{</span>","","                    <span class=\"c\">// Support: IE 11, Edge</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> subWindow<span class=\"k\">.</span>addEventListener <span class=\"k\">)</span> <span class=\"k\">{</span>","                        subWindow<span class=\"k\">.</span>addEventListener<span class=\"k\">(</span> <span class=\"s\">\"unload\"</span><span class=\"k\">,</span> unloadHandler<span class=\"k\">,</span> <span class=\"k\">false</span> <span class=\"k\">);</span>","","                        <span class=\"c\">// Support: IE 9 - 10 only</span>","                    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> subWindow<span class=\"k\">.</span>attachEvent <span class=\"k\">)</span> <span class=\"k\">{</span>","                        subWindow<span class=\"k\">.</span>attachEvent<span class=\"k\">(</span> <span class=\"s\">\"onunload\"</span><span class=\"k\">,</span> unloadHandler <span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">/* Attributes</span>","<span class=\"c\">\t---------------------------------------------------------------------- */</span>","","                <span class=\"c\">// Support: IE&lt;8</span>","                <span class=\"c\">// Verify that getAttribute really returns attributes and not properties</span>","                <span class=\"c\">// (excepting IE8 booleans)</span>","                support<span class=\"k\">.</span>attributes <span class=\"k\">=</span> assert<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span> el <span class=\"k\">)</span> <span class=\"k\">{</span>","                    el<span class=\"k\">.</span>className <span class=\"k\">=</span> <span class=\"s\">\"i\"</span><span class=\"k\">;</span>","                    <span class=\"k\">return</span> <span class=\"k\">!</span>el<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span><span class=\"s\">\"className\"</span><span class=\"k\">);</span>","                <span class=\"k\">}</span><span class=\"k\">);</span>","","                <span class=\"c\">/* getElement(s)By*</span>","<span class=\"c\">\t---------------------------------------------------------------------- */</span>","","                <span class=\"c\">// Check if getElementsByTagName(\"*\") returns only elements</span>","                support<span class=\"k\">.</span>getElementsByTagName <span class=\"k\">=</span> assert<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span> el <span class=\"k\">)</span> <span class=\"k\">{</span>","                    el<span class=\"k\">.</span>appendChild<span class=\"k\">(</span> document<span class=\"k\">.</span>createComment<span class=\"k\">(</span><span class=\"s\">\"\"</span><span class=\"k\">)</span> <span class=\"k\">);</span>","                    <span class=\"k\">return</span> <span class=\"k\">!</span>el<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span><span class=\"s\">\"*\"</span><span class=\"k\">).</span>length<span class=\"k\">;</span>","                <span class=\"k\">}</span><span class=\"k\">);</span>","","                <span class=\"c\">// Support: IE&lt;9</span>","                support<span class=\"k\">.</span>getElementsByClassName <span class=\"k\">=</span> rnative<span class=\"k\">.</span>test<span class=\"k\">(</span> document<span class=\"k\">.</span>getElementsByClassName <span class=\"k\">);</span>","","                <span class=\"c\">// Support: IE&lt;10</span>","                <span class=\"c\">// Check if getElementById returns elements by name</span>","                <span class=\"c\">// The broken getElementById methods don't pick up programmatically-set names,</span>","                <span class=\"c\">// so use a roundabout getElementsByName test</span>","                support<span class=\"k\">.</span>getById <span class=\"k\">=</span> assert<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span> el <span class=\"k\">)</span> <span class=\"k\">{</span>","                    docElem<span class=\"k\">.</span>appendChild<span class=\"k\">(</span> el <span class=\"k\">).</span>id <span class=\"k\">=</span> expando<span class=\"k\">;</span>","                    <span class=\"k\">return</span> <span class=\"k\">!</span>document<span class=\"k\">.</span>getElementsByName <span class=\"k\">||</span> <span class=\"k\">!</span>document<span class=\"k\">.</span>getElementsByName<span class=\"k\">(</span> expando <span class=\"k\">).</span>length<span class=\"k\">;</span>","                <span class=\"k\">}</span><span class=\"k\">);</span>","","                <span class=\"c\">// ID filter and find</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> support<span class=\"k\">.</span>getById <span class=\"k\">)</span> <span class=\"k\">{</span>","                    Expr<span class=\"k\">.</span>filter<span class=\"k\">[</span><span class=\"s\">\"ID\"</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> id <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">var</span> attrId <span class=\"k\">=</span> id<span class=\"k\">.</span>replace<span class=\"k\">(</span> runescape<span class=\"k\">,</span> funescape <span class=\"k\">);</span>","                        <span class=\"k\">return</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">return</span> elem<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span><span class=\"s\">\"id\"</span><span class=\"k\">)</span> <span class=\"k\">===</span> attrId<span class=\"k\">;</span>","                        <span class=\"k\">}</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span><span class=\"k\">;</span>","                    Expr<span class=\"k\">.</span>find<span class=\"k\">[</span><span class=\"s\">\"ID\"</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> id<span class=\"k\">,</span> context <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">typeof</span> context<span class=\"k\">.</span>getElementById <span class=\"k\">!==</span> <span class=\"s\">\"undefined\"</span> <span class=\"k\">&amp;&amp;</span> documentIsHTML <span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">var</span> elem <span class=\"k\">=</span> context<span class=\"k\">.</span>getElementById<span class=\"k\">(</span> id <span class=\"k\">);</span>","                            <span class=\"k\">return</span> elem <span class=\"k\">?</span> <span class=\"k\">[</span> elem <span class=\"k\">]</span> <span class=\"k\">:</span> <span class=\"k\">[];</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span><span class=\"k\">;</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    Expr<span class=\"k\">.</span>filter<span class=\"k\">[</span><span class=\"s\">\"ID\"</span><span class=\"k\">]</span> <span class=\"k\">=</span>  <span class=\"k\">function</span><span class=\"k\">(</span> id <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">var</span> attrId <span class=\"k\">=</span> id<span class=\"k\">.</span>replace<span class=\"k\">(</span> runescape<span class=\"k\">,</span> funescape <span class=\"k\">);</span>","                        <span class=\"k\">return</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">var</span> node <span class=\"k\">=</span> <span class=\"k\">typeof</span> elem<span class=\"k\">.</span>getAttributeNode <span class=\"k\">!==</span> <span class=\"s\">\"undefined\"</span> <span class=\"k\">&amp;&amp;</span>","                                elem<span class=\"k\">.</span>getAttributeNode<span class=\"k\">(</span><span class=\"s\">\"id\"</span><span class=\"k\">);</span>","                            <span class=\"k\">return</span> node <span class=\"k\">&amp;&amp;</span> node<span class=\"k\">.</span>value <span class=\"k\">===</span> attrId<span class=\"k\">;</span>","                        <span class=\"k\">}</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span><span class=\"k\">;</span>","","                    <span class=\"c\">// Support: IE 6 - 7 only</span>","                    <span class=\"c\">// getElementById is not reliable as a find shortcut</span>","                    Expr<span class=\"k\">.</span>find<span class=\"k\">[</span><span class=\"s\">\"ID\"</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> id<span class=\"k\">,</span> context <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">typeof</span> context<span class=\"k\">.</span>getElementById <span class=\"k\">!==</span> <span class=\"s\">\"undefined\"</span> <span class=\"k\">&amp;&amp;</span> documentIsHTML <span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">var</span> node<span class=\"k\">,</span> i<span class=\"k\">,</span> elems<span class=\"k\">,</span>","                                elem <span class=\"k\">=</span> context<span class=\"k\">.</span>getElementById<span class=\"k\">(</span> id <span class=\"k\">);</span>","","                            <span class=\"k\">if</span> <span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","","                                <span class=\"c\">// Verify the id attribute</span>","                                node <span class=\"k\">=</span> elem<span class=\"k\">.</span>getAttributeNode<span class=\"k\">(</span><span class=\"s\">\"id\"</span><span class=\"k\">);</span>","                                <span class=\"k\">if</span> <span class=\"k\">(</span> node <span class=\"k\">&amp;&amp;</span> node<span class=\"k\">.</span>value <span class=\"k\">===</span> id <span class=\"k\">)</span> <span class=\"k\">{</span>","                                    <span class=\"k\">return</span> <span class=\"k\">[</span> elem <span class=\"k\">];</span>","                                <span class=\"k\">}</span>","","                                <span class=\"c\">// Fall back on getElementsByName</span>","                                elems <span class=\"k\">=</span> context<span class=\"k\">.</span>getElementsByName<span class=\"k\">(</span> id <span class=\"k\">);</span>","                                i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","                                <span class=\"k\">while</span> <span class=\"k\">(</span> <span class=\"k\">(</span>elem <span class=\"k\">=</span> elems<span class=\"k\">[</span>i<span class=\"k\">++])</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                    node <span class=\"k\">=</span> elem<span class=\"k\">.</span>getAttributeNode<span class=\"k\">(</span><span class=\"s\">\"id\"</span><span class=\"k\">);</span>","                                    <span class=\"k\">if</span> <span class=\"k\">(</span> node <span class=\"k\">&amp;&amp;</span> node<span class=\"k\">.</span>value <span class=\"k\">===</span> id <span class=\"k\">)</span> <span class=\"k\">{</span>","                                        <span class=\"k\">return</span> <span class=\"k\">[</span> elem <span class=\"k\">];</span>","                                    <span class=\"k\">}</span>","                                <span class=\"k\">}</span>","                            <span class=\"k\">}</span>","","                            <span class=\"k\">return</span> <span class=\"k\">[];</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// Tag</span>","                Expr<span class=\"k\">.</span>find<span class=\"k\">[</span><span class=\"s\">\"TAG\"</span><span class=\"k\">]</span> <span class=\"k\">=</span> support<span class=\"k\">.</span>getElementsByTagName <span class=\"k\">?</span>","                    <span class=\"k\">function</span><span class=\"k\">(</span> tag<span class=\"k\">,</span> context <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">typeof</span> context<span class=\"k\">.</span>getElementsByTagName <span class=\"k\">!==</span> <span class=\"s\">\"undefined\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">return</span> context<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span> tag <span class=\"k\">);</span>","","                            <span class=\"c\">// DocumentFragment nodes don't have gEBTN</span>","                        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> support<span class=\"k\">.</span>qsa <span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">return</span> context<span class=\"k\">.</span>querySelectorAll<span class=\"k\">(</span> tag <span class=\"k\">);</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span> <span class=\"k\">:</span>","","                    <span class=\"k\">function</span><span class=\"k\">(</span> tag<span class=\"k\">,</span> context <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">var</span> elem<span class=\"k\">,</span>","                            tmp <span class=\"k\">=</span> <span class=\"k\">[],</span>","                            i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","                            <span class=\"c\">// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too</span>","                            results <span class=\"k\">=</span> context<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span> tag <span class=\"k\">);</span>","","                        <span class=\"c\">// Filter out possible comments</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> tag <span class=\"k\">===</span> <span class=\"s\">\"*\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">while</span> <span class=\"k\">(</span> <span class=\"k\">(</span>elem <span class=\"k\">=</span> results<span class=\"k\">[</span>i<span class=\"k\">++])</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                <span class=\"k\">if</span> <span class=\"k\">(</span> elem<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                    tmp<span class=\"k\">.</span>push<span class=\"k\">(</span> elem <span class=\"k\">);</span>","                                <span class=\"k\">}</span>","                            <span class=\"k\">}</span>","","                            <span class=\"k\">return</span> tmp<span class=\"k\">;</span>","                        <span class=\"k\">}</span>","                        <span class=\"k\">return</span> results<span class=\"k\">;</span>","                    <span class=\"k\">}</span><span class=\"k\">;</span>","","                <span class=\"c\">// Class</span>","                Expr<span class=\"k\">.</span>find<span class=\"k\">[</span><span class=\"s\">\"CLASS\"</span><span class=\"k\">]</span> <span class=\"k\">=</span> support<span class=\"k\">.</span>getElementsByClassName <span class=\"k\">&amp;&amp;</span> <span class=\"k\">function</span><span class=\"k\">(</span> className<span class=\"k\">,</span> context <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">typeof</span> context<span class=\"k\">.</span>getElementsByClassName <span class=\"k\">!==</span> <span class=\"s\">\"undefined\"</span> <span class=\"k\">&amp;&amp;</span> documentIsHTML <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">return</span> context<span class=\"k\">.</span>getElementsByClassName<span class=\"k\">(</span> className <span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span><span class=\"k\">;</span>","","                <span class=\"c\">/* QSA/matchesSelector</span>","<span class=\"c\">\t---------------------------------------------------------------------- */</span>","","                <span class=\"c\">// QSA and matchesSelector support</span>","","                <span class=\"c\">// matchesSelector(:active) reports false when true (IE9/Opera 11.5)</span>","                rbuggyMatches <span class=\"k\">=</span> <span class=\"k\">[];</span>","","                <span class=\"c\">// qSa(:focus) reports false when true (Chrome 21)</span>","                <span class=\"c\">// We allow this because of a bug in IE8/9 that throws an error</span>","                <span class=\"c\">// whenever `document.activeElement` is accessed on an iframe</span>","                <span class=\"c\">// So, we allow :focus to pass through QSA all the time to avoid the IE error</span>","                <span class=\"c\">// See https://bugs.jquery.com/ticket/13378</span>","                rbuggyQSA <span class=\"k\">=</span> <span class=\"k\">[];</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">(</span>support<span class=\"k\">.</span>qsa <span class=\"k\">=</span> rnative<span class=\"k\">.</span>test<span class=\"k\">(</span> document<span class=\"k\">.</span>querySelectorAll <span class=\"k\">))</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"c\">// Build QSA regex</span>","                    <span class=\"c\">// Regex strategy adopted from Diego Perini</span>","                    assert<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span> el <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"c\">// Select is set to empty string on purpose</span>","                        <span class=\"c\">// This is to test IE's treatment of not explicitly</span>","                        <span class=\"c\">// setting a boolean content attribute,</span>","                        <span class=\"c\">// since its presence should be enough</span>","                        <span class=\"c\">// https://bugs.jquery.com/ticket/12359</span>","                        docElem<span class=\"k\">.</span>appendChild<span class=\"k\">(</span> el <span class=\"k\">).</span>innerHTML <span class=\"k\">=</span> <span class=\"s\">\"&lt;a id='\"</span> <span class=\"k\">+</span> expando <span class=\"k\">+</span> <span class=\"s\">\"'&gt;&lt;/a&gt;\"</span> <span class=\"k\">+</span>","                            <span class=\"s\">\"&lt;select id='\"</span> <span class=\"k\">+</span> expando <span class=\"k\">+</span> <span class=\"s\">\"-</span><span class=\"t\">\\r\\\\</span><span class=\"s\">' msallowcapture=''&gt;\"</span> <span class=\"k\">+</span>","                            <span class=\"s\">\"&lt;option selected=''&gt;&lt;/option&gt;&lt;/select&gt;\"</span><span class=\"k\">;</span>","","                        <span class=\"c\">// Support: IE8, Opera 11-12.16</span>","                        <span class=\"c\">// Nothing should be selected when empty strings follow ^= or $= or *=</span>","                        <span class=\"c\">// The test attribute must be unknown in Opera but \"safe\" for WinRT</span>","                        <span class=\"c\">// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> el<span class=\"k\">.</span>querySelectorAll<span class=\"k\">(</span><span class=\"s\">\"[msallowcapture^='']\"</span><span class=\"k\">).</span>length <span class=\"k\">)</span> <span class=\"k\">{</span>","                            rbuggyQSA<span class=\"k\">.</span>push<span class=\"k\">(</span> <span class=\"s\">\"[*^$]=\"</span> <span class=\"k\">+</span> whitespace <span class=\"k\">+</span> <span class=\"s\">\"*(?:''|</span><span class=\"t\">\\\"\\\"</span><span class=\"s\">)\"</span> <span class=\"k\">);</span>","                        <span class=\"k\">}</span>","","                        <span class=\"c\">// Support: IE8</span>","                        <span class=\"c\">// Boolean attributes and \"value\" are not treated correctly</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>el<span class=\"k\">.</span>querySelectorAll<span class=\"k\">(</span><span class=\"s\">\"[selected]\"</span><span class=\"k\">).</span>length <span class=\"k\">)</span> <span class=\"k\">{</span>","                            rbuggyQSA<span class=\"k\">.</span>push<span class=\"k\">(</span> <span class=\"s\">\"</span><span class=\"t\">\\\\</span><span class=\"s\">[\"</span> <span class=\"k\">+</span> whitespace <span class=\"k\">+</span> <span class=\"s\">\"*(?:value|\"</span> <span class=\"k\">+</span> booleans <span class=\"k\">+</span> <span class=\"s\">\")\"</span> <span class=\"k\">);</span>","                        <span class=\"k\">}</span>","","                        <span class=\"c\">// Support: Chrome&lt;29, Android&lt;4.4, Safari&lt;7.0+, iOS&lt;7.0+, PhantomJS&lt;1.9.8+</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>el<span class=\"k\">.</span>querySelectorAll<span class=\"k\">(</span> <span class=\"s\">\"[id~=\"</span> <span class=\"k\">+</span> expando <span class=\"k\">+</span> <span class=\"s\">\"-]\"</span> <span class=\"k\">).</span>length <span class=\"k\">)</span> <span class=\"k\">{</span>","                            rbuggyQSA<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">\"~=\"</span><span class=\"k\">);</span>","                        <span class=\"k\">}</span>","","                        <span class=\"c\">// Webkit/Opera - :checked should return selected option elements</span>","                        <span class=\"c\">// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked</span>","                        <span class=\"c\">// IE8 throws error here and will not see later tests</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>el<span class=\"k\">.</span>querySelectorAll<span class=\"k\">(</span><span class=\"s\">\":checked\"</span><span class=\"k\">).</span>length <span class=\"k\">)</span> <span class=\"k\">{</span>","                            rbuggyQSA<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">\":checked\"</span><span class=\"k\">);</span>","                        <span class=\"k\">}</span>","","                        <span class=\"c\">// Support: Safari 8+, iOS 8+</span>","                        <span class=\"c\">// https://bugs.webkit.org/show_bug.cgi?id=136851</span>","                        <span class=\"c\">// In-page `selector#id sibling-combinator selector` fails</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>el<span class=\"k\">.</span>querySelectorAll<span class=\"k\">(</span> <span class=\"s\">\"a#\"</span> <span class=\"k\">+</span> expando <span class=\"k\">+</span> <span class=\"s\">\"+*\"</span> <span class=\"k\">).</span>length <span class=\"k\">)</span> <span class=\"k\">{</span>","                            rbuggyQSA<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">\".#.+[+~]\"</span><span class=\"k\">);</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span><span class=\"k\">);</span>","","                    assert<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span> el <span class=\"k\">)</span> <span class=\"k\">{</span>","                        el<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> <span class=\"s\">\"&lt;a href='' disabled='disabled'&gt;&lt;/a&gt;\"</span> <span class=\"k\">+</span>","                            <span class=\"s\">\"&lt;select disabled='disabled'&gt;&lt;option/&gt;&lt;/select&gt;\"</span><span class=\"k\">;</span>","","                        <span class=\"c\">// Support: Windows 8 Native Apps</span>","                        <span class=\"c\">// The type and name attributes are restricted during .innerHTML assignment</span>","                        <span class=\"k\">var</span> input <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">\"input\"</span><span class=\"k\">);</span>","                        input<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span> <span class=\"s\">\"type\"</span><span class=\"k\">,</span> <span class=\"s\">\"hidden\"</span> <span class=\"k\">);</span>","                        el<span class=\"k\">.</span>appendChild<span class=\"k\">(</span> input <span class=\"k\">).</span>setAttribute<span class=\"k\">(</span> <span class=\"s\">\"name\"</span><span class=\"k\">,</span> <span class=\"s\">\"D\"</span> <span class=\"k\">);</span>","","                        <span class=\"c\">// Support: IE8</span>","                        <span class=\"c\">// Enforce case-sensitivity of name attribute</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> el<span class=\"k\">.</span>querySelectorAll<span class=\"k\">(</span><span class=\"s\">\"[name=d]\"</span><span class=\"k\">).</span>length <span class=\"k\">)</span> <span class=\"k\">{</span>","                            rbuggyQSA<span class=\"k\">.</span>push<span class=\"k\">(</span> <span class=\"s\">\"name\"</span> <span class=\"k\">+</span> whitespace <span class=\"k\">+</span> <span class=\"s\">\"*[*^$|!~]?=\"</span> <span class=\"k\">);</span>","                        <span class=\"k\">}</span>","","                        <span class=\"c\">// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)</span>","                        <span class=\"c\">// IE8 throws error here and will not see later tests</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> el<span class=\"k\">.</span>querySelectorAll<span class=\"k\">(</span><span class=\"s\">\":enabled\"</span><span class=\"k\">).</span>length <span class=\"k\">!==</span> <span class=\"s\">2</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                            rbuggyQSA<span class=\"k\">.</span>push<span class=\"k\">(</span> <span class=\"s\">\":enabled\"</span><span class=\"k\">,</span> <span class=\"s\">\":disabled\"</span> <span class=\"k\">);</span>","                        <span class=\"k\">}</span>","","                        <span class=\"c\">// Support: IE9-11+</span>","                        <span class=\"c\">// IE's :disabled selector does not pick up the children of disabled fieldsets</span>","                        docElem<span class=\"k\">.</span>appendChild<span class=\"k\">(</span> el <span class=\"k\">).</span>disabled <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> el<span class=\"k\">.</span>querySelectorAll<span class=\"k\">(</span><span class=\"s\">\":disabled\"</span><span class=\"k\">).</span>length <span class=\"k\">!==</span> <span class=\"s\">2</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                            rbuggyQSA<span class=\"k\">.</span>push<span class=\"k\">(</span> <span class=\"s\">\":enabled\"</span><span class=\"k\">,</span> <span class=\"s\">\":disabled\"</span> <span class=\"k\">);</span>","                        <span class=\"k\">}</span>","","                        <span class=\"c\">// Opera 10-11 does not throw on post-comma invalid pseudos</span>","                        el<span class=\"k\">.</span>querySelectorAll<span class=\"k\">(</span><span class=\"s\">\"*,:x\"</span><span class=\"k\">);</span>","                        rbuggyQSA<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"s\">\",.*:\"</span><span class=\"k\">);</span>","                    <span class=\"k\">}</span><span class=\"k\">);</span>","                <span class=\"k\">}</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">(</span>support<span class=\"k\">.</span>matchesSelector <span class=\"k\">=</span> rnative<span class=\"k\">.</span>test<span class=\"k\">(</span> <span class=\"k\">(</span>matches <span class=\"k\">=</span> docElem<span class=\"k\">.</span>matches <span class=\"k\">||</span>","                    docElem<span class=\"k\">.</span>webkitMatchesSelector <span class=\"k\">||</span>","                    docElem<span class=\"k\">.</span>mozMatchesSelector <span class=\"k\">||</span>","                    docElem<span class=\"k\">.</span>oMatchesSelector <span class=\"k\">||</span>","                    docElem<span class=\"k\">.</span>msMatchesSelector<span class=\"k\">)</span> <span class=\"k\">))</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                    assert<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span> el <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"c\">// Check to see if it's possible to do matchesSelector</span>","                        <span class=\"c\">// on a disconnected node (IE 9)</span>","                        support<span class=\"k\">.</span>disconnectedMatch <span class=\"k\">=</span> matches<span class=\"k\">.</span>call<span class=\"k\">(</span> el<span class=\"k\">,</span> <span class=\"s\">\"*\"</span> <span class=\"k\">);</span>","","                        <span class=\"c\">// This should fail with an exception</span>","                        <span class=\"c\">// Gecko does not error, returns false instead</span>","                        matches<span class=\"k\">.</span>call<span class=\"k\">(</span> el<span class=\"k\">,</span> <span class=\"s\">\"[s!='']:x\"</span> <span class=\"k\">);</span>","                        rbuggyMatches<span class=\"k\">.</span>push<span class=\"k\">(</span> <span class=\"s\">\"!=\"</span><span class=\"k\">,</span> pseudos <span class=\"k\">);</span>","                    <span class=\"k\">}</span><span class=\"k\">);</span>","                <span class=\"k\">}</span>","","                rbuggyQSA <span class=\"k\">=</span> rbuggyQSA<span class=\"k\">.</span>length <span class=\"k\">&amp;&amp;</span> <span class=\"k\">new</span> RegExp<span class=\"k\">(</span> rbuggyQSA<span class=\"k\">.</span>join<span class=\"k\">(</span><span class=\"s\">\"|\"</span><span class=\"k\">)</span> <span class=\"k\">);</span>","                rbuggyMatches <span class=\"k\">=</span> rbuggyMatches<span class=\"k\">.</span>length <span class=\"k\">&amp;&amp;</span> <span class=\"k\">new</span> RegExp<span class=\"k\">(</span> rbuggyMatches<span class=\"k\">.</span>join<span class=\"k\">(</span><span class=\"s\">\"|\"</span><span class=\"k\">)</span> <span class=\"k\">);</span>","","                <span class=\"c\">/* Contains</span>","<span class=\"c\">\t---------------------------------------------------------------------- */</span>","                hasCompare <span class=\"k\">=</span> rnative<span class=\"k\">.</span>test<span class=\"k\">(</span> docElem<span class=\"k\">.</span>compareDocumentPosition <span class=\"k\">);</span>","","                <span class=\"c\">// Element contains another</span>","                <span class=\"c\">// Purposefully self-exclusive</span>","                <span class=\"c\">// As in, an element does not contain itself</span>","                contains <span class=\"k\">=</span> hasCompare <span class=\"k\">||</span> rnative<span class=\"k\">.</span>test<span class=\"k\">(</span> docElem<span class=\"k\">.</span>contains <span class=\"k\">)</span> <span class=\"k\">?</span>","                    <span class=\"k\">function</span><span class=\"k\">(</span> a<span class=\"k\">,</span> b <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">var</span> adown <span class=\"k\">=</span> a<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">9</span> <span class=\"k\">?</span> a<span class=\"k\">.</span>documentElement <span class=\"k\">:</span> a<span class=\"k\">,</span>","                            bup <span class=\"k\">=</span> b <span class=\"k\">&amp;&amp;</span> b<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","                        <span class=\"k\">return</span> a <span class=\"k\">===</span> bup <span class=\"k\">||</span> <span class=\"k\">!!(</span> bup <span class=\"k\">&amp;&amp;</span> bup<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>","                            adown<span class=\"k\">.</span>contains <span class=\"k\">?</span>","                                adown<span class=\"k\">.</span>contains<span class=\"k\">(</span> bup <span class=\"k\">)</span> <span class=\"k\">:</span>","                                a<span class=\"k\">.</span>compareDocumentPosition <span class=\"k\">&amp;&amp;</span> a<span class=\"k\">.</span>compareDocumentPosition<span class=\"k\">(</span> bup <span class=\"k\">)</span> <span class=\"k\">&amp;</span> <span class=\"s\">16</span>","                        <span class=\"k\">));</span>","                    <span class=\"k\">}</span> <span class=\"k\">:</span>","                    <span class=\"k\">function</span><span class=\"k\">(</span> a<span class=\"k\">,</span> b <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> b <span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">while</span> <span class=\"k\">(</span> <span class=\"k\">(</span>b <span class=\"k\">=</span> b<span class=\"k\">.</span>parentNode<span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                <span class=\"k\">if</span> <span class=\"k\">(</span> b <span class=\"k\">===</span> a <span class=\"k\">)</span> <span class=\"k\">{</span>","                                    <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","                                <span class=\"k\">}</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span>","                        <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span><span class=\"k\">;</span>","","                <span class=\"c\">/* Sorting</span>","<span class=\"c\">\t---------------------------------------------------------------------- */</span>","","                <span class=\"c\">// Document order sorting</span>","                sortOrder <span class=\"k\">=</span> hasCompare <span class=\"k\">?</span>","                    <span class=\"k\">function</span><span class=\"k\">(</span> a<span class=\"k\">,</span> b <span class=\"k\">)</span> <span class=\"k\">{</span>","","                        <span class=\"c\">// Flag for duplicate removal</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> a <span class=\"k\">===</span> b <span class=\"k\">)</span> <span class=\"k\">{</span>","                            hasDuplicate <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","                            <span class=\"k\">return</span> <span class=\"s\">0</span><span class=\"k\">;</span>","                        <span class=\"k\">}</span>","","                        <span class=\"c\">// Sort on method existence if only one input has compareDocumentPosition</span>","                        <span class=\"k\">var</span> compare <span class=\"k\">=</span> <span class=\"k\">!</span>a<span class=\"k\">.</span>compareDocumentPosition <span class=\"k\">-</span> <span class=\"k\">!</span>b<span class=\"k\">.</span>compareDocumentPosition<span class=\"k\">;</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> compare <span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">return</span> compare<span class=\"k\">;</span>","                        <span class=\"k\">}</span>","","                        <span class=\"c\">// Calculate position if both inputs belong to the same document</span>","                        compare <span class=\"k\">=</span> <span class=\"k\">(</span> a<span class=\"k\">.</span>ownerDocument <span class=\"k\">||</span> a <span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"k\">(</span> b<span class=\"k\">.</span>ownerDocument <span class=\"k\">||</span> b <span class=\"k\">)</span> <span class=\"k\">?</span>","                            a<span class=\"k\">.</span>compareDocumentPosition<span class=\"k\">(</span> b <span class=\"k\">)</span> <span class=\"k\">:</span>","","                            <span class=\"c\">// Otherwise we know they are disconnected</span>","                            <span class=\"s\">1</span><span class=\"k\">;</span>","","                        <span class=\"c\">// Disconnected nodes</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> compare <span class=\"k\">&amp;</span> <span class=\"s\">1</span> <span class=\"k\">||</span>","                            <span class=\"k\">(!</span>support<span class=\"k\">.</span>sortDetached <span class=\"k\">&amp;&amp;</span> b<span class=\"k\">.</span>compareDocumentPosition<span class=\"k\">(</span> a <span class=\"k\">)</span> <span class=\"k\">===</span> compare<span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                            <span class=\"c\">// Choose the first element that is related to our preferred document</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span> a <span class=\"k\">===</span> document <span class=\"k\">||</span> a<span class=\"k\">.</span>ownerDocument <span class=\"k\">===</span> preferredDoc <span class=\"k\">&amp;&amp;</span> contains<span class=\"k\">(</span>preferredDoc<span class=\"k\">,</span> a<span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                <span class=\"k\">return</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","                            <span class=\"k\">}</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span> b <span class=\"k\">===</span> document <span class=\"k\">||</span> b<span class=\"k\">.</span>ownerDocument <span class=\"k\">===</span> preferredDoc <span class=\"k\">&amp;&amp;</span> contains<span class=\"k\">(</span>preferredDoc<span class=\"k\">,</span> b<span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                <span class=\"k\">return</span> <span class=\"s\">1</span><span class=\"k\">;</span>","                            <span class=\"k\">}</span>","","                            <span class=\"c\">// Maintain original order</span>","                            <span class=\"k\">return</span> sortInput <span class=\"k\">?</span>","                                <span class=\"k\">(</span> indexOf<span class=\"k\">(</span> sortInput<span class=\"k\">,</span> a <span class=\"k\">)</span> <span class=\"k\">-</span> indexOf<span class=\"k\">(</span> sortInput<span class=\"k\">,</span> b <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">:</span>","                                <span class=\"s\">0</span><span class=\"k\">;</span>","                        <span class=\"k\">}</span>","","                        <span class=\"k\">return</span> compare <span class=\"k\">&amp;</span> <span class=\"s\">4</span> <span class=\"k\">?</span> <span class=\"k\">-</span><span class=\"s\">1</span> <span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span> <span class=\"k\">:</span>","                    <span class=\"k\">function</span><span class=\"k\">(</span> a<span class=\"k\">,</span> b <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"c\">// Exit early if the nodes are identical</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> a <span class=\"k\">===</span> b <span class=\"k\">)</span> <span class=\"k\">{</span>","                            hasDuplicate <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","                            <span class=\"k\">return</span> <span class=\"s\">0</span><span class=\"k\">;</span>","                        <span class=\"k\">}</span>","","                        <span class=\"k\">var</span> cur<span class=\"k\">,</span>","                            i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","                            aup <span class=\"k\">=</span> a<span class=\"k\">.</span>parentNode<span class=\"k\">,</span>","                            bup <span class=\"k\">=</span> b<span class=\"k\">.</span>parentNode<span class=\"k\">,</span>","                            ap <span class=\"k\">=</span> <span class=\"k\">[</span> a <span class=\"k\">],</span>","                            bp <span class=\"k\">=</span> <span class=\"k\">[</span> b <span class=\"k\">];</span>","","                        <span class=\"c\">// Parentless nodes are either documents or disconnected</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>aup <span class=\"k\">||</span> <span class=\"k\">!</span>bup <span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">return</span> a <span class=\"k\">===</span> document <span class=\"k\">?</span> <span class=\"k\">-</span><span class=\"s\">1</span> <span class=\"k\">:</span>","                                b <span class=\"k\">===</span> document <span class=\"k\">?</span> <span class=\"s\">1</span> <span class=\"k\">:</span>","                                    aup <span class=\"k\">?</span> <span class=\"k\">-</span><span class=\"s\">1</span> <span class=\"k\">:</span>","                                        bup <span class=\"k\">?</span> <span class=\"s\">1</span> <span class=\"k\">:</span>","                                            sortInput <span class=\"k\">?</span>","                                                <span class=\"k\">(</span> indexOf<span class=\"k\">(</span> sortInput<span class=\"k\">,</span> a <span class=\"k\">)</span> <span class=\"k\">-</span> indexOf<span class=\"k\">(</span> sortInput<span class=\"k\">,</span> b <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">:</span>","                                                <span class=\"s\">0</span><span class=\"k\">;</span>","","                            <span class=\"c\">// If the nodes are siblings, we can do a quick check</span>","                        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> aup <span class=\"k\">===</span> bup <span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">return</span> siblingCheck<span class=\"k\">(</span> a<span class=\"k\">,</span> b <span class=\"k\">);</span>","                        <span class=\"k\">}</span>","","                        <span class=\"c\">// Otherwise we need full lists of their ancestors for comparison</span>","                        cur <span class=\"k\">=</span> a<span class=\"k\">;</span>","                        <span class=\"k\">while</span> <span class=\"k\">(</span> <span class=\"k\">(</span>cur <span class=\"k\">=</span> cur<span class=\"k\">.</span>parentNode<span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                            ap<span class=\"k\">.</span>unshift<span class=\"k\">(</span> cur <span class=\"k\">);</span>","                        <span class=\"k\">}</span>","                        cur <span class=\"k\">=</span> b<span class=\"k\">;</span>","                        <span class=\"k\">while</span> <span class=\"k\">(</span> <span class=\"k\">(</span>cur <span class=\"k\">=</span> cur<span class=\"k\">.</span>parentNode<span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                            bp<span class=\"k\">.</span>unshift<span class=\"k\">(</span> cur <span class=\"k\">);</span>","                        <span class=\"k\">}</span>","","                        <span class=\"c\">// Walk down the tree looking for a discrepancy</span>","                        <span class=\"k\">while</span> <span class=\"k\">(</span> ap<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">===</span> bp<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                            i<span class=\"k\">++;</span>","                        <span class=\"k\">}</span>","","                        <span class=\"k\">return</span> i <span class=\"k\">?</span>","                            <span class=\"c\">// Do a sibling check if the nodes have a common ancestor</span>","                            siblingCheck<span class=\"k\">(</span> ap<span class=\"k\">[</span>i<span class=\"k\">],</span> bp<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">:</span>","","                            <span class=\"c\">// Otherwise nodes in our document sort first</span>","                            ap<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">===</span> preferredDoc <span class=\"k\">?</span> <span class=\"k\">-</span><span class=\"s\">1</span> <span class=\"k\">:</span>","                                bp<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">===</span> preferredDoc <span class=\"k\">?</span> <span class=\"s\">1</span> <span class=\"k\">:</span>","                                    <span class=\"s\">0</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span><span class=\"k\">;</span>","","                <span class=\"k\">return</span> document<span class=\"k\">;</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","","            Sizzle<span class=\"k\">.</span>matches <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> expr<span class=\"k\">,</span> elements <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> Sizzle<span class=\"k\">(</span> expr<span class=\"k\">,</span> <span class=\"k\">null</span><span class=\"k\">,</span> <span class=\"k\">null</span><span class=\"k\">,</span> elements <span class=\"k\">);</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","","            Sizzle<span class=\"k\">.</span>matchesSelector <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> expr <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"c\">// Set document vars if needed</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">(</span> elem<span class=\"k\">.</span>ownerDocument <span class=\"k\">||</span> elem <span class=\"k\">)</span> <span class=\"k\">!==</span> document <span class=\"k\">)</span> <span class=\"k\">{</span>","                    setDocument<span class=\"k\">(</span> elem <span class=\"k\">);</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// Make sure that attribute selectors are quoted</span>","                expr <span class=\"k\">=</span> expr<span class=\"k\">.</span>replace<span class=\"k\">(</span> rattributeQuotes<span class=\"k\">,</span> <span class=\"s\">\"='$1']\"</span> <span class=\"k\">);</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span> support<span class=\"k\">.</span>matchesSelector <span class=\"k\">&amp;&amp;</span> documentIsHTML <span class=\"k\">&amp;&amp;</span>","                    <span class=\"k\">!</span>compilerCache<span class=\"k\">[</span> expr <span class=\"k\">+</span> <span class=\"s\">\" \"</span> <span class=\"k\">]</span> <span class=\"k\">&amp;&amp;</span>","                    <span class=\"k\">(</span> <span class=\"k\">!</span>rbuggyMatches <span class=\"k\">||</span> <span class=\"k\">!</span>rbuggyMatches<span class=\"k\">.</span>test<span class=\"k\">(</span> expr <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span>","                    <span class=\"k\">(</span> <span class=\"k\">!</span>rbuggyQSA     <span class=\"k\">||</span> <span class=\"k\">!</span>rbuggyQSA<span class=\"k\">.</span>test<span class=\"k\">(</span> expr <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                    <span class=\"k\">try</span> <span class=\"k\">{</span>","                        <span class=\"k\">var</span> ret <span class=\"k\">=</span> matches<span class=\"k\">.</span>call<span class=\"k\">(</span> elem<span class=\"k\">,</span> expr <span class=\"k\">);</span>","","                        <span class=\"c\">// IE 9's matchesSelector returns false on disconnected nodes</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> ret <span class=\"k\">||</span> support<span class=\"k\">.</span>disconnectedMatch <span class=\"k\">||</span>","                            <span class=\"c\">// As well, disconnected nodes are said to be in a document</span>","                            <span class=\"c\">// fragment in IE 9</span>","                            elem<span class=\"k\">.</span>document <span class=\"k\">&amp;&amp;</span> elem<span class=\"k\">.</span>document<span class=\"k\">.</span>nodeType <span class=\"k\">!==</span> <span class=\"s\">11</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">return</span> ret<span class=\"k\">;</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span> <span class=\"k\">catch</span> <span class=\"k\">(</span>e<span class=\"k\">)</span> <span class=\"k\">{}</span>","                <span class=\"k\">}</span>","","                <span class=\"k\">return</span> Sizzle<span class=\"k\">(</span> expr<span class=\"k\">,</span> document<span class=\"k\">,</span> <span class=\"k\">null</span><span class=\"k\">,</span> <span class=\"k\">[</span> elem <span class=\"k\">]</span> <span class=\"k\">).</span>length <span class=\"k\">&gt;</span> <span class=\"s\">0</span><span class=\"k\">;</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","","            Sizzle<span class=\"k\">.</span>contains <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> context<span class=\"k\">,</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"c\">// Set document vars if needed</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">(</span> context<span class=\"k\">.</span>ownerDocument <span class=\"k\">||</span> context <span class=\"k\">)</span> <span class=\"k\">!==</span> document <span class=\"k\">)</span> <span class=\"k\">{</span>","                    setDocument<span class=\"k\">(</span> context <span class=\"k\">);</span>","                <span class=\"k\">}</span>","                <span class=\"k\">return</span> contains<span class=\"k\">(</span> context<span class=\"k\">,</span> elem <span class=\"k\">);</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","","            Sizzle<span class=\"k\">.</span>attr <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> name <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"c\">// Set document vars if needed</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">(</span> elem<span class=\"k\">.</span>ownerDocument <span class=\"k\">||</span> elem <span class=\"k\">)</span> <span class=\"k\">!==</span> document <span class=\"k\">)</span> <span class=\"k\">{</span>","                    setDocument<span class=\"k\">(</span> elem <span class=\"k\">);</span>","                <span class=\"k\">}</span>","","                <span class=\"k\">var</span> fn <span class=\"k\">=</span> Expr<span class=\"k\">.</span>attrHandle<span class=\"k\">[</span> name<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">],</span>","                    <span class=\"c\">// Don't get fooled by Object.prototype properties (jQuery #13807)</span>","                    val <span class=\"k\">=</span> fn <span class=\"k\">&amp;&amp;</span> hasOwn<span class=\"k\">.</span>call<span class=\"k\">(</span> Expr<span class=\"k\">.</span>attrHandle<span class=\"k\">,</span> name<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">)</span> <span class=\"k\">?</span>","                        fn<span class=\"k\">(</span> elem<span class=\"k\">,</span> name<span class=\"k\">,</span> <span class=\"k\">!</span>documentIsHTML <span class=\"k\">)</span> <span class=\"k\">:</span>","                        undefined<span class=\"k\">;</span>","","                <span class=\"k\">return</span> val <span class=\"k\">!==</span> undefined <span class=\"k\">?</span>","                    val <span class=\"k\">:</span>","                    support<span class=\"k\">.</span>attributes <span class=\"k\">||</span> <span class=\"k\">!</span>documentIsHTML <span class=\"k\">?</span>","                        elem<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span> name <span class=\"k\">)</span> <span class=\"k\">:</span>","                        <span class=\"k\">(</span>val <span class=\"k\">=</span> elem<span class=\"k\">.</span>getAttributeNode<span class=\"k\">(</span>name<span class=\"k\">))</span> <span class=\"k\">&amp;&amp;</span> val<span class=\"k\">.</span>specified <span class=\"k\">?</span>","                            val<span class=\"k\">.</span>value <span class=\"k\">:</span>","                            <span class=\"k\">null</span><span class=\"k\">;</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","","            Sizzle<span class=\"k\">.</span>escape <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> sel <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> <span class=\"k\">(</span>sel <span class=\"k\">+</span> <span class=\"s\">\"\"</span><span class=\"k\">).</span>replace<span class=\"k\">(</span> rcssescape<span class=\"k\">,</span> fcssescape <span class=\"k\">);</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","","            Sizzle<span class=\"k\">.</span>error <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> msg <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">throw</span> <span class=\"k\">new</span> Error<span class=\"k\">(</span> <span class=\"s\">\"Syntax error, unrecognized expression: \"</span> <span class=\"k\">+</span> msg <span class=\"k\">);</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","","            <span class=\"c\">/**</span>","<span class=\"c\">             * Document sorting and removing duplicates</span>","<span class=\"c\">             * @param {ArrayLike} results</span>","<span class=\"c\">             */</span>","            Sizzle<span class=\"k\">.</span>uniqueSort <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> results <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> elem<span class=\"k\">,</span>","                    duplicates <span class=\"k\">=</span> <span class=\"k\">[],</span>","                    j <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","                    i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","","                <span class=\"c\">// Unless we *know* we can detect duplicates, assume their presence</span>","                hasDuplicate <span class=\"k\">=</span> <span class=\"k\">!</span>support<span class=\"k\">.</span>detectDuplicates<span class=\"k\">;</span>","                sortInput <span class=\"k\">=</span> <span class=\"k\">!</span>support<span class=\"k\">.</span>sortStable <span class=\"k\">&amp;&amp;</span> results<span class=\"k\">.</span>slice<span class=\"k\">(</span> <span class=\"s\">0</span> <span class=\"k\">);</span>","                results<span class=\"k\">.</span>sort<span class=\"k\">(</span> sortOrder <span class=\"k\">);</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span> hasDuplicate <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">while</span> <span class=\"k\">(</span> <span class=\"k\">(</span>elem <span class=\"k\">=</span> results<span class=\"k\">[</span>i<span class=\"k\">++])</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> elem <span class=\"k\">===</span> results<span class=\"k\">[</span> i <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                            j <span class=\"k\">=</span> duplicates<span class=\"k\">.</span>push<span class=\"k\">(</span> i <span class=\"k\">);</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span>","                    <span class=\"k\">while</span> <span class=\"k\">(</span> j<span class=\"k\">--</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        results<span class=\"k\">.</span>splice<span class=\"k\">(</span> duplicates<span class=\"k\">[</span> j <span class=\"k\">],</span> <span class=\"s\">1</span> <span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// Clear input after sorting to release objects</span>","                <span class=\"c\">// See https://github.com/jquery/sizzle/pull/225</span>","                sortInput <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","","                <span class=\"k\">return</span> results<span class=\"k\">;</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","","            <span class=\"c\">/**</span>","<span class=\"c\">             * Utility function for retrieving the text value of an array of DOM nodes</span>","<span class=\"c\">             * @param {Array|Element} elem</span>","<span class=\"c\">             */</span>","            getText <span class=\"k\">=</span> Sizzle<span class=\"k\">.</span>getText <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> node<span class=\"k\">,</span>","                    ret <span class=\"k\">=</span> <span class=\"s\">\"\"</span><span class=\"k\">,</span>","                    i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","                    nodeType <span class=\"k\">=</span> elem<span class=\"k\">.</span>nodeType<span class=\"k\">;</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>nodeType <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"c\">// If no nodeType, this is expected to be an array</span>","                    <span class=\"k\">while</span> <span class=\"k\">(</span> <span class=\"k\">(</span>node <span class=\"k\">=</span> elem<span class=\"k\">[</span>i<span class=\"k\">++])</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"c\">// Do not traverse comment nodes</span>","                        ret <span class=\"k\">+=</span> getText<span class=\"k\">(</span> node <span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> nodeType <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">||</span> nodeType <span class=\"k\">===</span> <span class=\"s\">9</span> <span class=\"k\">||</span> nodeType <span class=\"k\">===</span> <span class=\"s\">11</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"c\">// Use textContent for elements</span>","                    <span class=\"c\">// innerText usage removed for consistency of new lines (jQuery #11153)</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">typeof</span> elem<span class=\"k\">.</span>textContent <span class=\"k\">===</span> <span class=\"s\">\"string\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">return</span> elem<span class=\"k\">.</span>textContent<span class=\"k\">;</span>","                    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                        <span class=\"c\">// Traverse its children</span>","                        <span class=\"k\">for</span> <span class=\"k\">(</span> elem <span class=\"k\">=</span> elem<span class=\"k\">.</span>firstChild<span class=\"k\">;</span> elem<span class=\"k\">;</span> elem <span class=\"k\">=</span> elem<span class=\"k\">.</span>nextSibling <span class=\"k\">)</span> <span class=\"k\">{</span>","                            ret <span class=\"k\">+=</span> getText<span class=\"k\">(</span> elem <span class=\"k\">);</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> nodeType <span class=\"k\">===</span> <span class=\"s\">3</span> <span class=\"k\">||</span> nodeType <span class=\"k\">===</span> <span class=\"s\">4</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">return</span> elem<span class=\"k\">.</span>nodeValue<span class=\"k\">;</span>","                <span class=\"k\">}</span>","                <span class=\"c\">// Do not include comment or processing instruction nodes</span>","","                <span class=\"k\">return</span> ret<span class=\"k\">;</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","","            Expr <span class=\"k\">=</span> Sizzle<span class=\"k\">.</span>selectors <span class=\"k\">=</span> <span class=\"k\">{</span>","","                <span class=\"c\">// Can be adjusted by the user</span>","                cacheLength<span class=\"k\">:</span> <span class=\"s\">50</span><span class=\"k\">,</span>","","                createPseudo<span class=\"k\">:</span> markFunction<span class=\"k\">,</span>","","                match<span class=\"k\">:</span> matchExpr<span class=\"k\">,</span>","","                attrHandle<span class=\"k\">:</span> <span class=\"k\">{}</span><span class=\"k\">,</span>","","                find<span class=\"k\">:</span> <span class=\"k\">{}</span><span class=\"k\">,</span>","","                relative<span class=\"k\">:</span> <span class=\"k\">{</span>","                    <span class=\"s\">\"&gt;\"</span><span class=\"k\">:</span> <span class=\"k\">{</span> dir<span class=\"k\">:</span> <span class=\"s\">\"parentNode\"</span><span class=\"k\">,</span> first<span class=\"k\">:</span> <span class=\"k\">true</span> <span class=\"k\">}</span><span class=\"k\">,</span>","                    <span class=\"s\">\" \"</span><span class=\"k\">:</span> <span class=\"k\">{</span> dir<span class=\"k\">:</span> <span class=\"s\">\"parentNode\"</span> <span class=\"k\">}</span><span class=\"k\">,</span>","                    <span class=\"s\">\"+\"</span><span class=\"k\">:</span> <span class=\"k\">{</span> dir<span class=\"k\">:</span> <span class=\"s\">\"previousSibling\"</span><span class=\"k\">,</span> first<span class=\"k\">:</span> <span class=\"k\">true</span> <span class=\"k\">}</span><span class=\"k\">,</span>","                    <span class=\"s\">\"~\"</span><span class=\"k\">:</span> <span class=\"k\">{</span> dir<span class=\"k\">:</span> <span class=\"s\">\"previousSibling\"</span> <span class=\"k\">}</span>","                <span class=\"k\">}</span><span class=\"k\">,</span>","","                preFilter<span class=\"k\">:</span> <span class=\"k\">{</span>","                    <span class=\"s\">\"ATTR\"</span><span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> match <span class=\"k\">)</span> <span class=\"k\">{</span>","                        match<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]</span> <span class=\"k\">=</span> match<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">].</span>replace<span class=\"k\">(</span> runescape<span class=\"k\">,</span> funescape <span class=\"k\">);</span>","","                        <span class=\"c\">// Move the given value to match[3] whether quoted or unquoted</span>","                        match<span class=\"k\">[</span><span class=\"s\">3</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">(</span> match<span class=\"k\">[</span><span class=\"s\">3</span><span class=\"k\">]</span> <span class=\"k\">||</span> match<span class=\"k\">[</span><span class=\"s\">4</span><span class=\"k\">]</span> <span class=\"k\">||</span> match<span class=\"k\">[</span><span class=\"s\">5</span><span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"s\">\"\"</span> <span class=\"k\">).</span>replace<span class=\"k\">(</span> runescape<span class=\"k\">,</span> funescape <span class=\"k\">);</span>","","                        <span class=\"k\">if</span> <span class=\"k\">(</span> match<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">]</span> <span class=\"k\">===</span> <span class=\"s\">\"~=\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                            match<span class=\"k\">[</span><span class=\"s\">3</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">\" \"</span> <span class=\"k\">+</span> match<span class=\"k\">[</span><span class=\"s\">3</span><span class=\"k\">]</span> <span class=\"k\">+</span> <span class=\"s\">\" \"</span><span class=\"k\">;</span>","                        <span class=\"k\">}</span>","","                        <span class=\"k\">return</span> match<span class=\"k\">.</span>slice<span class=\"k\">(</span> <span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"s\">4</span> <span class=\"k\">);</span>","                    <span class=\"k\">}</span><span class=\"k\">,</span>","","                    <span class=\"s\">\"CHILD\"</span><span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> match <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"c\">/* matches from matchExpr[\"CHILD\"]</span>","<span class=\"c\">\t\t\t\t1 type (only|nth|...)</span>","<span class=\"c\">\t\t\t\t2 what (child|of-type)</span>","<span class=\"c\">\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)</span>","<span class=\"c\">\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)</span>","<span class=\"c\">\t\t\t\t5 sign of xn-component</span>","<span class=\"c\">\t\t\t\t6 x of xn-component</span>","<span class=\"c\">\t\t\t\t7 sign of y-component</span>","<span class=\"c\">\t\t\t\t8 y of y-component</span>","<span class=\"c\">\t\t\t*/</span>","                        match<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">]</span> <span class=\"k\">=</span> match<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">].</span>toLowerCase<span class=\"k\">();</span>","","                        <span class=\"k\">if</span> <span class=\"k\">(</span> match<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">].</span>slice<span class=\"k\">(</span> <span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"s\">3</span> <span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"s\">\"nth\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"c\">// nth-* requires argument</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>match<span class=\"k\">[</span><span class=\"s\">3</span><span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                Sizzle<span class=\"k\">.</span>error<span class=\"k\">(</span> match<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">);</span>","                            <span class=\"k\">}</span>","","                            <span class=\"c\">// numeric x and y parameters for Expr.filter.CHILD</span>","                            <span class=\"c\">// remember that false/true cast respectively to 0/1</span>","                            match<span class=\"k\">[</span><span class=\"s\">4</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">+(</span> match<span class=\"k\">[</span><span class=\"s\">4</span><span class=\"k\">]</span> <span class=\"k\">?</span> match<span class=\"k\">[</span><span class=\"s\">5</span><span class=\"k\">]</span> <span class=\"k\">+</span> <span class=\"k\">(</span>match<span class=\"k\">[</span><span class=\"s\">6</span><span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"s\">1</span><span class=\"k\">)</span> <span class=\"k\">:</span> <span class=\"s\">2</span> <span class=\"k\">*</span> <span class=\"k\">(</span> match<span class=\"k\">[</span><span class=\"s\">3</span><span class=\"k\">]</span> <span class=\"k\">===</span> <span class=\"s\">\"even\"</span> <span class=\"k\">||</span> match<span class=\"k\">[</span><span class=\"s\">3</span><span class=\"k\">]</span> <span class=\"k\">===</span> <span class=\"s\">\"odd\"</span> <span class=\"k\">)</span> <span class=\"k\">);</span>","                            match<span class=\"k\">[</span><span class=\"s\">5</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">+(</span> <span class=\"k\">(</span> match<span class=\"k\">[</span><span class=\"s\">7</span><span class=\"k\">]</span> <span class=\"k\">+</span> match<span class=\"k\">[</span><span class=\"s\">8</span><span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">||</span> match<span class=\"k\">[</span><span class=\"s\">3</span><span class=\"k\">]</span> <span class=\"k\">===</span> <span class=\"s\">\"odd\"</span> <span class=\"k\">);</span>","","                            <span class=\"c\">// other types prohibit arguments</span>","                        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> match<span class=\"k\">[</span><span class=\"s\">3</span><span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                            Sizzle<span class=\"k\">.</span>error<span class=\"k\">(</span> match<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">);</span>","                        <span class=\"k\">}</span>","","                        <span class=\"k\">return</span> match<span class=\"k\">;</span>","                    <span class=\"k\">}</span><span class=\"k\">,</span>","","                    <span class=\"s\">\"PSEUDO\"</span><span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> match <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">var</span> excess<span class=\"k\">,</span>","                            unquoted <span class=\"k\">=</span> <span class=\"k\">!</span>match<span class=\"k\">[</span><span class=\"s\">6</span><span class=\"k\">]</span> <span class=\"k\">&amp;&amp;</span> match<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">];</span>","","                        <span class=\"k\">if</span> <span class=\"k\">(</span> matchExpr<span class=\"k\">[</span><span class=\"s\">\"CHILD\"</span><span class=\"k\">].</span>test<span class=\"k\">(</span> match<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span>","                        <span class=\"k\">}</span>","","                        <span class=\"c\">// Accept quoted arguments as-is</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> match<span class=\"k\">[</span><span class=\"s\">3</span><span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                            match<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">]</span> <span class=\"k\">=</span> match<span class=\"k\">[</span><span class=\"s\">4</span><span class=\"k\">]</span> <span class=\"k\">||</span> match<span class=\"k\">[</span><span class=\"s\">5</span><span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"s\">\"\"</span><span class=\"k\">;</span>","","                            <span class=\"c\">// Strip excess characters from unquoted arguments</span>","                        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> unquoted <span class=\"k\">&amp;&amp;</span> rpseudo<span class=\"k\">.</span>test<span class=\"k\">(</span> unquoted <span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span>","                            <span class=\"c\">// Get excess from tokenize (recursively)</span>","                            <span class=\"k\">(</span>excess <span class=\"k\">=</span> tokenize<span class=\"k\">(</span> unquoted<span class=\"k\">,</span> <span class=\"k\">true</span> <span class=\"k\">))</span> <span class=\"k\">&amp;&amp;</span>","                            <span class=\"c\">// advance to the next closing parenthesis</span>","                            <span class=\"k\">(</span>excess <span class=\"k\">=</span> unquoted<span class=\"k\">.</span>indexOf<span class=\"k\">(</span> <span class=\"s\">\")\"</span><span class=\"k\">,</span> unquoted<span class=\"k\">.</span>length <span class=\"k\">-</span> excess <span class=\"k\">)</span> <span class=\"k\">-</span> unquoted<span class=\"k\">.</span>length<span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                            <span class=\"c\">// excess is a negative index</span>","                            match<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">=</span> match<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>slice<span class=\"k\">(</span> <span class=\"s\">0</span><span class=\"k\">,</span> excess <span class=\"k\">);</span>","                            match<span class=\"k\">[</span><span class=\"s\">2</span><span class=\"k\">]</span> <span class=\"k\">=</span> unquoted<span class=\"k\">.</span>slice<span class=\"k\">(</span> <span class=\"s\">0</span><span class=\"k\">,</span> excess <span class=\"k\">);</span>","                        <span class=\"k\">}</span>","","                        <span class=\"c\">// Return only captures needed by the pseudo filter method (type and argument)</span>","                        <span class=\"k\">return</span> match<span class=\"k\">.</span>slice<span class=\"k\">(</span> <span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"s\">3</span> <span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span><span class=\"k\">,</span>","","                filter<span class=\"k\">:</span> <span class=\"k\">{</span>","","                    <span class=\"s\">\"TAG\"</span><span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> nodeNameSelector <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">var</span> nodeName <span class=\"k\">=</span> nodeNameSelector<span class=\"k\">.</span>replace<span class=\"k\">(</span> runescape<span class=\"k\">,</span> funescape <span class=\"k\">).</span>toLowerCase<span class=\"k\">();</span>","                        <span class=\"k\">return</span> nodeNameSelector <span class=\"k\">===</span> <span class=\"s\">\"*\"</span> <span class=\"k\">?</span>","                            <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span> <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span> <span class=\"k\">}</span> <span class=\"k\">:</span>","                            <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","                                <span class=\"k\">return</span> elem<span class=\"k\">.</span>nodeName <span class=\"k\">&amp;&amp;</span> elem<span class=\"k\">.</span>nodeName<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">===</span> nodeName<span class=\"k\">;</span>","                            <span class=\"k\">}</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span><span class=\"k\">,</span>","","                    <span class=\"s\">\"CLASS\"</span><span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> className <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">var</span> pattern <span class=\"k\">=</span> classCache<span class=\"k\">[</span> className <span class=\"k\">+</span> <span class=\"s\">\" \"</span> <span class=\"k\">];</span>","","                        <span class=\"k\">return</span> pattern <span class=\"k\">||</span>","                            <span class=\"k\">(</span>pattern <span class=\"k\">=</span> <span class=\"k\">new</span> RegExp<span class=\"k\">(</span> <span class=\"s\">\"(^|\"</span> <span class=\"k\">+</span> whitespace <span class=\"k\">+</span> <span class=\"s\">\")\"</span> <span class=\"k\">+</span> className <span class=\"k\">+</span> <span class=\"s\">\"(\"</span> <span class=\"k\">+</span> whitespace <span class=\"k\">+</span> <span class=\"s\">\"|$)\"</span> <span class=\"k\">))</span> <span class=\"k\">&amp;&amp;</span>","                            classCache<span class=\"k\">(</span> className<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","                                <span class=\"k\">return</span> pattern<span class=\"k\">.</span>test<span class=\"k\">(</span> <span class=\"k\">typeof</span> elem<span class=\"k\">.</span>className <span class=\"k\">===</span> <span class=\"s\">\"string\"</span> <span class=\"k\">&amp;&amp;</span> elem<span class=\"k\">.</span>className <span class=\"k\">||</span> <span class=\"k\">typeof</span> elem<span class=\"k\">.</span>getAttribute <span class=\"k\">!==</span> <span class=\"s\">\"undefined\"</span> <span class=\"k\">&amp;&amp;</span> elem<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span><span class=\"s\">\"class\"</span><span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"s\">\"\"</span> <span class=\"k\">);</span>","                            <span class=\"k\">}</span><span class=\"k\">);</span>","                    <span class=\"k\">}</span><span class=\"k\">,</span>","","                    <span class=\"s\">\"ATTR\"</span><span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> name<span class=\"k\">,</span> operator<span class=\"k\">,</span> check <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">return</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">var</span> result <span class=\"k\">=</span> Sizzle<span class=\"k\">.</span>attr<span class=\"k\">(</span> elem<span class=\"k\">,</span> name <span class=\"k\">);</span>","","                            <span class=\"k\">if</span> <span class=\"k\">(</span> result <span class=\"k\">==</span> <span class=\"k\">null</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                <span class=\"k\">return</span> operator <span class=\"k\">===</span> <span class=\"s\">\"!=\"</span><span class=\"k\">;</span>","                            <span class=\"k\">}</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>operator <span class=\"k\">)</span> <span class=\"k\">{</span>","                                <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","                            <span class=\"k\">}</span>","","                            result <span class=\"k\">+=</span> <span class=\"s\">\"\"</span><span class=\"k\">;</span>","","                            <span class=\"k\">return</span> operator <span class=\"k\">===</span> <span class=\"s\">\"=\"</span> <span class=\"k\">?</span> result <span class=\"k\">===</span> check <span class=\"k\">:</span>","                                operator <span class=\"k\">===</span> <span class=\"s\">\"!=\"</span> <span class=\"k\">?</span> result <span class=\"k\">!==</span> check <span class=\"k\">:</span>","                                    operator <span class=\"k\">===</span> <span class=\"s\">\"^=\"</span> <span class=\"k\">?</span> check <span class=\"k\">&amp;&amp;</span> result<span class=\"k\">.</span>indexOf<span class=\"k\">(</span> check <span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"s\">0</span> <span class=\"k\">:</span>","                                        operator <span class=\"k\">===</span> <span class=\"s\">\"*=\"</span> <span class=\"k\">?</span> check <span class=\"k\">&amp;&amp;</span> result<span class=\"k\">.</span>indexOf<span class=\"k\">(</span> check <span class=\"k\">)</span> <span class=\"k\">&gt;</span> <span class=\"k\">-</span><span class=\"s\">1</span> <span class=\"k\">:</span>","                                            operator <span class=\"k\">===</span> <span class=\"s\">\"$=\"</span> <span class=\"k\">?</span> check <span class=\"k\">&amp;&amp;</span> result<span class=\"k\">.</span>slice<span class=\"k\">(</span> <span class=\"k\">-</span>check<span class=\"k\">.</span>length <span class=\"k\">)</span> <span class=\"k\">===</span> check <span class=\"k\">:</span>","                                                operator <span class=\"k\">===</span> <span class=\"s\">\"~=\"</span> <span class=\"k\">?</span> <span class=\"k\">(</span> <span class=\"s\">\" \"</span> <span class=\"k\">+</span> result<span class=\"k\">.</span>replace<span class=\"k\">(</span> rwhitespace<span class=\"k\">,</span> <span class=\"s\">\" \"</span> <span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">\" \"</span> <span class=\"k\">).</span>indexOf<span class=\"k\">(</span> check <span class=\"k\">)</span> <span class=\"k\">&gt;</span> <span class=\"k\">-</span><span class=\"s\">1</span> <span class=\"k\">:</span>","                                                    operator <span class=\"k\">===</span> <span class=\"s\">\"|=\"</span> <span class=\"k\">?</span> result <span class=\"k\">===</span> check <span class=\"k\">||</span> result<span class=\"k\">.</span>slice<span class=\"k\">(</span> <span class=\"s\">0</span><span class=\"k\">,</span> check<span class=\"k\">.</span>length <span class=\"k\">+</span> <span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">===</span> check <span class=\"k\">+</span> <span class=\"s\">\"-\"</span> <span class=\"k\">:</span>","                                                        <span class=\"k\">false</span><span class=\"k\">;</span>","                        <span class=\"k\">}</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span><span class=\"k\">,</span>","","                    <span class=\"s\">\"CHILD\"</span><span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> type<span class=\"k\">,</span> what<span class=\"k\">,</span> argument<span class=\"k\">,</span> first<span class=\"k\">,</span> last <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">var</span> simple <span class=\"k\">=</span> type<span class=\"k\">.</span>slice<span class=\"k\">(</span> <span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"s\">3</span> <span class=\"k\">)</span> <span class=\"k\">!==</span> <span class=\"s\">\"nth\"</span><span class=\"k\">,</span>","                            forward <span class=\"k\">=</span> type<span class=\"k\">.</span>slice<span class=\"k\">(</span> <span class=\"k\">-</span><span class=\"s\">4</span> <span class=\"k\">)</span> <span class=\"k\">!==</span> <span class=\"s\">\"last\"</span><span class=\"k\">,</span>","                            ofType <span class=\"k\">=</span> what <span class=\"k\">===</span> <span class=\"s\">\"of-type\"</span><span class=\"k\">;</span>","","                        <span class=\"k\">return</span> first <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">&amp;&amp;</span> last <span class=\"k\">===</span> <span class=\"s\">0</span> <span class=\"k\">?</span>","","                            <span class=\"c\">// Shortcut for :nth-*(n)</span>","                            <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","                                <span class=\"k\">return</span> <span class=\"k\">!!</span>elem<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","                            <span class=\"k\">}</span> <span class=\"k\">:</span>","","                            <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> context<span class=\"k\">,</span> xml <span class=\"k\">)</span> <span class=\"k\">{</span>","                                <span class=\"k\">var</span> cache<span class=\"k\">,</span> uniqueCache<span class=\"k\">,</span> outerCache<span class=\"k\">,</span> node<span class=\"k\">,</span> nodeIndex<span class=\"k\">,</span> start<span class=\"k\">,</span>","                                    dir <span class=\"k\">=</span> simple <span class=\"k\">!==</span> forward <span class=\"k\">?</span> <span class=\"s\">\"nextSibling\"</span> <span class=\"k\">:</span> <span class=\"s\">\"previousSibling\"</span><span class=\"k\">,</span>","                                    parent <span class=\"k\">=</span> elem<span class=\"k\">.</span>parentNode<span class=\"k\">,</span>","                                    name <span class=\"k\">=</span> ofType <span class=\"k\">&amp;&amp;</span> elem<span class=\"k\">.</span>nodeName<span class=\"k\">.</span>toLowerCase<span class=\"k\">(),</span>","                                    useCache <span class=\"k\">=</span> <span class=\"k\">!</span>xml <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>ofType<span class=\"k\">,</span>","                                    diff <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","","                                <span class=\"k\">if</span> <span class=\"k\">(</span> parent <span class=\"k\">)</span> <span class=\"k\">{</span>","","                                    <span class=\"c\">// :(first|last|only)-(child|of-type)</span>","                                    <span class=\"k\">if</span> <span class=\"k\">(</span> simple <span class=\"k\">)</span> <span class=\"k\">{</span>","                                        <span class=\"k\">while</span> <span class=\"k\">(</span> dir <span class=\"k\">)</span> <span class=\"k\">{</span>","                                            node <span class=\"k\">=</span> elem<span class=\"k\">;</span>","                                            <span class=\"k\">while</span> <span class=\"k\">(</span> <span class=\"k\">(</span>node <span class=\"k\">=</span> node<span class=\"k\">[</span> dir <span class=\"k\">])</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                                <span class=\"k\">if</span> <span class=\"k\">(</span> ofType <span class=\"k\">?</span>","                                                    node<span class=\"k\">.</span>nodeName<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">===</span> name <span class=\"k\">:</span>","                                                    node<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                                                    <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","                                                <span class=\"k\">}</span>","                                            <span class=\"k\">}</span>","                                            <span class=\"c\">// Reverse direction for :only-* (if we haven't yet done so)</span>","                                            start <span class=\"k\">=</span> dir <span class=\"k\">=</span> type <span class=\"k\">===</span> <span class=\"s\">\"only\"</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>start <span class=\"k\">&amp;&amp;</span> <span class=\"s\">\"nextSibling\"</span><span class=\"k\">;</span>","                                        <span class=\"k\">}</span>","                                        <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","                                    <span class=\"k\">}</span>","","                                    start <span class=\"k\">=</span> <span class=\"k\">[</span> forward <span class=\"k\">?</span> parent<span class=\"k\">.</span>firstChild <span class=\"k\">:</span> parent<span class=\"k\">.</span>lastChild <span class=\"k\">];</span>","","                                    <span class=\"c\">// non-xml :nth-child(...) stores cache data on `parent`</span>","                                    <span class=\"k\">if</span> <span class=\"k\">(</span> forward <span class=\"k\">&amp;&amp;</span> useCache <span class=\"k\">)</span> <span class=\"k\">{</span>","","                                        <span class=\"c\">// Seek `elem` from a previously-cached index</span>","","                                        <span class=\"c\">// ...in a gzip-friendly way</span>","                                        node <span class=\"k\">=</span> parent<span class=\"k\">;</span>","                                        outerCache <span class=\"k\">=</span> node<span class=\"k\">[</span> expando <span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"k\">(</span>node<span class=\"k\">[</span> expando <span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">);</span>","","                                        <span class=\"c\">// Support: IE &lt;9 only</span>","                                        <span class=\"c\">// Defend against cloned attroperties (jQuery gh-1709)</span>","                                        uniqueCache <span class=\"k\">=</span> outerCache<span class=\"k\">[</span> node<span class=\"k\">.</span>uniqueID <span class=\"k\">]</span> <span class=\"k\">||</span>","                                            <span class=\"k\">(</span>outerCache<span class=\"k\">[</span> node<span class=\"k\">.</span>uniqueID <span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">);</span>","","                                        cache <span class=\"k\">=</span> uniqueCache<span class=\"k\">[</span> type <span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"k\">[];</span>","                                        nodeIndex <span class=\"k\">=</span> cache<span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">]</span> <span class=\"k\">===</span> dirruns <span class=\"k\">&amp;&amp;</span> cache<span class=\"k\">[</span> <span class=\"s\">1</span> <span class=\"k\">];</span>","                                        diff <span class=\"k\">=</span> nodeIndex <span class=\"k\">&amp;&amp;</span> cache<span class=\"k\">[</span> <span class=\"s\">2</span> <span class=\"k\">];</span>","                                        node <span class=\"k\">=</span> nodeIndex <span class=\"k\">&amp;&amp;</span> parent<span class=\"k\">.</span>childNodes<span class=\"k\">[</span> nodeIndex <span class=\"k\">];</span>","","                                        <span class=\"k\">while</span> <span class=\"k\">(</span> <span class=\"k\">(</span>node <span class=\"k\">=</span> <span class=\"k\">++</span>nodeIndex <span class=\"k\">&amp;&amp;</span> node <span class=\"k\">&amp;&amp;</span> node<span class=\"k\">[</span> dir <span class=\"k\">]</span> <span class=\"k\">||</span>","","                                            <span class=\"c\">// Fallback to seeking `elem` from the start</span>","                                            <span class=\"k\">(</span>diff <span class=\"k\">=</span> nodeIndex <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">||</span> start<span class=\"k\">.</span>pop<span class=\"k\">())</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                                            <span class=\"c\">// When found, cache indexes on `parent` and break</span>","                                            <span class=\"k\">if</span> <span class=\"k\">(</span> node<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">++</span>diff <span class=\"k\">&amp;&amp;</span> node <span class=\"k\">===</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","                                                uniqueCache<span class=\"k\">[</span> type <span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">[</span> dirruns<span class=\"k\">,</span> nodeIndex<span class=\"k\">,</span> diff <span class=\"k\">];</span>","                                                <span class=\"k\">break</span><span class=\"k\">;</span>","                                            <span class=\"k\">}</span>","                                        <span class=\"k\">}</span>","","                                    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                                        <span class=\"c\">// Use previously-cached element index if available</span>","                                        <span class=\"k\">if</span> <span class=\"k\">(</span> useCache <span class=\"k\">)</span> <span class=\"k\">{</span>","                                            <span class=\"c\">// ...in a gzip-friendly way</span>","                                            node <span class=\"k\">=</span> elem<span class=\"k\">;</span>","                                            outerCache <span class=\"k\">=</span> node<span class=\"k\">[</span> expando <span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"k\">(</span>node<span class=\"k\">[</span> expando <span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">);</span>","","                                            <span class=\"c\">// Support: IE &lt;9 only</span>","                                            <span class=\"c\">// Defend against cloned attroperties (jQuery gh-1709)</span>","                                            uniqueCache <span class=\"k\">=</span> outerCache<span class=\"k\">[</span> node<span class=\"k\">.</span>uniqueID <span class=\"k\">]</span> <span class=\"k\">||</span>","                                                <span class=\"k\">(</span>outerCache<span class=\"k\">[</span> node<span class=\"k\">.</span>uniqueID <span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">);</span>","","                                            cache <span class=\"k\">=</span> uniqueCache<span class=\"k\">[</span> type <span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"k\">[];</span>","                                            nodeIndex <span class=\"k\">=</span> cache<span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">]</span> <span class=\"k\">===</span> dirruns <span class=\"k\">&amp;&amp;</span> cache<span class=\"k\">[</span> <span class=\"s\">1</span> <span class=\"k\">];</span>","                                            diff <span class=\"k\">=</span> nodeIndex<span class=\"k\">;</span>","                                        <span class=\"k\">}</span>","","                                        <span class=\"c\">// xml :nth-child(...)</span>","                                        <span class=\"c\">// or :nth-last-child(...) or :nth(-last)?-of-type(...)</span>","                                        <span class=\"k\">if</span> <span class=\"k\">(</span> diff <span class=\"k\">===</span> <span class=\"k\">false</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                            <span class=\"c\">// Use the same loop as above to seek `elem` from the start</span>","                                            <span class=\"k\">while</span> <span class=\"k\">(</span> <span class=\"k\">(</span>node <span class=\"k\">=</span> <span class=\"k\">++</span>nodeIndex <span class=\"k\">&amp;&amp;</span> node <span class=\"k\">&amp;&amp;</span> node<span class=\"k\">[</span> dir <span class=\"k\">]</span> <span class=\"k\">||</span>","                                                <span class=\"k\">(</span>diff <span class=\"k\">=</span> nodeIndex <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">)</span> <span class=\"k\">||</span> start<span class=\"k\">.</span>pop<span class=\"k\">())</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                                                <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">(</span> ofType <span class=\"k\">?</span>","                                                    node<span class=\"k\">.</span>nodeName<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">===</span> name <span class=\"k\">:</span>","                                                    node<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span>","                                                    <span class=\"k\">++</span>diff <span class=\"k\">)</span> <span class=\"k\">{</span>","","                                                    <span class=\"c\">// Cache the index of each encountered element</span>","                                                    <span class=\"k\">if</span> <span class=\"k\">(</span> useCache <span class=\"k\">)</span> <span class=\"k\">{</span>","                                                        outerCache <span class=\"k\">=</span> node<span class=\"k\">[</span> expando <span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"k\">(</span>node<span class=\"k\">[</span> expando <span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">);</span>","","                                                        <span class=\"c\">// Support: IE &lt;9 only</span>","                                                        <span class=\"c\">// Defend against cloned attroperties (jQuery gh-1709)</span>","                                                        uniqueCache <span class=\"k\">=</span> outerCache<span class=\"k\">[</span> node<span class=\"k\">.</span>uniqueID <span class=\"k\">]</span> <span class=\"k\">||</span>","                                                            <span class=\"k\">(</span>outerCache<span class=\"k\">[</span> node<span class=\"k\">.</span>uniqueID <span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">);</span>","","                                                        uniqueCache<span class=\"k\">[</span> type <span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">[</span> dirruns<span class=\"k\">,</span> diff <span class=\"k\">];</span>","                                                    <span class=\"k\">}</span>","","                                                    <span class=\"k\">if</span> <span class=\"k\">(</span> node <span class=\"k\">===</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","                                                        <span class=\"k\">break</span><span class=\"k\">;</span>","                                                    <span class=\"k\">}</span>","                                                <span class=\"k\">}</span>","                                            <span class=\"k\">}</span>","                                        <span class=\"k\">}</span>","                                    <span class=\"k\">}</span>","","                                    <span class=\"c\">// Incorporate the offset, then check against cycle size</span>","                                    diff <span class=\"k\">-=</span> last<span class=\"k\">;</span>","                                    <span class=\"k\">return</span> diff <span class=\"k\">===</span> first <span class=\"k\">||</span> <span class=\"k\">(</span> diff <span class=\"k\">%</span> first <span class=\"k\">===</span> <span class=\"s\">0</span> <span class=\"k\">&amp;&amp;</span> diff <span class=\"k\">/</span> first <span class=\"k\">&gt;=</span> <span class=\"s\">0</span> <span class=\"k\">);</span>","                                <span class=\"k\">}</span>","                            <span class=\"k\">}</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span><span class=\"k\">,</span>","","                    <span class=\"s\">\"PSEUDO\"</span><span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> pseudo<span class=\"k\">,</span> argument <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"c\">// pseudo-class names are case-insensitive</span>","                        <span class=\"c\">// http://www.w3.org/TR/selectors/#pseudo-classes</span>","                        <span class=\"c\">// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters</span>","                        <span class=\"c\">// Remember that setFilters inherits from pseudos</span>","                        <span class=\"k\">var</span> args<span class=\"k\">,</span>","                            fn <span class=\"k\">=</span> Expr<span class=\"k\">.</span>pseudos<span class=\"k\">[</span> pseudo <span class=\"k\">]</span> <span class=\"k\">||</span> Expr<span class=\"k\">.</span>setFilters<span class=\"k\">[</span> pseudo<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">]</span> <span class=\"k\">||</span>","                                Sizzle<span class=\"k\">.</span>error<span class=\"k\">(</span> <span class=\"s\">\"unsupported pseudo: \"</span> <span class=\"k\">+</span> pseudo <span class=\"k\">);</span>","","                        <span class=\"c\">// The user may use createPseudo to indicate that</span>","                        <span class=\"c\">// arguments are needed to create the filter function</span>","                        <span class=\"c\">// just as Sizzle does</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> fn<span class=\"k\">[</span> expando <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">return</span> fn<span class=\"k\">(</span> argument <span class=\"k\">);</span>","                        <span class=\"k\">}</span>","","                        <span class=\"c\">// But maintain support for old signatures</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> fn<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                            args <span class=\"k\">=</span> <span class=\"k\">[</span> pseudo<span class=\"k\">,</span> pseudo<span class=\"k\">,</span> <span class=\"s\">\"\"</span><span class=\"k\">,</span> argument <span class=\"k\">];</span>","                            <span class=\"k\">return</span> Expr<span class=\"k\">.</span>setFilters<span class=\"k\">.</span>hasOwnProperty<span class=\"k\">(</span> pseudo<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">)</span> <span class=\"k\">?</span>","                                markFunction<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span> seed<span class=\"k\">,</span> matches <span class=\"k\">)</span> <span class=\"k\">{</span>","                                    <span class=\"k\">var</span> idx<span class=\"k\">,</span>","                                        matched <span class=\"k\">=</span> fn<span class=\"k\">(</span> seed<span class=\"k\">,</span> argument <span class=\"k\">),</span>","                                        i <span class=\"k\">=</span> matched<span class=\"k\">.</span>length<span class=\"k\">;</span>","                                    <span class=\"k\">while</span> <span class=\"k\">(</span> i<span class=\"k\">--</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                        idx <span class=\"k\">=</span> indexOf<span class=\"k\">(</span> seed<span class=\"k\">,</span> matched<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">);</span>","                                        seed<span class=\"k\">[</span> idx <span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">!(</span> matches<span class=\"k\">[</span> idx <span class=\"k\">]</span> <span class=\"k\">=</span> matched<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">);</span>","                                    <span class=\"k\">}</span>","                                <span class=\"k\">}</span><span class=\"k\">)</span> <span class=\"k\">:</span>","                                <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","                                    <span class=\"k\">return</span> fn<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">,</span> args <span class=\"k\">);</span>","                                <span class=\"k\">}</span><span class=\"k\">;</span>","                        <span class=\"k\">}</span>","","                        <span class=\"k\">return</span> fn<span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span><span class=\"k\">,</span>","","                pseudos<span class=\"k\">:</span> <span class=\"k\">{</span>","                    <span class=\"c\">// Potentially complex pseudos</span>","                    <span class=\"s\">\"not\"</span><span class=\"k\">:</span> markFunction<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span> selector <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"c\">// Trim the selector passed to compile</span>","                        <span class=\"c\">// to avoid treating leading and trailing</span>","                        <span class=\"c\">// spaces as combinators</span>","                        <span class=\"k\">var</span> input <span class=\"k\">=</span> <span class=\"k\">[],</span>","                            results <span class=\"k\">=</span> <span class=\"k\">[],</span>","                            matcher <span class=\"k\">=</span> compile<span class=\"k\">(</span> selector<span class=\"k\">.</span>replace<span class=\"k\">(</span> rtrim<span class=\"k\">,</span> <span class=\"s\">\"$1\"</span> <span class=\"k\">)</span> <span class=\"k\">);</span>","","                        <span class=\"k\">return</span> matcher<span class=\"k\">[</span> expando <span class=\"k\">]</span> <span class=\"k\">?</span>","                            markFunction<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span> seed<span class=\"k\">,</span> matches<span class=\"k\">,</span> context<span class=\"k\">,</span> xml <span class=\"k\">)</span> <span class=\"k\">{</span>","                                <span class=\"k\">var</span> elem<span class=\"k\">,</span>","                                    unmatched <span class=\"k\">=</span> matcher<span class=\"k\">(</span> seed<span class=\"k\">,</span> <span class=\"k\">null</span><span class=\"k\">,</span> xml<span class=\"k\">,</span> <span class=\"k\">[]</span> <span class=\"k\">),</span>","                                    i <span class=\"k\">=</span> seed<span class=\"k\">.</span>length<span class=\"k\">;</span>","","                                <span class=\"c\">// Match elements unmatched by `matcher`</span>","                                <span class=\"k\">while</span> <span class=\"k\">(</span> i<span class=\"k\">--</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">(</span>elem <span class=\"k\">=</span> unmatched<span class=\"k\">[</span>i<span class=\"k\">])</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                        seed<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">!(</span>matches<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">=</span> elem<span class=\"k\">);</span>","                                    <span class=\"k\">}</span>","                                <span class=\"k\">}</span>","                            <span class=\"k\">}</span><span class=\"k\">)</span> <span class=\"k\">:</span>","                            <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> context<span class=\"k\">,</span> xml <span class=\"k\">)</span> <span class=\"k\">{</span>","                                input<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">=</span> elem<span class=\"k\">;</span>","                                matcher<span class=\"k\">(</span> input<span class=\"k\">,</span> <span class=\"k\">null</span><span class=\"k\">,</span> xml<span class=\"k\">,</span> results <span class=\"k\">);</span>","                                <span class=\"c\">// Don't keep the element (issue #299)</span>","                                input<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","                                <span class=\"k\">return</span> <span class=\"k\">!</span>results<span class=\"k\">.</span>pop<span class=\"k\">();</span>","                            <span class=\"k\">}</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span><span class=\"k\">),</span>","","                    <span class=\"s\">\"has\"</span><span class=\"k\">:</span> markFunction<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span> selector <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">return</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">return</span> Sizzle<span class=\"k\">(</span> selector<span class=\"k\">,</span> elem <span class=\"k\">).</span>length <span class=\"k\">&gt;</span> <span class=\"s\">0</span><span class=\"k\">;</span>","                        <span class=\"k\">}</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span><span class=\"k\">),</span>","","                    <span class=\"s\">\"contains\"</span><span class=\"k\">:</span> markFunction<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span> text <span class=\"k\">)</span> <span class=\"k\">{</span>","                        text <span class=\"k\">=</span> text<span class=\"k\">.</span>replace<span class=\"k\">(</span> runescape<span class=\"k\">,</span> funescape <span class=\"k\">);</span>","                        <span class=\"k\">return</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">return</span> <span class=\"k\">(</span> elem<span class=\"k\">.</span>textContent <span class=\"k\">||</span> elem<span class=\"k\">.</span>innerText <span class=\"k\">||</span> getText<span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">).</span>indexOf<span class=\"k\">(</span> text <span class=\"k\">)</span> <span class=\"k\">&gt;</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","                        <span class=\"k\">}</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span><span class=\"k\">),</span>","","                    <span class=\"c\">// \"Whether an element is represented by a :lang() selector</span>","                    <span class=\"c\">// is based solely on the element's language value</span>","                    <span class=\"c\">// being equal to the identifier C,</span>","                    <span class=\"c\">// or beginning with the identifier C immediately followed by \"-\".</span>","                    <span class=\"c\">// The matching of C against the element's language value is performed case-insensitively.</span>","                    <span class=\"c\">// The identifier C does not have to be a valid language name.\"</span>","                    <span class=\"c\">// http://www.w3.org/TR/selectors/#lang-pseudo</span>","                    <span class=\"s\">\"lang\"</span><span class=\"k\">:</span> markFunction<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">(</span> lang <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"c\">// lang value must be a valid identifier</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>ridentifier<span class=\"k\">.</span>test<span class=\"k\">(</span>lang <span class=\"k\">||</span> <span class=\"s\">\"\"</span><span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                            Sizzle<span class=\"k\">.</span>error<span class=\"k\">(</span> <span class=\"s\">\"unsupported lang: \"</span> <span class=\"k\">+</span> lang <span class=\"k\">);</span>","                        <span class=\"k\">}</span>","                        lang <span class=\"k\">=</span> lang<span class=\"k\">.</span>replace<span class=\"k\">(</span> runescape<span class=\"k\">,</span> funescape <span class=\"k\">).</span>toLowerCase<span class=\"k\">();</span>","                        <span class=\"k\">return</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">var</span> elemLang<span class=\"k\">;</span>","                            <span class=\"k\">do</span> <span class=\"k\">{</span>","                                <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">(</span>elemLang <span class=\"k\">=</span> documentIsHTML <span class=\"k\">?</span>","                                    elem<span class=\"k\">.</span>lang <span class=\"k\">:</span>","                                    elem<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span><span class=\"s\">\"xml:lang\"</span><span class=\"k\">)</span> <span class=\"k\">||</span> elem<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span><span class=\"s\">\"lang\"</span><span class=\"k\">))</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                                    elemLang <span class=\"k\">=</span> elemLang<span class=\"k\">.</span>toLowerCase<span class=\"k\">();</span>","                                    <span class=\"k\">return</span> elemLang <span class=\"k\">===</span> lang <span class=\"k\">||</span> elemLang<span class=\"k\">.</span>indexOf<span class=\"k\">(</span> lang <span class=\"k\">+</span> <span class=\"s\">\"-\"</span> <span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"s\">0</span><span class=\"k\">;</span>","                                <span class=\"k\">}</span>","                            <span class=\"k\">}</span> <span class=\"k\">while</span> <span class=\"k\">(</span> <span class=\"k\">(</span>elem <span class=\"k\">=</span> elem<span class=\"k\">.</span>parentNode<span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> elem<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">);</span>","                            <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","                        <span class=\"k\">}</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span><span class=\"k\">),</span>","","                    <span class=\"c\">// Miscellaneous</span>","                    <span class=\"s\">\"target\"</span><span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">var</span> hash <span class=\"k\">=</span> window<span class=\"k\">.</span>location <span class=\"k\">&amp;&amp;</span> window<span class=\"k\">.</span>location<span class=\"k\">.</span>hash<span class=\"k\">;</span>","                        <span class=\"k\">return</span> hash <span class=\"k\">&amp;&amp;</span> hash<span class=\"k\">.</span>slice<span class=\"k\">(</span> <span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">===</span> elem<span class=\"k\">.</span>id<span class=\"k\">;</span>","                    <span class=\"k\">}</span><span class=\"k\">,</span>","","                    <span class=\"s\">\"root\"</span><span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">return</span> elem <span class=\"k\">===</span> docElem<span class=\"k\">;</span>","                    <span class=\"k\">}</span><span class=\"k\">,</span>","","                    <span class=\"s\">\"focus\"</span><span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">return</span> elem <span class=\"k\">===</span> document<span class=\"k\">.</span>activeElement <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(!</span>document<span class=\"k\">.</span>hasFocus <span class=\"k\">||</span> document<span class=\"k\">.</span>hasFocus<span class=\"k\">())</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!!(</span>elem<span class=\"k\">.</span>type <span class=\"k\">||</span> elem<span class=\"k\">.</span>href <span class=\"k\">||</span> <span class=\"k\">~</span>elem<span class=\"k\">.</span>tabIndex<span class=\"k\">);</span>","                    <span class=\"k\">}</span><span class=\"k\">,</span>","","                    <span class=\"c\">// Boolean properties</span>","                    <span class=\"s\">\"enabled\"</span><span class=\"k\">:</span> createDisabledPseudo<span class=\"k\">(</span> <span class=\"k\">false</span> <span class=\"k\">),</span>","                    <span class=\"s\">\"disabled\"</span><span class=\"k\">:</span> createDisabledPseudo<span class=\"k\">(</span> <span class=\"k\">true</span> <span class=\"k\">),</span>","","                    <span class=\"s\">\"checked\"</span><span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"c\">// In CSS3, :checked should return both checked and selected elements</span>","                        <span class=\"c\">// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked</span>","                        <span class=\"k\">var</span> nodeName <span class=\"k\">=</span> elem<span class=\"k\">.</span>nodeName<span class=\"k\">.</span>toLowerCase<span class=\"k\">();</span>","                        <span class=\"k\">return</span> <span class=\"k\">(</span>nodeName <span class=\"k\">===</span> <span class=\"s\">\"input\"</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!!</span>elem<span class=\"k\">.</span>checked<span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"k\">(</span>nodeName <span class=\"k\">===</span> <span class=\"s\">\"option\"</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!!</span>elem<span class=\"k\">.</span>selected<span class=\"k\">);</span>","                    <span class=\"k\">}</span><span class=\"k\">,</span>","","                    <span class=\"s\">\"selected\"</span><span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"c\">// Accessing this property makes selected-by-default</span>","                        <span class=\"c\">// options in Safari work properly</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> elem<span class=\"k\">.</span>parentNode <span class=\"k\">)</span> <span class=\"k\">{</span>","                            elem<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>selectedIndex<span class=\"k\">;</span>","                        <span class=\"k\">}</span>","","                        <span class=\"k\">return</span> elem<span class=\"k\">.</span>selected <span class=\"k\">===</span> <span class=\"k\">true</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span><span class=\"k\">,</span>","","                    <span class=\"c\">// Contents</span>","                    <span class=\"s\">\"empty\"</span><span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"c\">// http://www.w3.org/TR/selectors/#empty-pseudo</span>","                        <span class=\"c\">// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),</span>","                        <span class=\"c\">//   but not by others (comment: 8; processing instruction: 7; etc.)</span>","                        <span class=\"c\">// nodeType &lt; 6 works because attributes (2) do not appear as children</span>","                        <span class=\"k\">for</span> <span class=\"k\">(</span> elem <span class=\"k\">=</span> elem<span class=\"k\">.</span>firstChild<span class=\"k\">;</span> elem<span class=\"k\">;</span> elem <span class=\"k\">=</span> elem<span class=\"k\">.</span>nextSibling <span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span> elem<span class=\"k\">.</span>nodeType <span class=\"k\">&lt;</span> <span class=\"s\">6</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span>","                        <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span><span class=\"k\">,</span>","","                    <span class=\"s\">\"parent\"</span><span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">return</span> <span class=\"k\">!</span>Expr<span class=\"k\">.</span>pseudos<span class=\"k\">[</span><span class=\"s\">\"empty\"</span><span class=\"k\">](</span> elem <span class=\"k\">);</span>","                    <span class=\"k\">}</span><span class=\"k\">,</span>","","                    <span class=\"c\">// Element/input types</span>","                    <span class=\"s\">\"header\"</span><span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">return</span> rheader<span class=\"k\">.</span>test<span class=\"k\">(</span> elem<span class=\"k\">.</span>nodeName <span class=\"k\">);</span>","                    <span class=\"k\">}</span><span class=\"k\">,</span>","","                    <span class=\"s\">\"input\"</span><span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">return</span> rinputs<span class=\"k\">.</span>test<span class=\"k\">(</span> elem<span class=\"k\">.</span>nodeName <span class=\"k\">);</span>","                    <span class=\"k\">}</span><span class=\"k\">,</span>","","                    <span class=\"s\">\"button\"</span><span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">var</span> name <span class=\"k\">=</span> elem<span class=\"k\">.</span>nodeName<span class=\"k\">.</span>toLowerCase<span class=\"k\">();</span>","                        <span class=\"k\">return</span> name <span class=\"k\">===</span> <span class=\"s\">\"input\"</span> <span class=\"k\">&amp;&amp;</span> elem<span class=\"k\">.</span>type <span class=\"k\">===</span> <span class=\"s\">\"button\"</span> <span class=\"k\">||</span> name <span class=\"k\">===</span> <span class=\"s\">\"button\"</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span><span class=\"k\">,</span>","","                    <span class=\"s\">\"text\"</span><span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">var</span> attr<span class=\"k\">;</span>","                        <span class=\"k\">return</span> elem<span class=\"k\">.</span>nodeName<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">===</span> <span class=\"s\">\"input\"</span> <span class=\"k\">&amp;&amp;</span>","                            elem<span class=\"k\">.</span>type <span class=\"k\">===</span> <span class=\"s\">\"text\"</span> <span class=\"k\">&amp;&amp;</span>","","                            <span class=\"c\">// Support: IE&lt;8</span>","                            <span class=\"c\">// New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"</span>","                            <span class=\"k\">(</span> <span class=\"k\">(</span>attr <span class=\"k\">=</span> elem<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span><span class=\"s\">\"type\"</span><span class=\"k\">))</span> <span class=\"k\">==</span> <span class=\"k\">null</span> <span class=\"k\">||</span> attr<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">===</span> <span class=\"s\">\"text\"</span> <span class=\"k\">);</span>","                    <span class=\"k\">}</span><span class=\"k\">,</span>","","                    <span class=\"c\">// Position-in-collection</span>","                    <span class=\"s\">\"first\"</span><span class=\"k\">:</span> createPositionalPseudo<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                        <span class=\"k\">return</span> <span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">];</span>","                    <span class=\"k\">}</span><span class=\"k\">),</span>","","                    <span class=\"s\">\"last\"</span><span class=\"k\">:</span> createPositionalPseudo<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span> matchIndexes<span class=\"k\">,</span> length <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">return</span> <span class=\"k\">[</span> length <span class=\"k\">-</span> <span class=\"s\">1</span> <span class=\"k\">];</span>","                    <span class=\"k\">}</span><span class=\"k\">),</span>","","                    <span class=\"s\">\"eq\"</span><span class=\"k\">:</span> createPositionalPseudo<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span> matchIndexes<span class=\"k\">,</span> length<span class=\"k\">,</span> argument <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">return</span> <span class=\"k\">[</span> argument <span class=\"k\">&lt;</span> <span class=\"s\">0</span> <span class=\"k\">?</span> argument <span class=\"k\">+</span> length <span class=\"k\">:</span> argument <span class=\"k\">];</span>","                    <span class=\"k\">}</span><span class=\"k\">),</span>","","                    <span class=\"s\">\"even\"</span><span class=\"k\">:</span> createPositionalPseudo<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span> matchIndexes<span class=\"k\">,</span> length <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","                        <span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">;</span> i <span class=\"k\">&lt;</span> length<span class=\"k\">;</span> i <span class=\"k\">+=</span> <span class=\"s\">2</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                            matchIndexes<span class=\"k\">.</span>push<span class=\"k\">(</span> i <span class=\"k\">);</span>","                        <span class=\"k\">}</span>","                        <span class=\"k\">return</span> matchIndexes<span class=\"k\">;</span>","                    <span class=\"k\">}</span><span class=\"k\">),</span>","","                    <span class=\"s\">\"odd\"</span><span class=\"k\">:</span> createPositionalPseudo<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span> matchIndexes<span class=\"k\">,</span> length <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">;</span>","                        <span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">;</span> i <span class=\"k\">&lt;</span> length<span class=\"k\">;</span> i <span class=\"k\">+=</span> <span class=\"s\">2</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                            matchIndexes<span class=\"k\">.</span>push<span class=\"k\">(</span> i <span class=\"k\">);</span>","                        <span class=\"k\">}</span>","                        <span class=\"k\">return</span> matchIndexes<span class=\"k\">;</span>","                    <span class=\"k\">}</span><span class=\"k\">),</span>","","                    <span class=\"s\">\"lt\"</span><span class=\"k\">:</span> createPositionalPseudo<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span> matchIndexes<span class=\"k\">,</span> length<span class=\"k\">,</span> argument <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">var</span> i <span class=\"k\">=</span> argument <span class=\"k\">&lt;</span> <span class=\"s\">0</span> <span class=\"k\">?</span> argument <span class=\"k\">+</span> length <span class=\"k\">:</span> argument<span class=\"k\">;</span>","                        <span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">;</span> <span class=\"k\">--</span>i <span class=\"k\">&gt;=</span> <span class=\"s\">0</span><span class=\"k\">;</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                            matchIndexes<span class=\"k\">.</span>push<span class=\"k\">(</span> i <span class=\"k\">);</span>","                        <span class=\"k\">}</span>","                        <span class=\"k\">return</span> matchIndexes<span class=\"k\">;</span>","                    <span class=\"k\">}</span><span class=\"k\">),</span>","","                    <span class=\"s\">\"gt\"</span><span class=\"k\">:</span> createPositionalPseudo<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span> matchIndexes<span class=\"k\">,</span> length<span class=\"k\">,</span> argument <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">var</span> i <span class=\"k\">=</span> argument <span class=\"k\">&lt;</span> <span class=\"s\">0</span> <span class=\"k\">?</span> argument <span class=\"k\">+</span> length <span class=\"k\">:</span> argument<span class=\"k\">;</span>","                        <span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">;</span> <span class=\"k\">++</span>i <span class=\"k\">&lt;</span> length<span class=\"k\">;</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                            matchIndexes<span class=\"k\">.</span>push<span class=\"k\">(</span> i <span class=\"k\">);</span>","                        <span class=\"k\">}</span>","                        <span class=\"k\">return</span> matchIndexes<span class=\"k\">;</span>","                    <span class=\"k\">}</span><span class=\"k\">)</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","","            Expr<span class=\"k\">.</span>pseudos<span class=\"k\">[</span><span class=\"s\">\"nth\"</span><span class=\"k\">]</span> <span class=\"k\">=</span> Expr<span class=\"k\">.</span>pseudos<span class=\"k\">[</span><span class=\"s\">\"eq\"</span><span class=\"k\">];</span>","","<span class=\"c\">// Add button/input type pseudos</span>","            <span class=\"k\">for</span> <span class=\"k\">(</span> i <span class=\"k\">in</span> <span class=\"k\">{</span> radio<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span> checkbox<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span> file<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span> password<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span> image<span class=\"k\">:</span> <span class=\"k\">true</span> <span class=\"k\">}</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                Expr<span class=\"k\">.</span>pseudos<span class=\"k\">[</span> i <span class=\"k\">]</span> <span class=\"k\">=</span> createInputPseudo<span class=\"k\">(</span> i <span class=\"k\">);</span>","            <span class=\"k\">}</span>","            <span class=\"k\">for</span> <span class=\"k\">(</span> i <span class=\"k\">in</span> <span class=\"k\">{</span> submit<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span> reset<span class=\"k\">:</span> <span class=\"k\">true</span> <span class=\"k\">}</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                Expr<span class=\"k\">.</span>pseudos<span class=\"k\">[</span> i <span class=\"k\">]</span> <span class=\"k\">=</span> createButtonPseudo<span class=\"k\">(</span> i <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","<span class=\"c\">// Easy API for creating new setFilters</span>","            <span class=\"k\">function</span> setFilters<span class=\"k\">()</span> <span class=\"k\">{}</span>","            setFilters<span class=\"k\">.</span>prototype <span class=\"k\">=</span> Expr<span class=\"k\">.</span>filters <span class=\"k\">=</span> Expr<span class=\"k\">.</span>pseudos<span class=\"k\">;</span>","            Expr<span class=\"k\">.</span>setFilters <span class=\"k\">=</span> <span class=\"k\">new</span> setFilters<span class=\"k\">();</span>","","            tokenize <span class=\"k\">=</span> Sizzle<span class=\"k\">.</span>tokenize <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> selector<span class=\"k\">,</span> parseOnly <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> matched<span class=\"k\">,</span> match<span class=\"k\">,</span> tokens<span class=\"k\">,</span> type<span class=\"k\">,</span>","                    soFar<span class=\"k\">,</span> groups<span class=\"k\">,</span> preFilters<span class=\"k\">,</span>","                    cached <span class=\"k\">=</span> tokenCache<span class=\"k\">[</span> selector <span class=\"k\">+</span> <span class=\"s\">\" \"</span> <span class=\"k\">];</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span> cached <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">return</span> parseOnly <span class=\"k\">?</span> <span class=\"s\">0</span> <span class=\"k\">:</span> cached<span class=\"k\">.</span>slice<span class=\"k\">(</span> <span class=\"s\">0</span> <span class=\"k\">);</span>","                <span class=\"k\">}</span>","","                soFar <span class=\"k\">=</span> selector<span class=\"k\">;</span>","                groups <span class=\"k\">=</span> <span class=\"k\">[];</span>","                preFilters <span class=\"k\">=</span> Expr<span class=\"k\">.</span>preFilter<span class=\"k\">;</span>","","                <span class=\"k\">while</span> <span class=\"k\">(</span> soFar <span class=\"k\">)</span> <span class=\"k\">{</span>","","                    <span class=\"c\">// Comma and first run</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>matched <span class=\"k\">||</span> <span class=\"k\">(</span>match <span class=\"k\">=</span> rcomma<span class=\"k\">.</span>exec<span class=\"k\">(</span> soFar <span class=\"k\">))</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> match <span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"c\">// Don't consume trailing commas as valid</span>","                            soFar <span class=\"k\">=</span> soFar<span class=\"k\">.</span>slice<span class=\"k\">(</span> match<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>length <span class=\"k\">)</span> <span class=\"k\">||</span> soFar<span class=\"k\">;</span>","                        <span class=\"k\">}</span>","                        groups<span class=\"k\">.</span>push<span class=\"k\">(</span> <span class=\"k\">(</span>tokens <span class=\"k\">=</span> <span class=\"k\">[])</span> <span class=\"k\">);</span>","                    <span class=\"k\">}</span>","","                    matched <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","","                    <span class=\"c\">// Combinators</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">(</span>match <span class=\"k\">=</span> rcombinators<span class=\"k\">.</span>exec<span class=\"k\">(</span> soFar <span class=\"k\">))</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        matched <span class=\"k\">=</span> match<span class=\"k\">.</span>shift<span class=\"k\">();</span>","                        tokens<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"k\">{</span>","                            value<span class=\"k\">:</span> matched<span class=\"k\">,</span>","                            <span class=\"c\">// Cast descendant combinators to space</span>","                            type<span class=\"k\">:</span> match<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>replace<span class=\"k\">(</span> rtrim<span class=\"k\">,</span> <span class=\"s\">\" \"</span> <span class=\"k\">)</span>","                        <span class=\"k\">}</span><span class=\"k\">);</span>","                        soFar <span class=\"k\">=</span> soFar<span class=\"k\">.</span>slice<span class=\"k\">(</span> matched<span class=\"k\">.</span>length <span class=\"k\">);</span>","                    <span class=\"k\">}</span>","","                    <span class=\"c\">// Filters</span>","                    <span class=\"k\">for</span> <span class=\"k\">(</span> type <span class=\"k\">in</span> Expr<span class=\"k\">.</span>filter <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">(</span>match <span class=\"k\">=</span> matchExpr<span class=\"k\">[</span> type <span class=\"k\">].</span>exec<span class=\"k\">(</span> soFar <span class=\"k\">))</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(!</span>preFilters<span class=\"k\">[</span> type <span class=\"k\">]</span> <span class=\"k\">||</span>","                            <span class=\"k\">(</span>match <span class=\"k\">=</span> preFilters<span class=\"k\">[</span> type <span class=\"k\">](</span> match <span class=\"k\">)))</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                            matched <span class=\"k\">=</span> match<span class=\"k\">.</span>shift<span class=\"k\">();</span>","                            tokens<span class=\"k\">.</span>push<span class=\"k\">(</span><span class=\"k\">{</span>","                                value<span class=\"k\">:</span> matched<span class=\"k\">,</span>","                                type<span class=\"k\">:</span> type<span class=\"k\">,</span>","                                matches<span class=\"k\">:</span> match","                            <span class=\"k\">}</span><span class=\"k\">);</span>","                            soFar <span class=\"k\">=</span> soFar<span class=\"k\">.</span>slice<span class=\"k\">(</span> matched<span class=\"k\">.</span>length <span class=\"k\">);</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span>","","                    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>matched <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">break</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// Return the length of the invalid excess</span>","                <span class=\"c\">// if we're just parsing</span>","                <span class=\"c\">// Otherwise, throw an error or return tokens</span>","                <span class=\"k\">return</span> parseOnly <span class=\"k\">?</span>","                    soFar<span class=\"k\">.</span>length <span class=\"k\">:</span>","                    soFar <span class=\"k\">?</span>","                        Sizzle<span class=\"k\">.</span>error<span class=\"k\">(</span> selector <span class=\"k\">)</span> <span class=\"k\">:</span>","                        <span class=\"c\">// Cache the tokens</span>","                        tokenCache<span class=\"k\">(</span> selector<span class=\"k\">,</span> groups <span class=\"k\">).</span>slice<span class=\"k\">(</span> <span class=\"s\">0</span> <span class=\"k\">);</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","","            <span class=\"k\">function</span> toSelector<span class=\"k\">(</span> tokens <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","                    len <span class=\"k\">=</span> tokens<span class=\"k\">.</span>length<span class=\"k\">,</span>","                    selector <span class=\"k\">=</span> <span class=\"s\">\"\"</span><span class=\"k\">;</span>","                <span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">;</span> i <span class=\"k\">&lt;</span> len<span class=\"k\">;</span> i<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    selector <span class=\"k\">+=</span> tokens<span class=\"k\">[</span>i<span class=\"k\">].</span>value<span class=\"k\">;</span>","                <span class=\"k\">}</span>","                <span class=\"k\">return</span> selector<span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">function</span> addCombinator<span class=\"k\">(</span> matcher<span class=\"k\">,</span> combinator<span class=\"k\">,</span> base <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> dir <span class=\"k\">=</span> combinator<span class=\"k\">.</span>dir<span class=\"k\">,</span>","                    skip <span class=\"k\">=</span> combinator<span class=\"k\">.</span>next<span class=\"k\">,</span>","                    key <span class=\"k\">=</span> skip <span class=\"k\">||</span> dir<span class=\"k\">,</span>","                    checkNonElements <span class=\"k\">=</span> base <span class=\"k\">&amp;&amp;</span> key <span class=\"k\">===</span> <span class=\"s\">\"parentNode\"</span><span class=\"k\">,</span>","                    doneName <span class=\"k\">=</span> done<span class=\"k\">++;</span>","","                <span class=\"k\">return</span> combinator<span class=\"k\">.</span>first <span class=\"k\">?</span>","                    <span class=\"c\">// Check against closest ancestor/preceding element</span>","                    <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> context<span class=\"k\">,</span> xml <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">while</span> <span class=\"k\">(</span> <span class=\"k\">(</span>elem <span class=\"k\">=</span> elem<span class=\"k\">[</span> dir <span class=\"k\">])</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span> elem<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">||</span> checkNonElements <span class=\"k\">)</span> <span class=\"k\">{</span>","                                <span class=\"k\">return</span> matcher<span class=\"k\">(</span> elem<span class=\"k\">,</span> context<span class=\"k\">,</span> xml <span class=\"k\">);</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span>","                        <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span> <span class=\"k\">:</span>","","                    <span class=\"c\">// Check against all ancestor/preceding elements</span>","                    <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> context<span class=\"k\">,</span> xml <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">var</span> oldCache<span class=\"k\">,</span> uniqueCache<span class=\"k\">,</span> outerCache<span class=\"k\">,</span>","                            newCache <span class=\"k\">=</span> <span class=\"k\">[</span> dirruns<span class=\"k\">,</span> doneName <span class=\"k\">];</span>","","                        <span class=\"c\">// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> xml <span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">while</span> <span class=\"k\">(</span> <span class=\"k\">(</span>elem <span class=\"k\">=</span> elem<span class=\"k\">[</span> dir <span class=\"k\">])</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                <span class=\"k\">if</span> <span class=\"k\">(</span> elem<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">||</span> checkNonElements <span class=\"k\">)</span> <span class=\"k\">{</span>","                                    <span class=\"k\">if</span> <span class=\"k\">(</span> matcher<span class=\"k\">(</span> elem<span class=\"k\">,</span> context<span class=\"k\">,</span> xml <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                        <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","                                    <span class=\"k\">}</span>","                                <span class=\"k\">}</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                            <span class=\"k\">while</span> <span class=\"k\">(</span> <span class=\"k\">(</span>elem <span class=\"k\">=</span> elem<span class=\"k\">[</span> dir <span class=\"k\">])</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                <span class=\"k\">if</span> <span class=\"k\">(</span> elem<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">||</span> checkNonElements <span class=\"k\">)</span> <span class=\"k\">{</span>","                                    outerCache <span class=\"k\">=</span> elem<span class=\"k\">[</span> expando <span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"k\">(</span>elem<span class=\"k\">[</span> expando <span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">);</span>","","                                    <span class=\"c\">// Support: IE &lt;9 only</span>","                                    <span class=\"c\">// Defend against cloned attroperties (jQuery gh-1709)</span>","                                    uniqueCache <span class=\"k\">=</span> outerCache<span class=\"k\">[</span> elem<span class=\"k\">.</span>uniqueID <span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"k\">(</span>outerCache<span class=\"k\">[</span> elem<span class=\"k\">.</span>uniqueID <span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">);</span>","","                                    <span class=\"k\">if</span> <span class=\"k\">(</span> skip <span class=\"k\">&amp;&amp;</span> skip <span class=\"k\">===</span> elem<span class=\"k\">.</span>nodeName<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                        elem <span class=\"k\">=</span> elem<span class=\"k\">[</span> dir <span class=\"k\">]</span> <span class=\"k\">||</span> elem<span class=\"k\">;</span>","                                    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">(</span>oldCache <span class=\"k\">=</span> uniqueCache<span class=\"k\">[</span> key <span class=\"k\">])</span> <span class=\"k\">&amp;&amp;</span>","                                        oldCache<span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">]</span> <span class=\"k\">===</span> dirruns <span class=\"k\">&amp;&amp;</span> oldCache<span class=\"k\">[</span> <span class=\"s\">1</span> <span class=\"k\">]</span> <span class=\"k\">===</span> doneName <span class=\"k\">)</span> <span class=\"k\">{</span>","","                                        <span class=\"c\">// Assign to newCache so results back-propagate to previous elements</span>","                                        <span class=\"k\">return</span> <span class=\"k\">(</span>newCache<span class=\"k\">[</span> <span class=\"s\">2</span> <span class=\"k\">]</span> <span class=\"k\">=</span> oldCache<span class=\"k\">[</span> <span class=\"s\">2</span> <span class=\"k\">]);</span>","                                    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                                        <span class=\"c\">// Reuse newcache so results back-propagate to previous elements</span>","                                        uniqueCache<span class=\"k\">[</span> key <span class=\"k\">]</span> <span class=\"k\">=</span> newCache<span class=\"k\">;</span>","","                                        <span class=\"c\">// A match means we're done; a fail means we have to keep checking</span>","                                        <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">(</span>newCache<span class=\"k\">[</span> <span class=\"s\">2</span> <span class=\"k\">]</span> <span class=\"k\">=</span> matcher<span class=\"k\">(</span> elem<span class=\"k\">,</span> context<span class=\"k\">,</span> xml <span class=\"k\">))</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                            <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","                                        <span class=\"k\">}</span>","                                    <span class=\"k\">}</span>","                                <span class=\"k\">}</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span>","                        <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">function</span> elementMatcher<span class=\"k\">(</span> matchers <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> matchers<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">1</span> <span class=\"k\">?</span>","                    <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> context<span class=\"k\">,</span> xml <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">var</span> i <span class=\"k\">=</span> matchers<span class=\"k\">.</span>length<span class=\"k\">;</span>","                        <span class=\"k\">while</span> <span class=\"k\">(</span> i<span class=\"k\">--</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>matchers<span class=\"k\">[</span>i<span class=\"k\">](</span> elem<span class=\"k\">,</span> context<span class=\"k\">,</span> xml <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span>","                        <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span> <span class=\"k\">:</span>","                    matchers<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">];</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">function</span> multipleContexts<span class=\"k\">(</span> selector<span class=\"k\">,</span> contexts<span class=\"k\">,</span> results <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","                    len <span class=\"k\">=</span> contexts<span class=\"k\">.</span>length<span class=\"k\">;</span>","                <span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">;</span> i <span class=\"k\">&lt;</span> len<span class=\"k\">;</span> i<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    Sizzle<span class=\"k\">(</span> selector<span class=\"k\">,</span> contexts<span class=\"k\">[</span>i<span class=\"k\">],</span> results <span class=\"k\">);</span>","                <span class=\"k\">}</span>","                <span class=\"k\">return</span> results<span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">function</span> condense<span class=\"k\">(</span> unmatched<span class=\"k\">,</span> map<span class=\"k\">,</span> filter<span class=\"k\">,</span> context<span class=\"k\">,</span> xml <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> elem<span class=\"k\">,</span>","                    newUnmatched <span class=\"k\">=</span> <span class=\"k\">[],</span>","                    i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","                    len <span class=\"k\">=</span> unmatched<span class=\"k\">.</span>length<span class=\"k\">,</span>","                    mapped <span class=\"k\">=</span> map <span class=\"k\">!=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","","                <span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">;</span> i <span class=\"k\">&lt;</span> len<span class=\"k\">;</span> i<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">(</span>elem <span class=\"k\">=</span> unmatched<span class=\"k\">[</span>i<span class=\"k\">])</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>filter <span class=\"k\">||</span> filter<span class=\"k\">(</span> elem<span class=\"k\">,</span> context<span class=\"k\">,</span> xml <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                            newUnmatched<span class=\"k\">.</span>push<span class=\"k\">(</span> elem <span class=\"k\">);</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span> mapped <span class=\"k\">)</span> <span class=\"k\">{</span>","                                map<span class=\"k\">.</span>push<span class=\"k\">(</span> i <span class=\"k\">);</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","","                <span class=\"k\">return</span> newUnmatched<span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">function</span> setMatcher<span class=\"k\">(</span> preFilter<span class=\"k\">,</span> selector<span class=\"k\">,</span> matcher<span class=\"k\">,</span> postFilter<span class=\"k\">,</span> postFinder<span class=\"k\">,</span> postSelector <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> postFilter <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>postFilter<span class=\"k\">[</span> expando <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    postFilter <span class=\"k\">=</span> setMatcher<span class=\"k\">(</span> postFilter <span class=\"k\">);</span>","                <span class=\"k\">}</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> postFinder <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>postFinder<span class=\"k\">[</span> expando <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    postFinder <span class=\"k\">=</span> setMatcher<span class=\"k\">(</span> postFinder<span class=\"k\">,</span> postSelector <span class=\"k\">);</span>","                <span class=\"k\">}</span>","                <span class=\"k\">return</span> markFunction<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span> seed<span class=\"k\">,</span> results<span class=\"k\">,</span> context<span class=\"k\">,</span> xml <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> temp<span class=\"k\">,</span> i<span class=\"k\">,</span> elem<span class=\"k\">,</span>","                        preMap <span class=\"k\">=</span> <span class=\"k\">[],</span>","                        postMap <span class=\"k\">=</span> <span class=\"k\">[],</span>","                        preexisting <span class=\"k\">=</span> results<span class=\"k\">.</span>length<span class=\"k\">,</span>","","                        <span class=\"c\">// Get initial elements from seed or context</span>","                        elems <span class=\"k\">=</span> seed <span class=\"k\">||</span> multipleContexts<span class=\"k\">(</span> selector <span class=\"k\">||</span> <span class=\"s\">\"*\"</span><span class=\"k\">,</span> context<span class=\"k\">.</span>nodeType <span class=\"k\">?</span> <span class=\"k\">[</span> context <span class=\"k\">]</span> <span class=\"k\">:</span> context<span class=\"k\">,</span> <span class=\"k\">[]</span> <span class=\"k\">),</span>","","                        <span class=\"c\">// Prefilter to get matcher input, preserving a map for seed-results synchronization</span>","                        matcherIn <span class=\"k\">=</span> preFilter <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span> seed <span class=\"k\">||</span> <span class=\"k\">!</span>selector <span class=\"k\">)</span> <span class=\"k\">?</span>","                            condense<span class=\"k\">(</span> elems<span class=\"k\">,</span> preMap<span class=\"k\">,</span> preFilter<span class=\"k\">,</span> context<span class=\"k\">,</span> xml <span class=\"k\">)</span> <span class=\"k\">:</span>","                            elems<span class=\"k\">,</span>","","                        matcherOut <span class=\"k\">=</span> matcher <span class=\"k\">?</span>","                            <span class=\"c\">// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,</span>","                            postFinder <span class=\"k\">||</span> <span class=\"k\">(</span> seed <span class=\"k\">?</span> preFilter <span class=\"k\">:</span> preexisting <span class=\"k\">||</span> postFilter <span class=\"k\">)</span> <span class=\"k\">?</span>","","                                <span class=\"c\">// ...intermediate processing is necessary</span>","                                <span class=\"k\">[]</span> <span class=\"k\">:</span>","","                                <span class=\"c\">// ...otherwise use results directly</span>","                                results <span class=\"k\">:</span>","                            matcherIn<span class=\"k\">;</span>","","                    <span class=\"c\">// Find primary matches</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> matcher <span class=\"k\">)</span> <span class=\"k\">{</span>","                        matcher<span class=\"k\">(</span> matcherIn<span class=\"k\">,</span> matcherOut<span class=\"k\">,</span> context<span class=\"k\">,</span> xml <span class=\"k\">);</span>","                    <span class=\"k\">}</span>","","                    <span class=\"c\">// Apply postFilter</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> postFilter <span class=\"k\">)</span> <span class=\"k\">{</span>","                        temp <span class=\"k\">=</span> condense<span class=\"k\">(</span> matcherOut<span class=\"k\">,</span> postMap <span class=\"k\">);</span>","                        postFilter<span class=\"k\">(</span> temp<span class=\"k\">,</span> <span class=\"k\">[],</span> context<span class=\"k\">,</span> xml <span class=\"k\">);</span>","","                        <span class=\"c\">// Un-match failing elements by moving them back to matcherIn</span>","                        i <span class=\"k\">=</span> temp<span class=\"k\">.</span>length<span class=\"k\">;</span>","                        <span class=\"k\">while</span> <span class=\"k\">(</span> i<span class=\"k\">--</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">(</span>elem <span class=\"k\">=</span> temp<span class=\"k\">[</span>i<span class=\"k\">])</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                matcherOut<span class=\"k\">[</span> postMap<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">!(</span>matcherIn<span class=\"k\">[</span> postMap<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">]</span> <span class=\"k\">=</span> elem<span class=\"k\">);</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span>","","                    <span class=\"k\">if</span> <span class=\"k\">(</span> seed <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> postFinder <span class=\"k\">||</span> preFilter <span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span> postFinder <span class=\"k\">)</span> <span class=\"k\">{</span>","                                <span class=\"c\">// Get the final matcherOut by condensing this intermediate into postFinder contexts</span>","                                temp <span class=\"k\">=</span> <span class=\"k\">[];</span>","                                i <span class=\"k\">=</span> matcherOut<span class=\"k\">.</span>length<span class=\"k\">;</span>","                                <span class=\"k\">while</span> <span class=\"k\">(</span> i<span class=\"k\">--</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">(</span>elem <span class=\"k\">=</span> matcherOut<span class=\"k\">[</span>i<span class=\"k\">])</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                        <span class=\"c\">// Restore matcherIn since elem is not yet a final match</span>","                                        temp<span class=\"k\">.</span>push<span class=\"k\">(</span> <span class=\"k\">(</span>matcherIn<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">=</span> elem<span class=\"k\">)</span> <span class=\"k\">);</span>","                                    <span class=\"k\">}</span>","                                <span class=\"k\">}</span>","                                postFinder<span class=\"k\">(</span> <span class=\"k\">null</span><span class=\"k\">,</span> <span class=\"k\">(</span>matcherOut <span class=\"k\">=</span> <span class=\"k\">[]),</span> temp<span class=\"k\">,</span> xml <span class=\"k\">);</span>","                            <span class=\"k\">}</span>","","                            <span class=\"c\">// Move matched elements from seed to results to keep them synchronized</span>","                            i <span class=\"k\">=</span> matcherOut<span class=\"k\">.</span>length<span class=\"k\">;</span>","                            <span class=\"k\">while</span> <span class=\"k\">(</span> i<span class=\"k\">--</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">(</span>elem <span class=\"k\">=</span> matcherOut<span class=\"k\">[</span>i<span class=\"k\">])</span> <span class=\"k\">&amp;&amp;</span>","                                    <span class=\"k\">(</span>temp <span class=\"k\">=</span> postFinder <span class=\"k\">?</span> indexOf<span class=\"k\">(</span> seed<span class=\"k\">,</span> elem <span class=\"k\">)</span> <span class=\"k\">:</span> preMap<span class=\"k\">[</span>i<span class=\"k\">])</span> <span class=\"k\">&gt;</span> <span class=\"k\">-</span><span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                                    seed<span class=\"k\">[</span>temp<span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">!(</span>results<span class=\"k\">[</span>temp<span class=\"k\">]</span> <span class=\"k\">=</span> elem<span class=\"k\">);</span>","                                <span class=\"k\">}</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span>","","                        <span class=\"c\">// Add elements to results, through postFinder if defined</span>","                    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                        matcherOut <span class=\"k\">=</span> condense<span class=\"k\">(</span>","                            matcherOut <span class=\"k\">===</span> results <span class=\"k\">?</span>","                                matcherOut<span class=\"k\">.</span>splice<span class=\"k\">(</span> preexisting<span class=\"k\">,</span> matcherOut<span class=\"k\">.</span>length <span class=\"k\">)</span> <span class=\"k\">:</span>","                                matcherOut","                        <span class=\"k\">);</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> postFinder <span class=\"k\">)</span> <span class=\"k\">{</span>","                            postFinder<span class=\"k\">(</span> <span class=\"k\">null</span><span class=\"k\">,</span> results<span class=\"k\">,</span> matcherOut<span class=\"k\">,</span> xml <span class=\"k\">);</span>","                        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                            push<span class=\"k\">.</span>apply<span class=\"k\">(</span> results<span class=\"k\">,</span> matcherOut <span class=\"k\">);</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span><span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">function</span> matcherFromTokens<span class=\"k\">(</span> tokens <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> checkContext<span class=\"k\">,</span> matcher<span class=\"k\">,</span> j<span class=\"k\">,</span>","                    len <span class=\"k\">=</span> tokens<span class=\"k\">.</span>length<span class=\"k\">,</span>","                    leadingRelative <span class=\"k\">=</span> Expr<span class=\"k\">.</span>relative<span class=\"k\">[</span> tokens<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>type <span class=\"k\">],</span>","                    implicitRelative <span class=\"k\">=</span> leadingRelative <span class=\"k\">||</span> Expr<span class=\"k\">.</span>relative<span class=\"k\">[</span><span class=\"s\">\" \"</span><span class=\"k\">],</span>","                    i <span class=\"k\">=</span> leadingRelative <span class=\"k\">?</span> <span class=\"s\">1</span> <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span>","","                    <span class=\"c\">// The foundational matcher ensures that elements are reachable from top-level context(s)</span>","                    matchContext <span class=\"k\">=</span> addCombinator<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">return</span> elem <span class=\"k\">===</span> checkContext<span class=\"k\">;</span>","                    <span class=\"k\">}</span><span class=\"k\">,</span> implicitRelative<span class=\"k\">,</span> <span class=\"k\">true</span> <span class=\"k\">),</span>","                    matchAnyContext <span class=\"k\">=</span> addCombinator<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">return</span> indexOf<span class=\"k\">(</span> checkContext<span class=\"k\">,</span> elem <span class=\"k\">)</span> <span class=\"k\">&gt;</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span><span class=\"k\">,</span> implicitRelative<span class=\"k\">,</span> <span class=\"k\">true</span> <span class=\"k\">),</span>","                    matchers <span class=\"k\">=</span> <span class=\"k\">[</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> context<span class=\"k\">,</span> xml <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">var</span> ret <span class=\"k\">=</span> <span class=\"k\">(</span> <span class=\"k\">!</span>leadingRelative <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span> xml <span class=\"k\">||</span> context <span class=\"k\">!==</span> outermostContext <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"k\">(</span>","                            <span class=\"k\">(</span>checkContext <span class=\"k\">=</span> context<span class=\"k\">).</span>nodeType <span class=\"k\">?</span>","                                matchContext<span class=\"k\">(</span> elem<span class=\"k\">,</span> context<span class=\"k\">,</span> xml <span class=\"k\">)</span> <span class=\"k\">:</span>","                                matchAnyContext<span class=\"k\">(</span> elem<span class=\"k\">,</span> context<span class=\"k\">,</span> xml <span class=\"k\">)</span> <span class=\"k\">);</span>","                        <span class=\"c\">// Avoid hanging onto element (issue #299)</span>","                        checkContext <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","                        <span class=\"k\">return</span> ret<span class=\"k\">;</span>","                    <span class=\"k\">}</span> <span class=\"k\">];</span>","","                <span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">;</span> i <span class=\"k\">&lt;</span> len<span class=\"k\">;</span> i<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">(</span>matcher <span class=\"k\">=</span> Expr<span class=\"k\">.</span>relative<span class=\"k\">[</span> tokens<span class=\"k\">[</span>i<span class=\"k\">].</span>type <span class=\"k\">])</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        matchers <span class=\"k\">=</span> <span class=\"k\">[</span> addCombinator<span class=\"k\">(</span>elementMatcher<span class=\"k\">(</span> matchers <span class=\"k\">),</span> matcher<span class=\"k\">)</span> <span class=\"k\">];</span>","                    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                        matcher <span class=\"k\">=</span> Expr<span class=\"k\">.</span>filter<span class=\"k\">[</span> tokens<span class=\"k\">[</span>i<span class=\"k\">].</span>type <span class=\"k\">].</span>apply<span class=\"k\">(</span> <span class=\"k\">null</span><span class=\"k\">,</span> tokens<span class=\"k\">[</span>i<span class=\"k\">].</span>matches <span class=\"k\">);</span>","","                        <span class=\"c\">// Return special upon seeing a positional matcher</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> matcher<span class=\"k\">[</span> expando <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"c\">// Find the next relative operator (if any) for proper handling</span>","                            j <span class=\"k\">=</span> <span class=\"k\">++</span>i<span class=\"k\">;</span>","                            <span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">;</span> j <span class=\"k\">&lt;</span> len<span class=\"k\">;</span> j<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                <span class=\"k\">if</span> <span class=\"k\">(</span> Expr<span class=\"k\">.</span>relative<span class=\"k\">[</span> tokens<span class=\"k\">[</span>j<span class=\"k\">].</span>type <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                    <span class=\"k\">break</span><span class=\"k\">;</span>","                                <span class=\"k\">}</span>","                            <span class=\"k\">}</span>","                            <span class=\"k\">return</span> setMatcher<span class=\"k\">(</span>","                                i <span class=\"k\">&gt;</span> <span class=\"s\">1</span> <span class=\"k\">&amp;&amp;</span> elementMatcher<span class=\"k\">(</span> matchers <span class=\"k\">),</span>","                                i <span class=\"k\">&gt;</span> <span class=\"s\">1</span> <span class=\"k\">&amp;&amp;</span> toSelector<span class=\"k\">(</span>","                                <span class=\"c\">// If the preceding token was a descendant combinator, insert an implicit any-element `*`</span>","                                tokens<span class=\"k\">.</span>slice<span class=\"k\">(</span> <span class=\"s\">0</span><span class=\"k\">,</span> i <span class=\"k\">-</span> <span class=\"s\">1</span> <span class=\"k\">).</span>concat<span class=\"k\">(</span><span class=\"k\">{</span> value<span class=\"k\">:</span> tokens<span class=\"k\">[</span> i <span class=\"k\">-</span> <span class=\"s\">2</span> <span class=\"k\">].</span>type <span class=\"k\">===</span> <span class=\"s\">\" \"</span> <span class=\"k\">?</span> <span class=\"s\">\"*\"</span> <span class=\"k\">:</span> <span class=\"s\">\"\"</span> <span class=\"k\">}</span><span class=\"k\">)</span>","                                <span class=\"k\">).</span>replace<span class=\"k\">(</span> rtrim<span class=\"k\">,</span> <span class=\"s\">\"$1\"</span> <span class=\"k\">),</span>","                                matcher<span class=\"k\">,</span>","                                i <span class=\"k\">&lt;</span> j <span class=\"k\">&amp;&amp;</span> matcherFromTokens<span class=\"k\">(</span> tokens<span class=\"k\">.</span>slice<span class=\"k\">(</span> i<span class=\"k\">,</span> j <span class=\"k\">)</span> <span class=\"k\">),</span>","                                j <span class=\"k\">&lt;</span> len <span class=\"k\">&amp;&amp;</span> matcherFromTokens<span class=\"k\">(</span> <span class=\"k\">(</span>tokens <span class=\"k\">=</span> tokens<span class=\"k\">.</span>slice<span class=\"k\">(</span> j <span class=\"k\">))</span> <span class=\"k\">),</span>","                                j <span class=\"k\">&lt;</span> len <span class=\"k\">&amp;&amp;</span> toSelector<span class=\"k\">(</span> tokens <span class=\"k\">)</span>","                            <span class=\"k\">);</span>","                        <span class=\"k\">}</span>","                        matchers<span class=\"k\">.</span>push<span class=\"k\">(</span> matcher <span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","","                <span class=\"k\">return</span> elementMatcher<span class=\"k\">(</span> matchers <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">function</span> matcherFromGroupMatchers<span class=\"k\">(</span> elementMatchers<span class=\"k\">,</span> setMatchers <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> bySet <span class=\"k\">=</span> setMatchers<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">0</span><span class=\"k\">,</span>","                    byElement <span class=\"k\">=</span> elementMatchers<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">0</span><span class=\"k\">,</span>","                    superMatcher <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> seed<span class=\"k\">,</span> context<span class=\"k\">,</span> xml<span class=\"k\">,</span> results<span class=\"k\">,</span> outermost <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">var</span> elem<span class=\"k\">,</span> j<span class=\"k\">,</span> matcher<span class=\"k\">,</span>","                            matchedCount <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","                            i <span class=\"k\">=</span> <span class=\"s\">\"0\"</span><span class=\"k\">,</span>","                            unmatched <span class=\"k\">=</span> seed <span class=\"k\">&amp;&amp;</span> <span class=\"k\">[],</span>","                            setMatched <span class=\"k\">=</span> <span class=\"k\">[],</span>","                            contextBackup <span class=\"k\">=</span> outermostContext<span class=\"k\">,</span>","                            <span class=\"c\">// We must always have either seed elements or outermost context</span>","                            elems <span class=\"k\">=</span> seed <span class=\"k\">||</span> byElement <span class=\"k\">&amp;&amp;</span> Expr<span class=\"k\">.</span>find<span class=\"k\">[</span><span class=\"s\">\"TAG\"</span><span class=\"k\">](</span> <span class=\"s\">\"*\"</span><span class=\"k\">,</span> outermost <span class=\"k\">),</span>","                            <span class=\"c\">// Use integer dirruns iff this is the outermost matcher</span>","                            dirrunsUnique <span class=\"k\">=</span> <span class=\"k\">(</span>dirruns <span class=\"k\">+=</span> contextBackup <span class=\"k\">==</span> <span class=\"k\">null</span> <span class=\"k\">?</span> <span class=\"s\">1</span> <span class=\"k\">:</span> Math<span class=\"k\">.</span>random<span class=\"k\">()</span> <span class=\"k\">||</span> <span class=\"s\">0.1</span><span class=\"k\">),</span>","                            len <span class=\"k\">=</span> elems<span class=\"k\">.</span>length<span class=\"k\">;</span>","","                        <span class=\"k\">if</span> <span class=\"k\">(</span> outermost <span class=\"k\">)</span> <span class=\"k\">{</span>","                            outermostContext <span class=\"k\">=</span> context <span class=\"k\">===</span> document <span class=\"k\">||</span> context <span class=\"k\">||</span> outermost<span class=\"k\">;</span>","                        <span class=\"k\">}</span>","","                        <span class=\"c\">// Add elements passing elementMatchers directly to results</span>","                        <span class=\"c\">// Support: IE&lt;9, Safari</span>","                        <span class=\"c\">// Tolerate NodeList properties (IE: \"length\"; Safari: &lt;number&gt;) matching elements by id</span>","                        <span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">;</span> i <span class=\"k\">!==</span> len <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>elem <span class=\"k\">=</span> elems<span class=\"k\">[</span>i<span class=\"k\">])</span> <span class=\"k\">!=</span> <span class=\"k\">null</span><span class=\"k\">;</span> i<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span> byElement <span class=\"k\">&amp;&amp;</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","                                j <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","                                <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>context <span class=\"k\">&amp;&amp;</span> elem<span class=\"k\">.</span>ownerDocument <span class=\"k\">!==</span> document <span class=\"k\">)</span> <span class=\"k\">{</span>","                                    setDocument<span class=\"k\">(</span> elem <span class=\"k\">);</span>","                                    xml <span class=\"k\">=</span> <span class=\"k\">!</span>documentIsHTML<span class=\"k\">;</span>","                                <span class=\"k\">}</span>","                                <span class=\"k\">while</span> <span class=\"k\">(</span> <span class=\"k\">(</span>matcher <span class=\"k\">=</span> elementMatchers<span class=\"k\">[</span>j<span class=\"k\">++])</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                    <span class=\"k\">if</span> <span class=\"k\">(</span> matcher<span class=\"k\">(</span> elem<span class=\"k\">,</span> context <span class=\"k\">||</span> document<span class=\"k\">,</span> xml<span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                        results<span class=\"k\">.</span>push<span class=\"k\">(</span> elem <span class=\"k\">);</span>","                                        <span class=\"k\">break</span><span class=\"k\">;</span>","                                    <span class=\"k\">}</span>","                                <span class=\"k\">}</span>","                                <span class=\"k\">if</span> <span class=\"k\">(</span> outermost <span class=\"k\">)</span> <span class=\"k\">{</span>","                                    dirruns <span class=\"k\">=</span> dirrunsUnique<span class=\"k\">;</span>","                                <span class=\"k\">}</span>","                            <span class=\"k\">}</span>","","                            <span class=\"c\">// Track unmatched elements for set filters</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span> bySet <span class=\"k\">)</span> <span class=\"k\">{</span>","                                <span class=\"c\">// They will have gone through all possible matchers</span>","                                <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">(</span>elem <span class=\"k\">=</span> <span class=\"k\">!</span>matcher <span class=\"k\">&amp;&amp;</span> elem<span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                    matchedCount<span class=\"k\">--;</span>","                                <span class=\"k\">}</span>","","                                <span class=\"c\">// Lengthen the array for every element, matched or not</span>","                                <span class=\"k\">if</span> <span class=\"k\">(</span> seed <span class=\"k\">)</span> <span class=\"k\">{</span>","                                    unmatched<span class=\"k\">.</span>push<span class=\"k\">(</span> elem <span class=\"k\">);</span>","                                <span class=\"k\">}</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span>","","                        <span class=\"c\">// `i` is now the count of elements visited above, and adding it to `matchedCount`</span>","                        <span class=\"c\">// makes the latter nonnegative.</span>","                        matchedCount <span class=\"k\">+=</span> i<span class=\"k\">;</span>","","                        <span class=\"c\">// Apply set filters to unmatched elements</span>","                        <span class=\"c\">// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`</span>","                        <span class=\"c\">// equals `i`), unless we didn't visit _any_ elements in the above loop because we have</span>","                        <span class=\"c\">// no element matchers and no seed.</span>","                        <span class=\"c\">// Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that</span>","                        <span class=\"c\">// case, which will result in a \"00\" `matchedCount` that differs from `i` but is also</span>","                        <span class=\"c\">// numerically zero.</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> bySet <span class=\"k\">&amp;&amp;</span> i <span class=\"k\">!==</span> matchedCount <span class=\"k\">)</span> <span class=\"k\">{</span>","                            j <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","                            <span class=\"k\">while</span> <span class=\"k\">(</span> <span class=\"k\">(</span>matcher <span class=\"k\">=</span> setMatchers<span class=\"k\">[</span>j<span class=\"k\">++])</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                matcher<span class=\"k\">(</span> unmatched<span class=\"k\">,</span> setMatched<span class=\"k\">,</span> context<span class=\"k\">,</span> xml <span class=\"k\">);</span>","                            <span class=\"k\">}</span>","","                            <span class=\"k\">if</span> <span class=\"k\">(</span> seed <span class=\"k\">)</span> <span class=\"k\">{</span>","                                <span class=\"c\">// Reintegrate element matches to eliminate the need for sorting</span>","                                <span class=\"k\">if</span> <span class=\"k\">(</span> matchedCount <span class=\"k\">&gt;</span> <span class=\"s\">0</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                    <span class=\"k\">while</span> <span class=\"k\">(</span> i<span class=\"k\">--</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                        <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!(</span>unmatched<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">||</span> setMatched<span class=\"k\">[</span>i<span class=\"k\">])</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                            setMatched<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">=</span> pop<span class=\"k\">.</span>call<span class=\"k\">(</span> results <span class=\"k\">);</span>","                                        <span class=\"k\">}</span>","                                    <span class=\"k\">}</span>","                                <span class=\"k\">}</span>","","                                <span class=\"c\">// Discard index placeholder values to get only actual matches</span>","                                setMatched <span class=\"k\">=</span> condense<span class=\"k\">(</span> setMatched <span class=\"k\">);</span>","                            <span class=\"k\">}</span>","","                            <span class=\"c\">// Add matches to results</span>","                            push<span class=\"k\">.</span>apply<span class=\"k\">(</span> results<span class=\"k\">,</span> setMatched <span class=\"k\">);</span>","","                            <span class=\"c\">// Seedless set matches succeeding multiple successful matchers stipulate sorting</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span> outermost <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>seed <span class=\"k\">&amp;&amp;</span> setMatched<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">0</span> <span class=\"k\">&amp;&amp;</span>","                                <span class=\"k\">(</span> matchedCount <span class=\"k\">+</span> setMatchers<span class=\"k\">.</span>length <span class=\"k\">)</span> <span class=\"k\">&gt;</span> <span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                                Sizzle<span class=\"k\">.</span>uniqueSort<span class=\"k\">(</span> results <span class=\"k\">);</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span>","","                        <span class=\"c\">// Override manipulation of globals by nested matchers</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> outermost <span class=\"k\">)</span> <span class=\"k\">{</span>","                            dirruns <span class=\"k\">=</span> dirrunsUnique<span class=\"k\">;</span>","                            outermostContext <span class=\"k\">=</span> contextBackup<span class=\"k\">;</span>","                        <span class=\"k\">}</span>","","                        <span class=\"k\">return</span> unmatched<span class=\"k\">;</span>","                    <span class=\"k\">}</span><span class=\"k\">;</span>","","                <span class=\"k\">return</span> bySet <span class=\"k\">?</span>","                    markFunction<span class=\"k\">(</span> superMatcher <span class=\"k\">)</span> <span class=\"k\">:</span>","                    superMatcher<span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            compile <span class=\"k\">=</span> Sizzle<span class=\"k\">.</span>compile <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> selector<span class=\"k\">,</span> match <span class=\"c\">/* Internal Use Only */</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> i<span class=\"k\">,</span>","                    setMatchers <span class=\"k\">=</span> <span class=\"k\">[],</span>","                    elementMatchers <span class=\"k\">=</span> <span class=\"k\">[],</span>","                    cached <span class=\"k\">=</span> compilerCache<span class=\"k\">[</span> selector <span class=\"k\">+</span> <span class=\"s\">\" \"</span> <span class=\"k\">];</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>cached <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"c\">// Generate a function of recursive functions that can be used to check each element</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>match <span class=\"k\">)</span> <span class=\"k\">{</span>","                        match <span class=\"k\">=</span> tokenize<span class=\"k\">(</span> selector <span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                    i <span class=\"k\">=</span> match<span class=\"k\">.</span>length<span class=\"k\">;</span>","                    <span class=\"k\">while</span> <span class=\"k\">(</span> i<span class=\"k\">--</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        cached <span class=\"k\">=</span> matcherFromTokens<span class=\"k\">(</span> match<span class=\"k\">[</span>i<span class=\"k\">]</span> <span class=\"k\">);</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> cached<span class=\"k\">[</span> expando <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                            setMatchers<span class=\"k\">.</span>push<span class=\"k\">(</span> cached <span class=\"k\">);</span>","                        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                            elementMatchers<span class=\"k\">.</span>push<span class=\"k\">(</span> cached <span class=\"k\">);</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span>","","                    <span class=\"c\">// Cache the compiled function</span>","                    cached <span class=\"k\">=</span> compilerCache<span class=\"k\">(</span> selector<span class=\"k\">,</span> matcherFromGroupMatchers<span class=\"k\">(</span> elementMatchers<span class=\"k\">,</span> setMatchers <span class=\"k\">)</span> <span class=\"k\">);</span>","","                    <span class=\"c\">// Save selector and tokenization</span>","                    cached<span class=\"k\">.</span>selector <span class=\"k\">=</span> selector<span class=\"k\">;</span>","                <span class=\"k\">}</span>","                <span class=\"k\">return</span> cached<span class=\"k\">;</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","","            <span class=\"c\">/**</span>","<span class=\"c\">             * A low-level selection function that works with Sizzle's compiled</span>","<span class=\"c\">             *  selector functions</span>","<span class=\"c\">             * @param {String|Function} selector A selector or a pre-compiled</span>","<span class=\"c\">             *  selector function built with Sizzle.compile</span>","<span class=\"c\">             * @param {Element} context</span>","<span class=\"c\">             * @param {Array} [results]</span>","<span class=\"c\">             * @param {Array} [seed] A set of elements to match against</span>","<span class=\"c\">             */</span>","            select <span class=\"k\">=</span> Sizzle<span class=\"k\">.</span>select <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> selector<span class=\"k\">,</span> context<span class=\"k\">,</span> results<span class=\"k\">,</span> seed <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> i<span class=\"k\">,</span> tokens<span class=\"k\">,</span> token<span class=\"k\">,</span> type<span class=\"k\">,</span> find<span class=\"k\">,</span>","                    compiled <span class=\"k\">=</span> <span class=\"k\">typeof</span> selector <span class=\"k\">===</span> <span class=\"s\">\"function\"</span> <span class=\"k\">&amp;&amp;</span> selector<span class=\"k\">,</span>","                    match <span class=\"k\">=</span> <span class=\"k\">!</span>seed <span class=\"k\">&amp;&amp;</span> tokenize<span class=\"k\">(</span> <span class=\"k\">(</span>selector <span class=\"k\">=</span> compiled<span class=\"k\">.</span>selector <span class=\"k\">||</span> selector<span class=\"k\">)</span> <span class=\"k\">);</span>","","                results <span class=\"k\">=</span> results <span class=\"k\">||</span> <span class=\"k\">[];</span>","","                <span class=\"c\">// Try to minimize operations if there is only one selector in the list and no seed</span>","                <span class=\"c\">// (the latter of which guarantees us context)</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> match<span class=\"k\">.</span>length <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                    <span class=\"c\">// Reduce context if the leading compound selector is an ID</span>","                    tokens <span class=\"k\">=</span> match<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]</span> <span class=\"k\">=</span> match<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>slice<span class=\"k\">(</span> <span class=\"s\">0</span> <span class=\"k\">);</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> tokens<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">2</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span>token <span class=\"k\">=</span> tokens<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">]).</span>type <span class=\"k\">===</span> <span class=\"s\">\"ID\"</span> <span class=\"k\">&amp;&amp;</span>","                        context<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">9</span> <span class=\"k\">&amp;&amp;</span> documentIsHTML <span class=\"k\">&amp;&amp;</span> Expr<span class=\"k\">.</span>relative<span class=\"k\">[</span> tokens<span class=\"k\">[</span><span class=\"s\">1</span><span class=\"k\">].</span>type <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                        context <span class=\"k\">=</span> <span class=\"k\">(</span> Expr<span class=\"k\">.</span>find<span class=\"k\">[</span><span class=\"s\">\"ID\"</span><span class=\"k\">](</span> token<span class=\"k\">.</span>matches<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>replace<span class=\"k\">(</span>runescape<span class=\"k\">,</span> funescape<span class=\"k\">),</span> context <span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"k\">[]</span> <span class=\"k\">)[</span><span class=\"s\">0</span><span class=\"k\">];</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>context <span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">return</span> results<span class=\"k\">;</span>","","                            <span class=\"c\">// Precompiled matchers will still verify ancestry, so step up a level</span>","                        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> compiled <span class=\"k\">)</span> <span class=\"k\">{</span>","                            context <span class=\"k\">=</span> context<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","                        <span class=\"k\">}</span>","","                        selector <span class=\"k\">=</span> selector<span class=\"k\">.</span>slice<span class=\"k\">(</span> tokens<span class=\"k\">.</span>shift<span class=\"k\">().</span>value<span class=\"k\">.</span>length <span class=\"k\">);</span>","                    <span class=\"k\">}</span>","","                    <span class=\"c\">// Fetch a seed set for right-to-left matching</span>","                    i <span class=\"k\">=</span> matchExpr<span class=\"k\">[</span><span class=\"s\">\"needsContext\"</span><span class=\"k\">].</span>test<span class=\"k\">(</span> selector <span class=\"k\">)</span> <span class=\"k\">?</span> <span class=\"s\">0</span> <span class=\"k\">:</span> tokens<span class=\"k\">.</span>length<span class=\"k\">;</span>","                    <span class=\"k\">while</span> <span class=\"k\">(</span> i<span class=\"k\">--</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        token <span class=\"k\">=</span> tokens<span class=\"k\">[</span>i<span class=\"k\">];</span>","","                        <span class=\"c\">// Abort if we hit a combinator</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> Expr<span class=\"k\">.</span>relative<span class=\"k\">[</span> <span class=\"k\">(</span>type <span class=\"k\">=</span> token<span class=\"k\">.</span>type<span class=\"k\">)</span> <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">break</span><span class=\"k\">;</span>","                        <span class=\"k\">}</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">(</span>find <span class=\"k\">=</span> Expr<span class=\"k\">.</span>find<span class=\"k\">[</span> type <span class=\"k\">])</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"c\">// Search, expanding context for leading sibling combinators</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">(</span>seed <span class=\"k\">=</span> find<span class=\"k\">(</span>","                                token<span class=\"k\">.</span>matches<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>replace<span class=\"k\">(</span> runescape<span class=\"k\">,</span> funescape <span class=\"k\">),</span>","                                rsibling<span class=\"k\">.</span>test<span class=\"k\">(</span> tokens<span class=\"k\">[</span><span class=\"s\">0</span><span class=\"k\">].</span>type <span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> testContext<span class=\"k\">(</span> context<span class=\"k\">.</span>parentNode <span class=\"k\">)</span> <span class=\"k\">||</span> context","                            <span class=\"k\">))</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                                <span class=\"c\">// If seed is empty or no tokens remain, we can return early</span>","                                tokens<span class=\"k\">.</span>splice<span class=\"k\">(</span> i<span class=\"k\">,</span> <span class=\"s\">1</span> <span class=\"k\">);</span>","                                selector <span class=\"k\">=</span> seed<span class=\"k\">.</span>length <span class=\"k\">&amp;&amp;</span> toSelector<span class=\"k\">(</span> tokens <span class=\"k\">);</span>","                                <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>selector <span class=\"k\">)</span> <span class=\"k\">{</span>","                                    push<span class=\"k\">.</span>apply<span class=\"k\">(</span> results<span class=\"k\">,</span> seed <span class=\"k\">);</span>","                                    <span class=\"k\">return</span> results<span class=\"k\">;</span>","                                <span class=\"k\">}</span>","","                                <span class=\"k\">break</span><span class=\"k\">;</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// Compile and execute a filtering function if one is not provided</span>","                <span class=\"c\">// Provide `match` to avoid retokenization if we modified the selector above</span>","                <span class=\"k\">(</span> compiled <span class=\"k\">||</span> compile<span class=\"k\">(</span> selector<span class=\"k\">,</span> match <span class=\"k\">)</span> <span class=\"k\">)(</span>","                    seed<span class=\"k\">,</span>","                    context<span class=\"k\">,</span>","                    <span class=\"k\">!</span>documentIsHTML<span class=\"k\">,</span>","                    results<span class=\"k\">,</span>","                    <span class=\"k\">!</span>context <span class=\"k\">||</span> rsibling<span class=\"k\">.</span>test<span class=\"k\">(</span> selector <span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> testContext<span class=\"k\">(</span> context<span class=\"k\">.</span>parentNode <span class=\"k\">)</span> <span class=\"k\">||</span> context","                <span class=\"k\">);</span>","                <span class=\"k\">return</span> results<span class=\"k\">;</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">// One-time assignments</span>","","<span class=\"c\">// Sort stability</span>","            support<span class=\"k\">.</span>sortStable <span class=\"k\">=</span> expando<span class=\"k\">.</span>split<span class=\"k\">(</span><span class=\"s\">\"\"</span><span class=\"k\">).</span>sort<span class=\"k\">(</span> sortOrder <span class=\"k\">).</span>join<span class=\"k\">(</span><span class=\"s\">\"\"</span><span class=\"k\">)</span> <span class=\"k\">===</span> expando<span class=\"k\">;</span>","","<span class=\"c\">// Support: Chrome 14-35+</span>","<span class=\"c\">// Always assume duplicates if they aren't passed to the comparison function</span>","            support<span class=\"k\">.</span>detectDuplicates <span class=\"k\">=</span> <span class=\"k\">!!</span>hasDuplicate<span class=\"k\">;</span>","","<span class=\"c\">// Initialize against the default document</span>","            setDocument<span class=\"k\">();</span>","","<span class=\"c\">// Support: Webkit&lt;537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)</span>","<span class=\"c\">// Detached nodes confoundingly follow *each other*</span>","            support<span class=\"k\">.</span>sortDetached <span class=\"k\">=</span> assert<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span> el <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"c\">// Should return 1, but returns 4 (following)</span>","                <span class=\"k\">return</span> el<span class=\"k\">.</span>compareDocumentPosition<span class=\"k\">(</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span><span class=\"s\">\"fieldset\"</span><span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">&amp;</span> <span class=\"s\">1</span><span class=\"k\">;</span>","            <span class=\"k\">}</span><span class=\"k\">);</span>","","<span class=\"c\">// Support: IE&lt;8</span>","<span class=\"c\">// Prevent attribute/property \"interpolation\"</span>","<span class=\"c\">// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>assert<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span> el <span class=\"k\">)</span> <span class=\"k\">{</span>","                el<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> <span class=\"s\">\"&lt;a href='#'&gt;&lt;/a&gt;\"</span><span class=\"k\">;</span>","                <span class=\"k\">return</span> el<span class=\"k\">.</span>firstChild<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span><span class=\"s\">\"href\"</span><span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"s\">\"#\"</span> <span class=\"k\">;</span>","            <span class=\"k\">}</span><span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                addHandle<span class=\"k\">(</span> <span class=\"s\">\"type|href|height|width\"</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> name<span class=\"k\">,</span> isXML <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>isXML <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">return</span> elem<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span> name<span class=\"k\">,</span> name<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">===</span> <span class=\"s\">\"type\"</span> <span class=\"k\">?</span> <span class=\"s\">1</span> <span class=\"k\">:</span> <span class=\"s\">2</span> <span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span><span class=\"k\">);</span>","            <span class=\"k\">}</span>","","<span class=\"c\">// Support: IE&lt;9</span>","<span class=\"c\">// Use defaultValue in place of getAttribute(\"value\")</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>support<span class=\"k\">.</span>attributes <span class=\"k\">||</span> <span class=\"k\">!</span>assert<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span> el <span class=\"k\">)</span> <span class=\"k\">{</span>","                el<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> <span class=\"s\">\"&lt;input/&gt;\"</span><span class=\"k\">;</span>","                el<span class=\"k\">.</span>firstChild<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span> <span class=\"s\">\"value\"</span><span class=\"k\">,</span> <span class=\"s\">\"\"</span> <span class=\"k\">);</span>","                <span class=\"k\">return</span> el<span class=\"k\">.</span>firstChild<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span> <span class=\"s\">\"value\"</span> <span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"s\">\"\"</span><span class=\"k\">;</span>","            <span class=\"k\">}</span><span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                addHandle<span class=\"k\">(</span> <span class=\"s\">\"value\"</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> name<span class=\"k\">,</span> isXML <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>isXML <span class=\"k\">&amp;&amp;</span> elem<span class=\"k\">.</span>nodeName<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">===</span> <span class=\"s\">\"input\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">return</span> elem<span class=\"k\">.</span>defaultValue<span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span><span class=\"k\">);</span>","            <span class=\"k\">}</span>","","<span class=\"c\">// Support: IE&lt;9</span>","<span class=\"c\">// Use getAttributeNode to fetch booleans when getAttribute lies</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>assert<span class=\"k\">(</span><span class=\"k\">function</span><span class=\"k\">(</span> el <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> el<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span><span class=\"s\">\"disabled\"</span><span class=\"k\">)</span> <span class=\"k\">==</span> <span class=\"k\">null</span><span class=\"k\">;</span>","            <span class=\"k\">}</span><span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                addHandle<span class=\"k\">(</span> booleans<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> name<span class=\"k\">,</span> isXML <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> val<span class=\"k\">;</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>isXML <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">return</span> elem<span class=\"k\">[</span> name <span class=\"k\">]</span> <span class=\"k\">===</span> <span class=\"k\">true</span> <span class=\"k\">?</span> name<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">:</span>","                            <span class=\"k\">(</span>val <span class=\"k\">=</span> elem<span class=\"k\">.</span>getAttributeNode<span class=\"k\">(</span> name <span class=\"k\">))</span> <span class=\"k\">&amp;&amp;</span> val<span class=\"k\">.</span>specified <span class=\"k\">?</span>","                                val<span class=\"k\">.</span>value <span class=\"k\">:</span>","                                <span class=\"k\">null</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span><span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">return</span> Sizzle<span class=\"k\">;</span>","","        <span class=\"k\">}</span><span class=\"k\">)(</span> window <span class=\"k\">);</span>","","","","    jQuery<span class=\"k\">.</span>find <span class=\"k\">=</span> Sizzle<span class=\"k\">;</span>","    jQuery<span class=\"k\">.</span>expr <span class=\"k\">=</span> Sizzle<span class=\"k\">.</span>selectors<span class=\"k\">;</span>","","<span class=\"c\">// Deprecated</span>","    jQuery<span class=\"k\">.</span>expr<span class=\"k\">[</span> <span class=\"s\">\":\"</span> <span class=\"k\">]</span> <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>expr<span class=\"k\">.</span>pseudos<span class=\"k\">;</span>","    jQuery<span class=\"k\">.</span>uniqueSort <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>unique <span class=\"k\">=</span> Sizzle<span class=\"k\">.</span>uniqueSort<span class=\"k\">;</span>","    jQuery<span class=\"k\">.</span>text <span class=\"k\">=</span> Sizzle<span class=\"k\">.</span>getText<span class=\"k\">;</span>","    jQuery<span class=\"k\">.</span>isXMLDoc <span class=\"k\">=</span> Sizzle<span class=\"k\">.</span>isXML<span class=\"k\">;</span>","    jQuery<span class=\"k\">.</span>contains <span class=\"k\">=</span> Sizzle<span class=\"k\">.</span>contains<span class=\"k\">;</span>","    jQuery<span class=\"k\">.</span>escapeSelector <span class=\"k\">=</span> Sizzle<span class=\"k\">.</span>escape<span class=\"k\">;</span>","","","","","    <span class=\"k\">var</span> dir <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> dir<span class=\"k\">,</span> until <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> matched <span class=\"k\">=</span> <span class=\"k\">[],</span>","            truncate <span class=\"k\">=</span> until <span class=\"k\">!==</span> undefined<span class=\"k\">;</span>","","        <span class=\"k\">while</span> <span class=\"k\">(</span> <span class=\"k\">(</span> elem <span class=\"k\">=</span> elem<span class=\"k\">[</span> dir <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> elem<span class=\"k\">.</span>nodeType <span class=\"k\">!==</span> <span class=\"s\">9</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> elem<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> truncate <span class=\"k\">&amp;&amp;</span> jQuery<span class=\"k\">(</span> elem <span class=\"k\">).</span>is<span class=\"k\">(</span> until <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">break</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","                matched<span class=\"k\">.</span>push<span class=\"k\">(</span> elem <span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> matched<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","","    <span class=\"k\">var</span> siblings <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> n<span class=\"k\">,</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> matched <span class=\"k\">=</span> <span class=\"k\">[];</span>","","        <span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">;</span> n<span class=\"k\">;</span> n <span class=\"k\">=</span> n<span class=\"k\">.</span>nextSibling <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> n<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">&amp;&amp;</span> n <span class=\"k\">!==</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","                matched<span class=\"k\">.</span>push<span class=\"k\">(</span> n <span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">return</span> matched<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","","    <span class=\"k\">var</span> rneedsContext <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>expr<span class=\"k\">.</span>match<span class=\"k\">.</span>needsContext<span class=\"k\">;</span>","","","","    <span class=\"k\">function</span> nodeName<span class=\"k\">(</span> elem<span class=\"k\">,</span> name <span class=\"k\">)</span> <span class=\"k\">{</span>","","        <span class=\"k\">return</span> elem<span class=\"k\">.</span>nodeName <span class=\"k\">&amp;&amp;</span> elem<span class=\"k\">.</span>nodeName<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">===</span> name<span class=\"k\">.</span>toLowerCase<span class=\"k\">();</span>","","    <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"k\">var</span> rsingleTag <span class=\"k\">=</span> <span class=\"k\">(</span> <span class=\"s\">/^&lt;([a-z][^\\/\\0&gt;:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?&gt;(?:&lt;\\/\\1&gt;|)$/i</span> <span class=\"k\">);</span>","","","","<span class=\"c\">// Implement the identical functionality for filter and not</span>","    <span class=\"k\">function</span> winnow<span class=\"k\">(</span> elements<span class=\"k\">,</span> qualifier<span class=\"k\">,</span> not <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> isFunction<span class=\"k\">(</span> qualifier <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> jQuery<span class=\"k\">.</span>grep<span class=\"k\">(</span> elements<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> i <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> <span class=\"k\">!!</span>qualifier<span class=\"k\">.</span>call<span class=\"k\">(</span> elem<span class=\"k\">,</span> i<span class=\"k\">,</span> elem <span class=\"k\">)</span> <span class=\"k\">!==</span> not<span class=\"k\">;</span>","            <span class=\"k\">}</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span>","","        <span class=\"c\">// Single element</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> qualifier<span class=\"k\">.</span>nodeType <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> jQuery<span class=\"k\">.</span>grep<span class=\"k\">(</span> elements<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> <span class=\"k\">(</span> elem <span class=\"k\">===</span> qualifier <span class=\"k\">)</span> <span class=\"k\">!==</span> not<span class=\"k\">;</span>","            <span class=\"k\">}</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span>","","        <span class=\"c\">// Arraylike of elements (jQuery, arguments, Array)</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">typeof</span> qualifier <span class=\"k\">!==</span> <span class=\"s\">\"string\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> jQuery<span class=\"k\">.</span>grep<span class=\"k\">(</span> elements<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> <span class=\"k\">(</span> indexOf<span class=\"k\">.</span>call<span class=\"k\">(</span> qualifier<span class=\"k\">,</span> elem <span class=\"k\">)</span> <span class=\"k\">&gt;</span> <span class=\"k\">-</span><span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">!==</span> not<span class=\"k\">;</span>","            <span class=\"k\">}</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span>","","        <span class=\"c\">// Filtered directly for both simple and complex selectors</span>","        <span class=\"k\">return</span> jQuery<span class=\"k\">.</span>filter<span class=\"k\">(</span> qualifier<span class=\"k\">,</span> elements<span class=\"k\">,</span> not <span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    jQuery<span class=\"k\">.</span>filter <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> expr<span class=\"k\">,</span> elems<span class=\"k\">,</span> not <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> elem <span class=\"k\">=</span> elems<span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">];</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span> not <span class=\"k\">)</span> <span class=\"k\">{</span>","            expr <span class=\"k\">=</span> <span class=\"s\">\":not(\"</span> <span class=\"k\">+</span> expr <span class=\"k\">+</span> <span class=\"s\">\")\"</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span> elems<span class=\"k\">.</span>length <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">&amp;&amp;</span> elem<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> jQuery<span class=\"k\">.</span>find<span class=\"k\">.</span>matchesSelector<span class=\"k\">(</span> elem<span class=\"k\">,</span> expr <span class=\"k\">)</span> <span class=\"k\">?</span> <span class=\"k\">[</span> elem <span class=\"k\">]</span> <span class=\"k\">:</span> <span class=\"k\">[];</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">return</span> jQuery<span class=\"k\">.</span>find<span class=\"k\">.</span>matches<span class=\"k\">(</span> expr<span class=\"k\">,</span> jQuery<span class=\"k\">.</span>grep<span class=\"k\">(</span> elems<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> elem<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">1</span><span class=\"k\">;</span>","        <span class=\"k\">}</span> <span class=\"k\">)</span> <span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    jQuery<span class=\"k\">.</span>fn<span class=\"k\">.</span>extend<span class=\"k\">(</span> <span class=\"k\">{</span>","        find<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> selector <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> i<span class=\"k\">,</span> ret<span class=\"k\">,</span>","                len <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>length<span class=\"k\">,</span>","                self <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">;</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">typeof</span> selector <span class=\"k\">!==</span> <span class=\"s\">\"string\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>pushStack<span class=\"k\">(</span> jQuery<span class=\"k\">(</span> selector <span class=\"k\">).</span>filter<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                    <span class=\"k\">for</span> <span class=\"k\">(</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> len<span class=\"k\">;</span> i<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> jQuery<span class=\"k\">.</span>contains<span class=\"k\">(</span> self<span class=\"k\">[</span> i <span class=\"k\">],</span> <span class=\"k\">this</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span> <span class=\"k\">)</span> <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            ret <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>pushStack<span class=\"k\">(</span> <span class=\"k\">[]</span> <span class=\"k\">);</span>","","            <span class=\"k\">for</span> <span class=\"k\">(</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> len<span class=\"k\">;</span> i<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                jQuery<span class=\"k\">.</span>find<span class=\"k\">(</span> selector<span class=\"k\">,</span> self<span class=\"k\">[</span> i <span class=\"k\">],</span> ret <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">return</span> len <span class=\"k\">&gt;</span> <span class=\"s\">1</span> <span class=\"k\">?</span> jQuery<span class=\"k\">.</span>uniqueSort<span class=\"k\">(</span> ret <span class=\"k\">)</span> <span class=\"k\">:</span> ret<span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        filter<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> selector <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>pushStack<span class=\"k\">(</span> winnow<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> selector <span class=\"k\">||</span> <span class=\"k\">[],</span> <span class=\"k\">false</span> <span class=\"k\">)</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        not<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> selector <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>pushStack<span class=\"k\">(</span> winnow<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> selector <span class=\"k\">||</span> <span class=\"k\">[],</span> <span class=\"k\">true</span> <span class=\"k\">)</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        is<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> selector <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">!!</span>winnow<span class=\"k\">(</span>","                <span class=\"k\">this</span><span class=\"k\">,</span>","","                <span class=\"c\">// If this is a positional/relative selector, check membership in the returned set</span>","                <span class=\"c\">// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".</span>","                <span class=\"k\">typeof</span> selector <span class=\"k\">===</span> <span class=\"s\">\"string\"</span> <span class=\"k\">&amp;&amp;</span> rneedsContext<span class=\"k\">.</span>test<span class=\"k\">(</span> selector <span class=\"k\">)</span> <span class=\"k\">?</span>","                    jQuery<span class=\"k\">(</span> selector <span class=\"k\">)</span> <span class=\"k\">:</span>","                    selector <span class=\"k\">||</span> <span class=\"k\">[],</span>","                <span class=\"k\">false</span>","            <span class=\"k\">).</span>length<span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span> <span class=\"k\">);</span>","","","<span class=\"c\">// Initialize a jQuery object</span>","","","<span class=\"c\">// A central reference to the root jQuery(document)</span>","    <span class=\"k\">var</span> rootjQuery<span class=\"k\">,</span>","","        <span class=\"c\">// A simple way to check for HTML strings</span>","        <span class=\"c\">// Prioritize #id over &lt;tag&gt; to avoid XSS via location.hash (#9521)</span>","        <span class=\"c\">// Strict HTML recognition (#11290: must start with &lt;)</span>","        <span class=\"c\">// Shortcut simple #id case for speed</span>","        rquickExpr <span class=\"k\">=</span> <span class=\"s\">/^(?:\\s*(&lt;[\\w\\W]+&gt;)[^&gt;]*|#([\\w-]+))$/</span><span class=\"k\">,</span>","","        init <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>fn<span class=\"k\">.</span>init <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> selector<span class=\"k\">,</span> context<span class=\"k\">,</span> root <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> match<span class=\"k\">,</span> elem<span class=\"k\">;</span>","","            <span class=\"c\">// HANDLE: $(\"\"), $(null), $(undefined), $(false)</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>selector <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Method init() accepts an alternate rootjQuery</span>","            <span class=\"c\">// so migrate can support jQuery.sub (gh-2101)</span>","            root <span class=\"k\">=</span> root <span class=\"k\">||</span> rootjQuery<span class=\"k\">;</span>","","            <span class=\"c\">// Handle HTML strings</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">typeof</span> selector <span class=\"k\">===</span> <span class=\"s\">\"string\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> selector<span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">]</span> <span class=\"k\">===</span> <span class=\"s\">\"&lt;\"</span> <span class=\"k\">&amp;&amp;</span>","                    selector<span class=\"k\">[</span> selector<span class=\"k\">.</span>length <span class=\"k\">-</span> <span class=\"s\">1</span> <span class=\"k\">]</span> <span class=\"k\">===</span> <span class=\"s\">\"&gt;\"</span> <span class=\"k\">&amp;&amp;</span>","                    selector<span class=\"k\">.</span>length <span class=\"k\">&gt;=</span> <span class=\"s\">3</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                    <span class=\"c\">// Assume that strings that start and end with &lt;&gt; are HTML and skip the regex check</span>","                    match <span class=\"k\">=</span> <span class=\"k\">[</span> <span class=\"k\">null</span><span class=\"k\">,</span> selector<span class=\"k\">,</span> <span class=\"k\">null</span> <span class=\"k\">];</span>","","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    match <span class=\"k\">=</span> rquickExpr<span class=\"k\">.</span>exec<span class=\"k\">(</span> selector <span class=\"k\">);</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// Match html or make sure no context is specified for #id</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> match <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span> match<span class=\"k\">[</span> <span class=\"s\">1</span> <span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"k\">!</span>context <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                    <span class=\"c\">// HANDLE: $(html) -&gt; $(array)</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> match<span class=\"k\">[</span> <span class=\"s\">1</span> <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        context <span class=\"k\">=</span> context <span class=\"k\">instanceof</span> jQuery <span class=\"k\">?</span> context<span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">]</span> <span class=\"k\">:</span> context<span class=\"k\">;</span>","","                        <span class=\"c\">// Option to run scripts is true for back-compat</span>","                        <span class=\"c\">// Intentionally let the error be thrown if parseHTML is not present</span>","                        jQuery<span class=\"k\">.</span>merge<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> jQuery<span class=\"k\">.</span>parseHTML<span class=\"k\">(</span>","                            match<span class=\"k\">[</span> <span class=\"s\">1</span> <span class=\"k\">],</span>","                            context <span class=\"k\">&amp;&amp;</span> context<span class=\"k\">.</span>nodeType <span class=\"k\">?</span> context<span class=\"k\">.</span>ownerDocument <span class=\"k\">||</span> context <span class=\"k\">:</span> document<span class=\"k\">,</span>","                            <span class=\"k\">true</span>","                        <span class=\"k\">)</span> <span class=\"k\">);</span>","","                        <span class=\"c\">// HANDLE: $(html, props)</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> rsingleTag<span class=\"k\">.</span>test<span class=\"k\">(</span> match<span class=\"k\">[</span> <span class=\"s\">1</span> <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> jQuery<span class=\"k\">.</span>isPlainObject<span class=\"k\">(</span> context <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">for</span> <span class=\"k\">(</span> match <span class=\"k\">in</span> context <span class=\"k\">)</span> <span class=\"k\">{</span>","","                                <span class=\"c\">// Properties of context are called as methods if possible</span>","                                <span class=\"k\">if</span> <span class=\"k\">(</span> isFunction<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">[</span> match <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                    <span class=\"k\">this</span><span class=\"k\">[</span> match <span class=\"k\">](</span> context<span class=\"k\">[</span> match <span class=\"k\">]</span> <span class=\"k\">);</span>","","                                    <span class=\"c\">// ...and otherwise set as attributes</span>","                                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                                    <span class=\"k\">this</span><span class=\"k\">.</span>attr<span class=\"k\">(</span> match<span class=\"k\">,</span> context<span class=\"k\">[</span> match <span class=\"k\">]</span> <span class=\"k\">);</span>","                                <span class=\"k\">}</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span>","","                        <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","","                        <span class=\"c\">// HANDLE: $(#id)</span>","                    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                        elem <span class=\"k\">=</span> document<span class=\"k\">.</span>getElementById<span class=\"k\">(</span> match<span class=\"k\">[</span> <span class=\"s\">2</span> <span class=\"k\">]</span> <span class=\"k\">);</span>","","                        <span class=\"k\">if</span> <span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","","                            <span class=\"c\">// Inject the element directly into the jQuery object</span>","                            <span class=\"k\">this</span><span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">]</span> <span class=\"k\">=</span> elem<span class=\"k\">;</span>","                            <span class=\"k\">this</span><span class=\"k\">.</span>length <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">;</span>","                        <span class=\"k\">}</span>","                        <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","","                    <span class=\"c\">// HANDLE: $(expr, $(...))</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>context <span class=\"k\">||</span> context<span class=\"k\">.</span>jquery <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">return</span> <span class=\"k\">(</span> context <span class=\"k\">||</span> root <span class=\"k\">).</span>find<span class=\"k\">(</span> selector <span class=\"k\">);</span>","","                    <span class=\"c\">// HANDLE: $(expr, context)</span>","                    <span class=\"c\">// (which is just equivalent to: $(context).find(expr)</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>constructor<span class=\"k\">(</span> context <span class=\"k\">).</span>find<span class=\"k\">(</span> selector <span class=\"k\">);</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// HANDLE: $(DOMElement)</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> selector<span class=\"k\">.</span>nodeType <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">this</span><span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">]</span> <span class=\"k\">=</span> selector<span class=\"k\">;</span>","                <span class=\"k\">this</span><span class=\"k\">.</span>length <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">;</span>","                <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","","                <span class=\"c\">// HANDLE: $(function)</span>","                <span class=\"c\">// Shortcut for document ready</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> isFunction<span class=\"k\">(</span> selector <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> root<span class=\"k\">.</span>ready <span class=\"k\">!==</span> undefined <span class=\"k\">?</span>","                    root<span class=\"k\">.</span>ready<span class=\"k\">(</span> selector <span class=\"k\">)</span> <span class=\"k\">:</span>","","                    <span class=\"c\">// Execute immediately if ready is not present</span>","                    selector<span class=\"k\">(</span> jQuery <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">return</span> jQuery<span class=\"k\">.</span>makeArray<span class=\"k\">(</span> selector<span class=\"k\">,</span> <span class=\"k\">this</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">// Give the init function the jQuery prototype for later instantiation</span>","    init<span class=\"k\">.</span>prototype <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>fn<span class=\"k\">;</span>","","<span class=\"c\">// Initialize central reference</span>","    rootjQuery <span class=\"k\">=</span> jQuery<span class=\"k\">(</span> document <span class=\"k\">);</span>","","","    <span class=\"k\">var</span> rparentsprev <span class=\"k\">=</span> <span class=\"s\">/^(?:parents|prev(?:Until|All))/</span><span class=\"k\">,</span>","","        <span class=\"c\">// Methods guaranteed to produce a unique set when starting from a unique set</span>","        guaranteedUnique <span class=\"k\">=</span> <span class=\"k\">{</span>","            children<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","            contents<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","            next<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","            prev<span class=\"k\">:</span> <span class=\"k\">true</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","","    jQuery<span class=\"k\">.</span>fn<span class=\"k\">.</span>extend<span class=\"k\">(</span> <span class=\"k\">{</span>","        has<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> target <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> targets <span class=\"k\">=</span> jQuery<span class=\"k\">(</span> target<span class=\"k\">,</span> <span class=\"k\">this</span> <span class=\"k\">),</span>","                l <span class=\"k\">=</span> targets<span class=\"k\">.</span>length<span class=\"k\">;</span>","","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>filter<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","                <span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">;</span> i <span class=\"k\">&lt;</span> l<span class=\"k\">;</span> i<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> jQuery<span class=\"k\">.</span>contains<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> targets<span class=\"k\">[</span> i <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        closest<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> selectors<span class=\"k\">,</span> context <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> cur<span class=\"k\">,</span>","                i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","                l <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>length<span class=\"k\">,</span>","                matched <span class=\"k\">=</span> <span class=\"k\">[],</span>","                targets <span class=\"k\">=</span> <span class=\"k\">typeof</span> selectors <span class=\"k\">!==</span> <span class=\"s\">\"string\"</span> <span class=\"k\">&amp;&amp;</span> jQuery<span class=\"k\">(</span> selectors <span class=\"k\">);</span>","","            <span class=\"c\">// Positional selectors never match, since there's no _selection_ context</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>rneedsContext<span class=\"k\">.</span>test<span class=\"k\">(</span> selectors <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">;</span> i <span class=\"k\">&lt;</span> l<span class=\"k\">;</span> i<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">for</span> <span class=\"k\">(</span> cur <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">[</span> i <span class=\"k\">];</span> cur <span class=\"k\">&amp;&amp;</span> cur <span class=\"k\">!==</span> context<span class=\"k\">;</span> cur <span class=\"k\">=</span> cur<span class=\"k\">.</span>parentNode <span class=\"k\">)</span> <span class=\"k\">{</span>","","                        <span class=\"c\">// Always skip document fragments</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> cur<span class=\"k\">.</span>nodeType <span class=\"k\">&lt;</span> <span class=\"s\">11</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span> targets <span class=\"k\">?</span>","                            targets<span class=\"k\">.</span>index<span class=\"k\">(</span> cur <span class=\"k\">)</span> <span class=\"k\">&gt;</span> <span class=\"k\">-</span><span class=\"s\">1</span> <span class=\"k\">:</span>","","                            <span class=\"c\">// Don't pass non-elements to Sizzle</span>","                            cur<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">&amp;&amp;</span>","                            jQuery<span class=\"k\">.</span>find<span class=\"k\">.</span>matchesSelector<span class=\"k\">(</span> cur<span class=\"k\">,</span> selectors <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                            matched<span class=\"k\">.</span>push<span class=\"k\">(</span> cur <span class=\"k\">);</span>","                            <span class=\"k\">break</span><span class=\"k\">;</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>pushStack<span class=\"k\">(</span> matched<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">1</span> <span class=\"k\">?</span> jQuery<span class=\"k\">.</span>uniqueSort<span class=\"k\">(</span> matched <span class=\"k\">)</span> <span class=\"k\">:</span> matched <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        <span class=\"c\">// Determine the position of an element within the set</span>","        index<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"c\">// No argument, return index in parent</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>elem <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> <span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">]</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">this</span><span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">].</span>parentNode <span class=\"k\">)</span> <span class=\"k\">?</span> <span class=\"k\">this</span><span class=\"k\">.</span>first<span class=\"k\">().</span>prevAll<span class=\"k\">().</span>length <span class=\"k\">:</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Index in selector</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">typeof</span> elem <span class=\"k\">===</span> <span class=\"s\">\"string\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> indexOf<span class=\"k\">.</span>call<span class=\"k\">(</span> jQuery<span class=\"k\">(</span> elem <span class=\"k\">),</span> <span class=\"k\">this</span><span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">]</span> <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Locate the position of the desired element</span>","            <span class=\"k\">return</span> indexOf<span class=\"k\">.</span>call<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span>","","                <span class=\"c\">// If it receives a jQuery object, the first element is used</span>","                elem<span class=\"k\">.</span>jquery <span class=\"k\">?</span> elem<span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">]</span> <span class=\"k\">:</span> elem","            <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        add<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> selector<span class=\"k\">,</span> context <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>pushStack<span class=\"k\">(</span>","                jQuery<span class=\"k\">.</span>uniqueSort<span class=\"k\">(</span>","                    jQuery<span class=\"k\">.</span>merge<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">.</span>get<span class=\"k\">(),</span> jQuery<span class=\"k\">(</span> selector<span class=\"k\">,</span> context <span class=\"k\">)</span> <span class=\"k\">)</span>","                <span class=\"k\">)</span>","            <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        addBack<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> selector <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>add<span class=\"k\">(</span> selector <span class=\"k\">==</span> <span class=\"k\">null</span> <span class=\"k\">?</span>","                <span class=\"k\">this</span><span class=\"k\">.</span>prevObject <span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>prevObject<span class=\"k\">.</span>filter<span class=\"k\">(</span> selector <span class=\"k\">)</span>","            <span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span> <span class=\"k\">);</span>","","    <span class=\"k\">function</span> sibling<span class=\"k\">(</span> cur<span class=\"k\">,</span> dir <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">while</span> <span class=\"k\">(</span> <span class=\"k\">(</span> cur <span class=\"k\">=</span> cur<span class=\"k\">[</span> dir <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> cur<span class=\"k\">.</span>nodeType <span class=\"k\">!==</span> <span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">{}</span>","        <span class=\"k\">return</span> cur<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    jQuery<span class=\"k\">.</span>each<span class=\"k\">(</span> <span class=\"k\">{</span>","        parent<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> parent <span class=\"k\">=</span> elem<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","            <span class=\"k\">return</span> parent <span class=\"k\">&amp;&amp;</span> parent<span class=\"k\">.</span>nodeType <span class=\"k\">!==</span> <span class=\"s\">11</span> <span class=\"k\">?</span> parent <span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        parents<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> dir<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"s\">\"parentNode\"</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        parentsUntil<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> i<span class=\"k\">,</span> until <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> dir<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"s\">\"parentNode\"</span><span class=\"k\">,</span> until <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        next<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> sibling<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"s\">\"nextSibling\"</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        prev<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> sibling<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"s\">\"previousSibling\"</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        nextAll<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> dir<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"s\">\"nextSibling\"</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        prevAll<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> dir<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"s\">\"previousSibling\"</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        nextUntil<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> i<span class=\"k\">,</span> until <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> dir<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"s\">\"nextSibling\"</span><span class=\"k\">,</span> until <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        prevUntil<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> i<span class=\"k\">,</span> until <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> dir<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"s\">\"previousSibling\"</span><span class=\"k\">,</span> until <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        siblings<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> siblings<span class=\"k\">(</span> <span class=\"k\">(</span> elem<span class=\"k\">.</span>parentNode <span class=\"k\">||</span> <span class=\"k\">{}</span> <span class=\"k\">).</span>firstChild<span class=\"k\">,</span> elem <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        children<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> siblings<span class=\"k\">(</span> elem<span class=\"k\">.</span>firstChild <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        contents<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> nodeName<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"s\">\"iframe\"</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> elem<span class=\"k\">.</span>contentDocument<span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Support: IE 9 - 11 only, iOS 7 only, Android Browser &lt;=4.3 only</span>","            <span class=\"c\">// Treat the template element as a regular one in browsers that</span>","            <span class=\"c\">// don't support it.</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> nodeName<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"s\">\"template\"</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                elem <span class=\"k\">=</span> elem<span class=\"k\">.</span>content <span class=\"k\">||</span> elem<span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">return</span> jQuery<span class=\"k\">.</span>merge<span class=\"k\">(</span> <span class=\"k\">[],</span> elem<span class=\"k\">.</span>childNodes <span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span> name<span class=\"k\">,</span> fn <span class=\"k\">)</span> <span class=\"k\">{</span>","        jQuery<span class=\"k\">.</span>fn<span class=\"k\">[</span> name <span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> until<span class=\"k\">,</span> selector <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> matched <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>map<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> fn<span class=\"k\">,</span> until <span class=\"k\">);</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> name<span class=\"k\">.</span>slice<span class=\"k\">(</span> <span class=\"k\">-</span><span class=\"s\">5</span> <span class=\"k\">)</span> <span class=\"k\">!==</span> <span class=\"s\">\"Until\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                selector <span class=\"k\">=</span> until<span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> selector <span class=\"k\">&amp;&amp;</span> <span class=\"k\">typeof</span> selector <span class=\"k\">===</span> <span class=\"s\">\"string\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                matched <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>filter<span class=\"k\">(</span> selector<span class=\"k\">,</span> matched <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                <span class=\"c\">// Remove duplicates</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>guaranteedUnique<span class=\"k\">[</span> name <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    jQuery<span class=\"k\">.</span>uniqueSort<span class=\"k\">(</span> matched <span class=\"k\">);</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// Reverse order for parents* and prev-derivatives</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> rparentsprev<span class=\"k\">.</span>test<span class=\"k\">(</span> name <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    matched<span class=\"k\">.</span>reverse<span class=\"k\">();</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>pushStack<span class=\"k\">(</span> matched <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"k\">}</span> <span class=\"k\">);</span>","    <span class=\"k\">var</span> rnothtmlwhite <span class=\"k\">=</span> <span class=\"k\">(</span> <span class=\"s\">/[^\\x20\\t\\r\\n\\f]+/g</span> <span class=\"k\">);</span>","","","","<span class=\"c\">// Convert String-formatted options into Object-formatted ones</span>","    <span class=\"k\">function</span> createOptions<span class=\"k\">(</span> options <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> object <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","        jQuery<span class=\"k\">.</span>each<span class=\"k\">(</span> options<span class=\"k\">.</span>match<span class=\"k\">(</span> rnothtmlwhite <span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"k\">[],</span> <span class=\"k\">function</span><span class=\"k\">(</span> _<span class=\"k\">,</span> flag <span class=\"k\">)</span> <span class=\"k\">{</span>","            object<span class=\"k\">[</span> flag <span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","        <span class=\"k\">}</span> <span class=\"k\">);</span>","        <span class=\"k\">return</span> object<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"c\">/*</span>","<span class=\"c\"> * Create a callback list using the following parameters:</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *\toptions: an optional list of space-separated options that will change how</span>","<span class=\"c\"> *\t\t\tthe callback list behaves or a more traditional option object</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * By default a callback list will act like an event callback list and can be</span>","<span class=\"c\"> * \"fired\" multiple times.</span>","<span class=\"c\"> *</span>","<span class=\"c\"> * Possible options:</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *\tmemory:\t\t\twill keep track of previous values and will call any callback added</span>","<span class=\"c\"> *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"</span>","<span class=\"c\"> *\t\t\t\t\tvalues (like a Deferred)</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)</span>","<span class=\"c\"> *</span>","<span class=\"c\"> *\tstopOnFalse:\tinterrupt callings when a callback returns false</span>","<span class=\"c\"> *</span>","<span class=\"c\"> */</span>","    jQuery<span class=\"k\">.</span>Callbacks <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> options <span class=\"k\">)</span> <span class=\"k\">{</span>","","        <span class=\"c\">// Convert options from String-formatted to Object-formatted if needed</span>","        <span class=\"c\">// (we check in cache first)</span>","        options <span class=\"k\">=</span> <span class=\"k\">typeof</span> options <span class=\"k\">===</span> <span class=\"s\">\"string\"</span> <span class=\"k\">?</span>","            createOptions<span class=\"k\">(</span> options <span class=\"k\">)</span> <span class=\"k\">:</span>","            jQuery<span class=\"k\">.</span>extend<span class=\"k\">(</span> <span class=\"k\">{}</span><span class=\"k\">,</span> options <span class=\"k\">);</span>","","        <span class=\"k\">var</span> <span class=\"c\">// Flag to know if list is currently firing</span>","            firing<span class=\"k\">,</span>","","            <span class=\"c\">// Last fire value for non-forgettable lists</span>","            memory<span class=\"k\">,</span>","","            <span class=\"c\">// Flag to know if list was already fired</span>","            fired<span class=\"k\">,</span>","","            <span class=\"c\">// Flag to prevent firing</span>","            locked<span class=\"k\">,</span>","","            <span class=\"c\">// Actual callback list</span>","            list <span class=\"k\">=</span> <span class=\"k\">[],</span>","","            <span class=\"c\">// Queue of execution data for repeatable lists</span>","            queue <span class=\"k\">=</span> <span class=\"k\">[],</span>","","            <span class=\"c\">// Index of currently firing callback (modified by add/remove as needed)</span>","            firingIndex <span class=\"k\">=</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">,</span>","","            <span class=\"c\">// Fire callbacks</span>","            fire <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","","                <span class=\"c\">// Enforce single-firing</span>","                locked <span class=\"k\">=</span> locked <span class=\"k\">||</span> options<span class=\"k\">.</span>once<span class=\"k\">;</span>","","                <span class=\"c\">// Execute callbacks for all pending executions,</span>","                <span class=\"c\">// respecting firingIndex overrides and runtime changes</span>","                fired <span class=\"k\">=</span> firing <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","                <span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">;</span> queue<span class=\"k\">.</span>length<span class=\"k\">;</span> firingIndex <span class=\"k\">=</span> <span class=\"k\">-</span><span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    memory <span class=\"k\">=</span> queue<span class=\"k\">.</span>shift<span class=\"k\">();</span>","                    <span class=\"k\">while</span> <span class=\"k\">(</span> <span class=\"k\">++</span>firingIndex <span class=\"k\">&lt;</span> list<span class=\"k\">.</span>length <span class=\"k\">)</span> <span class=\"k\">{</span>","","                        <span class=\"c\">// Run callback and check for early termination</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> list<span class=\"k\">[</span> firingIndex <span class=\"k\">].</span>apply<span class=\"k\">(</span> memory<span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">],</span> memory<span class=\"k\">[</span> <span class=\"s\">1</span> <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"k\">false</span> <span class=\"k\">&amp;&amp;</span>","                            options<span class=\"k\">.</span>stopOnFalse <span class=\"k\">)</span> <span class=\"k\">{</span>","","                            <span class=\"c\">// Jump to end and forget the data so .add doesn't re-fire</span>","                            firingIndex <span class=\"k\">=</span> list<span class=\"k\">.</span>length<span class=\"k\">;</span>","                            memory <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// Forget the data if we're done with it</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>options<span class=\"k\">.</span>memory <span class=\"k\">)</span> <span class=\"k\">{</span>","                    memory <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","","                firing <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","","                <span class=\"c\">// Clean up if we're done firing for good</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> locked <span class=\"k\">)</span> <span class=\"k\">{</span>","","                    <span class=\"c\">// Keep an empty list if we have data for future add calls</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> memory <span class=\"k\">)</span> <span class=\"k\">{</span>","                        list <span class=\"k\">=</span> <span class=\"k\">[];</span>","","                        <span class=\"c\">// Otherwise, this object is spent</span>","                    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                        list <span class=\"k\">=</span> <span class=\"s\">\"\"</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span><span class=\"k\">,</span>","","            <span class=\"c\">// Actual Callbacks object</span>","            self <span class=\"k\">=</span> <span class=\"k\">{</span>","","                <span class=\"c\">// Add a callback or a collection of callbacks to the list</span>","                add<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> list <span class=\"k\">)</span> <span class=\"k\">{</span>","","                        <span class=\"c\">// If we have memory from a past run, we should fire after adding</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> memory <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>firing <span class=\"k\">)</span> <span class=\"k\">{</span>","                            firingIndex <span class=\"k\">=</span> list<span class=\"k\">.</span>length <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">;</span>","                            queue<span class=\"k\">.</span>push<span class=\"k\">(</span> memory <span class=\"k\">);</span>","                        <span class=\"k\">}</span>","","                        <span class=\"k\">(</span> <span class=\"k\">function</span> add<span class=\"k\">(</span> args <span class=\"k\">)</span> <span class=\"k\">{</span>","                            jQuery<span class=\"k\">.</span>each<span class=\"k\">(</span> args<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span> _<span class=\"k\">,</span> arg <span class=\"k\">)</span> <span class=\"k\">{</span>","                                <span class=\"k\">if</span> <span class=\"k\">(</span> isFunction<span class=\"k\">(</span> arg <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>options<span class=\"k\">.</span>unique <span class=\"k\">||</span> <span class=\"k\">!</span>self<span class=\"k\">.</span>has<span class=\"k\">(</span> arg <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                        list<span class=\"k\">.</span>push<span class=\"k\">(</span> arg <span class=\"k\">);</span>","                                    <span class=\"k\">}</span>","                                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> arg <span class=\"k\">&amp;&amp;</span> arg<span class=\"k\">.</span>length <span class=\"k\">&amp;&amp;</span> toType<span class=\"k\">(</span> arg <span class=\"k\">)</span> <span class=\"k\">!==</span> <span class=\"s\">\"string\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                                    <span class=\"c\">// Inspect recursively</span>","                                    add<span class=\"k\">(</span> arg <span class=\"k\">);</span>","                                <span class=\"k\">}</span>","                            <span class=\"k\">}</span> <span class=\"k\">);</span>","                        <span class=\"k\">}</span> <span class=\"k\">)(</span> arguments <span class=\"k\">);</span>","","                        <span class=\"k\">if</span> <span class=\"k\">(</span> memory <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>firing <span class=\"k\">)</span> <span class=\"k\">{</span>","                            fire<span class=\"k\">();</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span>","                    <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","                <span class=\"k\">}</span><span class=\"k\">,</span>","","                <span class=\"c\">// Remove a callback from the list</span>","                remove<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                    jQuery<span class=\"k\">.</span>each<span class=\"k\">(</span> arguments<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span> _<span class=\"k\">,</span> arg <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">var</span> index<span class=\"k\">;</span>","                        <span class=\"k\">while</span> <span class=\"k\">(</span> <span class=\"k\">(</span> index <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>inArray<span class=\"k\">(</span> arg<span class=\"k\">,</span> list<span class=\"k\">,</span> index <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">&gt;</span> <span class=\"k\">-</span><span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                            list<span class=\"k\">.</span>splice<span class=\"k\">(</span> index<span class=\"k\">,</span> <span class=\"s\">1</span> <span class=\"k\">);</span>","","                            <span class=\"c\">// Handle firing indexes</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span> index <span class=\"k\">&lt;=</span> firingIndex <span class=\"k\">)</span> <span class=\"k\">{</span>","                                firingIndex<span class=\"k\">--;</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span> <span class=\"k\">);</span>","                    <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","                <span class=\"k\">}</span><span class=\"k\">,</span>","","                <span class=\"c\">// Check if a given callback is in the list.</span>","                <span class=\"c\">// If no argument is given, return whether or not list has callbacks attached.</span>","                has<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> fn <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">return</span> fn <span class=\"k\">?</span>","                        jQuery<span class=\"k\">.</span>inArray<span class=\"k\">(</span> fn<span class=\"k\">,</span> list <span class=\"k\">)</span> <span class=\"k\">&gt;</span> <span class=\"k\">-</span><span class=\"s\">1</span> <span class=\"k\">:</span>","                        list<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">0</span><span class=\"k\">;</span>","                <span class=\"k\">}</span><span class=\"k\">,</span>","","                <span class=\"c\">// Remove all callbacks from the list</span>","                empty<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> list <span class=\"k\">)</span> <span class=\"k\">{</span>","                        list <span class=\"k\">=</span> <span class=\"k\">[];</span>","                    <span class=\"k\">}</span>","                    <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","                <span class=\"k\">}</span><span class=\"k\">,</span>","","                <span class=\"c\">// Disable .fire and .add</span>","                <span class=\"c\">// Abort any current/pending executions</span>","                <span class=\"c\">// Clear all callbacks and values</span>","                disable<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                    locked <span class=\"k\">=</span> queue <span class=\"k\">=</span> <span class=\"k\">[];</span>","                    list <span class=\"k\">=</span> memory <span class=\"k\">=</span> <span class=\"s\">\"\"</span><span class=\"k\">;</span>","                    <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","                <span class=\"k\">}</span><span class=\"k\">,</span>","                disabled<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                    <span class=\"k\">return</span> <span class=\"k\">!</span>list<span class=\"k\">;</span>","                <span class=\"k\">}</span><span class=\"k\">,</span>","","                <span class=\"c\">// Disable .fire</span>","                <span class=\"c\">// Also disable .add unless we have memory (since it would have no effect)</span>","                <span class=\"c\">// Abort any pending executions</span>","                lock<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                    locked <span class=\"k\">=</span> queue <span class=\"k\">=</span> <span class=\"k\">[];</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>memory <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>firing <span class=\"k\">)</span> <span class=\"k\">{</span>","                        list <span class=\"k\">=</span> memory <span class=\"k\">=</span> <span class=\"s\">\"\"</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                    <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","                <span class=\"k\">}</span><span class=\"k\">,</span>","                locked<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                    <span class=\"k\">return</span> <span class=\"k\">!!</span>locked<span class=\"k\">;</span>","                <span class=\"k\">}</span><span class=\"k\">,</span>","","                <span class=\"c\">// Call all callbacks with the given context and arguments</span>","                fireWith<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> context<span class=\"k\">,</span> args <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>locked <span class=\"k\">)</span> <span class=\"k\">{</span>","                        args <span class=\"k\">=</span> args <span class=\"k\">||</span> <span class=\"k\">[];</span>","                        args <span class=\"k\">=</span> <span class=\"k\">[</span> context<span class=\"k\">,</span> args<span class=\"k\">.</span>slice <span class=\"k\">?</span> args<span class=\"k\">.</span>slice<span class=\"k\">()</span> <span class=\"k\">:</span> args <span class=\"k\">];</span>","                        queue<span class=\"k\">.</span>push<span class=\"k\">(</span> args <span class=\"k\">);</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>firing <span class=\"k\">)</span> <span class=\"k\">{</span>","                            fire<span class=\"k\">();</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span>","                    <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","                <span class=\"k\">}</span><span class=\"k\">,</span>","","                <span class=\"c\">// Call all the callbacks with the given arguments</span>","                fire<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                    self<span class=\"k\">.</span>fireWith<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> arguments <span class=\"k\">);</span>","                    <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","                <span class=\"k\">}</span><span class=\"k\">,</span>","","                <span class=\"c\">// To know if the callbacks have already been called at least once</span>","                fired<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                    <span class=\"k\">return</span> <span class=\"k\">!!</span>fired<span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","","        <span class=\"k\">return</span> self<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","","    <span class=\"k\">function</span> Identity<span class=\"k\">(</span> v <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> v<span class=\"k\">;</span>","    <span class=\"k\">}</span>","    <span class=\"k\">function</span> Thrower<span class=\"k\">(</span> ex <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">throw</span> ex<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> adoptValue<span class=\"k\">(</span> value<span class=\"k\">,</span> resolve<span class=\"k\">,</span> reject<span class=\"k\">,</span> noValue <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> method<span class=\"k\">;</span>","","        <span class=\"k\">try</span> <span class=\"k\">{</span>","","            <span class=\"c\">// Check for promise aspect first to privilege synchronous behavior</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> value <span class=\"k\">&amp;&amp;</span> isFunction<span class=\"k\">(</span> <span class=\"k\">(</span> method <span class=\"k\">=</span> value<span class=\"k\">.</span>promise <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                method<span class=\"k\">.</span>call<span class=\"k\">(</span> value <span class=\"k\">).</span>done<span class=\"k\">(</span> resolve <span class=\"k\">).</span>fail<span class=\"k\">(</span> reject <span class=\"k\">);</span>","","                <span class=\"c\">// Other thenables</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> value <span class=\"k\">&amp;&amp;</span> isFunction<span class=\"k\">(</span> <span class=\"k\">(</span> method <span class=\"k\">=</span> value<span class=\"k\">.</span>then <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                method<span class=\"k\">.</span>call<span class=\"k\">(</span> value<span class=\"k\">,</span> resolve<span class=\"k\">,</span> reject <span class=\"k\">);</span>","","                <span class=\"c\">// Other non-thenables</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","","                <span class=\"c\">// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:</span>","                <span class=\"c\">// * false: [ value ].slice( 0 ) =&gt; resolve( value )</span>","                <span class=\"c\">// * true: [ value ].slice( 1 ) =&gt; resolve()</span>","                resolve<span class=\"k\">.</span>apply<span class=\"k\">(</span> undefined<span class=\"k\">,</span> <span class=\"k\">[</span> value <span class=\"k\">].</span>slice<span class=\"k\">(</span> noValue <span class=\"k\">)</span> <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// For Promises/A+, convert exceptions into rejections</span>","            <span class=\"c\">// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in</span>","            <span class=\"c\">// Deferred#then to conditionally suppress rejection.</span>","        <span class=\"k\">}</span> <span class=\"k\">catch</span> <span class=\"k\">(</span> value <span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"c\">// Support: Android 4.0 only</span>","            <span class=\"c\">// Strict mode functions invoked without .call/.apply get global-object context</span>","            reject<span class=\"k\">.</span>apply<span class=\"k\">(</span> undefined<span class=\"k\">,</span> <span class=\"k\">[</span> value <span class=\"k\">]</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    jQuery<span class=\"k\">.</span>extend<span class=\"k\">(</span> <span class=\"k\">{</span>","","        Deferred<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> func <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> tuples <span class=\"k\">=</span> <span class=\"k\">[</span>","","                    <span class=\"c\">// action, add listener, callbacks,</span>","                    <span class=\"c\">// ... .then handlers, argument index, [final state]</span>","                    <span class=\"k\">[</span> <span class=\"s\">\"notify\"</span><span class=\"k\">,</span> <span class=\"s\">\"progress\"</span><span class=\"k\">,</span> jQuery<span class=\"k\">.</span>Callbacks<span class=\"k\">(</span> <span class=\"s\">\"memory\"</span> <span class=\"k\">),</span>","                        jQuery<span class=\"k\">.</span>Callbacks<span class=\"k\">(</span> <span class=\"s\">\"memory\"</span> <span class=\"k\">),</span> <span class=\"s\">2</span> <span class=\"k\">],</span>","                    <span class=\"k\">[</span> <span class=\"s\">\"resolve\"</span><span class=\"k\">,</span> <span class=\"s\">\"done\"</span><span class=\"k\">,</span> jQuery<span class=\"k\">.</span>Callbacks<span class=\"k\">(</span> <span class=\"s\">\"once memory\"</span> <span class=\"k\">),</span>","                        jQuery<span class=\"k\">.</span>Callbacks<span class=\"k\">(</span> <span class=\"s\">\"once memory\"</span> <span class=\"k\">),</span> <span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"s\">\"resolved\"</span> <span class=\"k\">],</span>","                    <span class=\"k\">[</span> <span class=\"s\">\"reject\"</span><span class=\"k\">,</span> <span class=\"s\">\"fail\"</span><span class=\"k\">,</span> jQuery<span class=\"k\">.</span>Callbacks<span class=\"k\">(</span> <span class=\"s\">\"once memory\"</span> <span class=\"k\">),</span>","                        jQuery<span class=\"k\">.</span>Callbacks<span class=\"k\">(</span> <span class=\"s\">\"once memory\"</span> <span class=\"k\">),</span> <span class=\"s\">1</span><span class=\"k\">,</span> <span class=\"s\">\"rejected\"</span> <span class=\"k\">]</span>","                <span class=\"k\">],</span>","                state <span class=\"k\">=</span> <span class=\"s\">\"pending\"</span><span class=\"k\">,</span>","                promise <span class=\"k\">=</span> <span class=\"k\">{</span>","                    state<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                        <span class=\"k\">return</span> state<span class=\"k\">;</span>","                    <span class=\"k\">}</span><span class=\"k\">,</span>","                    always<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                        deferred<span class=\"k\">.</span>done<span class=\"k\">(</span> arguments <span class=\"k\">).</span>fail<span class=\"k\">(</span> arguments <span class=\"k\">);</span>","                        <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span><span class=\"k\">,</span>","                    <span class=\"s\">\"catch\"</span><span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> fn <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">return</span> promise<span class=\"k\">.</span>then<span class=\"k\">(</span> <span class=\"k\">null</span><span class=\"k\">,</span> fn <span class=\"k\">);</span>","                    <span class=\"k\">}</span><span class=\"k\">,</span>","","                    <span class=\"c\">// Keep pipe for back-compat</span>","                    pipe<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> <span class=\"c\">/* fnDone, fnFail, fnProgress */</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">var</span> fns <span class=\"k\">=</span> arguments<span class=\"k\">;</span>","","                        <span class=\"k\">return</span> jQuery<span class=\"k\">.</span>Deferred<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">(</span> newDefer <span class=\"k\">)</span> <span class=\"k\">{</span>","                            jQuery<span class=\"k\">.</span>each<span class=\"k\">(</span> tuples<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span> i<span class=\"k\">,</span> tuple <span class=\"k\">)</span> <span class=\"k\">{</span>","","                                <span class=\"c\">// Map tuples (progress, done, fail) to arguments (done, fail, progress)</span>","                                <span class=\"k\">var</span> fn <span class=\"k\">=</span> isFunction<span class=\"k\">(</span> fns<span class=\"k\">[</span> tuple<span class=\"k\">[</span> <span class=\"s\">4</span> <span class=\"k\">]</span> <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> fns<span class=\"k\">[</span> tuple<span class=\"k\">[</span> <span class=\"s\">4</span> <span class=\"k\">]</span> <span class=\"k\">];</span>","","                                <span class=\"c\">// deferred.progress(function() { bind to newDefer or newDefer.notify })</span>","                                <span class=\"c\">// deferred.done(function() { bind to newDefer or newDefer.resolve })</span>","                                <span class=\"c\">// deferred.fail(function() { bind to newDefer or newDefer.reject })</span>","                                deferred<span class=\"k\">[</span> tuple<span class=\"k\">[</span> <span class=\"s\">1</span> <span class=\"k\">]</span> <span class=\"k\">](</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                                    <span class=\"k\">var</span> returned <span class=\"k\">=</span> fn <span class=\"k\">&amp;&amp;</span> fn<span class=\"k\">.</span>apply<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> arguments <span class=\"k\">);</span>","                                    <span class=\"k\">if</span> <span class=\"k\">(</span> returned <span class=\"k\">&amp;&amp;</span> isFunction<span class=\"k\">(</span> returned<span class=\"k\">.</span>promise <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                        returned<span class=\"k\">.</span>promise<span class=\"k\">()</span>","                                            <span class=\"k\">.</span>progress<span class=\"k\">(</span> newDefer<span class=\"k\">.</span>notify <span class=\"k\">)</span>","                                            <span class=\"k\">.</span>done<span class=\"k\">(</span> newDefer<span class=\"k\">.</span>resolve <span class=\"k\">)</span>","                                            <span class=\"k\">.</span>fail<span class=\"k\">(</span> newDefer<span class=\"k\">.</span>reject <span class=\"k\">);</span>","                                    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                                        newDefer<span class=\"k\">[</span> tuple<span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">]</span> <span class=\"k\">+</span> <span class=\"s\">\"With\"</span> <span class=\"k\">](</span>","                                            <span class=\"k\">this</span><span class=\"k\">,</span>","                                            fn <span class=\"k\">?</span> <span class=\"k\">[</span> returned <span class=\"k\">]</span> <span class=\"k\">:</span> arguments","                                        <span class=\"k\">);</span>","                                    <span class=\"k\">}</span>","                                <span class=\"k\">}</span> <span class=\"k\">);</span>","                            <span class=\"k\">}</span> <span class=\"k\">);</span>","                            fns <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","                        <span class=\"k\">}</span> <span class=\"k\">).</span>promise<span class=\"k\">();</span>","                    <span class=\"k\">}</span><span class=\"k\">,</span>","                    then<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> onFulfilled<span class=\"k\">,</span> onRejected<span class=\"k\">,</span> onProgress <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">var</span> maxDepth <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","                        <span class=\"k\">function</span> resolve<span class=\"k\">(</span> depth<span class=\"k\">,</span> deferred<span class=\"k\">,</span> handler<span class=\"k\">,</span> special <span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">return</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                                <span class=\"k\">var</span> that <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">,</span>","                                    args <span class=\"k\">=</span> arguments<span class=\"k\">,</span>","                                    mightThrow <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                                        <span class=\"k\">var</span> returned<span class=\"k\">,</span> then<span class=\"k\">;</span>","","                                        <span class=\"c\">// Support: Promises/A+ section 2.3.3.3.3</span>","                                        <span class=\"c\">// https://promisesaplus.com/#point-59</span>","                                        <span class=\"c\">// Ignore double-resolution attempts</span>","                                        <span class=\"k\">if</span> <span class=\"k\">(</span> depth <span class=\"k\">&lt;</span> maxDepth <span class=\"k\">)</span> <span class=\"k\">{</span>","                                            <span class=\"k\">return</span><span class=\"k\">;</span>","                                        <span class=\"k\">}</span>","","                                        returned <span class=\"k\">=</span> handler<span class=\"k\">.</span>apply<span class=\"k\">(</span> that<span class=\"k\">,</span> args <span class=\"k\">);</span>","","                                        <span class=\"c\">// Support: Promises/A+ section 2.3.1</span>","                                        <span class=\"c\">// https://promisesaplus.com/#point-48</span>","                                        <span class=\"k\">if</span> <span class=\"k\">(</span> returned <span class=\"k\">===</span> deferred<span class=\"k\">.</span>promise<span class=\"k\">()</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                            <span class=\"k\">throw</span> <span class=\"k\">new</span> TypeError<span class=\"k\">(</span> <span class=\"s\">\"Thenable self-resolution\"</span> <span class=\"k\">);</span>","                                        <span class=\"k\">}</span>","","                                        <span class=\"c\">// Support: Promises/A+ sections 2.3.3.1, 3.5</span>","                                        <span class=\"c\">// https://promisesaplus.com/#point-54</span>","                                        <span class=\"c\">// https://promisesaplus.com/#point-75</span>","                                        <span class=\"c\">// Retrieve `then` only once</span>","                                        then <span class=\"k\">=</span> returned <span class=\"k\">&amp;&amp;</span>","","                                            <span class=\"c\">// Support: Promises/A+ section 2.3.4</span>","                                            <span class=\"c\">// https://promisesaplus.com/#point-64</span>","                                            <span class=\"c\">// Only check objects and functions for thenability</span>","                                            <span class=\"k\">(</span> <span class=\"k\">typeof</span> returned <span class=\"k\">===</span> <span class=\"s\">\"object\"</span> <span class=\"k\">||</span>","                                                <span class=\"k\">typeof</span> returned <span class=\"k\">===</span> <span class=\"s\">\"function\"</span> <span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span>","                                            returned<span class=\"k\">.</span>then<span class=\"k\">;</span>","","                                        <span class=\"c\">// Handle a returned thenable</span>","                                        <span class=\"k\">if</span> <span class=\"k\">(</span> isFunction<span class=\"k\">(</span> then <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                                            <span class=\"c\">// Special processors (notify) just wait for resolution</span>","                                            <span class=\"k\">if</span> <span class=\"k\">(</span> special <span class=\"k\">)</span> <span class=\"k\">{</span>","                                                then<span class=\"k\">.</span>call<span class=\"k\">(</span>","                                                    returned<span class=\"k\">,</span>","                                                    resolve<span class=\"k\">(</span> maxDepth<span class=\"k\">,</span> deferred<span class=\"k\">,</span> Identity<span class=\"k\">,</span> special <span class=\"k\">),</span>","                                                    resolve<span class=\"k\">(</span> maxDepth<span class=\"k\">,</span> deferred<span class=\"k\">,</span> Thrower<span class=\"k\">,</span> special <span class=\"k\">)</span>","                                                <span class=\"k\">);</span>","","                                                <span class=\"c\">// Normal processors (resolve) also hook into progress</span>","                                            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","","                                                <span class=\"c\">// ...and disregard older resolution values</span>","                                                maxDepth<span class=\"k\">++;</span>","","                                                then<span class=\"k\">.</span>call<span class=\"k\">(</span>","                                                    returned<span class=\"k\">,</span>","                                                    resolve<span class=\"k\">(</span> maxDepth<span class=\"k\">,</span> deferred<span class=\"k\">,</span> Identity<span class=\"k\">,</span> special <span class=\"k\">),</span>","                                                    resolve<span class=\"k\">(</span> maxDepth<span class=\"k\">,</span> deferred<span class=\"k\">,</span> Thrower<span class=\"k\">,</span> special <span class=\"k\">),</span>","                                                    resolve<span class=\"k\">(</span> maxDepth<span class=\"k\">,</span> deferred<span class=\"k\">,</span> Identity<span class=\"k\">,</span>","                                                        deferred<span class=\"k\">.</span>notifyWith <span class=\"k\">)</span>","                                                <span class=\"k\">);</span>","                                            <span class=\"k\">}</span>","","                                            <span class=\"c\">// Handle all other returned values</span>","                                        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","","                                            <span class=\"c\">// Only substitute handlers pass on context</span>","                                            <span class=\"c\">// and multiple values (non-spec behavior)</span>","                                            <span class=\"k\">if</span> <span class=\"k\">(</span> handler <span class=\"k\">!==</span> Identity <span class=\"k\">)</span> <span class=\"k\">{</span>","                                                that <span class=\"k\">=</span> undefined<span class=\"k\">;</span>","                                                args <span class=\"k\">=</span> <span class=\"k\">[</span> returned <span class=\"k\">];</span>","                                            <span class=\"k\">}</span>","","                                            <span class=\"c\">// Process the value(s)</span>","                                            <span class=\"c\">// Default process is resolve</span>","                                            <span class=\"k\">(</span> special <span class=\"k\">||</span> deferred<span class=\"k\">.</span>resolveWith <span class=\"k\">)(</span> that<span class=\"k\">,</span> args <span class=\"k\">);</span>","                                        <span class=\"k\">}</span>","                                    <span class=\"k\">}</span><span class=\"k\">,</span>","","                                    <span class=\"c\">// Only normal processors (resolve) catch and reject exceptions</span>","                                    process <span class=\"k\">=</span> special <span class=\"k\">?</span>","                                        mightThrow <span class=\"k\">:</span>","                                        <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                                            <span class=\"k\">try</span> <span class=\"k\">{</span>","                                                mightThrow<span class=\"k\">();</span>","                                            <span class=\"k\">}</span> <span class=\"k\">catch</span> <span class=\"k\">(</span> e <span class=\"k\">)</span> <span class=\"k\">{</span>","","                                                <span class=\"k\">if</span> <span class=\"k\">(</span> jQuery<span class=\"k\">.</span>Deferred<span class=\"k\">.</span>exceptionHook <span class=\"k\">)</span> <span class=\"k\">{</span>","                                                    jQuery<span class=\"k\">.</span>Deferred<span class=\"k\">.</span>exceptionHook<span class=\"k\">(</span> e<span class=\"k\">,</span>","                                                        process<span class=\"k\">.</span>stackTrace <span class=\"k\">);</span>","                                                <span class=\"k\">}</span>","","                                                <span class=\"c\">// Support: Promises/A+ section 2.3.3.3.4.1</span>","                                                <span class=\"c\">// https://promisesaplus.com/#point-61</span>","                                                <span class=\"c\">// Ignore post-resolution exceptions</span>","                                                <span class=\"k\">if</span> <span class=\"k\">(</span> depth <span class=\"k\">+</span> <span class=\"s\">1</span> <span class=\"k\">&gt;=</span> maxDepth <span class=\"k\">)</span> <span class=\"k\">{</span>","","                                                    <span class=\"c\">// Only substitute handlers pass on context</span>","                                                    <span class=\"c\">// and multiple values (non-spec behavior)</span>","                                                    <span class=\"k\">if</span> <span class=\"k\">(</span> handler <span class=\"k\">!==</span> Thrower <span class=\"k\">)</span> <span class=\"k\">{</span>","                                                        that <span class=\"k\">=</span> undefined<span class=\"k\">;</span>","                                                        args <span class=\"k\">=</span> <span class=\"k\">[</span> e <span class=\"k\">];</span>","                                                    <span class=\"k\">}</span>","","                                                    deferred<span class=\"k\">.</span>rejectWith<span class=\"k\">(</span> that<span class=\"k\">,</span> args <span class=\"k\">);</span>","                                                <span class=\"k\">}</span>","                                            <span class=\"k\">}</span>","                                        <span class=\"k\">}</span><span class=\"k\">;</span>","","                                <span class=\"c\">// Support: Promises/A+ section 2.3.3.3.1</span>","                                <span class=\"c\">// https://promisesaplus.com/#point-57</span>","                                <span class=\"c\">// Re-resolve promises immediately to dodge false rejection from</span>","                                <span class=\"c\">// subsequent errors</span>","                                <span class=\"k\">if</span> <span class=\"k\">(</span> depth <span class=\"k\">)</span> <span class=\"k\">{</span>","                                    process<span class=\"k\">();</span>","                                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","","                                    <span class=\"c\">// Call an optional hook to record the stack, in case of exception</span>","                                    <span class=\"c\">// since it's otherwise lost when execution goes async</span>","                                    <span class=\"k\">if</span> <span class=\"k\">(</span> jQuery<span class=\"k\">.</span>Deferred<span class=\"k\">.</span>getStackHook <span class=\"k\">)</span> <span class=\"k\">{</span>","                                        process<span class=\"k\">.</span>stackTrace <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>Deferred<span class=\"k\">.</span>getStackHook<span class=\"k\">();</span>","                                    <span class=\"k\">}</span>","                                    window<span class=\"k\">.</span>setTimeout<span class=\"k\">(</span> process <span class=\"k\">);</span>","                                <span class=\"k\">}</span>","                            <span class=\"k\">}</span><span class=\"k\">;</span>","                        <span class=\"k\">}</span>","","                        <span class=\"k\">return</span> jQuery<span class=\"k\">.</span>Deferred<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">(</span> newDefer <span class=\"k\">)</span> <span class=\"k\">{</span>","","                            <span class=\"c\">// progress_handlers.add( ... )</span>","                            tuples<span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">][</span> <span class=\"s\">3</span> <span class=\"k\">].</span>add<span class=\"k\">(</span>","                                resolve<span class=\"k\">(</span>","                                    <span class=\"s\">0</span><span class=\"k\">,</span>","                                    newDefer<span class=\"k\">,</span>","                                    isFunction<span class=\"k\">(</span> onProgress <span class=\"k\">)</span> <span class=\"k\">?</span>","                                        onProgress <span class=\"k\">:</span>","                                        Identity<span class=\"k\">,</span>","                                    newDefer<span class=\"k\">.</span>notifyWith","                                <span class=\"k\">)</span>","                            <span class=\"k\">);</span>","","                            <span class=\"c\">// fulfilled_handlers.add( ... )</span>","                            tuples<span class=\"k\">[</span> <span class=\"s\">1</span> <span class=\"k\">][</span> <span class=\"s\">3</span> <span class=\"k\">].</span>add<span class=\"k\">(</span>","                                resolve<span class=\"k\">(</span>","                                    <span class=\"s\">0</span><span class=\"k\">,</span>","                                    newDefer<span class=\"k\">,</span>","                                    isFunction<span class=\"k\">(</span> onFulfilled <span class=\"k\">)</span> <span class=\"k\">?</span>","                                        onFulfilled <span class=\"k\">:</span>","                                        Identity","                                <span class=\"k\">)</span>","                            <span class=\"k\">);</span>","","                            <span class=\"c\">// rejected_handlers.add( ... )</span>","                            tuples<span class=\"k\">[</span> <span class=\"s\">2</span> <span class=\"k\">][</span> <span class=\"s\">3</span> <span class=\"k\">].</span>add<span class=\"k\">(</span>","                                resolve<span class=\"k\">(</span>","                                    <span class=\"s\">0</span><span class=\"k\">,</span>","                                    newDefer<span class=\"k\">,</span>","                                    isFunction<span class=\"k\">(</span> onRejected <span class=\"k\">)</span> <span class=\"k\">?</span>","                                        onRejected <span class=\"k\">:</span>","                                        Thrower","                                <span class=\"k\">)</span>","                            <span class=\"k\">);</span>","                        <span class=\"k\">}</span> <span class=\"k\">).</span>promise<span class=\"k\">();</span>","                    <span class=\"k\">}</span><span class=\"k\">,</span>","","                    <span class=\"c\">// Get a promise for this deferred</span>","                    <span class=\"c\">// If obj is provided, the promise aspect is added to the object</span>","                    promise<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> obj <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">return</span> obj <span class=\"k\">!=</span> <span class=\"k\">null</span> <span class=\"k\">?</span> jQuery<span class=\"k\">.</span>extend<span class=\"k\">(</span> obj<span class=\"k\">,</span> promise <span class=\"k\">)</span> <span class=\"k\">:</span> promise<span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span><span class=\"k\">,</span>","                deferred <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","","            <span class=\"c\">// Add list-specific methods</span>","            jQuery<span class=\"k\">.</span>each<span class=\"k\">(</span> tuples<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span> i<span class=\"k\">,</span> tuple <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> list <span class=\"k\">=</span> tuple<span class=\"k\">[</span> <span class=\"s\">2</span> <span class=\"k\">],</span>","                    stateString <span class=\"k\">=</span> tuple<span class=\"k\">[</span> <span class=\"s\">5</span> <span class=\"k\">];</span>","","                <span class=\"c\">// promise.progress = list.add</span>","                <span class=\"c\">// promise.done = list.add</span>","                <span class=\"c\">// promise.fail = list.add</span>","                promise<span class=\"k\">[</span> tuple<span class=\"k\">[</span> <span class=\"s\">1</span> <span class=\"k\">]</span> <span class=\"k\">]</span> <span class=\"k\">=</span> list<span class=\"k\">.</span>add<span class=\"k\">;</span>","","                <span class=\"c\">// Handle state</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> stateString <span class=\"k\">)</span> <span class=\"k\">{</span>","                    list<span class=\"k\">.</span>add<span class=\"k\">(</span>","                        <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","","                            <span class=\"c\">// state = \"resolved\" (i.e., fulfilled)</span>","                            <span class=\"c\">// state = \"rejected\"</span>","                            state <span class=\"k\">=</span> stateString<span class=\"k\">;</span>","                        <span class=\"k\">}</span><span class=\"k\">,</span>","","                        <span class=\"c\">// rejected_callbacks.disable</span>","                        <span class=\"c\">// fulfilled_callbacks.disable</span>","                        tuples<span class=\"k\">[</span> <span class=\"s\">3</span> <span class=\"k\">-</span> i <span class=\"k\">][</span> <span class=\"s\">2</span> <span class=\"k\">].</span>disable<span class=\"k\">,</span>","","                        <span class=\"c\">// rejected_handlers.disable</span>","                        <span class=\"c\">// fulfilled_handlers.disable</span>","                        tuples<span class=\"k\">[</span> <span class=\"s\">3</span> <span class=\"k\">-</span> i <span class=\"k\">][</span> <span class=\"s\">3</span> <span class=\"k\">].</span>disable<span class=\"k\">,</span>","","                        <span class=\"c\">// progress_callbacks.lock</span>","                        tuples<span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">][</span> <span class=\"s\">2</span> <span class=\"k\">].</span>lock<span class=\"k\">,</span>","","                        <span class=\"c\">// progress_handlers.lock</span>","                        tuples<span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">][</span> <span class=\"s\">3</span> <span class=\"k\">].</span>lock","                    <span class=\"k\">);</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// progress_handlers.fire</span>","                <span class=\"c\">// fulfilled_handlers.fire</span>","                <span class=\"c\">// rejected_handlers.fire</span>","                list<span class=\"k\">.</span>add<span class=\"k\">(</span> tuple<span class=\"k\">[</span> <span class=\"s\">3</span> <span class=\"k\">].</span>fire <span class=\"k\">);</span>","","                <span class=\"c\">// deferred.notify = function() { deferred.notifyWith(...) }</span>","                <span class=\"c\">// deferred.resolve = function() { deferred.resolveWith(...) }</span>","                <span class=\"c\">// deferred.reject = function() { deferred.rejectWith(...) }</span>","                deferred<span class=\"k\">[</span> tuple<span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">]</span> <span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                    deferred<span class=\"k\">[</span> tuple<span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">]</span> <span class=\"k\">+</span> <span class=\"s\">\"With\"</span> <span class=\"k\">](</span> <span class=\"k\">this</span> <span class=\"k\">===</span> deferred <span class=\"k\">?</span> undefined <span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">,</span> arguments <span class=\"k\">);</span>","                    <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","                <span class=\"k\">}</span><span class=\"k\">;</span>","","                <span class=\"c\">// deferred.notifyWith = list.fireWith</span>","                <span class=\"c\">// deferred.resolveWith = list.fireWith</span>","                <span class=\"c\">// deferred.rejectWith = list.fireWith</span>","                deferred<span class=\"k\">[</span> tuple<span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">]</span> <span class=\"k\">+</span> <span class=\"s\">\"With\"</span> <span class=\"k\">]</span> <span class=\"k\">=</span> list<span class=\"k\">.</span>fireWith<span class=\"k\">;</span>","            <span class=\"k\">}</span> <span class=\"k\">);</span>","","            <span class=\"c\">// Make the deferred a promise</span>","            promise<span class=\"k\">.</span>promise<span class=\"k\">(</span> deferred <span class=\"k\">);</span>","","            <span class=\"c\">// Call given func if any</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> func <span class=\"k\">)</span> <span class=\"k\">{</span>","                func<span class=\"k\">.</span>call<span class=\"k\">(</span> deferred<span class=\"k\">,</span> deferred <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// All done!</span>","            <span class=\"k\">return</span> deferred<span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        <span class=\"c\">// Deferred helper</span>","        when<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> singleValue <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span>","","                <span class=\"c\">// count of uncompleted subordinates</span>","                remaining <span class=\"k\">=</span> arguments<span class=\"k\">.</span>length<span class=\"k\">,</span>","","                <span class=\"c\">// count of unprocessed arguments</span>","                i <span class=\"k\">=</span> remaining<span class=\"k\">,</span>","","                <span class=\"c\">// subordinate fulfillment data</span>","                resolveContexts <span class=\"k\">=</span> Array<span class=\"k\">(</span> i <span class=\"k\">),</span>","                resolveValues <span class=\"k\">=</span> slice<span class=\"k\">.</span>call<span class=\"k\">(</span> arguments <span class=\"k\">),</span>","","                <span class=\"c\">// the master Deferred</span>","                master <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>Deferred<span class=\"k\">(),</span>","","                <span class=\"c\">// subordinate callback factory</span>","                updateFunc <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> i <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">return</span> <span class=\"k\">function</span><span class=\"k\">(</span> value <span class=\"k\">)</span> <span class=\"k\">{</span>","                        resolveContexts<span class=\"k\">[</span> i <span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">;</span>","                        resolveValues<span class=\"k\">[</span> i <span class=\"k\">]</span> <span class=\"k\">=</span> arguments<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">1</span> <span class=\"k\">?</span> slice<span class=\"k\">.</span>call<span class=\"k\">(</span> arguments <span class=\"k\">)</span> <span class=\"k\">:</span> value<span class=\"k\">;</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!(</span> <span class=\"k\">--</span>remaining <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                            master<span class=\"k\">.</span>resolveWith<span class=\"k\">(</span> resolveContexts<span class=\"k\">,</span> resolveValues <span class=\"k\">);</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span><span class=\"k\">;</span>","                <span class=\"k\">}</span><span class=\"k\">;</span>","","            <span class=\"c\">// Single- and empty arguments are adopted like Promise.resolve</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> remaining <span class=\"k\">&lt;=</span> <span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                adoptValue<span class=\"k\">(</span> singleValue<span class=\"k\">,</span> master<span class=\"k\">.</span>done<span class=\"k\">(</span> updateFunc<span class=\"k\">(</span> i <span class=\"k\">)</span> <span class=\"k\">).</span>resolve<span class=\"k\">,</span> master<span class=\"k\">.</span>reject<span class=\"k\">,</span>","                    <span class=\"k\">!</span>remaining <span class=\"k\">);</span>","","                <span class=\"c\">// Use .then() to unwrap secondary thenables (cf. gh-3000)</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> master<span class=\"k\">.</span>state<span class=\"k\">()</span> <span class=\"k\">===</span> <span class=\"s\">\"pending\"</span> <span class=\"k\">||</span>","                    isFunction<span class=\"k\">(</span> resolveValues<span class=\"k\">[</span> i <span class=\"k\">]</span> <span class=\"k\">&amp;&amp;</span> resolveValues<span class=\"k\">[</span> i <span class=\"k\">].</span>then <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                    <span class=\"k\">return</span> master<span class=\"k\">.</span>then<span class=\"k\">();</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Multiple arguments are aggregated like Promise.all array elements</span>","            <span class=\"k\">while</span> <span class=\"k\">(</span> i<span class=\"k\">--</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                adoptValue<span class=\"k\">(</span> resolveValues<span class=\"k\">[</span> i <span class=\"k\">],</span> updateFunc<span class=\"k\">(</span> i <span class=\"k\">),</span> master<span class=\"k\">.</span>reject <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">return</span> master<span class=\"k\">.</span>promise<span class=\"k\">();</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span> <span class=\"k\">);</span>","","","<span class=\"c\">// These usually indicate a programmer mistake during development,</span>","<span class=\"c\">// warn about them ASAP rather than swallowing them by default.</span>","    <span class=\"k\">var</span> rerrorNames <span class=\"k\">=</span> <span class=\"s\">/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/</span><span class=\"k\">;</span>","","    jQuery<span class=\"k\">.</span>Deferred<span class=\"k\">.</span>exceptionHook <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> error<span class=\"k\">,</span> stack <span class=\"k\">)</span> <span class=\"k\">{</span>","","        <span class=\"c\">// Support: IE 8 - 9 only</span>","        <span class=\"c\">// Console exists when dev tools are open, which can happen at any time</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> window<span class=\"k\">.</span>console <span class=\"k\">&amp;&amp;</span> window<span class=\"k\">.</span>console<span class=\"k\">.</span>warn <span class=\"k\">&amp;&amp;</span> error <span class=\"k\">&amp;&amp;</span> rerrorNames<span class=\"k\">.</span>test<span class=\"k\">(</span> error<span class=\"k\">.</span>name <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            window<span class=\"k\">.</span>console<span class=\"k\">.</span>warn<span class=\"k\">(</span> <span class=\"s\">\"jQuery.Deferred exception: \"</span> <span class=\"k\">+</span> error<span class=\"k\">.</span>message<span class=\"k\">,</span> error<span class=\"k\">.</span>stack<span class=\"k\">,</span> stack <span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","","","","    jQuery<span class=\"k\">.</span>readyException <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> error <span class=\"k\">)</span> <span class=\"k\">{</span>","        window<span class=\"k\">.</span>setTimeout<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">throw</span> error<span class=\"k\">;</span>","        <span class=\"k\">}</span> <span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","","","","<span class=\"c\">// The deferred used on DOM ready</span>","    <span class=\"k\">var</span> readyList <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>Deferred<span class=\"k\">();</span>","","    jQuery<span class=\"k\">.</span>fn<span class=\"k\">.</span>ready <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> fn <span class=\"k\">)</span> <span class=\"k\">{</span>","","        readyList","            <span class=\"k\">.</span>then<span class=\"k\">(</span> fn <span class=\"k\">)</span>","","            <span class=\"c\">// Wrap jQuery.readyException in a function so that the lookup</span>","            <span class=\"c\">// happens at the time of error handling instead of callback</span>","            <span class=\"c\">// registration.</span>","            <span class=\"k\">.</span><span class=\"k\">catch</span><span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">(</span> error <span class=\"k\">)</span> <span class=\"k\">{</span>","                jQuery<span class=\"k\">.</span>readyException<span class=\"k\">(</span> error <span class=\"k\">);</span>","            <span class=\"k\">}</span> <span class=\"k\">);</span>","","        <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    jQuery<span class=\"k\">.</span>extend<span class=\"k\">(</span> <span class=\"k\">{</span>","","        <span class=\"c\">// Is the DOM ready to be used? Set to true once it occurs.</span>","        isReady<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","","        <span class=\"c\">// A counter to track how many items to wait for before</span>","        <span class=\"c\">// the ready event fires. See #6781</span>","        readyWait<span class=\"k\">:</span> <span class=\"s\">1</span><span class=\"k\">,</span>","","        <span class=\"c\">// Handle when the DOM is ready</span>","        ready<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> wait <span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"c\">// Abort if there are pending holds or we're already ready</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> wait <span class=\"k\">===</span> <span class=\"k\">true</span> <span class=\"k\">?</span> <span class=\"k\">--</span>jQuery<span class=\"k\">.</span>readyWait <span class=\"k\">:</span> jQuery<span class=\"k\">.</span>isReady <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Remember that the DOM is ready</span>","            jQuery<span class=\"k\">.</span>isReady <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","","            <span class=\"c\">// If a normal DOM Ready event fired, decrement, and wait if need be</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> wait <span class=\"k\">!==</span> <span class=\"k\">true</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">--</span>jQuery<span class=\"k\">.</span>readyWait <span class=\"k\">&gt;</span> <span class=\"s\">0</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// If there are functions bound, to execute</span>","            readyList<span class=\"k\">.</span>resolveWith<span class=\"k\">(</span> document<span class=\"k\">,</span> <span class=\"k\">[</span> jQuery <span class=\"k\">]</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span> <span class=\"k\">);</span>","","    jQuery<span class=\"k\">.</span>ready<span class=\"k\">.</span>then <span class=\"k\">=</span> readyList<span class=\"k\">.</span>then<span class=\"k\">;</span>","","<span class=\"c\">// The ready event handler and self cleanup method</span>","    <span class=\"k\">function</span> completed<span class=\"k\">()</span> <span class=\"k\">{</span>","        document<span class=\"k\">.</span>removeEventListener<span class=\"k\">(</span> <span class=\"s\">\"DOMContentLoaded\"</span><span class=\"k\">,</span> completed <span class=\"k\">);</span>","        window<span class=\"k\">.</span>removeEventListener<span class=\"k\">(</span> <span class=\"s\">\"load\"</span><span class=\"k\">,</span> completed <span class=\"k\">);</span>","        jQuery<span class=\"k\">.</span>ready<span class=\"k\">();</span>","    <span class=\"k\">}</span>","","<span class=\"c\">// Catch cases where $(document).ready() is called</span>","<span class=\"c\">// after the browser event has already occurred.</span>","<span class=\"c\">// Support: IE &lt;=9 - 10 only</span>","<span class=\"c\">// Older IE sometimes signals \"interactive\" too soon</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span> document<span class=\"k\">.</span>readyState <span class=\"k\">===</span> <span class=\"s\">\"complete\"</span> <span class=\"k\">||</span>","        <span class=\"k\">(</span> document<span class=\"k\">.</span>readyState <span class=\"k\">!==</span> <span class=\"s\">\"loading\"</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>document<span class=\"k\">.</span>documentElement<span class=\"k\">.</span>doScroll <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","        <span class=\"c\">// Handle it asynchronously to allow scripts the opportunity to delay ready</span>","        window<span class=\"k\">.</span>setTimeout<span class=\"k\">(</span> jQuery<span class=\"k\">.</span>ready <span class=\"k\">);</span>","","    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","","        <span class=\"c\">// Use the handy event callback</span>","        document<span class=\"k\">.</span>addEventListener<span class=\"k\">(</span> <span class=\"s\">\"DOMContentLoaded\"</span><span class=\"k\">,</span> completed <span class=\"k\">);</span>","","        <span class=\"c\">// A fallback to window.onload, that will always work</span>","        window<span class=\"k\">.</span>addEventListener<span class=\"k\">(</span> <span class=\"s\">\"load\"</span><span class=\"k\">,</span> completed <span class=\"k\">);</span>","    <span class=\"k\">}</span>","","","","","<span class=\"c\">// Multifunctional method to get and set values of a collection</span>","<span class=\"c\">// The value/s can optionally be executed if it's a function</span>","    <span class=\"k\">var</span> access <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> elems<span class=\"k\">,</span> fn<span class=\"k\">,</span> key<span class=\"k\">,</span> value<span class=\"k\">,</span> chainable<span class=\"k\">,</span> emptyGet<span class=\"k\">,</span> raw <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","            len <span class=\"k\">=</span> elems<span class=\"k\">.</span>length<span class=\"k\">,</span>","            bulk <span class=\"k\">=</span> key <span class=\"k\">==</span> <span class=\"k\">null</span><span class=\"k\">;</span>","","        <span class=\"c\">// Sets many values</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> toType<span class=\"k\">(</span> key <span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"s\">\"object\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            chainable <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","            <span class=\"k\">for</span> <span class=\"k\">(</span> i <span class=\"k\">in</span> key <span class=\"k\">)</span> <span class=\"k\">{</span>","                access<span class=\"k\">(</span> elems<span class=\"k\">,</span> fn<span class=\"k\">,</span> i<span class=\"k\">,</span> key<span class=\"k\">[</span> i <span class=\"k\">],</span> <span class=\"k\">true</span><span class=\"k\">,</span> emptyGet<span class=\"k\">,</span> raw <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Sets one value</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> value <span class=\"k\">!==</span> undefined <span class=\"k\">)</span> <span class=\"k\">{</span>","            chainable <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>isFunction<span class=\"k\">(</span> value <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                raw <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> bulk <span class=\"k\">)</span> <span class=\"k\">{</span>","","                <span class=\"c\">// Bulk operations run against the entire set</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> raw <span class=\"k\">)</span> <span class=\"k\">{</span>","                    fn<span class=\"k\">.</span>call<span class=\"k\">(</span> elems<span class=\"k\">,</span> value <span class=\"k\">);</span>","                    fn <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","","                    <span class=\"c\">// ...except when executing function values</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    bulk <span class=\"k\">=</span> fn<span class=\"k\">;</span>","                    fn <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> key<span class=\"k\">,</span> value <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">return</span> bulk<span class=\"k\">.</span>call<span class=\"k\">(</span> jQuery<span class=\"k\">(</span> elem <span class=\"k\">),</span> value <span class=\"k\">);</span>","                    <span class=\"k\">}</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> fn <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">;</span> i <span class=\"k\">&lt;</span> len<span class=\"k\">;</span> i<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    fn<span class=\"k\">(</span>","                        elems<span class=\"k\">[</span> i <span class=\"k\">],</span> key<span class=\"k\">,</span> raw <span class=\"k\">?</span>","                            value <span class=\"k\">:</span>","                            value<span class=\"k\">.</span>call<span class=\"k\">(</span> elems<span class=\"k\">[</span> i <span class=\"k\">],</span> i<span class=\"k\">,</span> fn<span class=\"k\">(</span> elems<span class=\"k\">[</span> i <span class=\"k\">],</span> key <span class=\"k\">)</span> <span class=\"k\">)</span>","                    <span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span> chainable <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> elems<span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"c\">// Gets</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> bulk <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> fn<span class=\"k\">.</span>call<span class=\"k\">(</span> elems <span class=\"k\">);</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">return</span> len <span class=\"k\">?</span> fn<span class=\"k\">(</span> elems<span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">],</span> key <span class=\"k\">)</span> <span class=\"k\">:</span> emptyGet<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","","<span class=\"c\">// Matches dashed string for camelizing</span>","    <span class=\"k\">var</span> rmsPrefix <span class=\"k\">=</span> <span class=\"s\">/^-ms-/</span><span class=\"k\">,</span>","        rdashAlpha <span class=\"k\">=</span> <span class=\"s\">/-([a-z])/g</span><span class=\"k\">;</span>","","<span class=\"c\">// Used by camelCase as callback to replace()</span>","    <span class=\"k\">function</span> fcamelCase<span class=\"k\">(</span> all<span class=\"k\">,</span> letter <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> letter<span class=\"k\">.</span>toUpperCase<span class=\"k\">();</span>","    <span class=\"k\">}</span>","","<span class=\"c\">// Convert dashed to camelCase; used by the css and data modules</span>","<span class=\"c\">// Support: IE &lt;=9 - 11, Edge 12 - 15</span>","<span class=\"c\">// Microsoft forgot to hump their vendor prefix (#9572)</span>","    <span class=\"k\">function</span> camelCase<span class=\"k\">(</span> string <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> string<span class=\"k\">.</span>replace<span class=\"k\">(</span> rmsPrefix<span class=\"k\">,</span> <span class=\"s\">\"ms-\"</span> <span class=\"k\">).</span>replace<span class=\"k\">(</span> rdashAlpha<span class=\"k\">,</span> fcamelCase <span class=\"k\">);</span>","    <span class=\"k\">}</span>","    <span class=\"k\">var</span> acceptData <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> owner <span class=\"k\">)</span> <span class=\"k\">{</span>","","        <span class=\"c\">// Accepts only:</span>","        <span class=\"c\">//  - Node</span>","        <span class=\"c\">//    - Node.ELEMENT_NODE</span>","        <span class=\"c\">//    - Node.DOCUMENT_NODE</span>","        <span class=\"c\">//  - Object</span>","        <span class=\"c\">//    - Any</span>","        <span class=\"k\">return</span> owner<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">||</span> owner<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">9</span> <span class=\"k\">||</span> <span class=\"k\">!(</span> <span class=\"k\">+</span>owner<span class=\"k\">.</span>nodeType <span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","","","","    <span class=\"k\">function</span> Data<span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>expando <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>expando <span class=\"k\">+</span> Data<span class=\"k\">.</span>uid<span class=\"k\">++;</span>","    <span class=\"k\">}</span>","","    Data<span class=\"k\">.</span>uid <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">;</span>","","    Data<span class=\"k\">.</span>prototype <span class=\"k\">=</span> <span class=\"k\">{</span>","","        cache<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> owner <span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"c\">// Check if the owner object already has a cache</span>","            <span class=\"k\">var</span> value <span class=\"k\">=</span> owner<span class=\"k\">[</span> <span class=\"k\">this</span><span class=\"k\">.</span>expando <span class=\"k\">];</span>","","            <span class=\"c\">// If not, create one</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>value <span class=\"k\">)</span> <span class=\"k\">{</span>","                value <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","","                <span class=\"c\">// We can accept data for non-element nodes in modern browsers,</span>","                <span class=\"c\">// but we should not, see #8335.</span>","                <span class=\"c\">// Always return an empty object.</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> acceptData<span class=\"k\">(</span> owner <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                    <span class=\"c\">// If it is a node unlikely to be stringify-ed or looped over</span>","                    <span class=\"c\">// use plain assignment</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> owner<span class=\"k\">.</span>nodeType <span class=\"k\">)</span> <span class=\"k\">{</span>","                        owner<span class=\"k\">[</span> <span class=\"k\">this</span><span class=\"k\">.</span>expando <span class=\"k\">]</span> <span class=\"k\">=</span> value<span class=\"k\">;</span>","","                        <span class=\"c\">// Otherwise secure it in a non-enumerable property</span>","                        <span class=\"c\">// configurable must be true to allow the property to be</span>","                        <span class=\"c\">// deleted when data is removed</span>","                    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                        Object<span class=\"k\">.</span>defineProperty<span class=\"k\">(</span> owner<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>expando<span class=\"k\">,</span> <span class=\"k\">{</span>","                            value<span class=\"k\">:</span> value<span class=\"k\">,</span>","                            configurable<span class=\"k\">:</span> <span class=\"k\">true</span>","                        <span class=\"k\">}</span> <span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">return</span> value<span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        set<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> owner<span class=\"k\">,</span> data<span class=\"k\">,</span> value <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> prop<span class=\"k\">,</span>","                cache <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>cache<span class=\"k\">(</span> owner <span class=\"k\">);</span>","","            <span class=\"c\">// Handle: [ owner, key, value ] args</span>","            <span class=\"c\">// Always use camelCase key (gh-2257)</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">typeof</span> data <span class=\"k\">===</span> <span class=\"s\">\"string\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                cache<span class=\"k\">[</span> camelCase<span class=\"k\">(</span> data <span class=\"k\">)</span> <span class=\"k\">]</span> <span class=\"k\">=</span> value<span class=\"k\">;</span>","","                <span class=\"c\">// Handle: [ owner, { properties } ] args</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","","                <span class=\"c\">// Copy the properties one-by-one to the cache object</span>","                <span class=\"k\">for</span> <span class=\"k\">(</span> prop <span class=\"k\">in</span> data <span class=\"k\">)</span> <span class=\"k\">{</span>","                    cache<span class=\"k\">[</span> camelCase<span class=\"k\">(</span> prop <span class=\"k\">)</span> <span class=\"k\">]</span> <span class=\"k\">=</span> data<span class=\"k\">[</span> prop <span class=\"k\">];</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","            <span class=\"k\">return</span> cache<span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        get<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> owner<span class=\"k\">,</span> key <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> key <span class=\"k\">===</span> undefined <span class=\"k\">?</span>","                <span class=\"k\">this</span><span class=\"k\">.</span>cache<span class=\"k\">(</span> owner <span class=\"k\">)</span> <span class=\"k\">:</span>","","                <span class=\"c\">// Always use camelCase key (gh-2257)</span>","                owner<span class=\"k\">[</span> <span class=\"k\">this</span><span class=\"k\">.</span>expando <span class=\"k\">]</span> <span class=\"k\">&amp;&amp;</span> owner<span class=\"k\">[</span> <span class=\"k\">this</span><span class=\"k\">.</span>expando <span class=\"k\">][</span> camelCase<span class=\"k\">(</span> key <span class=\"k\">)</span> <span class=\"k\">];</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        access<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> owner<span class=\"k\">,</span> key<span class=\"k\">,</span> value <span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"c\">// In cases where either:</span>","            <span class=\"c\">//</span>","            <span class=\"c\">//   1. No key was specified</span>","            <span class=\"c\">//   2. A string key was specified, but no value provided</span>","            <span class=\"c\">//</span>","            <span class=\"c\">// Take the \"read\" path and allow the get method to determine</span>","            <span class=\"c\">// which value to return, respectively either:</span>","            <span class=\"c\">//</span>","            <span class=\"c\">//   1. The entire cache object</span>","            <span class=\"c\">//   2. The data stored at the key</span>","            <span class=\"c\">//</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> key <span class=\"k\">===</span> undefined <span class=\"k\">||</span>","                <span class=\"k\">(</span> <span class=\"k\">(</span> key <span class=\"k\">&amp;&amp;</span> <span class=\"k\">typeof</span> key <span class=\"k\">===</span> <span class=\"s\">\"string\"</span> <span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> value <span class=\"k\">===</span> undefined <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>get<span class=\"k\">(</span> owner<span class=\"k\">,</span> key <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// When the key is not a string, or both a key and value</span>","            <span class=\"c\">// are specified, set or extend (existing objects) with either:</span>","            <span class=\"c\">//</span>","            <span class=\"c\">//   1. An object of properties</span>","            <span class=\"c\">//   2. A key and value</span>","            <span class=\"c\">//</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>set<span class=\"k\">(</span> owner<span class=\"k\">,</span> key<span class=\"k\">,</span> value <span class=\"k\">);</span>","","            <span class=\"c\">// Since the \"set\" path can have two possible entry points</span>","            <span class=\"c\">// return the expected data based on which path was taken[*]</span>","            <span class=\"k\">return</span> value <span class=\"k\">!==</span> undefined <span class=\"k\">?</span> value <span class=\"k\">:</span> key<span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        remove<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> owner<span class=\"k\">,</span> key <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> i<span class=\"k\">,</span>","                cache <span class=\"k\">=</span> owner<span class=\"k\">[</span> <span class=\"k\">this</span><span class=\"k\">.</span>expando <span class=\"k\">];</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> cache <span class=\"k\">===</span> undefined <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> key <span class=\"k\">!==</span> undefined <span class=\"k\">)</span> <span class=\"k\">{</span>","","                <span class=\"c\">// Support array or space separated string of keys</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> Array<span class=\"k\">.</span>isArray<span class=\"k\">(</span> key <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                    <span class=\"c\">// If key is an array of keys...</span>","                    <span class=\"c\">// We always set camelCase keys, so remove that.</span>","                    key <span class=\"k\">=</span> key<span class=\"k\">.</span>map<span class=\"k\">(</span> camelCase <span class=\"k\">);</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    key <span class=\"k\">=</span> camelCase<span class=\"k\">(</span> key <span class=\"k\">);</span>","","                    <span class=\"c\">// If a key with the spaces exists, use it.</span>","                    <span class=\"c\">// Otherwise, create an array by matching non-whitespace</span>","                    key <span class=\"k\">=</span> key <span class=\"k\">in</span> cache <span class=\"k\">?</span>","                        <span class=\"k\">[</span> key <span class=\"k\">]</span> <span class=\"k\">:</span>","                        <span class=\"k\">(</span> key<span class=\"k\">.</span>match<span class=\"k\">(</span> rnothtmlwhite <span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"k\">[]</span> <span class=\"k\">);</span>","                <span class=\"k\">}</span>","","                i <span class=\"k\">=</span> key<span class=\"k\">.</span>length<span class=\"k\">;</span>","","                <span class=\"k\">while</span> <span class=\"k\">(</span> i<span class=\"k\">--</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">delete</span> cache<span class=\"k\">[</span> key<span class=\"k\">[</span> i <span class=\"k\">]</span> <span class=\"k\">];</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Remove the expando if there's no more data</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> key <span class=\"k\">===</span> undefined <span class=\"k\">||</span> jQuery<span class=\"k\">.</span>isEmptyObject<span class=\"k\">(</span> cache <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                <span class=\"c\">// Support: Chrome &lt;=35 - 45</span>","                <span class=\"c\">// Webkit &amp; Blink performance suffers when deleting properties</span>","                <span class=\"c\">// from DOM nodes, so set to undefined instead</span>","                <span class=\"c\">// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> owner<span class=\"k\">.</span>nodeType <span class=\"k\">)</span> <span class=\"k\">{</span>","                    owner<span class=\"k\">[</span> <span class=\"k\">this</span><span class=\"k\">.</span>expando <span class=\"k\">]</span> <span class=\"k\">=</span> undefined<span class=\"k\">;</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    <span class=\"k\">delete</span> owner<span class=\"k\">[</span> <span class=\"k\">this</span><span class=\"k\">.</span>expando <span class=\"k\">];</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        hasData<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> owner <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> cache <span class=\"k\">=</span> owner<span class=\"k\">[</span> <span class=\"k\">this</span><span class=\"k\">.</span>expando <span class=\"k\">];</span>","            <span class=\"k\">return</span> cache <span class=\"k\">!==</span> undefined <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>jQuery<span class=\"k\">.</span>isEmptyObject<span class=\"k\">(</span> cache <span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"k\">var</span> dataPriv <span class=\"k\">=</span> <span class=\"k\">new</span> Data<span class=\"k\">();</span>","","    <span class=\"k\">var</span> dataUser <span class=\"k\">=</span> <span class=\"k\">new</span> Data<span class=\"k\">();</span>","","","","<span class=\"c\">//\tImplementation Summary</span>","<span class=\"c\">//</span>","<span class=\"c\">//\t1. Enforce API surface and semantic compatibility with 1.9.x branch</span>","<span class=\"c\">//\t2. Improve the module's maintainability by reducing the storage</span>","<span class=\"c\">//\t\tpaths to a single mechanism.</span>","<span class=\"c\">//\t3. Use the same single mechanism to support \"private\" and \"user\" data.</span>","<span class=\"c\">//\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)</span>","<span class=\"c\">//\t5. Avoid exposing implementation details on user objects (eg. expando properties)</span>","<span class=\"c\">//\t6. Provide a clear path for implementation upgrade to WeakMap in 2014</span>","","    <span class=\"k\">var</span> rbrace <span class=\"k\">=</span> <span class=\"s\">/^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/</span><span class=\"k\">,</span>","        rmultiDash <span class=\"k\">=</span> <span class=\"s\">/[A-Z]/g</span><span class=\"k\">;</span>","","    <span class=\"k\">function</span> getData<span class=\"k\">(</span> data <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> data <span class=\"k\">===</span> <span class=\"s\">\"true\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span> data <span class=\"k\">===</span> <span class=\"s\">\"false\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span> data <span class=\"k\">===</span> <span class=\"s\">\"null\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"c\">// Only convert to a number if it doesn't change the string</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> data <span class=\"k\">===</span> <span class=\"k\">+</span>data <span class=\"k\">+</span> <span class=\"s\">\"\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">+</span>data<span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span> rbrace<span class=\"k\">.</span>test<span class=\"k\">(</span> data <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> JSON<span class=\"k\">.</span>parse<span class=\"k\">(</span> data <span class=\"k\">);</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">return</span> data<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> dataAttr<span class=\"k\">(</span> elem<span class=\"k\">,</span> key<span class=\"k\">,</span> data <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> name<span class=\"k\">;</span>","","        <span class=\"c\">// If nothing was found internally, try to fetch any</span>","        <span class=\"c\">// data from the HTML5 data-* attribute</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> data <span class=\"k\">===</span> undefined <span class=\"k\">&amp;&amp;</span> elem<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            name <span class=\"k\">=</span> <span class=\"s\">\"data-\"</span> <span class=\"k\">+</span> key<span class=\"k\">.</span>replace<span class=\"k\">(</span> rmultiDash<span class=\"k\">,</span> <span class=\"s\">\"-$&amp;\"</span> <span class=\"k\">).</span>toLowerCase<span class=\"k\">();</span>","            data <span class=\"k\">=</span> elem<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span> name <span class=\"k\">);</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">typeof</span> data <span class=\"k\">===</span> <span class=\"s\">\"string\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">try</span> <span class=\"k\">{</span>","                    data <span class=\"k\">=</span> getData<span class=\"k\">(</span> data <span class=\"k\">);</span>","                <span class=\"k\">}</span> <span class=\"k\">catch</span> <span class=\"k\">(</span> e <span class=\"k\">)</span> <span class=\"k\">{}</span>","","                <span class=\"c\">// Make sure we set the data so it isn't changed later</span>","                dataUser<span class=\"k\">.</span>set<span class=\"k\">(</span> elem<span class=\"k\">,</span> key<span class=\"k\">,</span> data <span class=\"k\">);</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                data <span class=\"k\">=</span> undefined<span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> data<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    jQuery<span class=\"k\">.</span>extend<span class=\"k\">(</span> <span class=\"k\">{</span>","        hasData<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> dataUser<span class=\"k\">.</span>hasData<span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">||</span> dataPriv<span class=\"k\">.</span>hasData<span class=\"k\">(</span> elem <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        data<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> name<span class=\"k\">,</span> data <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> dataUser<span class=\"k\">.</span>access<span class=\"k\">(</span> elem<span class=\"k\">,</span> name<span class=\"k\">,</span> data <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        removeData<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> name <span class=\"k\">)</span> <span class=\"k\">{</span>","            dataUser<span class=\"k\">.</span>remove<span class=\"k\">(</span> elem<span class=\"k\">,</span> name <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        <span class=\"c\">// TODO: Now that all calls to _data and _removeData have been replaced</span>","        <span class=\"c\">// with direct calls to dataPriv methods, these can be deprecated.</span>","        _data<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> name<span class=\"k\">,</span> data <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> dataPriv<span class=\"k\">.</span>access<span class=\"k\">(</span> elem<span class=\"k\">,</span> name<span class=\"k\">,</span> data <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        _removeData<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> name <span class=\"k\">)</span> <span class=\"k\">{</span>","            dataPriv<span class=\"k\">.</span>remove<span class=\"k\">(</span> elem<span class=\"k\">,</span> name <span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span> <span class=\"k\">);</span>","","    jQuery<span class=\"k\">.</span>fn<span class=\"k\">.</span>extend<span class=\"k\">(</span> <span class=\"k\">{</span>","        data<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> key<span class=\"k\">,</span> value <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> i<span class=\"k\">,</span> name<span class=\"k\">,</span> data<span class=\"k\">,</span>","                elem <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">],</span>","                attrs <span class=\"k\">=</span> elem <span class=\"k\">&amp;&amp;</span> elem<span class=\"k\">.</span>attributes<span class=\"k\">;</span>","","            <span class=\"c\">// Gets all values</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> key <span class=\"k\">===</span> undefined <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">.</span>length <span class=\"k\">)</span> <span class=\"k\">{</span>","                    data <span class=\"k\">=</span> dataUser<span class=\"k\">.</span>get<span class=\"k\">(</span> elem <span class=\"k\">);</span>","","                    <span class=\"k\">if</span> <span class=\"k\">(</span> elem<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>dataPriv<span class=\"k\">.</span>get<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"s\">\"hasDataAttrs\"</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        i <span class=\"k\">=</span> attrs<span class=\"k\">.</span>length<span class=\"k\">;</span>","                        <span class=\"k\">while</span> <span class=\"k\">(</span> i<span class=\"k\">--</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                            <span class=\"c\">// Support: IE 11 only</span>","                            <span class=\"c\">// The attrs elements can be null (#14894)</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span> attrs<span class=\"k\">[</span> i <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                name <span class=\"k\">=</span> attrs<span class=\"k\">[</span> i <span class=\"k\">].</span>name<span class=\"k\">;</span>","                                <span class=\"k\">if</span> <span class=\"k\">(</span> name<span class=\"k\">.</span>indexOf<span class=\"k\">(</span> <span class=\"s\">\"data-\"</span> <span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"s\">0</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                    name <span class=\"k\">=</span> camelCase<span class=\"k\">(</span> name<span class=\"k\">.</span>slice<span class=\"k\">(</span> <span class=\"s\">5</span> <span class=\"k\">)</span> <span class=\"k\">);</span>","                                    dataAttr<span class=\"k\">(</span> elem<span class=\"k\">,</span> name<span class=\"k\">,</span> data<span class=\"k\">[</span> name <span class=\"k\">]</span> <span class=\"k\">);</span>","                                <span class=\"k\">}</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span>","                        dataPriv<span class=\"k\">.</span>set<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"s\">\"hasDataAttrs\"</span><span class=\"k\">,</span> <span class=\"k\">true</span> <span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","","                <span class=\"k\">return</span> data<span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Sets multiple values</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">typeof</span> key <span class=\"k\">===</span> <span class=\"s\">\"object\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>each<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                    dataUser<span class=\"k\">.</span>set<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> key <span class=\"k\">);</span>","                <span class=\"k\">}</span> <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">return</span> access<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span> value <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> data<span class=\"k\">;</span>","","                <span class=\"c\">// The calling jQuery object (element matches) is not empty</span>","                <span class=\"c\">// (and therefore has an element appears at this[ 0 ]) and the</span>","                <span class=\"c\">// `value` parameter was not undefined. An empty jQuery object</span>","                <span class=\"c\">// will result in `undefined` for elem = this[ 0 ] which will</span>","                <span class=\"c\">// throw an exception if an attempt to read a data cache is made.</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> elem <span class=\"k\">&amp;&amp;</span> value <span class=\"k\">===</span> undefined <span class=\"k\">)</span> <span class=\"k\">{</span>","","                    <span class=\"c\">// Attempt to get data from the cache</span>","                    <span class=\"c\">// The key will always be camelCased in Data</span>","                    data <span class=\"k\">=</span> dataUser<span class=\"k\">.</span>get<span class=\"k\">(</span> elem<span class=\"k\">,</span> key <span class=\"k\">);</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> data <span class=\"k\">!==</span> undefined <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">return</span> data<span class=\"k\">;</span>","                    <span class=\"k\">}</span>","","                    <span class=\"c\">// Attempt to \"discover\" the data in</span>","                    <span class=\"c\">// HTML5 custom data-* attrs</span>","                    data <span class=\"k\">=</span> dataAttr<span class=\"k\">(</span> elem<span class=\"k\">,</span> key <span class=\"k\">);</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> data <span class=\"k\">!==</span> undefined <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">return</span> data<span class=\"k\">;</span>","                    <span class=\"k\">}</span>","","                    <span class=\"c\">// We tried really hard, but the data doesn't exist.</span>","                    <span class=\"k\">return</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// Set the data...</span>","                <span class=\"k\">this</span><span class=\"k\">.</span>each<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","","                    <span class=\"c\">// We always store the camelCased key</span>","                    dataUser<span class=\"k\">.</span>set<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> key<span class=\"k\">,</span> value <span class=\"k\">);</span>","                <span class=\"k\">}</span> <span class=\"k\">);</span>","            <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">null</span><span class=\"k\">,</span> value<span class=\"k\">,</span> arguments<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">1</span><span class=\"k\">,</span> <span class=\"k\">null</span><span class=\"k\">,</span> <span class=\"k\">true</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        removeData<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> key <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>each<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                dataUser<span class=\"k\">.</span>remove<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> key <span class=\"k\">);</span>","            <span class=\"k\">}</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span> <span class=\"k\">);</span>","","","    jQuery<span class=\"k\">.</span>extend<span class=\"k\">(</span> <span class=\"k\">{</span>","        queue<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> type<span class=\"k\">,</span> data <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> queue<span class=\"k\">;</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","                type <span class=\"k\">=</span> <span class=\"k\">(</span> type <span class=\"k\">||</span> <span class=\"s\">\"fx\"</span> <span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">\"queue\"</span><span class=\"k\">;</span>","                queue <span class=\"k\">=</span> dataPriv<span class=\"k\">.</span>get<span class=\"k\">(</span> elem<span class=\"k\">,</span> type <span class=\"k\">);</span>","","                <span class=\"c\">// Speed up dequeue by getting out quickly if this is just a lookup</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> data <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>queue <span class=\"k\">||</span> Array<span class=\"k\">.</span>isArray<span class=\"k\">(</span> data <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        queue <span class=\"k\">=</span> dataPriv<span class=\"k\">.</span>access<span class=\"k\">(</span> elem<span class=\"k\">,</span> type<span class=\"k\">,</span> jQuery<span class=\"k\">.</span>makeArray<span class=\"k\">(</span> data <span class=\"k\">)</span> <span class=\"k\">);</span>","                    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                        queue<span class=\"k\">.</span>push<span class=\"k\">(</span> data <span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","                <span class=\"k\">return</span> queue <span class=\"k\">||</span> <span class=\"k\">[];</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        dequeue<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> type <span class=\"k\">)</span> <span class=\"k\">{</span>","            type <span class=\"k\">=</span> type <span class=\"k\">||</span> <span class=\"s\">\"fx\"</span><span class=\"k\">;</span>","","            <span class=\"k\">var</span> queue <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>queue<span class=\"k\">(</span> elem<span class=\"k\">,</span> type <span class=\"k\">),</span>","                startLength <span class=\"k\">=</span> queue<span class=\"k\">.</span>length<span class=\"k\">,</span>","                fn <span class=\"k\">=</span> queue<span class=\"k\">.</span>shift<span class=\"k\">(),</span>","                hooks <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>_queueHooks<span class=\"k\">(</span> elem<span class=\"k\">,</span> type <span class=\"k\">),</span>","                next <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                    jQuery<span class=\"k\">.</span>dequeue<span class=\"k\">(</span> elem<span class=\"k\">,</span> type <span class=\"k\">);</span>","                <span class=\"k\">}</span><span class=\"k\">;</span>","","            <span class=\"c\">// If the fx queue is dequeued, always remove the progress sentinel</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> fn <span class=\"k\">===</span> <span class=\"s\">\"inprogress\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                fn <span class=\"k\">=</span> queue<span class=\"k\">.</span>shift<span class=\"k\">();</span>","                startLength<span class=\"k\">--;</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> fn <span class=\"k\">)</span> <span class=\"k\">{</span>","","                <span class=\"c\">// Add a progress sentinel to prevent the fx queue from being</span>","                <span class=\"c\">// automatically dequeued</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> type <span class=\"k\">===</span> <span class=\"s\">\"fx\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    queue<span class=\"k\">.</span>unshift<span class=\"k\">(</span> <span class=\"s\">\"inprogress\"</span> <span class=\"k\">);</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// Clear up the last queue stop function</span>","                <span class=\"k\">delete</span> hooks<span class=\"k\">.</span>stop<span class=\"k\">;</span>","                fn<span class=\"k\">.</span>call<span class=\"k\">(</span> elem<span class=\"k\">,</span> next<span class=\"k\">,</span> hooks <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>startLength <span class=\"k\">&amp;&amp;</span> hooks <span class=\"k\">)</span> <span class=\"k\">{</span>","                hooks<span class=\"k\">.</span>empty<span class=\"k\">.</span>fire<span class=\"k\">();</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        <span class=\"c\">// Not public - generate a queueHooks object, or return the current one</span>","        _queueHooks<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> type <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> key <span class=\"k\">=</span> type <span class=\"k\">+</span> <span class=\"s\">\"queueHooks\"</span><span class=\"k\">;</span>","            <span class=\"k\">return</span> dataPriv<span class=\"k\">.</span>get<span class=\"k\">(</span> elem<span class=\"k\">,</span> key <span class=\"k\">)</span> <span class=\"k\">||</span> dataPriv<span class=\"k\">.</span>access<span class=\"k\">(</span> elem<span class=\"k\">,</span> key<span class=\"k\">,</span> <span class=\"k\">{</span>","                empty<span class=\"k\">:</span> jQuery<span class=\"k\">.</span>Callbacks<span class=\"k\">(</span> <span class=\"s\">\"once memory\"</span> <span class=\"k\">).</span>add<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                    dataPriv<span class=\"k\">.</span>remove<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"k\">[</span> type <span class=\"k\">+</span> <span class=\"s\">\"queue\"</span><span class=\"k\">,</span> key <span class=\"k\">]</span> <span class=\"k\">);</span>","                <span class=\"k\">}</span> <span class=\"k\">)</span>","            <span class=\"k\">}</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span> <span class=\"k\">);</span>","","    jQuery<span class=\"k\">.</span>fn<span class=\"k\">.</span>extend<span class=\"k\">(</span> <span class=\"k\">{</span>","        queue<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> type<span class=\"k\">,</span> data <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> setter <span class=\"k\">=</span> <span class=\"s\">2</span><span class=\"k\">;</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">typeof</span> type <span class=\"k\">!==</span> <span class=\"s\">\"string\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                data <span class=\"k\">=</span> type<span class=\"k\">;</span>","                type <span class=\"k\">=</span> <span class=\"s\">\"fx\"</span><span class=\"k\">;</span>","                setter<span class=\"k\">--;</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> arguments<span class=\"k\">.</span>length <span class=\"k\">&lt;</span> setter <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> jQuery<span class=\"k\">.</span>queue<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">],</span> type <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">return</span> data <span class=\"k\">===</span> undefined <span class=\"k\">?</span>","                <span class=\"k\">this</span> <span class=\"k\">:</span>","                <span class=\"k\">this</span><span class=\"k\">.</span>each<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> queue <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>queue<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> type<span class=\"k\">,</span> data <span class=\"k\">);</span>","","                    <span class=\"c\">// Ensure a hooks for this queue</span>","                    jQuery<span class=\"k\">.</span>_queueHooks<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> type <span class=\"k\">);</span>","","                    <span class=\"k\">if</span> <span class=\"k\">(</span> type <span class=\"k\">===</span> <span class=\"s\">\"fx\"</span> <span class=\"k\">&amp;&amp;</span> queue<span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">]</span> <span class=\"k\">!==</span> <span class=\"s\">\"inprogress\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        jQuery<span class=\"k\">.</span>dequeue<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> type <span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        dequeue<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> type <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>each<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                jQuery<span class=\"k\">.</span>dequeue<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> type <span class=\"k\">);</span>","            <span class=\"k\">}</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        clearQueue<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> type <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>queue<span class=\"k\">(</span> type <span class=\"k\">||</span> <span class=\"s\">\"fx\"</span><span class=\"k\">,</span> <span class=\"k\">[]</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        <span class=\"c\">// Get a promise resolved when queues of a certain type</span>","        <span class=\"c\">// are emptied (fx is the type by default)</span>","        promise<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> type<span class=\"k\">,</span> obj <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> tmp<span class=\"k\">,</span>","                count <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">,</span>","                defer <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>Deferred<span class=\"k\">(),</span>","                elements <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">,</span>","                i <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>length<span class=\"k\">,</span>","                resolve <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!(</span> <span class=\"k\">--</span>count <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        defer<span class=\"k\">.</span>resolveWith<span class=\"k\">(</span> elements<span class=\"k\">,</span> <span class=\"k\">[</span> elements <span class=\"k\">]</span> <span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span><span class=\"k\">;</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">typeof</span> type <span class=\"k\">!==</span> <span class=\"s\">\"string\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                obj <span class=\"k\">=</span> type<span class=\"k\">;</span>","                type <span class=\"k\">=</span> undefined<span class=\"k\">;</span>","            <span class=\"k\">}</span>","            type <span class=\"k\">=</span> type <span class=\"k\">||</span> <span class=\"s\">\"fx\"</span><span class=\"k\">;</span>","","            <span class=\"k\">while</span> <span class=\"k\">(</span> i<span class=\"k\">--</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                tmp <span class=\"k\">=</span> dataPriv<span class=\"k\">.</span>get<span class=\"k\">(</span> elements<span class=\"k\">[</span> i <span class=\"k\">],</span> type <span class=\"k\">+</span> <span class=\"s\">\"queueHooks\"</span> <span class=\"k\">);</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> tmp <span class=\"k\">&amp;&amp;</span> tmp<span class=\"k\">.</span>empty <span class=\"k\">)</span> <span class=\"k\">{</span>","                    count<span class=\"k\">++;</span>","                    tmp<span class=\"k\">.</span>empty<span class=\"k\">.</span>add<span class=\"k\">(</span> resolve <span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","            resolve<span class=\"k\">();</span>","            <span class=\"k\">return</span> defer<span class=\"k\">.</span>promise<span class=\"k\">(</span> obj <span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span> <span class=\"k\">);</span>","    <span class=\"k\">var</span> pnum <span class=\"k\">=</span> <span class=\"k\">(</span> <span class=\"s\">/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/</span> <span class=\"k\">).</span>source<span class=\"k\">;</span>","","    <span class=\"k\">var</span> rcssNum <span class=\"k\">=</span> <span class=\"k\">new</span> RegExp<span class=\"k\">(</span> <span class=\"s\">\"^(?:([+-])=|)(\"</span> <span class=\"k\">+</span> pnum <span class=\"k\">+</span> <span class=\"s\">\")([a-z%]*)$\"</span><span class=\"k\">,</span> <span class=\"s\">\"i\"</span> <span class=\"k\">);</span>","","","    <span class=\"k\">var</span> cssExpand <span class=\"k\">=</span> <span class=\"k\">[</span> <span class=\"s\">\"Top\"</span><span class=\"k\">,</span> <span class=\"s\">\"Right\"</span><span class=\"k\">,</span> <span class=\"s\">\"Bottom\"</span><span class=\"k\">,</span> <span class=\"s\">\"Left\"</span> <span class=\"k\">];</span>","","    <span class=\"k\">var</span> isHiddenWithinTree <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> el <span class=\"k\">)</span> <span class=\"k\">{</span>","","        <span class=\"c\">// isHiddenWithinTree might be called from jQuery#filter function;</span>","        <span class=\"c\">// in that case, element will be second argument</span>","        elem <span class=\"k\">=</span> el <span class=\"k\">||</span> elem<span class=\"k\">;</span>","","        <span class=\"c\">// Inline style trumps all</span>","        <span class=\"k\">return</span> elem<span class=\"k\">.</span>style<span class=\"k\">.</span>display <span class=\"k\">===</span> <span class=\"s\">\"none\"</span> <span class=\"k\">||</span>","            elem<span class=\"k\">.</span>style<span class=\"k\">.</span>display <span class=\"k\">===</span> <span class=\"s\">\"\"</span> <span class=\"k\">&amp;&amp;</span>","","            <span class=\"c\">// Otherwise, check computed style</span>","            <span class=\"c\">// Support: Firefox &lt;=43 - 45</span>","            <span class=\"c\">// Disconnected elements can have computed display: none, so first confirm that elem is</span>","            <span class=\"c\">// in the document.</span>","            jQuery<span class=\"k\">.</span>contains<span class=\"k\">(</span> elem<span class=\"k\">.</span>ownerDocument<span class=\"k\">,</span> elem <span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span>","","            jQuery<span class=\"k\">.</span>css<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"s\">\"display\"</span> <span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"s\">\"none\"</span><span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    <span class=\"k\">var</span> swap <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> options<span class=\"k\">,</span> callback<span class=\"k\">,</span> args <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> ret<span class=\"k\">,</span> name<span class=\"k\">,</span>","            old <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","","        <span class=\"c\">// Remember the old values, and insert the new ones</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span> name <span class=\"k\">in</span> options <span class=\"k\">)</span> <span class=\"k\">{</span>","            old<span class=\"k\">[</span> name <span class=\"k\">]</span> <span class=\"k\">=</span> elem<span class=\"k\">.</span>style<span class=\"k\">[</span> name <span class=\"k\">];</span>","            elem<span class=\"k\">.</span>style<span class=\"k\">[</span> name <span class=\"k\">]</span> <span class=\"k\">=</span> options<span class=\"k\">[</span> name <span class=\"k\">];</span>","        <span class=\"k\">}</span>","","        ret <span class=\"k\">=</span> callback<span class=\"k\">.</span>apply<span class=\"k\">(</span> elem<span class=\"k\">,</span> args <span class=\"k\">||</span> <span class=\"k\">[]</span> <span class=\"k\">);</span>","","        <span class=\"c\">// Revert the old values</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span> name <span class=\"k\">in</span> options <span class=\"k\">)</span> <span class=\"k\">{</span>","            elem<span class=\"k\">.</span>style<span class=\"k\">[</span> name <span class=\"k\">]</span> <span class=\"k\">=</span> old<span class=\"k\">[</span> name <span class=\"k\">];</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">return</span> ret<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","","","","    <span class=\"k\">function</span> adjustCSS<span class=\"k\">(</span> elem<span class=\"k\">,</span> prop<span class=\"k\">,</span> valueParts<span class=\"k\">,</span> tween <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> adjusted<span class=\"k\">,</span> scale<span class=\"k\">,</span>","            maxIterations <span class=\"k\">=</span> <span class=\"s\">20</span><span class=\"k\">,</span>","            currentValue <span class=\"k\">=</span> tween <span class=\"k\">?</span>","                <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                    <span class=\"k\">return</span> tween<span class=\"k\">.</span>cur<span class=\"k\">();</span>","                <span class=\"k\">}</span> <span class=\"k\">:</span>","                <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                    <span class=\"k\">return</span> jQuery<span class=\"k\">.</span>css<span class=\"k\">(</span> elem<span class=\"k\">,</span> prop<span class=\"k\">,</span> <span class=\"s\">\"\"</span> <span class=\"k\">);</span>","                <span class=\"k\">}</span><span class=\"k\">,</span>","            initial <span class=\"k\">=</span> currentValue<span class=\"k\">(),</span>","            unit <span class=\"k\">=</span> valueParts <span class=\"k\">&amp;&amp;</span> valueParts<span class=\"k\">[</span> <span class=\"s\">3</span> <span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"k\">(</span> jQuery<span class=\"k\">.</span>cssNumber<span class=\"k\">[</span> prop <span class=\"k\">]</span> <span class=\"k\">?</span> <span class=\"s\">\"\"</span> <span class=\"k\">:</span> <span class=\"s\">\"px\"</span> <span class=\"k\">),</span>","","            <span class=\"c\">// Starting value computation is required for potential unit mismatches</span>","            initialInUnit <span class=\"k\">=</span> <span class=\"k\">(</span> jQuery<span class=\"k\">.</span>cssNumber<span class=\"k\">[</span> prop <span class=\"k\">]</span> <span class=\"k\">||</span> unit <span class=\"k\">!==</span> <span class=\"s\">\"px\"</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">+</span>initial <span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span>","                rcssNum<span class=\"k\">.</span>exec<span class=\"k\">(</span> jQuery<span class=\"k\">.</span>css<span class=\"k\">(</span> elem<span class=\"k\">,</span> prop <span class=\"k\">)</span> <span class=\"k\">);</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span> initialInUnit <span class=\"k\">&amp;&amp;</span> initialInUnit<span class=\"k\">[</span> <span class=\"s\">3</span> <span class=\"k\">]</span> <span class=\"k\">!==</span> unit <span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"c\">// Support: Firefox &lt;=54</span>","            <span class=\"c\">// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)</span>","            initial <span class=\"k\">=</span> initial <span class=\"k\">/</span> <span class=\"s\">2</span><span class=\"k\">;</span>","","            <span class=\"c\">// Trust units reported by jQuery.css</span>","            unit <span class=\"k\">=</span> unit <span class=\"k\">||</span> initialInUnit<span class=\"k\">[</span> <span class=\"s\">3</span> <span class=\"k\">];</span>","","            <span class=\"c\">// Iteratively approximate from a nonzero starting point</span>","            initialInUnit <span class=\"k\">=</span> <span class=\"k\">+</span>initial <span class=\"k\">||</span> <span class=\"s\">1</span><span class=\"k\">;</span>","","            <span class=\"k\">while</span> <span class=\"k\">(</span> maxIterations<span class=\"k\">--</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                <span class=\"c\">// Evaluate and update our best guess (doubling guesses that zero out).</span>","                <span class=\"c\">// Finish if the scale equals or crosses 1 (making the old*new product non-positive).</span>","                jQuery<span class=\"k\">.</span>style<span class=\"k\">(</span> elem<span class=\"k\">,</span> prop<span class=\"k\">,</span> initialInUnit <span class=\"k\">+</span> unit <span class=\"k\">);</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">(</span> <span class=\"s\">1</span> <span class=\"k\">-</span> scale <span class=\"k\">)</span> <span class=\"k\">*</span> <span class=\"k\">(</span> <span class=\"s\">1</span> <span class=\"k\">-</span> <span class=\"k\">(</span> scale <span class=\"k\">=</span> currentValue<span class=\"k\">()</span> <span class=\"k\">/</span> initial <span class=\"k\">||</span> <span class=\"s\">0.5</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">&lt;=</span> <span class=\"s\">0</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    maxIterations <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","                initialInUnit <span class=\"k\">=</span> initialInUnit <span class=\"k\">/</span> scale<span class=\"k\">;</span>","","            <span class=\"k\">}</span>","","            initialInUnit <span class=\"k\">=</span> initialInUnit <span class=\"k\">*</span> <span class=\"s\">2</span><span class=\"k\">;</span>","            jQuery<span class=\"k\">.</span>style<span class=\"k\">(</span> elem<span class=\"k\">,</span> prop<span class=\"k\">,</span> initialInUnit <span class=\"k\">+</span> unit <span class=\"k\">);</span>","","            <span class=\"c\">// Make sure we update the tween properties later on</span>","            valueParts <span class=\"k\">=</span> valueParts <span class=\"k\">||</span> <span class=\"k\">[];</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span> valueParts <span class=\"k\">)</span> <span class=\"k\">{</span>","            initialInUnit <span class=\"k\">=</span> <span class=\"k\">+</span>initialInUnit <span class=\"k\">||</span> <span class=\"k\">+</span>initial <span class=\"k\">||</span> <span class=\"s\">0</span><span class=\"k\">;</span>","","            <span class=\"c\">// Apply relative offset (+=/-=) if specified</span>","            adjusted <span class=\"k\">=</span> valueParts<span class=\"k\">[</span> <span class=\"s\">1</span> <span class=\"k\">]</span> <span class=\"k\">?</span>","                initialInUnit <span class=\"k\">+</span> <span class=\"k\">(</span> valueParts<span class=\"k\">[</span> <span class=\"s\">1</span> <span class=\"k\">]</span> <span class=\"k\">+</span> <span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">*</span> valueParts<span class=\"k\">[</span> <span class=\"s\">2</span> <span class=\"k\">]</span> <span class=\"k\">:</span>","                <span class=\"k\">+</span>valueParts<span class=\"k\">[</span> <span class=\"s\">2</span> <span class=\"k\">];</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> tween <span class=\"k\">)</span> <span class=\"k\">{</span>","                tween<span class=\"k\">.</span>unit <span class=\"k\">=</span> unit<span class=\"k\">;</span>","                tween<span class=\"k\">.</span>start <span class=\"k\">=</span> initialInUnit<span class=\"k\">;</span>","                tween<span class=\"k\">.</span>end <span class=\"k\">=</span> adjusted<span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> adjusted<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","","    <span class=\"k\">var</span> defaultDisplayMap <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","","    <span class=\"k\">function</span> getDefaultDisplay<span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> temp<span class=\"k\">,</span>","            doc <span class=\"k\">=</span> elem<span class=\"k\">.</span>ownerDocument<span class=\"k\">,</span>","            nodeName <span class=\"k\">=</span> elem<span class=\"k\">.</span>nodeName<span class=\"k\">,</span>","            display <span class=\"k\">=</span> defaultDisplayMap<span class=\"k\">[</span> nodeName <span class=\"k\">];</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span> display <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> display<span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        temp <span class=\"k\">=</span> doc<span class=\"k\">.</span>body<span class=\"k\">.</span>appendChild<span class=\"k\">(</span> doc<span class=\"k\">.</span>createElement<span class=\"k\">(</span> nodeName <span class=\"k\">)</span> <span class=\"k\">);</span>","        display <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>css<span class=\"k\">(</span> temp<span class=\"k\">,</span> <span class=\"s\">\"display\"</span> <span class=\"k\">);</span>","","        temp<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>removeChild<span class=\"k\">(</span> temp <span class=\"k\">);</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span> display <span class=\"k\">===</span> <span class=\"s\">\"none\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            display <span class=\"k\">=</span> <span class=\"s\">\"block\"</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","        defaultDisplayMap<span class=\"k\">[</span> nodeName <span class=\"k\">]</span> <span class=\"k\">=</span> display<span class=\"k\">;</span>","","        <span class=\"k\">return</span> display<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> showHide<span class=\"k\">(</span> elements<span class=\"k\">,</span> show <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> display<span class=\"k\">,</span> elem<span class=\"k\">,</span>","            values <span class=\"k\">=</span> <span class=\"k\">[],</span>","            index <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","            length <span class=\"k\">=</span> elements<span class=\"k\">.</span>length<span class=\"k\">;</span>","","        <span class=\"c\">// Determine new display value for elements that need to change</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">;</span> index <span class=\"k\">&lt;</span> length<span class=\"k\">;</span> index<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            elem <span class=\"k\">=</span> elements<span class=\"k\">[</span> index <span class=\"k\">];</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>elem<span class=\"k\">.</span>style <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">continue</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            display <span class=\"k\">=</span> elem<span class=\"k\">.</span>style<span class=\"k\">.</span>display<span class=\"k\">;</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> show <span class=\"k\">)</span> <span class=\"k\">{</span>","","                <span class=\"c\">// Since we force visibility upon cascade-hidden elements, an immediate (and slow)</span>","                <span class=\"c\">// check is required in this first loop unless we have a nonempty display value (either</span>","                <span class=\"c\">// inline or about-to-be-restored)</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> display <span class=\"k\">===</span> <span class=\"s\">\"none\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    values<span class=\"k\">[</span> index <span class=\"k\">]</span> <span class=\"k\">=</span> dataPriv<span class=\"k\">.</span>get<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"s\">\"display\"</span> <span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"k\">null</span><span class=\"k\">;</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>values<span class=\"k\">[</span> index <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        elem<span class=\"k\">.</span>style<span class=\"k\">.</span>display <span class=\"k\">=</span> <span class=\"s\">\"\"</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> elem<span class=\"k\">.</span>style<span class=\"k\">.</span>display <span class=\"k\">===</span> <span class=\"s\">\"\"</span> <span class=\"k\">&amp;&amp;</span> isHiddenWithinTree<span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    values<span class=\"k\">[</span> index <span class=\"k\">]</span> <span class=\"k\">=</span> getDefaultDisplay<span class=\"k\">(</span> elem <span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> display <span class=\"k\">!==</span> <span class=\"s\">\"none\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    values<span class=\"k\">[</span> index <span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">\"none\"</span><span class=\"k\">;</span>","","                    <span class=\"c\">// Remember what we're overwriting</span>","                    dataPriv<span class=\"k\">.</span>set<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"s\">\"display\"</span><span class=\"k\">,</span> display <span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","","        <span class=\"c\">// Set the display of the elements in a second loop to avoid constant reflow</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span> index <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> index <span class=\"k\">&lt;</span> length<span class=\"k\">;</span> index<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> values<span class=\"k\">[</span> index <span class=\"k\">]</span> <span class=\"k\">!=</span> <span class=\"k\">null</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                elements<span class=\"k\">[</span> index <span class=\"k\">].</span>style<span class=\"k\">.</span>display <span class=\"k\">=</span> values<span class=\"k\">[</span> index <span class=\"k\">];</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">return</span> elements<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    jQuery<span class=\"k\">.</span>fn<span class=\"k\">.</span>extend<span class=\"k\">(</span> <span class=\"k\">{</span>","        show<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> showHide<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"k\">true</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        hide<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> showHide<span class=\"k\">(</span> <span class=\"k\">this</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        toggle<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> state <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">typeof</span> state <span class=\"k\">===</span> <span class=\"s\">\"boolean\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> state <span class=\"k\">?</span> <span class=\"k\">this</span><span class=\"k\">.</span>show<span class=\"k\">()</span> <span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>hide<span class=\"k\">();</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>each<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> isHiddenWithinTree<span class=\"k\">(</span> <span class=\"k\">this</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    jQuery<span class=\"k\">(</span> <span class=\"k\">this</span> <span class=\"k\">).</span>show<span class=\"k\">();</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    jQuery<span class=\"k\">(</span> <span class=\"k\">this</span> <span class=\"k\">).</span>hide<span class=\"k\">();</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span> <span class=\"k\">);</span>","    <span class=\"k\">var</span> rcheckableType <span class=\"k\">=</span> <span class=\"k\">(</span> <span class=\"s\">/^(?:checkbox|radio)$/i</span> <span class=\"k\">);</span>","","    <span class=\"k\">var</span> rtagName <span class=\"k\">=</span> <span class=\"k\">(</span> <span class=\"s\">/&lt;([a-z][^\\/\\0&gt;\\x20\\t\\r\\n\\f]+)/i</span> <span class=\"k\">);</span>","","    <span class=\"k\">var</span> rscriptType <span class=\"k\">=</span> <span class=\"k\">(</span> <span class=\"s\">/^$|^module$|\\/(?:java|ecma)script/i</span> <span class=\"k\">);</span>","","","","<span class=\"c\">// We have to close these tags to support XHTML (#13200)</span>","    <span class=\"k\">var</span> wrapMap <span class=\"k\">=</span> <span class=\"k\">{</span>","","        <span class=\"c\">// Support: IE &lt;=9 only</span>","        option<span class=\"k\">:</span> <span class=\"k\">[</span> <span class=\"s\">1</span><span class=\"k\">,</span> <span class=\"s\">\"&lt;select multiple='multiple'&gt;\"</span><span class=\"k\">,</span> <span class=\"s\">\"&lt;/select&gt;\"</span> <span class=\"k\">],</span>","","        <span class=\"c\">// XHTML parsers do not magically insert elements in the</span>","        <span class=\"c\">// same way that tag soup parsers do. So we cannot shorten</span>","        <span class=\"c\">// this by omitting &lt;tbody&gt; or other required elements.</span>","        thead<span class=\"k\">:</span> <span class=\"k\">[</span> <span class=\"s\">1</span><span class=\"k\">,</span> <span class=\"s\">\"&lt;table&gt;\"</span><span class=\"k\">,</span> <span class=\"s\">\"&lt;/table&gt;\"</span> <span class=\"k\">],</span>","        col<span class=\"k\">:</span> <span class=\"k\">[</span> <span class=\"s\">2</span><span class=\"k\">,</span> <span class=\"s\">\"&lt;table&gt;&lt;colgroup&gt;\"</span><span class=\"k\">,</span> <span class=\"s\">\"&lt;/colgroup&gt;&lt;/table&gt;\"</span> <span class=\"k\">],</span>","        tr<span class=\"k\">:</span> <span class=\"k\">[</span> <span class=\"s\">2</span><span class=\"k\">,</span> <span class=\"s\">\"&lt;table&gt;&lt;tbody&gt;\"</span><span class=\"k\">,</span> <span class=\"s\">\"&lt;/tbody&gt;&lt;/table&gt;\"</span> <span class=\"k\">],</span>","        td<span class=\"k\">:</span> <span class=\"k\">[</span> <span class=\"s\">3</span><span class=\"k\">,</span> <span class=\"s\">\"&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;\"</span><span class=\"k\">,</span> <span class=\"s\">\"&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\"</span> <span class=\"k\">],</span>","","        _default<span class=\"k\">:</span> <span class=\"k\">[</span> <span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"s\">\"\"</span><span class=\"k\">,</span> <span class=\"s\">\"\"</span> <span class=\"k\">]</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">// Support: IE &lt;=9 only</span>","    wrapMap<span class=\"k\">.</span>optgroup <span class=\"k\">=</span> wrapMap<span class=\"k\">.</span>option<span class=\"k\">;</span>","","    wrapMap<span class=\"k\">.</span>tbody <span class=\"k\">=</span> wrapMap<span class=\"k\">.</span>tfoot <span class=\"k\">=</span> wrapMap<span class=\"k\">.</span>colgroup <span class=\"k\">=</span> wrapMap<span class=\"k\">.</span>caption <span class=\"k\">=</span> wrapMap<span class=\"k\">.</span>thead<span class=\"k\">;</span>","    wrapMap<span class=\"k\">.</span>th <span class=\"k\">=</span> wrapMap<span class=\"k\">.</span>td<span class=\"k\">;</span>","","","    <span class=\"k\">function</span> getAll<span class=\"k\">(</span> context<span class=\"k\">,</span> tag <span class=\"k\">)</span> <span class=\"k\">{</span>","","        <span class=\"c\">// Support: IE &lt;=9 - 11 only</span>","        <span class=\"c\">// Use typeof to avoid zero-argument method invocation on host objects (#15151)</span>","        <span class=\"k\">var</span> ret<span class=\"k\">;</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">typeof</span> context<span class=\"k\">.</span>getElementsByTagName <span class=\"k\">!==</span> <span class=\"s\">\"undefined\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            ret <span class=\"k\">=</span> context<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span> tag <span class=\"k\">||</span> <span class=\"s\">\"*\"</span> <span class=\"k\">);</span>","","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">typeof</span> context<span class=\"k\">.</span>querySelectorAll <span class=\"k\">!==</span> <span class=\"s\">\"undefined\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            ret <span class=\"k\">=</span> context<span class=\"k\">.</span>querySelectorAll<span class=\"k\">(</span> tag <span class=\"k\">||</span> <span class=\"s\">\"*\"</span> <span class=\"k\">);</span>","","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","            ret <span class=\"k\">=</span> <span class=\"k\">[];</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span> tag <span class=\"k\">===</span> undefined <span class=\"k\">||</span> tag <span class=\"k\">&amp;&amp;</span> nodeName<span class=\"k\">(</span> context<span class=\"k\">,</span> tag <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> jQuery<span class=\"k\">.</span>merge<span class=\"k\">(</span> <span class=\"k\">[</span> context <span class=\"k\">],</span> ret <span class=\"k\">);</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">return</span> ret<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","","<span class=\"c\">// Mark scripts as having already been evaluated</span>","    <span class=\"k\">function</span> setGlobalEval<span class=\"k\">(</span> elems<span class=\"k\">,</span> refElements <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","            l <span class=\"k\">=</span> elems<span class=\"k\">.</span>length<span class=\"k\">;</span>","","        <span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">;</span> i <span class=\"k\">&lt;</span> l<span class=\"k\">;</span> i<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            dataPriv<span class=\"k\">.</span>set<span class=\"k\">(</span>","                elems<span class=\"k\">[</span> i <span class=\"k\">],</span>","                <span class=\"s\">\"globalEval\"</span><span class=\"k\">,</span>","                <span class=\"k\">!</span>refElements <span class=\"k\">||</span> dataPriv<span class=\"k\">.</span>get<span class=\"k\">(</span> refElements<span class=\"k\">[</span> i <span class=\"k\">],</span> <span class=\"s\">\"globalEval\"</span> <span class=\"k\">)</span>","            <span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","","    <span class=\"k\">var</span> rhtml <span class=\"k\">=</span> <span class=\"s\">/&lt;|&amp;#?\\w+;/</span><span class=\"k\">;</span>","","    <span class=\"k\">function</span> buildFragment<span class=\"k\">(</span> elems<span class=\"k\">,</span> context<span class=\"k\">,</span> scripts<span class=\"k\">,</span> selection<span class=\"k\">,</span> ignored <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> elem<span class=\"k\">,</span> tmp<span class=\"k\">,</span> tag<span class=\"k\">,</span> wrap<span class=\"k\">,</span> contains<span class=\"k\">,</span> j<span class=\"k\">,</span>","            fragment <span class=\"k\">=</span> context<span class=\"k\">.</span>createDocumentFragment<span class=\"k\">(),</span>","            nodes <span class=\"k\">=</span> <span class=\"k\">[],</span>","            i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","            l <span class=\"k\">=</span> elems<span class=\"k\">.</span>length<span class=\"k\">;</span>","","        <span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">;</span> i <span class=\"k\">&lt;</span> l<span class=\"k\">;</span> i<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            elem <span class=\"k\">=</span> elems<span class=\"k\">[</span> i <span class=\"k\">];</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> elem <span class=\"k\">||</span> elem <span class=\"k\">===</span> <span class=\"s\">0</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                <span class=\"c\">// Add nodes directly</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> toType<span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"s\">\"object\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                    <span class=\"c\">// Support: Android &lt;=4.0 only, PhantomJS 1 only</span>","                    <span class=\"c\">// push.apply(_, arraylike) throws on ancient WebKit</span>","                    jQuery<span class=\"k\">.</span>merge<span class=\"k\">(</span> nodes<span class=\"k\">,</span> elem<span class=\"k\">.</span>nodeType <span class=\"k\">?</span> <span class=\"k\">[</span> elem <span class=\"k\">]</span> <span class=\"k\">:</span> elem <span class=\"k\">);</span>","","                    <span class=\"c\">// Convert non-html into a text node</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>rhtml<span class=\"k\">.</span>test<span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    nodes<span class=\"k\">.</span>push<span class=\"k\">(</span> context<span class=\"k\">.</span>createTextNode<span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">);</span>","","                    <span class=\"c\">// Convert html into DOM nodes</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    tmp <span class=\"k\">=</span> tmp <span class=\"k\">||</span> fragment<span class=\"k\">.</span>appendChild<span class=\"k\">(</span> context<span class=\"k\">.</span>createElement<span class=\"k\">(</span> <span class=\"s\">\"div\"</span> <span class=\"k\">)</span> <span class=\"k\">);</span>","","                    <span class=\"c\">// Deserialize a standard representation</span>","                    tag <span class=\"k\">=</span> <span class=\"k\">(</span> rtagName<span class=\"k\">.</span>exec<span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"k\">[</span> <span class=\"s\">\"\"</span><span class=\"k\">,</span> <span class=\"s\">\"\"</span> <span class=\"k\">]</span> <span class=\"k\">)[</span> <span class=\"s\">1</span> <span class=\"k\">].</span>toLowerCase<span class=\"k\">();</span>","                    wrap <span class=\"k\">=</span> wrapMap<span class=\"k\">[</span> tag <span class=\"k\">]</span> <span class=\"k\">||</span> wrapMap<span class=\"k\">.</span>_default<span class=\"k\">;</span>","                    tmp<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> wrap<span class=\"k\">[</span> <span class=\"s\">1</span> <span class=\"k\">]</span> <span class=\"k\">+</span> jQuery<span class=\"k\">.</span>htmlPrefilter<span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">+</span> wrap<span class=\"k\">[</span> <span class=\"s\">2</span> <span class=\"k\">];</span>","","                    <span class=\"c\">// Descend through wrappers to the right content</span>","                    j <span class=\"k\">=</span> wrap<span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">];</span>","                    <span class=\"k\">while</span> <span class=\"k\">(</span> j<span class=\"k\">--</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        tmp <span class=\"k\">=</span> tmp<span class=\"k\">.</span>lastChild<span class=\"k\">;</span>","                    <span class=\"k\">}</span>","","                    <span class=\"c\">// Support: Android &lt;=4.0 only, PhantomJS 1 only</span>","                    <span class=\"c\">// push.apply(_, arraylike) throws on ancient WebKit</span>","                    jQuery<span class=\"k\">.</span>merge<span class=\"k\">(</span> nodes<span class=\"k\">,</span> tmp<span class=\"k\">.</span>childNodes <span class=\"k\">);</span>","","                    <span class=\"c\">// Remember the top-level container</span>","                    tmp <span class=\"k\">=</span> fragment<span class=\"k\">.</span>firstChild<span class=\"k\">;</span>","","                    <span class=\"c\">// Ensure the created nodes are orphaned (#12392)</span>","                    tmp<span class=\"k\">.</span>textContent <span class=\"k\">=</span> <span class=\"s\">\"\"</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","","        <span class=\"c\">// Remove wrapper from fragment</span>","        fragment<span class=\"k\">.</span>textContent <span class=\"k\">=</span> <span class=\"s\">\"\"</span><span class=\"k\">;</span>","","        i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","        <span class=\"k\">while</span> <span class=\"k\">(</span> <span class=\"k\">(</span> elem <span class=\"k\">=</span> nodes<span class=\"k\">[</span> i<span class=\"k\">++</span> <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"c\">// Skip elements already in the context collection (trac-4087)</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> selection <span class=\"k\">&amp;&amp;</span> jQuery<span class=\"k\">.</span>inArray<span class=\"k\">(</span> elem<span class=\"k\">,</span> selection <span class=\"k\">)</span> <span class=\"k\">&gt;</span> <span class=\"k\">-</span><span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> ignored <span class=\"k\">)</span> <span class=\"k\">{</span>","                    ignored<span class=\"k\">.</span>push<span class=\"k\">(</span> elem <span class=\"k\">);</span>","                <span class=\"k\">}</span>","                <span class=\"k\">continue</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            contains <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>contains<span class=\"k\">(</span> elem<span class=\"k\">.</span>ownerDocument<span class=\"k\">,</span> elem <span class=\"k\">);</span>","","            <span class=\"c\">// Append to fragment</span>","            tmp <span class=\"k\">=</span> getAll<span class=\"k\">(</span> fragment<span class=\"k\">.</span>appendChild<span class=\"k\">(</span> elem <span class=\"k\">),</span> <span class=\"s\">\"script\"</span> <span class=\"k\">);</span>","","            <span class=\"c\">// Preserve script evaluation history</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> contains <span class=\"k\">)</span> <span class=\"k\">{</span>","                setGlobalEval<span class=\"k\">(</span> tmp <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Capture executables</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> scripts <span class=\"k\">)</span> <span class=\"k\">{</span>","                j <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","                <span class=\"k\">while</span> <span class=\"k\">(</span> <span class=\"k\">(</span> elem <span class=\"k\">=</span> tmp<span class=\"k\">[</span> j<span class=\"k\">++</span> <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> rscriptType<span class=\"k\">.</span>test<span class=\"k\">(</span> elem<span class=\"k\">.</span>type <span class=\"k\">||</span> <span class=\"s\">\"\"</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        scripts<span class=\"k\">.</span>push<span class=\"k\">(</span> elem <span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">return</span> fragment<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","","    <span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> fragment <span class=\"k\">=</span> document<span class=\"k\">.</span>createDocumentFragment<span class=\"k\">(),</span>","            div <span class=\"k\">=</span> fragment<span class=\"k\">.</span>appendChild<span class=\"k\">(</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span> <span class=\"s\">\"div\"</span> <span class=\"k\">)</span> <span class=\"k\">),</span>","            input <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span> <span class=\"s\">\"input\"</span> <span class=\"k\">);</span>","","        <span class=\"c\">// Support: Android 4.0 - 4.3 only</span>","        <span class=\"c\">// Check state lost if the name is set (#11217)</span>","        <span class=\"c\">// Support: Windows Web Apps (WWA)</span>","        <span class=\"c\">// `name` and `type` must use .setAttribute for WWA (#14901)</span>","        input<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span> <span class=\"s\">\"type\"</span><span class=\"k\">,</span> <span class=\"s\">\"radio\"</span> <span class=\"k\">);</span>","        input<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span> <span class=\"s\">\"checked\"</span><span class=\"k\">,</span> <span class=\"s\">\"checked\"</span> <span class=\"k\">);</span>","        input<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span> <span class=\"s\">\"name\"</span><span class=\"k\">,</span> <span class=\"s\">\"t\"</span> <span class=\"k\">);</span>","","        div<span class=\"k\">.</span>appendChild<span class=\"k\">(</span> input <span class=\"k\">);</span>","","        <span class=\"c\">// Support: Android &lt;=4.1 only</span>","        <span class=\"c\">// Older WebKit doesn't clone checked state correctly in fragments</span>","        support<span class=\"k\">.</span>checkClone <span class=\"k\">=</span> div<span class=\"k\">.</span>cloneNode<span class=\"k\">(</span> <span class=\"k\">true</span> <span class=\"k\">).</span>cloneNode<span class=\"k\">(</span> <span class=\"k\">true</span> <span class=\"k\">).</span>lastChild<span class=\"k\">.</span>checked<span class=\"k\">;</span>","","        <span class=\"c\">// Support: IE &lt;=11 only</span>","        <span class=\"c\">// Make sure textarea (and checkbox) defaultValue is properly cloned</span>","        div<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> <span class=\"s\">\"&lt;textarea&gt;x&lt;/textarea&gt;\"</span><span class=\"k\">;</span>","        support<span class=\"k\">.</span>noCloneChecked <span class=\"k\">=</span> <span class=\"k\">!!</span>div<span class=\"k\">.</span>cloneNode<span class=\"k\">(</span> <span class=\"k\">true</span> <span class=\"k\">).</span>lastChild<span class=\"k\">.</span>defaultValue<span class=\"k\">;</span>","    <span class=\"k\">}</span> <span class=\"k\">)();</span>","    <span class=\"k\">var</span> documentElement <span class=\"k\">=</span> document<span class=\"k\">.</span>documentElement<span class=\"k\">;</span>","","","","    <span class=\"k\">var</span>","        rkeyEvent <span class=\"k\">=</span> <span class=\"s\">/^key/</span><span class=\"k\">,</span>","        rmouseEvent <span class=\"k\">=</span> <span class=\"s\">/^(?:mouse|pointer|contextmenu|drag|drop)|click/</span><span class=\"k\">,</span>","        rtypenamespace <span class=\"k\">=</span> <span class=\"s\">/^([^.]*)(?:\\.(.+)|)/</span><span class=\"k\">;</span>","","    <span class=\"k\">function</span> returnTrue<span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> returnFalse<span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","","<span class=\"c\">// Support: IE &lt;=9 only</span>","<span class=\"c\">// See #13393 for more info</span>","    <span class=\"k\">function</span> safeActiveElement<span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">try</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> document<span class=\"k\">.</span>activeElement<span class=\"k\">;</span>","        <span class=\"k\">}</span> <span class=\"k\">catch</span> <span class=\"k\">(</span> err <span class=\"k\">)</span> <span class=\"k\">{</span> <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> on<span class=\"k\">(</span> elem<span class=\"k\">,</span> types<span class=\"k\">,</span> selector<span class=\"k\">,</span> data<span class=\"k\">,</span> fn<span class=\"k\">,</span> one <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> origFn<span class=\"k\">,</span> type<span class=\"k\">;</span>","","        <span class=\"c\">// Types can be a map of types/handlers</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">typeof</span> types <span class=\"k\">===</span> <span class=\"s\">\"object\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"c\">// ( types-Object, selector, data )</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">typeof</span> selector <span class=\"k\">!==</span> <span class=\"s\">\"string\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                <span class=\"c\">// ( types-Object, data )</span>","                data <span class=\"k\">=</span> data <span class=\"k\">||</span> selector<span class=\"k\">;</span>","                selector <span class=\"k\">=</span> undefined<span class=\"k\">;</span>","            <span class=\"k\">}</span>","            <span class=\"k\">for</span> <span class=\"k\">(</span> type <span class=\"k\">in</span> types <span class=\"k\">)</span> <span class=\"k\">{</span>","                on<span class=\"k\">(</span> elem<span class=\"k\">,</span> type<span class=\"k\">,</span> selector<span class=\"k\">,</span> data<span class=\"k\">,</span> types<span class=\"k\">[</span> type <span class=\"k\">],</span> one <span class=\"k\">);</span>","            <span class=\"k\">}</span>","            <span class=\"k\">return</span> elem<span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span> data <span class=\"k\">==</span> <span class=\"k\">null</span> <span class=\"k\">&amp;&amp;</span> fn <span class=\"k\">==</span> <span class=\"k\">null</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"c\">// ( types, fn )</span>","            fn <span class=\"k\">=</span> selector<span class=\"k\">;</span>","            data <span class=\"k\">=</span> selector <span class=\"k\">=</span> undefined<span class=\"k\">;</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> fn <span class=\"k\">==</span> <span class=\"k\">null</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">typeof</span> selector <span class=\"k\">===</span> <span class=\"s\">\"string\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                <span class=\"c\">// ( types, selector, fn )</span>","                fn <span class=\"k\">=</span> data<span class=\"k\">;</span>","                data <span class=\"k\">=</span> undefined<span class=\"k\">;</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","","                <span class=\"c\">// ( types, data, fn )</span>","                fn <span class=\"k\">=</span> data<span class=\"k\">;</span>","                data <span class=\"k\">=</span> selector<span class=\"k\">;</span>","                selector <span class=\"k\">=</span> undefined<span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> fn <span class=\"k\">===</span> <span class=\"k\">false</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            fn <span class=\"k\">=</span> returnFalse<span class=\"k\">;</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>fn <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> elem<span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span> one <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            origFn <span class=\"k\">=</span> fn<span class=\"k\">;</span>","            fn <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> event <span class=\"k\">)</span> <span class=\"k\">{</span>","","                <span class=\"c\">// Can use an empty set, since event contains the info</span>","                jQuery<span class=\"k\">().</span>off<span class=\"k\">(</span> event <span class=\"k\">);</span>","                <span class=\"k\">return</span> origFn<span class=\"k\">.</span>apply<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> arguments <span class=\"k\">);</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","","            <span class=\"c\">// Use same guid so caller can remove using origFn</span>","            fn<span class=\"k\">.</span>guid <span class=\"k\">=</span> origFn<span class=\"k\">.</span>guid <span class=\"k\">||</span> <span class=\"k\">(</span> origFn<span class=\"k\">.</span>guid <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>guid<span class=\"k\">++</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> elem<span class=\"k\">.</span>each<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            jQuery<span class=\"k\">.</span>event<span class=\"k\">.</span>add<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> types<span class=\"k\">,</span> fn<span class=\"k\">,</span> data<span class=\"k\">,</span> selector <span class=\"k\">);</span>","        <span class=\"k\">}</span> <span class=\"k\">);</span>","    <span class=\"k\">}</span>","","    <span class=\"c\">/*</span>","<span class=\"c\"> * Helper functions for managing events -- not part of the public interface.</span>","<span class=\"c\"> * Props to Dean Edwards' addEvent library for many of the ideas.</span>","<span class=\"c\"> */</span>","    jQuery<span class=\"k\">.</span>event <span class=\"k\">=</span> <span class=\"k\">{</span>","","        global<span class=\"k\">:</span> <span class=\"k\">{}</span><span class=\"k\">,</span>","","        add<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> types<span class=\"k\">,</span> handler<span class=\"k\">,</span> data<span class=\"k\">,</span> selector <span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"k\">var</span> handleObjIn<span class=\"k\">,</span> eventHandle<span class=\"k\">,</span> tmp<span class=\"k\">,</span>","                events<span class=\"k\">,</span> t<span class=\"k\">,</span> handleObj<span class=\"k\">,</span>","                special<span class=\"k\">,</span> handlers<span class=\"k\">,</span> type<span class=\"k\">,</span> namespaces<span class=\"k\">,</span> origType<span class=\"k\">,</span>","                elemData <span class=\"k\">=</span> dataPriv<span class=\"k\">.</span>get<span class=\"k\">(</span> elem <span class=\"k\">);</span>","","            <span class=\"c\">// Don't attach events to noData or text/comment nodes (but allow plain objects)</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>elemData <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Caller can pass in an object of custom data in lieu of the handler</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> handler<span class=\"k\">.</span>handler <span class=\"k\">)</span> <span class=\"k\">{</span>","                handleObjIn <span class=\"k\">=</span> handler<span class=\"k\">;</span>","                handler <span class=\"k\">=</span> handleObjIn<span class=\"k\">.</span>handler<span class=\"k\">;</span>","                selector <span class=\"k\">=</span> handleObjIn<span class=\"k\">.</span>selector<span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Ensure that invalid selectors throw exceptions at attach time</span>","            <span class=\"c\">// Evaluate against documentElement in case elem is a non-element node (e.g., document)</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> selector <span class=\"k\">)</span> <span class=\"k\">{</span>","                jQuery<span class=\"k\">.</span>find<span class=\"k\">.</span>matchesSelector<span class=\"k\">(</span> documentElement<span class=\"k\">,</span> selector <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Make sure that the handler has a unique ID, used to find/remove it later</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>handler<span class=\"k\">.</span>guid <span class=\"k\">)</span> <span class=\"k\">{</span>","                handler<span class=\"k\">.</span>guid <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>guid<span class=\"k\">++;</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Init the element's event structure and main handler, if this is the first</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!(</span> events <span class=\"k\">=</span> elemData<span class=\"k\">.</span>events <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                events <span class=\"k\">=</span> elemData<span class=\"k\">.</span>events <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!(</span> eventHandle <span class=\"k\">=</span> elemData<span class=\"k\">.</span>handle <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                eventHandle <span class=\"k\">=</span> elemData<span class=\"k\">.</span>handle <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> e <span class=\"k\">)</span> <span class=\"k\">{</span>","","                    <span class=\"c\">// Discard the second event of a jQuery.event.trigger() and</span>","                    <span class=\"c\">// when an event is called after a page has unloaded</span>","                    <span class=\"k\">return</span> <span class=\"k\">typeof</span> jQuery <span class=\"k\">!==</span> <span class=\"s\">\"undefined\"</span> <span class=\"k\">&amp;&amp;</span> jQuery<span class=\"k\">.</span>event<span class=\"k\">.</span>triggered <span class=\"k\">!==</span> e<span class=\"k\">.</span>type <span class=\"k\">?</span>","                        jQuery<span class=\"k\">.</span>event<span class=\"k\">.</span>dispatch<span class=\"k\">.</span>apply<span class=\"k\">(</span> elem<span class=\"k\">,</span> arguments <span class=\"k\">)</span> <span class=\"k\">:</span> undefined<span class=\"k\">;</span>","                <span class=\"k\">}</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Handle multiple events separated by a space</span>","            types <span class=\"k\">=</span> <span class=\"k\">(</span> types <span class=\"k\">||</span> <span class=\"s\">\"\"</span> <span class=\"k\">).</span>match<span class=\"k\">(</span> rnothtmlwhite <span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"k\">[</span> <span class=\"s\">\"\"</span> <span class=\"k\">];</span>","            t <span class=\"k\">=</span> types<span class=\"k\">.</span>length<span class=\"k\">;</span>","            <span class=\"k\">while</span> <span class=\"k\">(</span> t<span class=\"k\">--</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                tmp <span class=\"k\">=</span> rtypenamespace<span class=\"k\">.</span>exec<span class=\"k\">(</span> types<span class=\"k\">[</span> t <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"k\">[];</span>","                type <span class=\"k\">=</span> origType <span class=\"k\">=</span> tmp<span class=\"k\">[</span> <span class=\"s\">1</span> <span class=\"k\">];</span>","                namespaces <span class=\"k\">=</span> <span class=\"k\">(</span> tmp<span class=\"k\">[</span> <span class=\"s\">2</span> <span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"s\">\"\"</span> <span class=\"k\">).</span>split<span class=\"k\">(</span> <span class=\"s\">\".\"</span> <span class=\"k\">).</span>sort<span class=\"k\">();</span>","","                <span class=\"c\">// There *must* be a type, no attaching namespace-only handlers</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>type <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">continue</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// If event changes its type, use the special event handlers for the changed type</span>","                special <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>event<span class=\"k\">.</span>special<span class=\"k\">[</span> type <span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","","                <span class=\"c\">// If selector defined, determine special event api type, otherwise given type</span>","                type <span class=\"k\">=</span> <span class=\"k\">(</span> selector <span class=\"k\">?</span> special<span class=\"k\">.</span>delegateType <span class=\"k\">:</span> special<span class=\"k\">.</span>bindType <span class=\"k\">)</span> <span class=\"k\">||</span> type<span class=\"k\">;</span>","","                <span class=\"c\">// Update special based on newly reset type</span>","                special <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>event<span class=\"k\">.</span>special<span class=\"k\">[</span> type <span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","","                <span class=\"c\">// handleObj is passed to all event handlers</span>","                handleObj <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>extend<span class=\"k\">(</span> <span class=\"k\">{</span>","                    type<span class=\"k\">:</span> type<span class=\"k\">,</span>","                    origType<span class=\"k\">:</span> origType<span class=\"k\">,</span>","                    data<span class=\"k\">:</span> data<span class=\"k\">,</span>","                    handler<span class=\"k\">:</span> handler<span class=\"k\">,</span>","                    guid<span class=\"k\">:</span> handler<span class=\"k\">.</span>guid<span class=\"k\">,</span>","                    selector<span class=\"k\">:</span> selector<span class=\"k\">,</span>","                    needsContext<span class=\"k\">:</span> selector <span class=\"k\">&amp;&amp;</span> jQuery<span class=\"k\">.</span>expr<span class=\"k\">.</span>match<span class=\"k\">.</span>needsContext<span class=\"k\">.</span>test<span class=\"k\">(</span> selector <span class=\"k\">),</span>","                    namespace<span class=\"k\">:</span> namespaces<span class=\"k\">.</span>join<span class=\"k\">(</span> <span class=\"s\">\".\"</span> <span class=\"k\">)</span>","                <span class=\"k\">}</span><span class=\"k\">,</span> handleObjIn <span class=\"k\">);</span>","","                <span class=\"c\">// Init the event handler queue if we're the first</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!(</span> handlers <span class=\"k\">=</span> events<span class=\"k\">[</span> type <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    handlers <span class=\"k\">=</span> events<span class=\"k\">[</span> type <span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">[];</span>","                    handlers<span class=\"k\">.</span>delegateCount <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","","                    <span class=\"c\">// Only use addEventListener if the special events handler returns false</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>special<span class=\"k\">.</span>setup <span class=\"k\">||</span>","                        special<span class=\"k\">.</span>setup<span class=\"k\">.</span>call<span class=\"k\">(</span> elem<span class=\"k\">,</span> data<span class=\"k\">,</span> namespaces<span class=\"k\">,</span> eventHandle <span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"k\">false</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                        <span class=\"k\">if</span> <span class=\"k\">(</span> elem<span class=\"k\">.</span>addEventListener <span class=\"k\">)</span> <span class=\"k\">{</span>","                            elem<span class=\"k\">.</span>addEventListener<span class=\"k\">(</span> type<span class=\"k\">,</span> eventHandle <span class=\"k\">);</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span> special<span class=\"k\">.</span>add <span class=\"k\">)</span> <span class=\"k\">{</span>","                    special<span class=\"k\">.</span>add<span class=\"k\">.</span>call<span class=\"k\">(</span> elem<span class=\"k\">,</span> handleObj <span class=\"k\">);</span>","","                    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>handleObj<span class=\"k\">.</span>handler<span class=\"k\">.</span>guid <span class=\"k\">)</span> <span class=\"k\">{</span>","                        handleObj<span class=\"k\">.</span>handler<span class=\"k\">.</span>guid <span class=\"k\">=</span> handler<span class=\"k\">.</span>guid<span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// Add to the element's handler list, delegates in front</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> selector <span class=\"k\">)</span> <span class=\"k\">{</span>","                    handlers<span class=\"k\">.</span>splice<span class=\"k\">(</span> handlers<span class=\"k\">.</span>delegateCount<span class=\"k\">++,</span> <span class=\"s\">0</span><span class=\"k\">,</span> handleObj <span class=\"k\">);</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    handlers<span class=\"k\">.</span>push<span class=\"k\">(</span> handleObj <span class=\"k\">);</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// Keep track of which events have ever been used, for event optimization</span>","                jQuery<span class=\"k\">.</span>event<span class=\"k\">.</span>global<span class=\"k\">[</span> type <span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        <span class=\"c\">// Detach an event or set of events from an element</span>","        remove<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> types<span class=\"k\">,</span> handler<span class=\"k\">,</span> selector<span class=\"k\">,</span> mappedTypes <span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"k\">var</span> j<span class=\"k\">,</span> origCount<span class=\"k\">,</span> tmp<span class=\"k\">,</span>","                events<span class=\"k\">,</span> t<span class=\"k\">,</span> handleObj<span class=\"k\">,</span>","                special<span class=\"k\">,</span> handlers<span class=\"k\">,</span> type<span class=\"k\">,</span> namespaces<span class=\"k\">,</span> origType<span class=\"k\">,</span>","                elemData <span class=\"k\">=</span> dataPriv<span class=\"k\">.</span>hasData<span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> dataPriv<span class=\"k\">.</span>get<span class=\"k\">(</span> elem <span class=\"k\">);</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>elemData <span class=\"k\">||</span> <span class=\"k\">!(</span> events <span class=\"k\">=</span> elemData<span class=\"k\">.</span>events <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Once for each type.namespace in types; type may be omitted</span>","            types <span class=\"k\">=</span> <span class=\"k\">(</span> types <span class=\"k\">||</span> <span class=\"s\">\"\"</span> <span class=\"k\">).</span>match<span class=\"k\">(</span> rnothtmlwhite <span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"k\">[</span> <span class=\"s\">\"\"</span> <span class=\"k\">];</span>","            t <span class=\"k\">=</span> types<span class=\"k\">.</span>length<span class=\"k\">;</span>","            <span class=\"k\">while</span> <span class=\"k\">(</span> t<span class=\"k\">--</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                tmp <span class=\"k\">=</span> rtypenamespace<span class=\"k\">.</span>exec<span class=\"k\">(</span> types<span class=\"k\">[</span> t <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"k\">[];</span>","                type <span class=\"k\">=</span> origType <span class=\"k\">=</span> tmp<span class=\"k\">[</span> <span class=\"s\">1</span> <span class=\"k\">];</span>","                namespaces <span class=\"k\">=</span> <span class=\"k\">(</span> tmp<span class=\"k\">[</span> <span class=\"s\">2</span> <span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"s\">\"\"</span> <span class=\"k\">).</span>split<span class=\"k\">(</span> <span class=\"s\">\".\"</span> <span class=\"k\">).</span>sort<span class=\"k\">();</span>","","                <span class=\"c\">// Unbind all events (on this namespace, if provided) for the element</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>type <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">for</span> <span class=\"k\">(</span> type <span class=\"k\">in</span> events <span class=\"k\">)</span> <span class=\"k\">{</span>","                        jQuery<span class=\"k\">.</span>event<span class=\"k\">.</span>remove<span class=\"k\">(</span> elem<span class=\"k\">,</span> type <span class=\"k\">+</span> types<span class=\"k\">[</span> t <span class=\"k\">],</span> handler<span class=\"k\">,</span> selector<span class=\"k\">,</span> <span class=\"k\">true</span> <span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                    <span class=\"k\">continue</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","","                special <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>event<span class=\"k\">.</span>special<span class=\"k\">[</span> type <span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","                type <span class=\"k\">=</span> <span class=\"k\">(</span> selector <span class=\"k\">?</span> special<span class=\"k\">.</span>delegateType <span class=\"k\">:</span> special<span class=\"k\">.</span>bindType <span class=\"k\">)</span> <span class=\"k\">||</span> type<span class=\"k\">;</span>","                handlers <span class=\"k\">=</span> events<span class=\"k\">[</span> type <span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"k\">[];</span>","                tmp <span class=\"k\">=</span> tmp<span class=\"k\">[</span> <span class=\"s\">2</span> <span class=\"k\">]</span> <span class=\"k\">&amp;&amp;</span>","                    <span class=\"k\">new</span> RegExp<span class=\"k\">(</span> <span class=\"s\">\"(^|</span><span class=\"t\">\\\\</span><span class=\"s\">.)\"</span> <span class=\"k\">+</span> namespaces<span class=\"k\">.</span>join<span class=\"k\">(</span> <span class=\"s\">\"</span><span class=\"t\">\\\\</span><span class=\"s\">.(?:.*</span><span class=\"t\">\\\\</span><span class=\"s\">.|)\"</span> <span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">\"(</span><span class=\"t\">\\\\</span><span class=\"s\">.|$)\"</span> <span class=\"k\">);</span>","","                <span class=\"c\">// Remove matching events</span>","                origCount <span class=\"k\">=</span> j <span class=\"k\">=</span> handlers<span class=\"k\">.</span>length<span class=\"k\">;</span>","                <span class=\"k\">while</span> <span class=\"k\">(</span> j<span class=\"k\">--</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    handleObj <span class=\"k\">=</span> handlers<span class=\"k\">[</span> j <span class=\"k\">];</span>","","                    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">(</span> mappedTypes <span class=\"k\">||</span> origType <span class=\"k\">===</span> handleObj<span class=\"k\">.</span>origType <span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span>","                        <span class=\"k\">(</span> <span class=\"k\">!</span>handler <span class=\"k\">||</span> handler<span class=\"k\">.</span>guid <span class=\"k\">===</span> handleObj<span class=\"k\">.</span>guid <span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span>","                        <span class=\"k\">(</span> <span class=\"k\">!</span>tmp <span class=\"k\">||</span> tmp<span class=\"k\">.</span>test<span class=\"k\">(</span> handleObj<span class=\"k\">.</span>namespace <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span>","                        <span class=\"k\">(</span> <span class=\"k\">!</span>selector <span class=\"k\">||</span> selector <span class=\"k\">===</span> handleObj<span class=\"k\">.</span>selector <span class=\"k\">||</span>","                            selector <span class=\"k\">===</span> <span class=\"s\">\"**\"</span> <span class=\"k\">&amp;&amp;</span> handleObj<span class=\"k\">.</span>selector <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        handlers<span class=\"k\">.</span>splice<span class=\"k\">(</span> j<span class=\"k\">,</span> <span class=\"s\">1</span> <span class=\"k\">);</span>","","                        <span class=\"k\">if</span> <span class=\"k\">(</span> handleObj<span class=\"k\">.</span>selector <span class=\"k\">)</span> <span class=\"k\">{</span>","                            handlers<span class=\"k\">.</span>delegateCount<span class=\"k\">--;</span>","                        <span class=\"k\">}</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> special<span class=\"k\">.</span>remove <span class=\"k\">)</span> <span class=\"k\">{</span>","                            special<span class=\"k\">.</span>remove<span class=\"k\">.</span>call<span class=\"k\">(</span> elem<span class=\"k\">,</span> handleObj <span class=\"k\">);</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// Remove generic event handler if we removed something and no more handlers exist</span>","                <span class=\"c\">// (avoids potential for endless recursion during removal of special event handlers)</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> origCount <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>handlers<span class=\"k\">.</span>length <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>special<span class=\"k\">.</span>teardown <span class=\"k\">||</span>","                        special<span class=\"k\">.</span>teardown<span class=\"k\">.</span>call<span class=\"k\">(</span> elem<span class=\"k\">,</span> namespaces<span class=\"k\">,</span> elemData<span class=\"k\">.</span>handle <span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"k\">false</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                        jQuery<span class=\"k\">.</span>removeEvent<span class=\"k\">(</span> elem<span class=\"k\">,</span> type<span class=\"k\">,</span> elemData<span class=\"k\">.</span>handle <span class=\"k\">);</span>","                    <span class=\"k\">}</span>","","                    <span class=\"k\">delete</span> events<span class=\"k\">[</span> type <span class=\"k\">];</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Remove data and the expando if it's no longer used</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> jQuery<span class=\"k\">.</span>isEmptyObject<span class=\"k\">(</span> events <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                dataPriv<span class=\"k\">.</span>remove<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"s\">\"handle events\"</span> <span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        dispatch<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> nativeEvent <span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"c\">// Make a writable jQuery.Event from the native event object</span>","            <span class=\"k\">var</span> event <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>event<span class=\"k\">.</span>fix<span class=\"k\">(</span> nativeEvent <span class=\"k\">);</span>","","            <span class=\"k\">var</span> i<span class=\"k\">,</span> j<span class=\"k\">,</span> ret<span class=\"k\">,</span> matched<span class=\"k\">,</span> handleObj<span class=\"k\">,</span> handlerQueue<span class=\"k\">,</span>","                args <span class=\"k\">=</span> <span class=\"k\">new</span> Array<span class=\"k\">(</span> arguments<span class=\"k\">.</span>length <span class=\"k\">),</span>","                handlers <span class=\"k\">=</span> <span class=\"k\">(</span> dataPriv<span class=\"k\">.</span>get<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"s\">\"events\"</span> <span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"k\">{}</span> <span class=\"k\">)[</span> event<span class=\"k\">.</span>type <span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"k\">[],</span>","                special <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>event<span class=\"k\">.</span>special<span class=\"k\">[</span> event<span class=\"k\">.</span>type <span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","","            <span class=\"c\">// Use the fix-ed jQuery.Event rather than the (read-only) native event</span>","            args<span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">]</span> <span class=\"k\">=</span> event<span class=\"k\">;</span>","","            <span class=\"k\">for</span> <span class=\"k\">(</span> i <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> arguments<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                args<span class=\"k\">[</span> i <span class=\"k\">]</span> <span class=\"k\">=</span> arguments<span class=\"k\">[</span> i <span class=\"k\">];</span>","            <span class=\"k\">}</span>","","            event<span class=\"k\">.</span>delegateTarget <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">;</span>","","            <span class=\"c\">// Call the preDispatch hook for the mapped type, and let it bail if desired</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> special<span class=\"k\">.</span>preDispatch <span class=\"k\">&amp;&amp;</span> special<span class=\"k\">.</span>preDispatch<span class=\"k\">.</span>call<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> event <span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"k\">false</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Determine handlers</span>","            handlerQueue <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>event<span class=\"k\">.</span>handlers<span class=\"k\">.</span>call<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> event<span class=\"k\">,</span> handlers <span class=\"k\">);</span>","","            <span class=\"c\">// Run delegates first; they may want to stop propagation beneath us</span>","            i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","            <span class=\"k\">while</span> <span class=\"k\">(</span> <span class=\"k\">(</span> matched <span class=\"k\">=</span> handlerQueue<span class=\"k\">[</span> i<span class=\"k\">++</span> <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>event<span class=\"k\">.</span>isPropagationStopped<span class=\"k\">()</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                event<span class=\"k\">.</span>currentTarget <span class=\"k\">=</span> matched<span class=\"k\">.</span>elem<span class=\"k\">;</span>","","                j <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","                <span class=\"k\">while</span> <span class=\"k\">(</span> <span class=\"k\">(</span> handleObj <span class=\"k\">=</span> matched<span class=\"k\">.</span>handlers<span class=\"k\">[</span> j<span class=\"k\">++</span> <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span>","                <span class=\"k\">!</span>event<span class=\"k\">.</span>isImmediatePropagationStopped<span class=\"k\">()</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                    <span class=\"c\">// Triggered event must either 1) have no namespace, or 2) have namespace(s)</span>","                    <span class=\"c\">// a subset or equal to those in the bound event (both can have no namespace).</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>event<span class=\"k\">.</span>rnamespace <span class=\"k\">||</span> event<span class=\"k\">.</span>rnamespace<span class=\"k\">.</span>test<span class=\"k\">(</span> handleObj<span class=\"k\">.</span>namespace <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                        event<span class=\"k\">.</span>handleObj <span class=\"k\">=</span> handleObj<span class=\"k\">;</span>","                        event<span class=\"k\">.</span>data <span class=\"k\">=</span> handleObj<span class=\"k\">.</span>data<span class=\"k\">;</span>","","                        ret <span class=\"k\">=</span> <span class=\"k\">(</span> <span class=\"k\">(</span> jQuery<span class=\"k\">.</span>event<span class=\"k\">.</span>special<span class=\"k\">[</span> handleObj<span class=\"k\">.</span>origType <span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"k\">{}</span> <span class=\"k\">).</span>handle <span class=\"k\">||</span>","                            handleObj<span class=\"k\">.</span>handler <span class=\"k\">).</span>apply<span class=\"k\">(</span> matched<span class=\"k\">.</span>elem<span class=\"k\">,</span> args <span class=\"k\">);</span>","","                        <span class=\"k\">if</span> <span class=\"k\">(</span> ret <span class=\"k\">!==</span> undefined <span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">(</span> event<span class=\"k\">.</span>result <span class=\"k\">=</span> ret <span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"k\">false</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                event<span class=\"k\">.</span>preventDefault<span class=\"k\">();</span>","                                event<span class=\"k\">.</span>stopPropagation<span class=\"k\">();</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Call the postDispatch hook for the mapped type</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> special<span class=\"k\">.</span>postDispatch <span class=\"k\">)</span> <span class=\"k\">{</span>","                special<span class=\"k\">.</span>postDispatch<span class=\"k\">.</span>call<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> event <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">return</span> event<span class=\"k\">.</span>result<span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        handlers<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> event<span class=\"k\">,</span> handlers <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> i<span class=\"k\">,</span> handleObj<span class=\"k\">,</span> sel<span class=\"k\">,</span> matchedHandlers<span class=\"k\">,</span> matchedSelectors<span class=\"k\">,</span>","                handlerQueue <span class=\"k\">=</span> <span class=\"k\">[],</span>","                delegateCount <span class=\"k\">=</span> handlers<span class=\"k\">.</span>delegateCount<span class=\"k\">,</span>","                cur <span class=\"k\">=</span> event<span class=\"k\">.</span>target<span class=\"k\">;</span>","","            <span class=\"c\">// Find delegate handlers</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> delegateCount <span class=\"k\">&amp;&amp;</span>","","                <span class=\"c\">// Support: IE &lt;=9</span>","                <span class=\"c\">// Black-hole SVG &lt;use&gt; instance trees (trac-13180)</span>","                cur<span class=\"k\">.</span>nodeType <span class=\"k\">&amp;&amp;</span>","","                <span class=\"c\">// Support: Firefox &lt;=42</span>","                <span class=\"c\">// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)</span>","                <span class=\"c\">// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click</span>","                <span class=\"c\">// Support: IE 11 only</span>","                <span class=\"c\">// ...but not arrow key \"clicks\" of radio inputs, which can have `button` -1 (gh-2343)</span>","                <span class=\"k\">!(</span> event<span class=\"k\">.</span>type <span class=\"k\">===</span> <span class=\"s\">\"click\"</span> <span class=\"k\">&amp;&amp;</span> event<span class=\"k\">.</span>button <span class=\"k\">&gt;=</span> <span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                <span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">;</span> cur <span class=\"k\">!==</span> <span class=\"k\">this</span><span class=\"k\">;</span> cur <span class=\"k\">=</span> cur<span class=\"k\">.</span>parentNode <span class=\"k\">||</span> <span class=\"k\">this</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                    <span class=\"c\">// Don't check non-elements (#13208)</span>","                    <span class=\"c\">// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> cur<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!(</span> event<span class=\"k\">.</span>type <span class=\"k\">===</span> <span class=\"s\">\"click\"</span> <span class=\"k\">&amp;&amp;</span> cur<span class=\"k\">.</span>disabled <span class=\"k\">===</span> <span class=\"k\">true</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        matchedHandlers <span class=\"k\">=</span> <span class=\"k\">[];</span>","                        matchedSelectors <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","                        <span class=\"k\">for</span> <span class=\"k\">(</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> delegateCount<span class=\"k\">;</span> i<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                            handleObj <span class=\"k\">=</span> handlers<span class=\"k\">[</span> i <span class=\"k\">];</span>","","                            <span class=\"c\">// Don't conflict with Object.prototype properties (#13203)</span>","                            sel <span class=\"k\">=</span> handleObj<span class=\"k\">.</span>selector <span class=\"k\">+</span> <span class=\"s\">\" \"</span><span class=\"k\">;</span>","","                            <span class=\"k\">if</span> <span class=\"k\">(</span> matchedSelectors<span class=\"k\">[</span> sel <span class=\"k\">]</span> <span class=\"k\">===</span> undefined <span class=\"k\">)</span> <span class=\"k\">{</span>","                                matchedSelectors<span class=\"k\">[</span> sel <span class=\"k\">]</span> <span class=\"k\">=</span> handleObj<span class=\"k\">.</span>needsContext <span class=\"k\">?</span>","                                    jQuery<span class=\"k\">(</span> sel<span class=\"k\">,</span> <span class=\"k\">this</span> <span class=\"k\">).</span>index<span class=\"k\">(</span> cur <span class=\"k\">)</span> <span class=\"k\">&gt;</span> <span class=\"k\">-</span><span class=\"s\">1</span> <span class=\"k\">:</span>","                                    jQuery<span class=\"k\">.</span>find<span class=\"k\">(</span> sel<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"k\">null</span><span class=\"k\">,</span> <span class=\"k\">[</span> cur <span class=\"k\">]</span> <span class=\"k\">).</span>length<span class=\"k\">;</span>","                            <span class=\"k\">}</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span> matchedSelectors<span class=\"k\">[</span> sel <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                matchedHandlers<span class=\"k\">.</span>push<span class=\"k\">(</span> handleObj <span class=\"k\">);</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> matchedHandlers<span class=\"k\">.</span>length <span class=\"k\">)</span> <span class=\"k\">{</span>","                            handlerQueue<span class=\"k\">.</span>push<span class=\"k\">(</span> <span class=\"k\">{</span> elem<span class=\"k\">:</span> cur<span class=\"k\">,</span> handlers<span class=\"k\">:</span> matchedHandlers <span class=\"k\">}</span> <span class=\"k\">);</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Add the remaining (directly-bound) handlers</span>","            cur <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">;</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> delegateCount <span class=\"k\">&lt;</span> handlers<span class=\"k\">.</span>length <span class=\"k\">)</span> <span class=\"k\">{</span>","                handlerQueue<span class=\"k\">.</span>push<span class=\"k\">(</span> <span class=\"k\">{</span> elem<span class=\"k\">:</span> cur<span class=\"k\">,</span> handlers<span class=\"k\">:</span> handlers<span class=\"k\">.</span>slice<span class=\"k\">(</span> delegateCount <span class=\"k\">)</span> <span class=\"k\">}</span> <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">return</span> handlerQueue<span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        addProp<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> name<span class=\"k\">,</span> hook <span class=\"k\">)</span> <span class=\"k\">{</span>","            Object<span class=\"k\">.</span>defineProperty<span class=\"k\">(</span> jQuery<span class=\"k\">.</span>Event<span class=\"k\">.</span>prototype<span class=\"k\">,</span> name<span class=\"k\">,</span> <span class=\"k\">{</span>","                enumerable<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","                configurable<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","","                get<span class=\"k\">:</span> isFunction<span class=\"k\">(</span> hook <span class=\"k\">)</span> <span class=\"k\">?</span>","                    <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">.</span>originalEvent <span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">return</span> hook<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">.</span>originalEvent <span class=\"k\">);</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span> <span class=\"k\">:</span>","                    <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">.</span>originalEvent <span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>originalEvent<span class=\"k\">[</span> name <span class=\"k\">];</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span><span class=\"k\">,</span>","","                set<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> value <span class=\"k\">)</span> <span class=\"k\">{</span>","                    Object<span class=\"k\">.</span>defineProperty<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> name<span class=\"k\">,</span> <span class=\"k\">{</span>","                        enumerable<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","                        configurable<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","                        writable<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","                        value<span class=\"k\">:</span> value","                    <span class=\"k\">}</span> <span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        fix<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> originalEvent <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> originalEvent<span class=\"k\">[</span> jQuery<span class=\"k\">.</span>expando <span class=\"k\">]</span> <span class=\"k\">?</span>","                originalEvent <span class=\"k\">:</span>","                <span class=\"k\">new</span> jQuery<span class=\"k\">.</span>Event<span class=\"k\">(</span> originalEvent <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        special<span class=\"k\">:</span> <span class=\"k\">{</span>","            load<span class=\"k\">:</span> <span class=\"k\">{</span>","","                <span class=\"c\">// Prevent triggered image.load events from bubbling to window.load</span>","                noBubble<span class=\"k\">:</span> <span class=\"k\">true</span>","            <span class=\"k\">}</span><span class=\"k\">,</span>","            focus<span class=\"k\">:</span> <span class=\"k\">{</span>","","                <span class=\"c\">// Fire native event if possible so blur/focus sequence is correct</span>","                trigger<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">this</span> <span class=\"k\">!==</span> safeActiveElement<span class=\"k\">()</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">this</span><span class=\"k\">.</span>focus <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">this</span><span class=\"k\">.</span>focus<span class=\"k\">();</span>","                        <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span><span class=\"k\">,</span>","                delegateType<span class=\"k\">:</span> <span class=\"s\">\"focusin\"</span>","            <span class=\"k\">}</span><span class=\"k\">,</span>","            blur<span class=\"k\">:</span> <span class=\"k\">{</span>","                trigger<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">this</span> <span class=\"k\">===</span> safeActiveElement<span class=\"k\">()</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">this</span><span class=\"k\">.</span>blur <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">this</span><span class=\"k\">.</span>blur<span class=\"k\">();</span>","                        <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span><span class=\"k\">,</span>","                delegateType<span class=\"k\">:</span> <span class=\"s\">\"focusout\"</span>","            <span class=\"k\">}</span><span class=\"k\">,</span>","            click<span class=\"k\">:</span> <span class=\"k\">{</span>","","                <span class=\"c\">// For checkbox, fire native event so checked state will be right</span>","                trigger<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">.</span>type <span class=\"k\">===</span> <span class=\"s\">\"checkbox\"</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">this</span><span class=\"k\">.</span>click <span class=\"k\">&amp;&amp;</span> nodeName<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"s\">\"input\"</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">this</span><span class=\"k\">.</span>click<span class=\"k\">();</span>","                        <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span><span class=\"k\">,</span>","","                <span class=\"c\">// For cross-browser consistency, don't fire native .click() on links</span>","                _default<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> event <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">return</span> nodeName<span class=\"k\">(</span> event<span class=\"k\">.</span>target<span class=\"k\">,</span> <span class=\"s\">\"a\"</span> <span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span><span class=\"k\">,</span>","","            beforeunload<span class=\"k\">:</span> <span class=\"k\">{</span>","                postDispatch<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> event <span class=\"k\">)</span> <span class=\"k\">{</span>","","                    <span class=\"c\">// Support: Firefox 20+</span>","                    <span class=\"c\">// Firefox doesn't alert if the returnValue field is not set.</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> event<span class=\"k\">.</span>result <span class=\"k\">!==</span> undefined <span class=\"k\">&amp;&amp;</span> event<span class=\"k\">.</span>originalEvent <span class=\"k\">)</span> <span class=\"k\">{</span>","                        event<span class=\"k\">.</span>originalEvent<span class=\"k\">.</span>returnValue <span class=\"k\">=</span> event<span class=\"k\">.</span>result<span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    jQuery<span class=\"k\">.</span>removeEvent <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> type<span class=\"k\">,</span> handle <span class=\"k\">)</span> <span class=\"k\">{</span>","","        <span class=\"c\">// This \"if\" is needed for plain objects</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> elem<span class=\"k\">.</span>removeEventListener <span class=\"k\">)</span> <span class=\"k\">{</span>","            elem<span class=\"k\">.</span>removeEventListener<span class=\"k\">(</span> type<span class=\"k\">,</span> handle <span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    jQuery<span class=\"k\">.</span>Event <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> src<span class=\"k\">,</span> props <span class=\"k\">)</span> <span class=\"k\">{</span>","","        <span class=\"c\">// Allow instantiation without the 'new' keyword</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!(</span> <span class=\"k\">this</span> <span class=\"k\">instanceof</span> jQuery<span class=\"k\">.</span>Event <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">new</span> jQuery<span class=\"k\">.</span>Event<span class=\"k\">(</span> src<span class=\"k\">,</span> props <span class=\"k\">);</span>","        <span class=\"k\">}</span>","","        <span class=\"c\">// Event object</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> src <span class=\"k\">&amp;&amp;</span> src<span class=\"k\">.</span>type <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>originalEvent <span class=\"k\">=</span> src<span class=\"k\">;</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>type <span class=\"k\">=</span> src<span class=\"k\">.</span>type<span class=\"k\">;</span>","","            <span class=\"c\">// Events bubbling up the document may have been marked as prevented</span>","            <span class=\"c\">// by a handler lower down the tree; reflect the correct value.</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>isDefaultPrevented <span class=\"k\">=</span> src<span class=\"k\">.</span>defaultPrevented <span class=\"k\">||</span>","            src<span class=\"k\">.</span>defaultPrevented <span class=\"k\">===</span> undefined <span class=\"k\">&amp;&amp;</span>","","            <span class=\"c\">// Support: Android &lt;=2.3 only</span>","            src<span class=\"k\">.</span>returnValue <span class=\"k\">===</span> <span class=\"k\">false</span> <span class=\"k\">?</span>","                returnTrue <span class=\"k\">:</span>","                returnFalse<span class=\"k\">;</span>","","            <span class=\"c\">// Create target properties</span>","            <span class=\"c\">// Support: Safari &lt;=6 - 7 only</span>","            <span class=\"c\">// Target should not be a text node (#504, #13143)</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>target <span class=\"k\">=</span> <span class=\"k\">(</span> src<span class=\"k\">.</span>target <span class=\"k\">&amp;&amp;</span> src<span class=\"k\">.</span>target<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">3</span> <span class=\"k\">)</span> <span class=\"k\">?</span>","                src<span class=\"k\">.</span>target<span class=\"k\">.</span>parentNode <span class=\"k\">:</span>","                src<span class=\"k\">.</span>target<span class=\"k\">;</span>","","            <span class=\"k\">this</span><span class=\"k\">.</span>currentTarget <span class=\"k\">=</span> src<span class=\"k\">.</span>currentTarget<span class=\"k\">;</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>relatedTarget <span class=\"k\">=</span> src<span class=\"k\">.</span>relatedTarget<span class=\"k\">;</span>","","            <span class=\"c\">// Event type</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>type <span class=\"k\">=</span> src<span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"c\">// Put explicitly provided properties onto the event object</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> props <span class=\"k\">)</span> <span class=\"k\">{</span>","            jQuery<span class=\"k\">.</span>extend<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> props <span class=\"k\">);</span>","        <span class=\"k\">}</span>","","        <span class=\"c\">// Create a timestamp if incoming event doesn't have one</span>","        <span class=\"k\">this</span><span class=\"k\">.</span>timeStamp <span class=\"k\">=</span> src <span class=\"k\">&amp;&amp;</span> src<span class=\"k\">.</span>timeStamp <span class=\"k\">||</span> Date<span class=\"k\">.</span>now<span class=\"k\">();</span>","","        <span class=\"c\">// Mark it as fixed</span>","        <span class=\"k\">this</span><span class=\"k\">[</span> jQuery<span class=\"k\">.</span>expando <span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding</span>","<span class=\"c\">// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html</span>","    jQuery<span class=\"k\">.</span>Event<span class=\"k\">.</span>prototype <span class=\"k\">=</span> <span class=\"k\">{</span>","        constructor<span class=\"k\">:</span> jQuery<span class=\"k\">.</span>Event<span class=\"k\">,</span>","        isDefaultPrevented<span class=\"k\">:</span> returnFalse<span class=\"k\">,</span>","        isPropagationStopped<span class=\"k\">:</span> returnFalse<span class=\"k\">,</span>","        isImmediatePropagationStopped<span class=\"k\">:</span> returnFalse<span class=\"k\">,</span>","        isSimulated<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","","        preventDefault<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> e <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>originalEvent<span class=\"k\">;</span>","","            <span class=\"k\">this</span><span class=\"k\">.</span>isDefaultPrevented <span class=\"k\">=</span> returnTrue<span class=\"k\">;</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> e <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span><span class=\"k\">this</span><span class=\"k\">.</span>isSimulated <span class=\"k\">)</span> <span class=\"k\">{</span>","                e<span class=\"k\">.</span>preventDefault<span class=\"k\">();</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        stopPropagation<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> e <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>originalEvent<span class=\"k\">;</span>","","            <span class=\"k\">this</span><span class=\"k\">.</span>isPropagationStopped <span class=\"k\">=</span> returnTrue<span class=\"k\">;</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> e <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span><span class=\"k\">this</span><span class=\"k\">.</span>isSimulated <span class=\"k\">)</span> <span class=\"k\">{</span>","                e<span class=\"k\">.</span>stopPropagation<span class=\"k\">();</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        stopImmediatePropagation<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> e <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>originalEvent<span class=\"k\">;</span>","","            <span class=\"k\">this</span><span class=\"k\">.</span>isImmediatePropagationStopped <span class=\"k\">=</span> returnTrue<span class=\"k\">;</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> e <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span><span class=\"k\">this</span><span class=\"k\">.</span>isSimulated <span class=\"k\">)</span> <span class=\"k\">{</span>","                e<span class=\"k\">.</span>stopImmediatePropagation<span class=\"k\">();</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">this</span><span class=\"k\">.</span>stopPropagation<span class=\"k\">();</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">// Includes all common event props including KeyEvent and MouseEvent specific props</span>","    jQuery<span class=\"k\">.</span>each<span class=\"k\">(</span> <span class=\"k\">{</span>","        altKey<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","        bubbles<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","        cancelable<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","        changedTouches<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","        ctrlKey<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","        detail<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","        eventPhase<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","        metaKey<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","        pageX<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","        pageY<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","        shiftKey<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","        view<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","        <span class=\"s\">\"char\"</span><span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","        charCode<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","        key<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","        keyCode<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","        button<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","        buttons<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","        clientX<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","        clientY<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","        offsetX<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","        offsetY<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","        pointerId<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","        pointerType<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","        screenX<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","        screenY<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","        targetTouches<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","        toElement<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","        touches<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","","        which<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> event <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> button <span class=\"k\">=</span> event<span class=\"k\">.</span>button<span class=\"k\">;</span>","","            <span class=\"c\">// Add which for key events</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> event<span class=\"k\">.</span>which <span class=\"k\">==</span> <span class=\"k\">null</span> <span class=\"k\">&amp;&amp;</span> rkeyEvent<span class=\"k\">.</span>test<span class=\"k\">(</span> event<span class=\"k\">.</span>type <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> event<span class=\"k\">.</span>charCode <span class=\"k\">!=</span> <span class=\"k\">null</span> <span class=\"k\">?</span> event<span class=\"k\">.</span>charCode <span class=\"k\">:</span> event<span class=\"k\">.</span>keyCode<span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Add which for click: 1 === left; 2 === middle; 3 === right</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>event<span class=\"k\">.</span>which <span class=\"k\">&amp;&amp;</span> button <span class=\"k\">!==</span> undefined <span class=\"k\">&amp;&amp;</span> rmouseEvent<span class=\"k\">.</span>test<span class=\"k\">(</span> event<span class=\"k\">.</span>type <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> button <span class=\"k\">&amp;</span> <span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">return</span> <span class=\"s\">1</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span> button <span class=\"k\">&amp;</span> <span class=\"s\">2</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">return</span> <span class=\"s\">3</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span> button <span class=\"k\">&amp;</span> <span class=\"s\">4</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">return</span> <span class=\"s\">2</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","","                <span class=\"k\">return</span> <span class=\"s\">0</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">return</span> event<span class=\"k\">.</span>which<span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">,</span> jQuery<span class=\"k\">.</span>event<span class=\"k\">.</span>addProp <span class=\"k\">);</span>","","<span class=\"c\">// Create mouseenter/leave events using mouseover/out and event-time checks</span>","<span class=\"c\">// so that event delegation works in jQuery.</span>","<span class=\"c\">// Do the same for pointerenter/pointerleave and pointerover/pointerout</span>","<span class=\"c\">//</span>","<span class=\"c\">// Support: Safari 7 only</span>","<span class=\"c\">// Safari sends mouseenter too often; see:</span>","<span class=\"c\">// https://bugs.chromium.org/p/chromium/issues/detail?id=470258</span>","<span class=\"c\">// for the description of the bug (it existed in older Chrome versions as well).</span>","    jQuery<span class=\"k\">.</span>each<span class=\"k\">(</span> <span class=\"k\">{</span>","        mouseenter<span class=\"k\">:</span> <span class=\"s\">\"mouseover\"</span><span class=\"k\">,</span>","        mouseleave<span class=\"k\">:</span> <span class=\"s\">\"mouseout\"</span><span class=\"k\">,</span>","        pointerenter<span class=\"k\">:</span> <span class=\"s\">\"pointerover\"</span><span class=\"k\">,</span>","        pointerleave<span class=\"k\">:</span> <span class=\"s\">\"pointerout\"</span>","    <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span> orig<span class=\"k\">,</span> fix <span class=\"k\">)</span> <span class=\"k\">{</span>","        jQuery<span class=\"k\">.</span>event<span class=\"k\">.</span>special<span class=\"k\">[</span> orig <span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","            delegateType<span class=\"k\">:</span> fix<span class=\"k\">,</span>","            bindType<span class=\"k\">:</span> fix<span class=\"k\">,</span>","","            handle<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> event <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> ret<span class=\"k\">,</span>","                    target <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">,</span>","                    related <span class=\"k\">=</span> event<span class=\"k\">.</span>relatedTarget<span class=\"k\">,</span>","                    handleObj <span class=\"k\">=</span> event<span class=\"k\">.</span>handleObj<span class=\"k\">;</span>","","                <span class=\"c\">// For mouseenter/leave call the handler if related is outside the target.</span>","                <span class=\"c\">// NB: No relatedTarget if the mouse left/entered the browser window</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>related <span class=\"k\">||</span> <span class=\"k\">(</span> related <span class=\"k\">!==</span> target <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>jQuery<span class=\"k\">.</span>contains<span class=\"k\">(</span> target<span class=\"k\">,</span> related <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    event<span class=\"k\">.</span>type <span class=\"k\">=</span> handleObj<span class=\"k\">.</span>origType<span class=\"k\">;</span>","                    ret <span class=\"k\">=</span> handleObj<span class=\"k\">.</span>handler<span class=\"k\">.</span>apply<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> arguments <span class=\"k\">);</span>","                    event<span class=\"k\">.</span>type <span class=\"k\">=</span> fix<span class=\"k\">;</span>","                <span class=\"k\">}</span>","                <span class=\"k\">return</span> ret<span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"k\">}</span> <span class=\"k\">);</span>","","    jQuery<span class=\"k\">.</span>fn<span class=\"k\">.</span>extend<span class=\"k\">(</span> <span class=\"k\">{</span>","","        on<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> types<span class=\"k\">,</span> selector<span class=\"k\">,</span> data<span class=\"k\">,</span> fn <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> on<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> types<span class=\"k\">,</span> selector<span class=\"k\">,</span> data<span class=\"k\">,</span> fn <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        one<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> types<span class=\"k\">,</span> selector<span class=\"k\">,</span> data<span class=\"k\">,</span> fn <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> on<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> types<span class=\"k\">,</span> selector<span class=\"k\">,</span> data<span class=\"k\">,</span> fn<span class=\"k\">,</span> <span class=\"s\">1</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        off<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> types<span class=\"k\">,</span> selector<span class=\"k\">,</span> fn <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> handleObj<span class=\"k\">,</span> type<span class=\"k\">;</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> types <span class=\"k\">&amp;&amp;</span> types<span class=\"k\">.</span>preventDefault <span class=\"k\">&amp;&amp;</span> types<span class=\"k\">.</span>handleObj <span class=\"k\">)</span> <span class=\"k\">{</span>","","                <span class=\"c\">// ( event )  dispatched jQuery.Event</span>","                handleObj <span class=\"k\">=</span> types<span class=\"k\">.</span>handleObj<span class=\"k\">;</span>","                jQuery<span class=\"k\">(</span> types<span class=\"k\">.</span>delegateTarget <span class=\"k\">).</span>off<span class=\"k\">(</span>","                    handleObj<span class=\"k\">.</span>namespace <span class=\"k\">?</span>","                        handleObj<span class=\"k\">.</span>origType <span class=\"k\">+</span> <span class=\"s\">\".\"</span> <span class=\"k\">+</span> handleObj<span class=\"k\">.</span>namespace <span class=\"k\">:</span>","                        handleObj<span class=\"k\">.</span>origType<span class=\"k\">,</span>","                    handleObj<span class=\"k\">.</span>selector<span class=\"k\">,</span>","                    handleObj<span class=\"k\">.</span>handler","                <span class=\"k\">);</span>","                <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">typeof</span> types <span class=\"k\">===</span> <span class=\"s\">\"object\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                <span class=\"c\">// ( types-object [, selector] )</span>","                <span class=\"k\">for</span> <span class=\"k\">(</span> type <span class=\"k\">in</span> types <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">this</span><span class=\"k\">.</span>off<span class=\"k\">(</span> type<span class=\"k\">,</span> selector<span class=\"k\">,</span> types<span class=\"k\">[</span> type <span class=\"k\">]</span> <span class=\"k\">);</span>","                <span class=\"k\">}</span>","                <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> selector <span class=\"k\">===</span> <span class=\"k\">false</span> <span class=\"k\">||</span> <span class=\"k\">typeof</span> selector <span class=\"k\">===</span> <span class=\"s\">\"function\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                <span class=\"c\">// ( types [, fn] )</span>","                fn <span class=\"k\">=</span> selector<span class=\"k\">;</span>","                selector <span class=\"k\">=</span> undefined<span class=\"k\">;</span>","            <span class=\"k\">}</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> fn <span class=\"k\">===</span> <span class=\"k\">false</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                fn <span class=\"k\">=</span> returnFalse<span class=\"k\">;</span>","            <span class=\"k\">}</span>","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>each<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                jQuery<span class=\"k\">.</span>event<span class=\"k\">.</span>remove<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> types<span class=\"k\">,</span> fn<span class=\"k\">,</span> selector <span class=\"k\">);</span>","            <span class=\"k\">}</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span> <span class=\"k\">);</span>","","","    <span class=\"k\">var</span>","","        <span class=\"c\">/* eslint-disable max-len */</span>","","        <span class=\"c\">// See https://github.com/eslint/eslint/issues/3229</span>","        rxhtmlTag <span class=\"k\">=</span> <span class=\"s\">/&lt;(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\\/\\0&gt;\\x20\\t\\r\\n\\f]*)[^&gt;]*)\\/&gt;/gi</span><span class=\"k\">,</span>","","        <span class=\"c\">/* eslint-enable */</span>","","        <span class=\"c\">// Support: IE &lt;=10 - 11, Edge 12 - 13 only</span>","        <span class=\"c\">// In IE/Edge using regex groups here causes severe slowdowns.</span>","        <span class=\"c\">// See https://connect.microsoft.com/IE/feedback/details/1736512/</span>","        rnoInnerhtml <span class=\"k\">=</span> <span class=\"s\">/&lt;script|&lt;style|&lt;link/i</span><span class=\"k\">,</span>","","        <span class=\"c\">// checked=\"checked\" or checked</span>","        rchecked <span class=\"k\">=</span> <span class=\"s\">/checked\\s*(?:[^=]|=\\s*.checked.)/i</span><span class=\"k\">,</span>","        rcleanScript <span class=\"k\">=</span> <span class=\"s\">/^\\s*&lt;!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)&gt;\\s*$/g</span><span class=\"k\">;</span>","","<span class=\"c\">// Prefer a tbody over its parent table for containing new rows</span>","    <span class=\"k\">function</span> manipulationTarget<span class=\"k\">(</span> elem<span class=\"k\">,</span> content <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> nodeName<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"s\">\"table\"</span> <span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span>","            nodeName<span class=\"k\">(</span> content<span class=\"k\">.</span>nodeType <span class=\"k\">!==</span> <span class=\"s\">11</span> <span class=\"k\">?</span> content <span class=\"k\">:</span> content<span class=\"k\">.</span>firstChild<span class=\"k\">,</span> <span class=\"s\">\"tr\"</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"k\">return</span> jQuery<span class=\"k\">(</span> elem <span class=\"k\">).</span>children<span class=\"k\">(</span> <span class=\"s\">\"tbody\"</span> <span class=\"k\">)[</span> <span class=\"s\">0</span> <span class=\"k\">]</span> <span class=\"k\">||</span> elem<span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">return</span> elem<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","<span class=\"c\">// Replace/restore the type attribute of script elements for safe DOM manipulation</span>","    <span class=\"k\">function</span> disableScript<span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","        elem<span class=\"k\">.</span>type <span class=\"k\">=</span> <span class=\"k\">(</span> elem<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span> <span class=\"s\">\"type\"</span> <span class=\"k\">)</span> <span class=\"k\">!==</span> <span class=\"k\">null</span> <span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">\"/\"</span> <span class=\"k\">+</span> elem<span class=\"k\">.</span>type<span class=\"k\">;</span>","        <span class=\"k\">return</span> elem<span class=\"k\">;</span>","    <span class=\"k\">}</span>","    <span class=\"k\">function</span> restoreScript<span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">(</span> elem<span class=\"k\">.</span>type <span class=\"k\">||</span> <span class=\"s\">\"\"</span> <span class=\"k\">).</span>slice<span class=\"k\">(</span> <span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"s\">5</span> <span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"s\">\"true/\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            elem<span class=\"k\">.</span>type <span class=\"k\">=</span> elem<span class=\"k\">.</span>type<span class=\"k\">.</span>slice<span class=\"k\">(</span> <span class=\"s\">5</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","            elem<span class=\"k\">.</span>removeAttribute<span class=\"k\">(</span> <span class=\"s\">\"type\"</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">return</span> elem<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> cloneCopyEvent<span class=\"k\">(</span> src<span class=\"k\">,</span> dest <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> i<span class=\"k\">,</span> l<span class=\"k\">,</span> type<span class=\"k\">,</span> pdataOld<span class=\"k\">,</span> pdataCur<span class=\"k\">,</span> udataOld<span class=\"k\">,</span> udataCur<span class=\"k\">,</span> events<span class=\"k\">;</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span> dest<span class=\"k\">.</span>nodeType <span class=\"k\">!==</span> <span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"c\">// 1. Copy private data: events, handlers, etc.</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> dataPriv<span class=\"k\">.</span>hasData<span class=\"k\">(</span> src <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            pdataOld <span class=\"k\">=</span> dataPriv<span class=\"k\">.</span>access<span class=\"k\">(</span> src <span class=\"k\">);</span>","            pdataCur <span class=\"k\">=</span> dataPriv<span class=\"k\">.</span>set<span class=\"k\">(</span> dest<span class=\"k\">,</span> pdataOld <span class=\"k\">);</span>","            events <span class=\"k\">=</span> pdataOld<span class=\"k\">.</span>events<span class=\"k\">;</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> events <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">delete</span> pdataCur<span class=\"k\">.</span>handle<span class=\"k\">;</span>","                pdataCur<span class=\"k\">.</span>events <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","","                <span class=\"k\">for</span> <span class=\"k\">(</span> type <span class=\"k\">in</span> events <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">for</span> <span class=\"k\">(</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> l <span class=\"k\">=</span> events<span class=\"k\">[</span> type <span class=\"k\">].</span>length<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> l<span class=\"k\">;</span> i<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        jQuery<span class=\"k\">.</span>event<span class=\"k\">.</span>add<span class=\"k\">(</span> dest<span class=\"k\">,</span> type<span class=\"k\">,</span> events<span class=\"k\">[</span> type <span class=\"k\">][</span> i <span class=\"k\">]</span> <span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","","        <span class=\"c\">// 2. Copy user data</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> dataUser<span class=\"k\">.</span>hasData<span class=\"k\">(</span> src <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            udataOld <span class=\"k\">=</span> dataUser<span class=\"k\">.</span>access<span class=\"k\">(</span> src <span class=\"k\">);</span>","            udataCur <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>extend<span class=\"k\">(</span> <span class=\"k\">{}</span><span class=\"k\">,</span> udataOld <span class=\"k\">);</span>","","            dataUser<span class=\"k\">.</span>set<span class=\"k\">(</span> dest<span class=\"k\">,</span> udataCur <span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","<span class=\"c\">// Fix IE bugs, see support tests</span>","    <span class=\"k\">function</span> fixInput<span class=\"k\">(</span> src<span class=\"k\">,</span> dest <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> nodeName <span class=\"k\">=</span> dest<span class=\"k\">.</span>nodeName<span class=\"k\">.</span>toLowerCase<span class=\"k\">();</span>","","        <span class=\"c\">// Fails to persist the checked state of a cloned checkbox or radio button.</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> nodeName <span class=\"k\">===</span> <span class=\"s\">\"input\"</span> <span class=\"k\">&amp;&amp;</span> rcheckableType<span class=\"k\">.</span>test<span class=\"k\">(</span> src<span class=\"k\">.</span>type <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            dest<span class=\"k\">.</span>checked <span class=\"k\">=</span> src<span class=\"k\">.</span>checked<span class=\"k\">;</span>","","            <span class=\"c\">// Fails to return the selected option to the default selected state when cloning options</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> nodeName <span class=\"k\">===</span> <span class=\"s\">\"input\"</span> <span class=\"k\">||</span> nodeName <span class=\"k\">===</span> <span class=\"s\">\"textarea\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            dest<span class=\"k\">.</span>defaultValue <span class=\"k\">=</span> src<span class=\"k\">.</span>defaultValue<span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> domManip<span class=\"k\">(</span> collection<span class=\"k\">,</span> args<span class=\"k\">,</span> callback<span class=\"k\">,</span> ignored <span class=\"k\">)</span> <span class=\"k\">{</span>","","        <span class=\"c\">// Flatten any nested arrays</span>","        args <span class=\"k\">=</span> concat<span class=\"k\">.</span>apply<span class=\"k\">(</span> <span class=\"k\">[],</span> args <span class=\"k\">);</span>","","        <span class=\"k\">var</span> fragment<span class=\"k\">,</span> first<span class=\"k\">,</span> scripts<span class=\"k\">,</span> hasScripts<span class=\"k\">,</span> node<span class=\"k\">,</span> doc<span class=\"k\">,</span>","            i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","            l <span class=\"k\">=</span> collection<span class=\"k\">.</span>length<span class=\"k\">,</span>","            iNoClone <span class=\"k\">=</span> l <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">,</span>","            value <span class=\"k\">=</span> args<span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">],</span>","            valueIsFunction <span class=\"k\">=</span> isFunction<span class=\"k\">(</span> value <span class=\"k\">);</span>","","        <span class=\"c\">// We can't cloneNode fragments that contain checked, in WebKit</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> valueIsFunction <span class=\"k\">||</span>","            <span class=\"k\">(</span> l <span class=\"k\">&gt;</span> <span class=\"s\">1</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">typeof</span> value <span class=\"k\">===</span> <span class=\"s\">\"string\"</span> <span class=\"k\">&amp;&amp;</span>","                <span class=\"k\">!</span>support<span class=\"k\">.</span>checkClone <span class=\"k\">&amp;&amp;</span> rchecked<span class=\"k\">.</span>test<span class=\"k\">(</span> value <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> collection<span class=\"k\">.</span>each<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">(</span> index <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> self <span class=\"k\">=</span> collection<span class=\"k\">.</span>eq<span class=\"k\">(</span> index <span class=\"k\">);</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> valueIsFunction <span class=\"k\">)</span> <span class=\"k\">{</span>","                    args<span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">]</span> <span class=\"k\">=</span> value<span class=\"k\">.</span>call<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> index<span class=\"k\">,</span> self<span class=\"k\">.</span>html<span class=\"k\">()</span> <span class=\"k\">);</span>","                <span class=\"k\">}</span>","                domManip<span class=\"k\">(</span> self<span class=\"k\">,</span> args<span class=\"k\">,</span> callback<span class=\"k\">,</span> ignored <span class=\"k\">);</span>","            <span class=\"k\">}</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span> l <span class=\"k\">)</span> <span class=\"k\">{</span>","            fragment <span class=\"k\">=</span> buildFragment<span class=\"k\">(</span> args<span class=\"k\">,</span> collection<span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">].</span>ownerDocument<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">,</span> collection<span class=\"k\">,</span> ignored <span class=\"k\">);</span>","            first <span class=\"k\">=</span> fragment<span class=\"k\">.</span>firstChild<span class=\"k\">;</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> fragment<span class=\"k\">.</span>childNodes<span class=\"k\">.</span>length <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                fragment <span class=\"k\">=</span> first<span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Require either new content or an interest in ignored elements to invoke the callback</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> first <span class=\"k\">||</span> ignored <span class=\"k\">)</span> <span class=\"k\">{</span>","                scripts <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>map<span class=\"k\">(</span> getAll<span class=\"k\">(</span> fragment<span class=\"k\">,</span> <span class=\"s\">\"script\"</span> <span class=\"k\">),</span> disableScript <span class=\"k\">);</span>","                hasScripts <span class=\"k\">=</span> scripts<span class=\"k\">.</span>length<span class=\"k\">;</span>","","                <span class=\"c\">// Use the original fragment for the last item</span>","                <span class=\"c\">// instead of the first because it can end up</span>","                <span class=\"c\">// being emptied incorrectly in certain situations (#8070).</span>","                <span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">;</span> i <span class=\"k\">&lt;</span> l<span class=\"k\">;</span> i<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    node <span class=\"k\">=</span> fragment<span class=\"k\">;</span>","","                    <span class=\"k\">if</span> <span class=\"k\">(</span> i <span class=\"k\">!==</span> iNoClone <span class=\"k\">)</span> <span class=\"k\">{</span>","                        node <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>clone<span class=\"k\">(</span> node<span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">,</span> <span class=\"k\">true</span> <span class=\"k\">);</span>","","                        <span class=\"c\">// Keep references to cloned scripts for later restoration</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> hasScripts <span class=\"k\">)</span> <span class=\"k\">{</span>","","                            <span class=\"c\">// Support: Android &lt;=4.0 only, PhantomJS 1 only</span>","                            <span class=\"c\">// push.apply(_, arraylike) throws on ancient WebKit</span>","                            jQuery<span class=\"k\">.</span>merge<span class=\"k\">(</span> scripts<span class=\"k\">,</span> getAll<span class=\"k\">(</span> node<span class=\"k\">,</span> <span class=\"s\">\"script\"</span> <span class=\"k\">)</span> <span class=\"k\">);</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span>","","                    callback<span class=\"k\">.</span>call<span class=\"k\">(</span> collection<span class=\"k\">[</span> i <span class=\"k\">],</span> node<span class=\"k\">,</span> i <span class=\"k\">);</span>","                <span class=\"k\">}</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span> hasScripts <span class=\"k\">)</span> <span class=\"k\">{</span>","                    doc <span class=\"k\">=</span> scripts<span class=\"k\">[</span> scripts<span class=\"k\">.</span>length <span class=\"k\">-</span> <span class=\"s\">1</span> <span class=\"k\">].</span>ownerDocument<span class=\"k\">;</span>","","                    <span class=\"c\">// Reenable scripts</span>","                    jQuery<span class=\"k\">.</span>map<span class=\"k\">(</span> scripts<span class=\"k\">,</span> restoreScript <span class=\"k\">);</span>","","                    <span class=\"c\">// Evaluate executable scripts on first document insertion</span>","                    <span class=\"k\">for</span> <span class=\"k\">(</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> i <span class=\"k\">&lt;</span> hasScripts<span class=\"k\">;</span> i<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        node <span class=\"k\">=</span> scripts<span class=\"k\">[</span> i <span class=\"k\">];</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> rscriptType<span class=\"k\">.</span>test<span class=\"k\">(</span> node<span class=\"k\">.</span>type <span class=\"k\">||</span> <span class=\"s\">\"\"</span> <span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span>","                            <span class=\"k\">!</span>dataPriv<span class=\"k\">.</span>access<span class=\"k\">(</span> node<span class=\"k\">,</span> <span class=\"s\">\"globalEval\"</span> <span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span>","                            jQuery<span class=\"k\">.</span>contains<span class=\"k\">(</span> doc<span class=\"k\">,</span> node <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                            <span class=\"k\">if</span> <span class=\"k\">(</span> node<span class=\"k\">.</span>src <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span> node<span class=\"k\">.</span>type <span class=\"k\">||</span> <span class=\"s\">\"\"</span> <span class=\"k\">).</span>toLowerCase<span class=\"k\">()</span>  <span class=\"k\">!==</span> <span class=\"s\">\"module\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                                <span class=\"c\">// Optional AJAX dependency, but won't run scripts if not present</span>","                                <span class=\"k\">if</span> <span class=\"k\">(</span> jQuery<span class=\"k\">.</span>_evalUrl <span class=\"k\">)</span> <span class=\"k\">{</span>","                                    jQuery<span class=\"k\">.</span>_evalUrl<span class=\"k\">(</span> node<span class=\"k\">.</span>src <span class=\"k\">);</span>","                                <span class=\"k\">}</span>","                            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                                DOMEval<span class=\"k\">(</span> node<span class=\"k\">.</span>textContent<span class=\"k\">.</span>replace<span class=\"k\">(</span> rcleanScript<span class=\"k\">,</span> <span class=\"s\">\"\"</span> <span class=\"k\">),</span> doc<span class=\"k\">,</span> node <span class=\"k\">);</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">return</span> collection<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> remove<span class=\"k\">(</span> elem<span class=\"k\">,</span> selector<span class=\"k\">,</span> keepData <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> node<span class=\"k\">,</span>","            nodes <span class=\"k\">=</span> selector <span class=\"k\">?</span> jQuery<span class=\"k\">.</span>filter<span class=\"k\">(</span> selector<span class=\"k\">,</span> elem <span class=\"k\">)</span> <span class=\"k\">:</span> elem<span class=\"k\">,</span>","            i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","","        <span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">;</span> <span class=\"k\">(</span> node <span class=\"k\">=</span> nodes<span class=\"k\">[</span> i <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">!=</span> <span class=\"k\">null</span><span class=\"k\">;</span> i<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>keepData <span class=\"k\">&amp;&amp;</span> node<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                jQuery<span class=\"k\">.</span>cleanData<span class=\"k\">(</span> getAll<span class=\"k\">(</span> node <span class=\"k\">)</span> <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> node<span class=\"k\">.</span>parentNode <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> keepData <span class=\"k\">&amp;&amp;</span> jQuery<span class=\"k\">.</span>contains<span class=\"k\">(</span> node<span class=\"k\">.</span>ownerDocument<span class=\"k\">,</span> node <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    setGlobalEval<span class=\"k\">(</span> getAll<span class=\"k\">(</span> node<span class=\"k\">,</span> <span class=\"s\">\"script\"</span> <span class=\"k\">)</span> <span class=\"k\">);</span>","                <span class=\"k\">}</span>","                node<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>removeChild<span class=\"k\">(</span> node <span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">return</span> elem<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    jQuery<span class=\"k\">.</span>extend<span class=\"k\">(</span> <span class=\"k\">{</span>","        htmlPrefilter<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> html <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> html<span class=\"k\">.</span>replace<span class=\"k\">(</span> rxhtmlTag<span class=\"k\">,</span> <span class=\"s\">\"&lt;$1&gt;&lt;/$2&gt;\"</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        clone<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> dataAndEvents<span class=\"k\">,</span> deepDataAndEvents <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> i<span class=\"k\">,</span> l<span class=\"k\">,</span> srcElements<span class=\"k\">,</span> destElements<span class=\"k\">,</span>","                clone <span class=\"k\">=</span> elem<span class=\"k\">.</span>cloneNode<span class=\"k\">(</span> <span class=\"k\">true</span> <span class=\"k\">),</span>","                inPage <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>contains<span class=\"k\">(</span> elem<span class=\"k\">.</span>ownerDocument<span class=\"k\">,</span> elem <span class=\"k\">);</span>","","            <span class=\"c\">// Fix IE cloning issues</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>support<span class=\"k\">.</span>noCloneChecked <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span> elem<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">||</span> elem<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">11</span> <span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span>","                <span class=\"k\">!</span>jQuery<span class=\"k\">.</span>isXMLDoc<span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                <span class=\"c\">// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2</span>","                destElements <span class=\"k\">=</span> getAll<span class=\"k\">(</span> clone <span class=\"k\">);</span>","                srcElements <span class=\"k\">=</span> getAll<span class=\"k\">(</span> elem <span class=\"k\">);</span>","","                <span class=\"k\">for</span> <span class=\"k\">(</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> l <span class=\"k\">=</span> srcElements<span class=\"k\">.</span>length<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> l<span class=\"k\">;</span> i<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    fixInput<span class=\"k\">(</span> srcElements<span class=\"k\">[</span> i <span class=\"k\">],</span> destElements<span class=\"k\">[</span> i <span class=\"k\">]</span> <span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Copy the events from the original to the clone</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> dataAndEvents <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> deepDataAndEvents <span class=\"k\">)</span> <span class=\"k\">{</span>","                    srcElements <span class=\"k\">=</span> srcElements <span class=\"k\">||</span> getAll<span class=\"k\">(</span> elem <span class=\"k\">);</span>","                    destElements <span class=\"k\">=</span> destElements <span class=\"k\">||</span> getAll<span class=\"k\">(</span> clone <span class=\"k\">);</span>","","                    <span class=\"k\">for</span> <span class=\"k\">(</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span> l <span class=\"k\">=</span> srcElements<span class=\"k\">.</span>length<span class=\"k\">;</span> i <span class=\"k\">&lt;</span> l<span class=\"k\">;</span> i<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        cloneCopyEvent<span class=\"k\">(</span> srcElements<span class=\"k\">[</span> i <span class=\"k\">],</span> destElements<span class=\"k\">[</span> i <span class=\"k\">]</span> <span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    cloneCopyEvent<span class=\"k\">(</span> elem<span class=\"k\">,</span> clone <span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Preserve script evaluation history</span>","            destElements <span class=\"k\">=</span> getAll<span class=\"k\">(</span> clone<span class=\"k\">,</span> <span class=\"s\">\"script\"</span> <span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> destElements<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">0</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                setGlobalEval<span class=\"k\">(</span> destElements<span class=\"k\">,</span> <span class=\"k\">!</span>inPage <span class=\"k\">&amp;&amp;</span> getAll<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"s\">\"script\"</span> <span class=\"k\">)</span> <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Return the cloned set</span>","            <span class=\"k\">return</span> clone<span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        cleanData<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elems <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> data<span class=\"k\">,</span> elem<span class=\"k\">,</span> type<span class=\"k\">,</span>","                special <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>event<span class=\"k\">.</span>special<span class=\"k\">,</span>","                i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","","            <span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">;</span> <span class=\"k\">(</span> elem <span class=\"k\">=</span> elems<span class=\"k\">[</span> i <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">!==</span> undefined<span class=\"k\">;</span> i<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> acceptData<span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">(</span> data <span class=\"k\">=</span> elem<span class=\"k\">[</span> dataPriv<span class=\"k\">.</span>expando <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> data<span class=\"k\">.</span>events <span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">for</span> <span class=\"k\">(</span> type <span class=\"k\">in</span> data<span class=\"k\">.</span>events <span class=\"k\">)</span> <span class=\"k\">{</span>","                                <span class=\"k\">if</span> <span class=\"k\">(</span> special<span class=\"k\">[</span> type <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                    jQuery<span class=\"k\">.</span>event<span class=\"k\">.</span>remove<span class=\"k\">(</span> elem<span class=\"k\">,</span> type <span class=\"k\">);</span>","","                                    <span class=\"c\">// This is a shortcut to avoid jQuery.event.remove's overhead</span>","                                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                                    jQuery<span class=\"k\">.</span>removeEvent<span class=\"k\">(</span> elem<span class=\"k\">,</span> type<span class=\"k\">,</span> data<span class=\"k\">.</span>handle <span class=\"k\">);</span>","                                <span class=\"k\">}</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span>","","                        <span class=\"c\">// Support: Chrome &lt;=35 - 45+</span>","                        <span class=\"c\">// Assign undefined instead of using delete, see Data#remove</span>","                        elem<span class=\"k\">[</span> dataPriv<span class=\"k\">.</span>expando <span class=\"k\">]</span> <span class=\"k\">=</span> undefined<span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> elem<span class=\"k\">[</span> dataUser<span class=\"k\">.</span>expando <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                        <span class=\"c\">// Support: Chrome &lt;=35 - 45+</span>","                        <span class=\"c\">// Assign undefined instead of using delete, see Data#remove</span>","                        elem<span class=\"k\">[</span> dataUser<span class=\"k\">.</span>expando <span class=\"k\">]</span> <span class=\"k\">=</span> undefined<span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span> <span class=\"k\">);</span>","","    jQuery<span class=\"k\">.</span>fn<span class=\"k\">.</span>extend<span class=\"k\">(</span> <span class=\"k\">{</span>","        detach<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> selector <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> remove<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> selector<span class=\"k\">,</span> <span class=\"k\">true</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        remove<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> selector <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> remove<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> selector <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        text<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> value <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> access<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span> value <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> value <span class=\"k\">===</span> undefined <span class=\"k\">?</span>","                    jQuery<span class=\"k\">.</span>text<span class=\"k\">(</span> <span class=\"k\">this</span> <span class=\"k\">)</span> <span class=\"k\">:</span>","                    <span class=\"k\">this</span><span class=\"k\">.</span>empty<span class=\"k\">().</span>each<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">||</span> <span class=\"k\">this</span><span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">11</span> <span class=\"k\">||</span> <span class=\"k\">this</span><span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">9</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">this</span><span class=\"k\">.</span>textContent <span class=\"k\">=</span> value<span class=\"k\">;</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span> <span class=\"k\">);</span>","            <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">null</span><span class=\"k\">,</span> value<span class=\"k\">,</span> arguments<span class=\"k\">.</span>length <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        append<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> domManip<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> arguments<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">||</span> <span class=\"k\">this</span><span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">11</span> <span class=\"k\">||</span> <span class=\"k\">this</span><span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">9</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> target <span class=\"k\">=</span> manipulationTarget<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> elem <span class=\"k\">);</span>","                    target<span class=\"k\">.</span>appendChild<span class=\"k\">(</span> elem <span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        prepend<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> domManip<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> arguments<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">||</span> <span class=\"k\">this</span><span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">11</span> <span class=\"k\">||</span> <span class=\"k\">this</span><span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">9</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> target <span class=\"k\">=</span> manipulationTarget<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> elem <span class=\"k\">);</span>","                    target<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span> elem<span class=\"k\">,</span> target<span class=\"k\">.</span>firstChild <span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        before<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> domManip<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> arguments<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">.</span>parentNode <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">this</span><span class=\"k\">.</span>parentNode<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"k\">this</span> <span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        after<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> domManip<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> arguments<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">.</span>parentNode <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">this</span><span class=\"k\">.</span>parentNode<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>nextSibling <span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        empty<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> elem<span class=\"k\">,</span>","                i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","","            <span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">;</span> <span class=\"k\">(</span> elem <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">[</span> i <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">!=</span> <span class=\"k\">null</span><span class=\"k\">;</span> i<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> elem<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                    <span class=\"c\">// Prevent memory leaks</span>","                    jQuery<span class=\"k\">.</span>cleanData<span class=\"k\">(</span> getAll<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"k\">false</span> <span class=\"k\">)</span> <span class=\"k\">);</span>","","                    <span class=\"c\">// Remove any remaining nodes</span>","                    elem<span class=\"k\">.</span>textContent <span class=\"k\">=</span> <span class=\"s\">\"\"</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        clone<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> dataAndEvents<span class=\"k\">,</span> deepDataAndEvents <span class=\"k\">)</span> <span class=\"k\">{</span>","            dataAndEvents <span class=\"k\">=</span> dataAndEvents <span class=\"k\">==</span> <span class=\"k\">null</span> <span class=\"k\">?</span> <span class=\"k\">false</span> <span class=\"k\">:</span> dataAndEvents<span class=\"k\">;</span>","            deepDataAndEvents <span class=\"k\">=</span> deepDataAndEvents <span class=\"k\">==</span> <span class=\"k\">null</span> <span class=\"k\">?</span> dataAndEvents <span class=\"k\">:</span> deepDataAndEvents<span class=\"k\">;</span>","","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>map<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> jQuery<span class=\"k\">.</span>clone<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> dataAndEvents<span class=\"k\">,</span> deepDataAndEvents <span class=\"k\">);</span>","            <span class=\"k\">}</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        html<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> value <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> access<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span> value <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> elem <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">,</span>","                    i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","                    l <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>length<span class=\"k\">;</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span> value <span class=\"k\">===</span> undefined <span class=\"k\">&amp;&amp;</span> elem<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">return</span> elem<span class=\"k\">.</span>innerHTML<span class=\"k\">;</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// See if we can take a shortcut and just use innerHTML</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">typeof</span> value <span class=\"k\">===</span> <span class=\"s\">\"string\"</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>rnoInnerhtml<span class=\"k\">.</span>test<span class=\"k\">(</span> value <span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span>","                    <span class=\"k\">!</span>wrapMap<span class=\"k\">[</span> <span class=\"k\">(</span> rtagName<span class=\"k\">.</span>exec<span class=\"k\">(</span> value <span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"k\">[</span> <span class=\"s\">\"\"</span><span class=\"k\">,</span> <span class=\"s\">\"\"</span> <span class=\"k\">]</span> <span class=\"k\">)[</span> <span class=\"s\">1</span> <span class=\"k\">].</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                    value <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>htmlPrefilter<span class=\"k\">(</span> value <span class=\"k\">);</span>","","                    <span class=\"k\">try</span> <span class=\"k\">{</span>","                        <span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">;</span> i <span class=\"k\">&lt;</span> l<span class=\"k\">;</span> i<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                            elem <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">[</span> i <span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","","                            <span class=\"c\">// Remove element nodes and prevent memory leaks</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span> elem<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                jQuery<span class=\"k\">.</span>cleanData<span class=\"k\">(</span> getAll<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"k\">false</span> <span class=\"k\">)</span> <span class=\"k\">);</span>","                                elem<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> value<span class=\"k\">;</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span>","","                        elem <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","","                        <span class=\"c\">// If using innerHTML throws an exception, use the fallback method</span>","                    <span class=\"k\">}</span> <span class=\"k\">catch</span> <span class=\"k\">(</span> e <span class=\"k\">)</span> <span class=\"k\">{}</span>","                <span class=\"k\">}</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">this</span><span class=\"k\">.</span>empty<span class=\"k\">().</span>append<span class=\"k\">(</span> value <span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">null</span><span class=\"k\">,</span> value<span class=\"k\">,</span> arguments<span class=\"k\">.</span>length <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        replaceWith<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> ignored <span class=\"k\">=</span> <span class=\"k\">[];</span>","","            <span class=\"c\">// Make the changes, replacing each non-ignored context element with the new content</span>","            <span class=\"k\">return</span> domManip<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> arguments<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> parent <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span> jQuery<span class=\"k\">.</span>inArray<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> ignored <span class=\"k\">)</span> <span class=\"k\">&lt;</span> <span class=\"s\">0</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    jQuery<span class=\"k\">.</span>cleanData<span class=\"k\">(</span> getAll<span class=\"k\">(</span> <span class=\"k\">this</span> <span class=\"k\">)</span> <span class=\"k\">);</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> parent <span class=\"k\">)</span> <span class=\"k\">{</span>","                        parent<span class=\"k\">.</span>replaceChild<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"k\">this</span> <span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// Force callback invocation</span>","            <span class=\"k\">}</span><span class=\"k\">,</span> ignored <span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span> <span class=\"k\">);</span>","","    jQuery<span class=\"k\">.</span>each<span class=\"k\">(</span> <span class=\"k\">{</span>","        appendTo<span class=\"k\">:</span> <span class=\"s\">\"append\"</span><span class=\"k\">,</span>","        prependTo<span class=\"k\">:</span> <span class=\"s\">\"prepend\"</span><span class=\"k\">,</span>","        insertBefore<span class=\"k\">:</span> <span class=\"s\">\"before\"</span><span class=\"k\">,</span>","        insertAfter<span class=\"k\">:</span> <span class=\"s\">\"after\"</span><span class=\"k\">,</span>","        replaceAll<span class=\"k\">:</span> <span class=\"s\">\"replaceWith\"</span>","    <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span> name<span class=\"k\">,</span> original <span class=\"k\">)</span> <span class=\"k\">{</span>","        jQuery<span class=\"k\">.</span>fn<span class=\"k\">[</span> name <span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> selector <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> elems<span class=\"k\">,</span>","                ret <span class=\"k\">=</span> <span class=\"k\">[],</span>","                insert <span class=\"k\">=</span> jQuery<span class=\"k\">(</span> selector <span class=\"k\">),</span>","                last <span class=\"k\">=</span> insert<span class=\"k\">.</span>length <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">,</span>","                i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","","            <span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">;</span> i <span class=\"k\">&lt;=</span> last<span class=\"k\">;</span> i<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                elems <span class=\"k\">=</span> i <span class=\"k\">===</span> last <span class=\"k\">?</span> <span class=\"k\">this</span> <span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>clone<span class=\"k\">(</span> <span class=\"k\">true</span> <span class=\"k\">);</span>","                jQuery<span class=\"k\">(</span> insert<span class=\"k\">[</span> i <span class=\"k\">]</span> <span class=\"k\">)[</span> original <span class=\"k\">](</span> elems <span class=\"k\">);</span>","","                <span class=\"c\">// Support: Android &lt;=4.0 only, PhantomJS 1 only</span>","                <span class=\"c\">// .get() because push.apply(_, arraylike) throws on ancient WebKit</span>","                push<span class=\"k\">.</span>apply<span class=\"k\">(</span> ret<span class=\"k\">,</span> elems<span class=\"k\">.</span>get<span class=\"k\">()</span> <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>pushStack<span class=\"k\">(</span> ret <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"k\">}</span> <span class=\"k\">);</span>","    <span class=\"k\">var</span> rnumnonpx <span class=\"k\">=</span> <span class=\"k\">new</span> RegExp<span class=\"k\">(</span> <span class=\"s\">\"^(\"</span> <span class=\"k\">+</span> pnum <span class=\"k\">+</span> <span class=\"s\">\")(?!px)[a-z%]+$\"</span><span class=\"k\">,</span> <span class=\"s\">\"i\"</span> <span class=\"k\">);</span>","","    <span class=\"k\">var</span> getStyles <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","","        <span class=\"c\">// Support: IE &lt;=11 only, Firefox &lt;=30 (#15098, #14150)</span>","        <span class=\"c\">// IE throws on elements created in popups</span>","        <span class=\"c\">// FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"</span>","        <span class=\"k\">var</span> view <span class=\"k\">=</span> elem<span class=\"k\">.</span>ownerDocument<span class=\"k\">.</span>defaultView<span class=\"k\">;</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>view <span class=\"k\">||</span> <span class=\"k\">!</span>view<span class=\"k\">.</span>opener <span class=\"k\">)</span> <span class=\"k\">{</span>","            view <span class=\"k\">=</span> window<span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">return</span> view<span class=\"k\">.</span>getComputedStyle<span class=\"k\">(</span> elem <span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    <span class=\"k\">var</span> rboxStyle <span class=\"k\">=</span> <span class=\"k\">new</span> RegExp<span class=\"k\">(</span> cssExpand<span class=\"k\">.</span>join<span class=\"k\">(</span> <span class=\"s\">\"|\"</span> <span class=\"k\">),</span> <span class=\"s\">\"i\"</span> <span class=\"k\">);</span>","","","","    <span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","","        <span class=\"c\">// Executing both pixelPosition &amp; boxSizingReliable tests require only one layout</span>","        <span class=\"c\">// so they're executed at the same time to save the second computation.</span>","        <span class=\"k\">function</span> computeStyleTests<span class=\"k\">()</span> <span class=\"k\">{</span>","","            <span class=\"c\">// This is a singleton, we need to execute it only once</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>div <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            container<span class=\"k\">.</span>style<span class=\"k\">.</span>cssText <span class=\"k\">=</span> <span class=\"s\">\"position:absolute;left:-11111px;width:60px;\"</span> <span class=\"k\">+</span>","                <span class=\"s\">\"margin-top:1px;padding:0;border:0\"</span><span class=\"k\">;</span>","            div<span class=\"k\">.</span>style<span class=\"k\">.</span>cssText <span class=\"k\">=</span>","                <span class=\"s\">\"position:relative;display:block;box-sizing:border-box;overflow:scroll;\"</span> <span class=\"k\">+</span>","                <span class=\"s\">\"margin:auto;border:1px;padding:1px;\"</span> <span class=\"k\">+</span>","                <span class=\"s\">\"width:60%;top:1%\"</span><span class=\"k\">;</span>","            documentElement<span class=\"k\">.</span>appendChild<span class=\"k\">(</span> container <span class=\"k\">).</span>appendChild<span class=\"k\">(</span> div <span class=\"k\">);</span>","","            <span class=\"k\">var</span> divStyle <span class=\"k\">=</span> window<span class=\"k\">.</span>getComputedStyle<span class=\"k\">(</span> div <span class=\"k\">);</span>","            pixelPositionVal <span class=\"k\">=</span> divStyle<span class=\"k\">.</span>top <span class=\"k\">!==</span> <span class=\"s\">\"1%\"</span><span class=\"k\">;</span>","","            <span class=\"c\">// Support: Android 4.0 - 4.3 only, Firefox &lt;=3 - 44</span>","            reliableMarginLeftVal <span class=\"k\">=</span> roundPixelMeasures<span class=\"k\">(</span> divStyle<span class=\"k\">.</span>marginLeft <span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"s\">12</span><span class=\"k\">;</span>","","            <span class=\"c\">// Support: Android 4.0 - 4.3 only, Safari &lt;=9.1 - 10.1, iOS &lt;=7.0 - 9.3</span>","            <span class=\"c\">// Some styles come back with percentage values, even though they shouldn't</span>","            div<span class=\"k\">.</span>style<span class=\"k\">.</span>right <span class=\"k\">=</span> <span class=\"s\">\"60%\"</span><span class=\"k\">;</span>","            pixelBoxStylesVal <span class=\"k\">=</span> roundPixelMeasures<span class=\"k\">(</span> divStyle<span class=\"k\">.</span>right <span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"s\">36</span><span class=\"k\">;</span>","","            <span class=\"c\">// Support: IE 9 - 11 only</span>","            <span class=\"c\">// Detect misreporting of content dimensions for box-sizing:border-box elements</span>","            boxSizingReliableVal <span class=\"k\">=</span> roundPixelMeasures<span class=\"k\">(</span> divStyle<span class=\"k\">.</span>width <span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"s\">36</span><span class=\"k\">;</span>","","            <span class=\"c\">// Support: IE 9 only</span>","            <span class=\"c\">// Detect overflow:scroll screwiness (gh-3699)</span>","            div<span class=\"k\">.</span>style<span class=\"k\">.</span>position <span class=\"k\">=</span> <span class=\"s\">\"absolute\"</span><span class=\"k\">;</span>","            scrollboxSizeVal <span class=\"k\">=</span> div<span class=\"k\">.</span>offsetWidth <span class=\"k\">===</span> <span class=\"s\">36</span> <span class=\"k\">||</span> <span class=\"s\">\"absolute\"</span><span class=\"k\">;</span>","","            documentElement<span class=\"k\">.</span>removeChild<span class=\"k\">(</span> container <span class=\"k\">);</span>","","            <span class=\"c\">// Nullify the div so it wouldn't be stored in the memory and</span>","            <span class=\"c\">// it will also be a sign that checks already performed</span>","            div <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">function</span> roundPixelMeasures<span class=\"k\">(</span> measure <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> Math<span class=\"k\">.</span>round<span class=\"k\">(</span> parseFloat<span class=\"k\">(</span> measure <span class=\"k\">)</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">var</span> pixelPositionVal<span class=\"k\">,</span> boxSizingReliableVal<span class=\"k\">,</span> scrollboxSizeVal<span class=\"k\">,</span> pixelBoxStylesVal<span class=\"k\">,</span>","            reliableMarginLeftVal<span class=\"k\">,</span>","            container <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span> <span class=\"s\">\"div\"</span> <span class=\"k\">),</span>","            div <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span> <span class=\"s\">\"div\"</span> <span class=\"k\">);</span>","","        <span class=\"c\">// Finish early in limited (non-browser) environments</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>div<span class=\"k\">.</span>style <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"c\">// Support: IE &lt;=9 - 11 only</span>","        <span class=\"c\">// Style of cloned element affects source element cloned (#8908)</span>","        div<span class=\"k\">.</span>style<span class=\"k\">.</span>backgroundClip <span class=\"k\">=</span> <span class=\"s\">\"content-box\"</span><span class=\"k\">;</span>","        div<span class=\"k\">.</span>cloneNode<span class=\"k\">(</span> <span class=\"k\">true</span> <span class=\"k\">).</span>style<span class=\"k\">.</span>backgroundClip <span class=\"k\">=</span> <span class=\"s\">\"\"</span><span class=\"k\">;</span>","        support<span class=\"k\">.</span>clearCloneStyle <span class=\"k\">=</span> div<span class=\"k\">.</span>style<span class=\"k\">.</span>backgroundClip <span class=\"k\">===</span> <span class=\"s\">\"content-box\"</span><span class=\"k\">;</span>","","        jQuery<span class=\"k\">.</span>extend<span class=\"k\">(</span> support<span class=\"k\">,</span> <span class=\"k\">{</span>","            boxSizingReliable<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                computeStyleTests<span class=\"k\">();</span>","                <span class=\"k\">return</span> boxSizingReliableVal<span class=\"k\">;</span>","            <span class=\"k\">}</span><span class=\"k\">,</span>","            pixelBoxStyles<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                computeStyleTests<span class=\"k\">();</span>","                <span class=\"k\">return</span> pixelBoxStylesVal<span class=\"k\">;</span>","            <span class=\"k\">}</span><span class=\"k\">,</span>","            pixelPosition<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                computeStyleTests<span class=\"k\">();</span>","                <span class=\"k\">return</span> pixelPositionVal<span class=\"k\">;</span>","            <span class=\"k\">}</span><span class=\"k\">,</span>","            reliableMarginLeft<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                computeStyleTests<span class=\"k\">();</span>","                <span class=\"k\">return</span> reliableMarginLeftVal<span class=\"k\">;</span>","            <span class=\"k\">}</span><span class=\"k\">,</span>","            scrollboxSize<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                computeStyleTests<span class=\"k\">();</span>","                <span class=\"k\">return</span> scrollboxSizeVal<span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span> <span class=\"k\">);</span>","    <span class=\"k\">}</span> <span class=\"k\">)();</span>","","","    <span class=\"k\">function</span> curCSS<span class=\"k\">(</span> elem<span class=\"k\">,</span> name<span class=\"k\">,</span> computed <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> width<span class=\"k\">,</span> minWidth<span class=\"k\">,</span> maxWidth<span class=\"k\">,</span> ret<span class=\"k\">,</span>","","            <span class=\"c\">// Support: Firefox 51+</span>","            <span class=\"c\">// Retrieving style before computed somehow</span>","            <span class=\"c\">// fixes an issue with getting wrong values</span>","            <span class=\"c\">// on detached elements</span>","            style <span class=\"k\">=</span> elem<span class=\"k\">.</span>style<span class=\"k\">;</span>","","        computed <span class=\"k\">=</span> computed <span class=\"k\">||</span> getStyles<span class=\"k\">(</span> elem <span class=\"k\">);</span>","","        <span class=\"c\">// getPropertyValue is needed for:</span>","        <span class=\"c\">//   .css('filter') (IE 9 only, #12537)</span>","        <span class=\"c\">//   .css('--customProperty) (#3144)</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> computed <span class=\"k\">)</span> <span class=\"k\">{</span>","            ret <span class=\"k\">=</span> computed<span class=\"k\">.</span>getPropertyValue<span class=\"k\">(</span> name <span class=\"k\">)</span> <span class=\"k\">||</span> computed<span class=\"k\">[</span> name <span class=\"k\">];</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> ret <span class=\"k\">===</span> <span class=\"s\">\"\"</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>jQuery<span class=\"k\">.</span>contains<span class=\"k\">(</span> elem<span class=\"k\">.</span>ownerDocument<span class=\"k\">,</span> elem <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                ret <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>style<span class=\"k\">(</span> elem<span class=\"k\">,</span> name <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// A tribute to the \"awesome hack by Dean Edwards\"</span>","            <span class=\"c\">// Android Browser returns percentage for some values,</span>","            <span class=\"c\">// but width seems to be reliably pixels.</span>","            <span class=\"c\">// This is against the CSSOM draft spec:</span>","            <span class=\"c\">// https://drafts.csswg.org/cssom/#resolved-values</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>support<span class=\"k\">.</span>pixelBoxStyles<span class=\"k\">()</span> <span class=\"k\">&amp;&amp;</span> rnumnonpx<span class=\"k\">.</span>test<span class=\"k\">(</span> ret <span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> rboxStyle<span class=\"k\">.</span>test<span class=\"k\">(</span> name <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                <span class=\"c\">// Remember the original values</span>","                width <span class=\"k\">=</span> style<span class=\"k\">.</span>width<span class=\"k\">;</span>","                minWidth <span class=\"k\">=</span> style<span class=\"k\">.</span>minWidth<span class=\"k\">;</span>","                maxWidth <span class=\"k\">=</span> style<span class=\"k\">.</span>maxWidth<span class=\"k\">;</span>","","                <span class=\"c\">// Put in the new values to get a computed value out</span>","                style<span class=\"k\">.</span>minWidth <span class=\"k\">=</span> style<span class=\"k\">.</span>maxWidth <span class=\"k\">=</span> style<span class=\"k\">.</span>width <span class=\"k\">=</span> ret<span class=\"k\">;</span>","                ret <span class=\"k\">=</span> computed<span class=\"k\">.</span>width<span class=\"k\">;</span>","","                <span class=\"c\">// Revert the changed values</span>","                style<span class=\"k\">.</span>width <span class=\"k\">=</span> width<span class=\"k\">;</span>","                style<span class=\"k\">.</span>minWidth <span class=\"k\">=</span> minWidth<span class=\"k\">;</span>","                style<span class=\"k\">.</span>maxWidth <span class=\"k\">=</span> maxWidth<span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">return</span> ret <span class=\"k\">!==</span> undefined <span class=\"k\">?</span>","","            <span class=\"c\">// Support: IE &lt;=9 - 11 only</span>","            <span class=\"c\">// IE returns zIndex value as an integer.</span>","            ret <span class=\"k\">+</span> <span class=\"s\">\"\"</span> <span class=\"k\">:</span>","            ret<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","","    <span class=\"k\">function</span> addGetHookIf<span class=\"k\">(</span> conditionFn<span class=\"k\">,</span> hookFn <span class=\"k\">)</span> <span class=\"k\">{</span>","","        <span class=\"c\">// Define the hook, we'll check on the first run if it's really needed.</span>","        <span class=\"k\">return</span> <span class=\"k\">{</span>","            get<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> conditionFn<span class=\"k\">()</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                    <span class=\"c\">// Hook not needed (or it's not possible to use it due</span>","                    <span class=\"c\">// to missing dependency), remove it.</span>","                    <span class=\"k\">delete</span> <span class=\"k\">this</span><span class=\"k\">.</span>get<span class=\"k\">;</span>","                    <span class=\"k\">return</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// Hook needed; redefine it so that the support test is not executed again.</span>","                <span class=\"k\">return</span> <span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">.</span>get <span class=\"k\">=</span> hookFn <span class=\"k\">).</span>apply<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> arguments <span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","","","    <span class=\"k\">var</span>","","        <span class=\"c\">// Swappable if display is none or starts with table</span>","        <span class=\"c\">// except \"table\", \"table-cell\", or \"table-caption\"</span>","        <span class=\"c\">// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display</span>","        rdisplayswap <span class=\"k\">=</span> <span class=\"s\">/^(none|table(?!-c[ea]).+)/</span><span class=\"k\">,</span>","        rcustomProp <span class=\"k\">=</span> <span class=\"s\">/^--/</span><span class=\"k\">,</span>","        cssShow <span class=\"k\">=</span> <span class=\"k\">{</span> position<span class=\"k\">:</span> <span class=\"s\">\"absolute\"</span><span class=\"k\">,</span> visibility<span class=\"k\">:</span> <span class=\"s\">\"hidden\"</span><span class=\"k\">,</span> display<span class=\"k\">:</span> <span class=\"s\">\"block\"</span> <span class=\"k\">}</span><span class=\"k\">,</span>","        cssNormalTransform <span class=\"k\">=</span> <span class=\"k\">{</span>","            letterSpacing<span class=\"k\">:</span> <span class=\"s\">\"0\"</span><span class=\"k\">,</span>","            fontWeight<span class=\"k\">:</span> <span class=\"s\">\"400\"</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        cssPrefixes <span class=\"k\">=</span> <span class=\"k\">[</span> <span class=\"s\">\"Webkit\"</span><span class=\"k\">,</span> <span class=\"s\">\"Moz\"</span><span class=\"k\">,</span> <span class=\"s\">\"ms\"</span> <span class=\"k\">],</span>","        emptyStyle <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span> <span class=\"s\">\"div\"</span> <span class=\"k\">).</span>style<span class=\"k\">;</span>","","<span class=\"c\">// Return a css property mapped to a potentially vendor prefixed property</span>","    <span class=\"k\">function</span> vendorPropName<span class=\"k\">(</span> name <span class=\"k\">)</span> <span class=\"k\">{</span>","","        <span class=\"c\">// Shortcut for names that are not vendor prefixed</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> name <span class=\"k\">in</span> emptyStyle <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> name<span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"c\">// Check for vendor prefixed names</span>","        <span class=\"k\">var</span> capName <span class=\"k\">=</span> name<span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">].</span>toUpperCase<span class=\"k\">()</span> <span class=\"k\">+</span> name<span class=\"k\">.</span>slice<span class=\"k\">(</span> <span class=\"s\">1</span> <span class=\"k\">),</span>","            i <span class=\"k\">=</span> cssPrefixes<span class=\"k\">.</span>length<span class=\"k\">;</span>","","        <span class=\"k\">while</span> <span class=\"k\">(</span> i<span class=\"k\">--</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            name <span class=\"k\">=</span> cssPrefixes<span class=\"k\">[</span> i <span class=\"k\">]</span> <span class=\"k\">+</span> capName<span class=\"k\">;</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> name <span class=\"k\">in</span> emptyStyle <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> name<span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","<span class=\"c\">// Return a property mapped along what jQuery.cssProps suggests or to</span>","<span class=\"c\">// a vendor prefixed property.</span>","    <span class=\"k\">function</span> finalPropName<span class=\"k\">(</span> name <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> ret <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>cssProps<span class=\"k\">[</span> name <span class=\"k\">];</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>ret <span class=\"k\">)</span> <span class=\"k\">{</span>","            ret <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>cssProps<span class=\"k\">[</span> name <span class=\"k\">]</span> <span class=\"k\">=</span> vendorPropName<span class=\"k\">(</span> name <span class=\"k\">)</span> <span class=\"k\">||</span> name<span class=\"k\">;</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> ret<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> setPositiveNumber<span class=\"k\">(</span> elem<span class=\"k\">,</span> value<span class=\"k\">,</span> subtract <span class=\"k\">)</span> <span class=\"k\">{</span>","","        <span class=\"c\">// Any relative (+/-) values have already been</span>","        <span class=\"c\">// normalized at this point</span>","        <span class=\"k\">var</span> matches <span class=\"k\">=</span> rcssNum<span class=\"k\">.</span>exec<span class=\"k\">(</span> value <span class=\"k\">);</span>","        <span class=\"k\">return</span> matches <span class=\"k\">?</span>","","            <span class=\"c\">// Guard against undefined \"subtract\", e.g., when used as in cssHooks</span>","            Math<span class=\"k\">.</span>max<span class=\"k\">(</span> <span class=\"s\">0</span><span class=\"k\">,</span> matches<span class=\"k\">[</span> <span class=\"s\">2</span> <span class=\"k\">]</span> <span class=\"k\">-</span> <span class=\"k\">(</span> subtract <span class=\"k\">||</span> <span class=\"s\">0</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"k\">(</span> matches<span class=\"k\">[</span> <span class=\"s\">3</span> <span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"s\">\"px\"</span> <span class=\"k\">)</span> <span class=\"k\">:</span>","            value<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> boxModelAdjustment<span class=\"k\">(</span> elem<span class=\"k\">,</span> dimension<span class=\"k\">,</span> box<span class=\"k\">,</span> isBorderBox<span class=\"k\">,</span> styles<span class=\"k\">,</span> computedVal <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> i <span class=\"k\">=</span> dimension <span class=\"k\">===</span> <span class=\"s\">\"width\"</span> <span class=\"k\">?</span> <span class=\"s\">1</span> <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span>","            extra <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","            delta <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","","        <span class=\"c\">// Adjustment may not be necessary</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> box <span class=\"k\">===</span> <span class=\"k\">(</span> isBorderBox <span class=\"k\">?</span> <span class=\"s\">\"border\"</span> <span class=\"k\">:</span> <span class=\"s\">\"content\"</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"s\">0</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">;</span> i <span class=\"k\">&lt;</span> <span class=\"s\">4</span><span class=\"k\">;</span> i <span class=\"k\">+=</span> <span class=\"s\">2</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"c\">// Both box models exclude margin</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> box <span class=\"k\">===</span> <span class=\"s\">\"margin\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                delta <span class=\"k\">+=</span> jQuery<span class=\"k\">.</span>css<span class=\"k\">(</span> elem<span class=\"k\">,</span> box <span class=\"k\">+</span> cssExpand<span class=\"k\">[</span> i <span class=\"k\">],</span> <span class=\"k\">true</span><span class=\"k\">,</span> styles <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// If we get here with a content-box, we're seeking \"padding\" or \"border\" or \"margin\"</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>isBorderBox <span class=\"k\">)</span> <span class=\"k\">{</span>","","                <span class=\"c\">// Add padding</span>","                delta <span class=\"k\">+=</span> jQuery<span class=\"k\">.</span>css<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"s\">\"padding\"</span> <span class=\"k\">+</span> cssExpand<span class=\"k\">[</span> i <span class=\"k\">],</span> <span class=\"k\">true</span><span class=\"k\">,</span> styles <span class=\"k\">);</span>","","                <span class=\"c\">// For \"border\" or \"margin\", add border</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> box <span class=\"k\">!==</span> <span class=\"s\">\"padding\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    delta <span class=\"k\">+=</span> jQuery<span class=\"k\">.</span>css<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"s\">\"border\"</span> <span class=\"k\">+</span> cssExpand<span class=\"k\">[</span> i <span class=\"k\">]</span> <span class=\"k\">+</span> <span class=\"s\">\"Width\"</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">,</span> styles <span class=\"k\">);</span>","","                    <span class=\"c\">// But still keep track of it otherwise</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    extra <span class=\"k\">+=</span> jQuery<span class=\"k\">.</span>css<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"s\">\"border\"</span> <span class=\"k\">+</span> cssExpand<span class=\"k\">[</span> i <span class=\"k\">]</span> <span class=\"k\">+</span> <span class=\"s\">\"Width\"</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">,</span> styles <span class=\"k\">);</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// If we get here with a border-box (content + padding + border), we're seeking \"content\" or</span>","                <span class=\"c\">// \"padding\" or \"margin\"</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","","                <span class=\"c\">// For \"content\", subtract padding</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> box <span class=\"k\">===</span> <span class=\"s\">\"content\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    delta <span class=\"k\">-=</span> jQuery<span class=\"k\">.</span>css<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"s\">\"padding\"</span> <span class=\"k\">+</span> cssExpand<span class=\"k\">[</span> i <span class=\"k\">],</span> <span class=\"k\">true</span><span class=\"k\">,</span> styles <span class=\"k\">);</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// For \"content\" or \"padding\", subtract border</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> box <span class=\"k\">!==</span> <span class=\"s\">\"margin\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    delta <span class=\"k\">-=</span> jQuery<span class=\"k\">.</span>css<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"s\">\"border\"</span> <span class=\"k\">+</span> cssExpand<span class=\"k\">[</span> i <span class=\"k\">]</span> <span class=\"k\">+</span> <span class=\"s\">\"Width\"</span><span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">,</span> styles <span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","","        <span class=\"c\">// Account for positive content-box scroll gutter when requested by providing computedVal</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>isBorderBox <span class=\"k\">&amp;&amp;</span> computedVal <span class=\"k\">&gt;=</span> <span class=\"s\">0</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"c\">// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border</span>","            <span class=\"c\">// Assuming integer scroll gutter, subtract the rest and round down</span>","            delta <span class=\"k\">+=</span> Math<span class=\"k\">.</span>max<span class=\"k\">(</span> <span class=\"s\">0</span><span class=\"k\">,</span> Math<span class=\"k\">.</span>ceil<span class=\"k\">(</span>","                elem<span class=\"k\">[</span> <span class=\"s\">\"offset\"</span> <span class=\"k\">+</span> dimension<span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">].</span>toUpperCase<span class=\"k\">()</span> <span class=\"k\">+</span> dimension<span class=\"k\">.</span>slice<span class=\"k\">(</span> <span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">]</span> <span class=\"k\">-</span>","                computedVal <span class=\"k\">-</span>","                delta <span class=\"k\">-</span>","                extra <span class=\"k\">-</span>","                <span class=\"s\">0.5</span>","            <span class=\"k\">)</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">return</span> delta<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> getWidthOrHeight<span class=\"k\">(</span> elem<span class=\"k\">,</span> dimension<span class=\"k\">,</span> extra <span class=\"k\">)</span> <span class=\"k\">{</span>","","        <span class=\"c\">// Start with computed style</span>","        <span class=\"k\">var</span> styles <span class=\"k\">=</span> getStyles<span class=\"k\">(</span> elem <span class=\"k\">),</span>","            val <span class=\"k\">=</span> curCSS<span class=\"k\">(</span> elem<span class=\"k\">,</span> dimension<span class=\"k\">,</span> styles <span class=\"k\">),</span>","            isBorderBox <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>css<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"s\">\"boxSizing\"</span><span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">,</span> styles <span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"s\">\"border-box\"</span><span class=\"k\">,</span>","            valueIsBorderBox <span class=\"k\">=</span> isBorderBox<span class=\"k\">;</span>","","        <span class=\"c\">// Support: Firefox &lt;=54</span>","        <span class=\"c\">// Return a confounding non-pixel value or feign ignorance, as appropriate.</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> rnumnonpx<span class=\"k\">.</span>test<span class=\"k\">(</span> val <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>extra <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> val<span class=\"k\">;</span>","            <span class=\"k\">}</span>","            val <span class=\"k\">=</span> <span class=\"s\">\"auto\"</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"c\">// Check for style in case a browser which returns unreliable values</span>","        <span class=\"c\">// for getComputedStyle silently falls back to the reliable elem.style</span>","        valueIsBorderBox <span class=\"k\">=</span> valueIsBorderBox <span class=\"k\">&amp;&amp;</span>","            <span class=\"k\">(</span> support<span class=\"k\">.</span>boxSizingReliable<span class=\"k\">()</span> <span class=\"k\">||</span> val <span class=\"k\">===</span> elem<span class=\"k\">.</span>style<span class=\"k\">[</span> dimension <span class=\"k\">]</span> <span class=\"k\">);</span>","","        <span class=\"c\">// Fall back to offsetWidth/offsetHeight when value is \"auto\"</span>","        <span class=\"c\">// This happens for inline elements with no explicit setting (gh-3571)</span>","        <span class=\"c\">// Support: Android &lt;=4.1 - 4.3 only</span>","        <span class=\"c\">// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> val <span class=\"k\">===</span> <span class=\"s\">\"auto\"</span> <span class=\"k\">||</span>","            <span class=\"k\">!</span>parseFloat<span class=\"k\">(</span> val <span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> jQuery<span class=\"k\">.</span>css<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"s\">\"display\"</span><span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">,</span> styles <span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"s\">\"inline\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","            val <span class=\"k\">=</span> elem<span class=\"k\">[</span> <span class=\"s\">\"offset\"</span> <span class=\"k\">+</span> dimension<span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">].</span>toUpperCase<span class=\"k\">()</span> <span class=\"k\">+</span> dimension<span class=\"k\">.</span>slice<span class=\"k\">(</span> <span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">];</span>","","            <span class=\"c\">// offsetWidth/offsetHeight provide border-box values</span>","            valueIsBorderBox <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"c\">// Normalize \"\" and auto</span>","        val <span class=\"k\">=</span> parseFloat<span class=\"k\">(</span> val <span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"s\">0</span><span class=\"k\">;</span>","","        <span class=\"c\">// Adjust for the element's box model</span>","        <span class=\"k\">return</span> <span class=\"k\">(</span> val <span class=\"k\">+</span>","            boxModelAdjustment<span class=\"k\">(</span>","                elem<span class=\"k\">,</span>","                dimension<span class=\"k\">,</span>","                extra <span class=\"k\">||</span> <span class=\"k\">(</span> isBorderBox <span class=\"k\">?</span> <span class=\"s\">\"border\"</span> <span class=\"k\">:</span> <span class=\"s\">\"content\"</span> <span class=\"k\">),</span>","                valueIsBorderBox<span class=\"k\">,</span>","                styles<span class=\"k\">,</span>","","                <span class=\"c\">// Provide the current computed size to request scroll gutter calculation (gh-3589)</span>","                val","            <span class=\"k\">)</span>","        <span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">\"px\"</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    jQuery<span class=\"k\">.</span>extend<span class=\"k\">(</span> <span class=\"k\">{</span>","","        <span class=\"c\">// Add in style property hooks for overriding the default</span>","        <span class=\"c\">// behavior of getting and setting a style property</span>","        cssHooks<span class=\"k\">:</span> <span class=\"k\">{</span>","            opacity<span class=\"k\">:</span> <span class=\"k\">{</span>","                get<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> computed <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> computed <span class=\"k\">)</span> <span class=\"k\">{</span>","","                        <span class=\"c\">// We should always get a number back from opacity</span>","                        <span class=\"k\">var</span> ret <span class=\"k\">=</span> curCSS<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"s\">\"opacity\"</span> <span class=\"k\">);</span>","                        <span class=\"k\">return</span> ret <span class=\"k\">===</span> <span class=\"s\">\"\"</span> <span class=\"k\">?</span> <span class=\"s\">\"1\"</span> <span class=\"k\">:</span> ret<span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        <span class=\"c\">// Don't automatically add \"px\" to these possibly-unitless properties</span>","        cssNumber<span class=\"k\">:</span> <span class=\"k\">{</span>","            <span class=\"s\">\"animationIterationCount\"</span><span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","            <span class=\"s\">\"columnCount\"</span><span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","            <span class=\"s\">\"fillOpacity\"</span><span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","            <span class=\"s\">\"flexGrow\"</span><span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","            <span class=\"s\">\"flexShrink\"</span><span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","            <span class=\"s\">\"fontWeight\"</span><span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","            <span class=\"s\">\"lineHeight\"</span><span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","            <span class=\"s\">\"opacity\"</span><span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","            <span class=\"s\">\"order\"</span><span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","            <span class=\"s\">\"orphans\"</span><span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","            <span class=\"s\">\"widows\"</span><span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","            <span class=\"s\">\"zIndex\"</span><span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","            <span class=\"s\">\"zoom\"</span><span class=\"k\">:</span> <span class=\"k\">true</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        <span class=\"c\">// Add in properties whose names you wish to fix before</span>","        <span class=\"c\">// setting or getting the value</span>","        cssProps<span class=\"k\">:</span> <span class=\"k\">{}</span><span class=\"k\">,</span>","","        <span class=\"c\">// Get and set the style property on a DOM Node</span>","        style<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> name<span class=\"k\">,</span> value<span class=\"k\">,</span> extra <span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"c\">// Don't set styles on text and comment nodes</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>elem <span class=\"k\">||</span> elem<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">3</span> <span class=\"k\">||</span> elem<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">8</span> <span class=\"k\">||</span> <span class=\"k\">!</span>elem<span class=\"k\">.</span>style <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Make sure that we're working with the right name</span>","            <span class=\"k\">var</span> ret<span class=\"k\">,</span> type<span class=\"k\">,</span> hooks<span class=\"k\">,</span>","                origName <span class=\"k\">=</span> camelCase<span class=\"k\">(</span> name <span class=\"k\">),</span>","                isCustomProp <span class=\"k\">=</span> rcustomProp<span class=\"k\">.</span>test<span class=\"k\">(</span> name <span class=\"k\">),</span>","                style <span class=\"k\">=</span> elem<span class=\"k\">.</span>style<span class=\"k\">;</span>","","            <span class=\"c\">// Make sure that we're working with the right name. We don't</span>","            <span class=\"c\">// want to query the value if it is a CSS custom property</span>","            <span class=\"c\">// since they are user-defined.</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>isCustomProp <span class=\"k\">)</span> <span class=\"k\">{</span>","                name <span class=\"k\">=</span> finalPropName<span class=\"k\">(</span> origName <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Gets hook for the prefixed version, then unprefixed version</span>","            hooks <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>cssHooks<span class=\"k\">[</span> name <span class=\"k\">]</span> <span class=\"k\">||</span> jQuery<span class=\"k\">.</span>cssHooks<span class=\"k\">[</span> origName <span class=\"k\">];</span>","","            <span class=\"c\">// Check if we're setting a value</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> value <span class=\"k\">!==</span> undefined <span class=\"k\">)</span> <span class=\"k\">{</span>","                type <span class=\"k\">=</span> <span class=\"k\">typeof</span> value<span class=\"k\">;</span>","","                <span class=\"c\">// Convert \"+=\" or \"-=\" to relative numbers (#7345)</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> type <span class=\"k\">===</span> <span class=\"s\">\"string\"</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span> ret <span class=\"k\">=</span> rcssNum<span class=\"k\">.</span>exec<span class=\"k\">(</span> value <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> ret<span class=\"k\">[</span> <span class=\"s\">1</span> <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    value <span class=\"k\">=</span> adjustCSS<span class=\"k\">(</span> elem<span class=\"k\">,</span> name<span class=\"k\">,</span> ret <span class=\"k\">);</span>","","                    <span class=\"c\">// Fixes bug #9237</span>","                    type <span class=\"k\">=</span> <span class=\"s\">\"number\"</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// Make sure that null and NaN values aren't set (#7116)</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> value <span class=\"k\">==</span> <span class=\"k\">null</span> <span class=\"k\">||</span> value <span class=\"k\">!==</span> value <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">return</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// If a number was passed in, add the unit (except for certain CSS properties)</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> type <span class=\"k\">===</span> <span class=\"s\">\"number\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    value <span class=\"k\">+=</span> ret <span class=\"k\">&amp;&amp;</span> ret<span class=\"k\">[</span> <span class=\"s\">3</span> <span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"k\">(</span> jQuery<span class=\"k\">.</span>cssNumber<span class=\"k\">[</span> origName <span class=\"k\">]</span> <span class=\"k\">?</span> <span class=\"s\">\"\"</span> <span class=\"k\">:</span> <span class=\"s\">\"px\"</span> <span class=\"k\">);</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// background-* props affect original clone's values</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>support<span class=\"k\">.</span>clearCloneStyle <span class=\"k\">&amp;&amp;</span> value <span class=\"k\">===</span> <span class=\"s\">\"\"</span> <span class=\"k\">&amp;&amp;</span> name<span class=\"k\">.</span>indexOf<span class=\"k\">(</span> <span class=\"s\">\"background\"</span> <span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"s\">0</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    style<span class=\"k\">[</span> name <span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">\"inherit\"</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// If a hook was provided, use that value, otherwise just set the specified value</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>hooks <span class=\"k\">||</span> <span class=\"k\">!(</span> <span class=\"s\">\"set\"</span> <span class=\"k\">in</span> hooks <span class=\"k\">)</span> <span class=\"k\">||</span>","                    <span class=\"k\">(</span> value <span class=\"k\">=</span> hooks<span class=\"k\">.</span>set<span class=\"k\">(</span> elem<span class=\"k\">,</span> value<span class=\"k\">,</span> extra <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">!==</span> undefined <span class=\"k\">)</span> <span class=\"k\">{</span>","","                    <span class=\"k\">if</span> <span class=\"k\">(</span> isCustomProp <span class=\"k\">)</span> <span class=\"k\">{</span>","                        style<span class=\"k\">.</span>setProperty<span class=\"k\">(</span> name<span class=\"k\">,</span> value <span class=\"k\">);</span>","                    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                        style<span class=\"k\">[</span> name <span class=\"k\">]</span> <span class=\"k\">=</span> value<span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","","                <span class=\"c\">// If a hook was provided get the non-computed value from there</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> hooks <span class=\"k\">&amp;&amp;</span> <span class=\"s\">\"get\"</span> <span class=\"k\">in</span> hooks <span class=\"k\">&amp;&amp;</span>","                    <span class=\"k\">(</span> ret <span class=\"k\">=</span> hooks<span class=\"k\">.</span>get<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">,</span> extra <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">!==</span> undefined <span class=\"k\">)</span> <span class=\"k\">{</span>","","                    <span class=\"k\">return</span> ret<span class=\"k\">;</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// Otherwise just get the value from the style object</span>","                <span class=\"k\">return</span> style<span class=\"k\">[</span> name <span class=\"k\">];</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        css<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> name<span class=\"k\">,</span> extra<span class=\"k\">,</span> styles <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> val<span class=\"k\">,</span> num<span class=\"k\">,</span> hooks<span class=\"k\">,</span>","                origName <span class=\"k\">=</span> camelCase<span class=\"k\">(</span> name <span class=\"k\">),</span>","                isCustomProp <span class=\"k\">=</span> rcustomProp<span class=\"k\">.</span>test<span class=\"k\">(</span> name <span class=\"k\">);</span>","","            <span class=\"c\">// Make sure that we're working with the right name. We don't</span>","            <span class=\"c\">// want to modify the value if it is a CSS custom property</span>","            <span class=\"c\">// since they are user-defined.</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>isCustomProp <span class=\"k\">)</span> <span class=\"k\">{</span>","                name <span class=\"k\">=</span> finalPropName<span class=\"k\">(</span> origName <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Try prefixed name followed by the unprefixed name</span>","            hooks <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>cssHooks<span class=\"k\">[</span> name <span class=\"k\">]</span> <span class=\"k\">||</span> jQuery<span class=\"k\">.</span>cssHooks<span class=\"k\">[</span> origName <span class=\"k\">];</span>","","            <span class=\"c\">// If a hook was provided get the computed value from there</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> hooks <span class=\"k\">&amp;&amp;</span> <span class=\"s\">\"get\"</span> <span class=\"k\">in</span> hooks <span class=\"k\">)</span> <span class=\"k\">{</span>","                val <span class=\"k\">=</span> hooks<span class=\"k\">.</span>get<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"k\">true</span><span class=\"k\">,</span> extra <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Otherwise, if a way to get the computed value exists, use that</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> val <span class=\"k\">===</span> undefined <span class=\"k\">)</span> <span class=\"k\">{</span>","                val <span class=\"k\">=</span> curCSS<span class=\"k\">(</span> elem<span class=\"k\">,</span> name<span class=\"k\">,</span> styles <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Convert \"normal\" to computed value</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> val <span class=\"k\">===</span> <span class=\"s\">\"normal\"</span> <span class=\"k\">&amp;&amp;</span> name <span class=\"k\">in</span> cssNormalTransform <span class=\"k\">)</span> <span class=\"k\">{</span>","                val <span class=\"k\">=</span> cssNormalTransform<span class=\"k\">[</span> name <span class=\"k\">];</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Make numeric if forced or a qualifier was provided and val looks numeric</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> extra <span class=\"k\">===</span> <span class=\"s\">\"\"</span> <span class=\"k\">||</span> extra <span class=\"k\">)</span> <span class=\"k\">{</span>","                num <span class=\"k\">=</span> parseFloat<span class=\"k\">(</span> val <span class=\"k\">);</span>","                <span class=\"k\">return</span> extra <span class=\"k\">===</span> <span class=\"k\">true</span> <span class=\"k\">||</span> isFinite<span class=\"k\">(</span> num <span class=\"k\">)</span> <span class=\"k\">?</span> num <span class=\"k\">||</span> <span class=\"s\">0</span> <span class=\"k\">:</span> val<span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">return</span> val<span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span> <span class=\"k\">);</span>","","    jQuery<span class=\"k\">.</span>each<span class=\"k\">(</span> <span class=\"k\">[</span> <span class=\"s\">\"height\"</span><span class=\"k\">,</span> <span class=\"s\">\"width\"</span> <span class=\"k\">],</span> <span class=\"k\">function</span><span class=\"k\">(</span> i<span class=\"k\">,</span> dimension <span class=\"k\">)</span> <span class=\"k\">{</span>","        jQuery<span class=\"k\">.</span>cssHooks<span class=\"k\">[</span> dimension <span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","            get<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> computed<span class=\"k\">,</span> extra <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> computed <span class=\"k\">)</span> <span class=\"k\">{</span>","","                    <span class=\"c\">// Certain elements can have dimension info if we invisibly show them</span>","                    <span class=\"c\">// but it must have a current display style that would benefit</span>","                    <span class=\"k\">return</span> rdisplayswap<span class=\"k\">.</span>test<span class=\"k\">(</span> jQuery<span class=\"k\">.</span>css<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"s\">\"display\"</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span>","","                    <span class=\"c\">// Support: Safari 8+</span>","                    <span class=\"c\">// Table columns in Safari have non-zero offsetWidth &amp; zero</span>","                    <span class=\"c\">// getBoundingClientRect().width unless display is changed.</span>","                    <span class=\"c\">// Support: IE &lt;=11 only</span>","                    <span class=\"c\">// Running getBoundingClientRect on a disconnected node</span>","                    <span class=\"c\">// in IE throws an error.</span>","                    <span class=\"k\">(</span> <span class=\"k\">!</span>elem<span class=\"k\">.</span>getClientRects<span class=\"k\">().</span>length <span class=\"k\">||</span> <span class=\"k\">!</span>elem<span class=\"k\">.</span>getBoundingClientRect<span class=\"k\">().</span>width <span class=\"k\">)</span> <span class=\"k\">?</span>","                        swap<span class=\"k\">(</span> elem<span class=\"k\">,</span> cssShow<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                            <span class=\"k\">return</span> getWidthOrHeight<span class=\"k\">(</span> elem<span class=\"k\">,</span> dimension<span class=\"k\">,</span> extra <span class=\"k\">);</span>","                        <span class=\"k\">}</span> <span class=\"k\">)</span> <span class=\"k\">:</span>","                        getWidthOrHeight<span class=\"k\">(</span> elem<span class=\"k\">,</span> dimension<span class=\"k\">,</span> extra <span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span><span class=\"k\">,</span>","","            set<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> value<span class=\"k\">,</span> extra <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> matches<span class=\"k\">,</span>","                    styles <span class=\"k\">=</span> getStyles<span class=\"k\">(</span> elem <span class=\"k\">),</span>","                    isBorderBox <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>css<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"s\">\"boxSizing\"</span><span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">,</span> styles <span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"s\">\"border-box\"</span><span class=\"k\">,</span>","                    subtract <span class=\"k\">=</span> extra <span class=\"k\">&amp;&amp;</span> boxModelAdjustment<span class=\"k\">(</span>","                        elem<span class=\"k\">,</span>","                        dimension<span class=\"k\">,</span>","                        extra<span class=\"k\">,</span>","                        isBorderBox<span class=\"k\">,</span>","                        styles","                    <span class=\"k\">);</span>","","                <span class=\"c\">// Account for unreliable border-box dimensions by comparing offset* to computed and</span>","                <span class=\"c\">// faking a content-box to get border and padding (gh-3699)</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> isBorderBox <span class=\"k\">&amp;&amp;</span> support<span class=\"k\">.</span>scrollboxSize<span class=\"k\">()</span> <span class=\"k\">===</span> styles<span class=\"k\">.</span>position <span class=\"k\">)</span> <span class=\"k\">{</span>","                    subtract <span class=\"k\">-=</span> Math<span class=\"k\">.</span>ceil<span class=\"k\">(</span>","                        elem<span class=\"k\">[</span> <span class=\"s\">\"offset\"</span> <span class=\"k\">+</span> dimension<span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">].</span>toUpperCase<span class=\"k\">()</span> <span class=\"k\">+</span> dimension<span class=\"k\">.</span>slice<span class=\"k\">(</span> <span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">]</span> <span class=\"k\">-</span>","                        parseFloat<span class=\"k\">(</span> styles<span class=\"k\">[</span> dimension <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">-</span>","                        boxModelAdjustment<span class=\"k\">(</span> elem<span class=\"k\">,</span> dimension<span class=\"k\">,</span> <span class=\"s\">\"border\"</span><span class=\"k\">,</span> <span class=\"k\">false</span><span class=\"k\">,</span> styles <span class=\"k\">)</span> <span class=\"k\">-</span>","                        <span class=\"s\">0.5</span>","                    <span class=\"k\">);</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// Convert to pixels if value adjustment is needed</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> subtract <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span> matches <span class=\"k\">=</span> rcssNum<span class=\"k\">.</span>exec<span class=\"k\">(</span> value <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span>","                    <span class=\"k\">(</span> matches<span class=\"k\">[</span> <span class=\"s\">3</span> <span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"s\">\"px\"</span> <span class=\"k\">)</span> <span class=\"k\">!==</span> <span class=\"s\">\"px\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                    elem<span class=\"k\">.</span>style<span class=\"k\">[</span> dimension <span class=\"k\">]</span> <span class=\"k\">=</span> value<span class=\"k\">;</span>","                    value <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>css<span class=\"k\">(</span> elem<span class=\"k\">,</span> dimension <span class=\"k\">);</span>","                <span class=\"k\">}</span>","","                <span class=\"k\">return</span> setPositiveNumber<span class=\"k\">(</span> elem<span class=\"k\">,</span> value<span class=\"k\">,</span> subtract <span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"k\">}</span> <span class=\"k\">);</span>","","    jQuery<span class=\"k\">.</span>cssHooks<span class=\"k\">.</span>marginLeft <span class=\"k\">=</span> addGetHookIf<span class=\"k\">(</span> support<span class=\"k\">.</span>reliableMarginLeft<span class=\"k\">,</span>","        <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> computed <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> computed <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> <span class=\"k\">(</span> parseFloat<span class=\"k\">(</span> curCSS<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"s\">\"marginLeft\"</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">||</span>","                    elem<span class=\"k\">.</span>getBoundingClientRect<span class=\"k\">().</span>left <span class=\"k\">-</span>","                    swap<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"k\">{</span> marginLeft<span class=\"k\">:</span> <span class=\"s\">0</span> <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                        <span class=\"k\">return</span> elem<span class=\"k\">.</span>getBoundingClientRect<span class=\"k\">().</span>left<span class=\"k\">;</span>","                    <span class=\"k\">}</span> <span class=\"k\">)</span>","                <span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">\"px\"</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">);</span>","","<span class=\"c\">// These hooks are used by animate to expand properties</span>","    jQuery<span class=\"k\">.</span>each<span class=\"k\">(</span> <span class=\"k\">{</span>","        margin<span class=\"k\">:</span> <span class=\"s\">\"\"</span><span class=\"k\">,</span>","        padding<span class=\"k\">:</span> <span class=\"s\">\"\"</span><span class=\"k\">,</span>","        border<span class=\"k\">:</span> <span class=\"s\">\"Width\"</span>","    <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span> prefix<span class=\"k\">,</span> suffix <span class=\"k\">)</span> <span class=\"k\">{</span>","        jQuery<span class=\"k\">.</span>cssHooks<span class=\"k\">[</span> prefix <span class=\"k\">+</span> suffix <span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","            expand<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> value <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","                    expanded <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">,</span>","","                    <span class=\"c\">// Assumes a single number if not a string</span>","                    parts <span class=\"k\">=</span> <span class=\"k\">typeof</span> value <span class=\"k\">===</span> <span class=\"s\">\"string\"</span> <span class=\"k\">?</span> value<span class=\"k\">.</span>split<span class=\"k\">(</span> <span class=\"s\">\" \"</span> <span class=\"k\">)</span> <span class=\"k\">:</span> <span class=\"k\">[</span> value <span class=\"k\">];</span>","","                <span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">;</span> i <span class=\"k\">&lt;</span> <span class=\"s\">4</span><span class=\"k\">;</span> i<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    expanded<span class=\"k\">[</span> prefix <span class=\"k\">+</span> cssExpand<span class=\"k\">[</span> i <span class=\"k\">]</span> <span class=\"k\">+</span> suffix <span class=\"k\">]</span> <span class=\"k\">=</span>","                        parts<span class=\"k\">[</span> i <span class=\"k\">]</span> <span class=\"k\">||</span> parts<span class=\"k\">[</span> i <span class=\"k\">-</span> <span class=\"s\">2</span> <span class=\"k\">]</span> <span class=\"k\">||</span> parts<span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">];</span>","                <span class=\"k\">}</span>","","                <span class=\"k\">return</span> expanded<span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span> prefix <span class=\"k\">!==</span> <span class=\"s\">\"margin\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            jQuery<span class=\"k\">.</span>cssHooks<span class=\"k\">[</span> prefix <span class=\"k\">+</span> suffix <span class=\"k\">].</span>set <span class=\"k\">=</span> setPositiveNumber<span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span> <span class=\"k\">);</span>","","    jQuery<span class=\"k\">.</span>fn<span class=\"k\">.</span>extend<span class=\"k\">(</span> <span class=\"k\">{</span>","        css<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> name<span class=\"k\">,</span> value <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> access<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> name<span class=\"k\">,</span> value <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> styles<span class=\"k\">,</span> len<span class=\"k\">,</span>","                    map <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">,</span>","                    i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span> Array<span class=\"k\">.</span>isArray<span class=\"k\">(</span> name <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    styles <span class=\"k\">=</span> getStyles<span class=\"k\">(</span> elem <span class=\"k\">);</span>","                    len <span class=\"k\">=</span> name<span class=\"k\">.</span>length<span class=\"k\">;</span>","","                    <span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">;</span> i <span class=\"k\">&lt;</span> len<span class=\"k\">;</span> i<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        map<span class=\"k\">[</span> name<span class=\"k\">[</span> i <span class=\"k\">]</span> <span class=\"k\">]</span> <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>css<span class=\"k\">(</span> elem<span class=\"k\">,</span> name<span class=\"k\">[</span> i <span class=\"k\">],</span> <span class=\"k\">false</span><span class=\"k\">,</span> styles <span class=\"k\">);</span>","                    <span class=\"k\">}</span>","","                    <span class=\"k\">return</span> map<span class=\"k\">;</span>","                <span class=\"k\">}</span>","","                <span class=\"k\">return</span> value <span class=\"k\">!==</span> undefined <span class=\"k\">?</span>","                    jQuery<span class=\"k\">.</span>style<span class=\"k\">(</span> elem<span class=\"k\">,</span> name<span class=\"k\">,</span> value <span class=\"k\">)</span> <span class=\"k\">:</span>","                    jQuery<span class=\"k\">.</span>css<span class=\"k\">(</span> elem<span class=\"k\">,</span> name <span class=\"k\">);</span>","            <span class=\"k\">}</span><span class=\"k\">,</span> name<span class=\"k\">,</span> value<span class=\"k\">,</span> arguments<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">1</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span> <span class=\"k\">);</span>","","","    <span class=\"k\">function</span> Tween<span class=\"k\">(</span> elem<span class=\"k\">,</span> options<span class=\"k\">,</span> prop<span class=\"k\">,</span> end<span class=\"k\">,</span> easing <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> <span class=\"k\">new</span> Tween<span class=\"k\">.</span>prototype<span class=\"k\">.</span>init<span class=\"k\">(</span> elem<span class=\"k\">,</span> options<span class=\"k\">,</span> prop<span class=\"k\">,</span> end<span class=\"k\">,</span> easing <span class=\"k\">);</span>","    <span class=\"k\">}</span>","    jQuery<span class=\"k\">.</span>Tween <span class=\"k\">=</span> Tween<span class=\"k\">;</span>","","    Tween<span class=\"k\">.</span>prototype <span class=\"k\">=</span> <span class=\"k\">{</span>","        constructor<span class=\"k\">:</span> Tween<span class=\"k\">,</span>","        init<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> options<span class=\"k\">,</span> prop<span class=\"k\">,</span> end<span class=\"k\">,</span> easing<span class=\"k\">,</span> unit <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>elem <span class=\"k\">=</span> elem<span class=\"k\">;</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>prop <span class=\"k\">=</span> prop<span class=\"k\">;</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>easing <span class=\"k\">=</span> easing <span class=\"k\">||</span> jQuery<span class=\"k\">.</span>easing<span class=\"k\">.</span>_default<span class=\"k\">;</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>options <span class=\"k\">=</span> options<span class=\"k\">;</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>start <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>now <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>cur<span class=\"k\">();</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>end <span class=\"k\">=</span> end<span class=\"k\">;</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>unit <span class=\"k\">=</span> unit <span class=\"k\">||</span> <span class=\"k\">(</span> jQuery<span class=\"k\">.</span>cssNumber<span class=\"k\">[</span> prop <span class=\"k\">]</span> <span class=\"k\">?</span> <span class=\"s\">\"\"</span> <span class=\"k\">:</span> <span class=\"s\">\"px\"</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        cur<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> hooks <span class=\"k\">=</span> Tween<span class=\"k\">.</span>propHooks<span class=\"k\">[</span> <span class=\"k\">this</span><span class=\"k\">.</span>prop <span class=\"k\">];</span>","","            <span class=\"k\">return</span> hooks <span class=\"k\">&amp;&amp;</span> hooks<span class=\"k\">.</span>get <span class=\"k\">?</span>","                hooks<span class=\"k\">.</span>get<span class=\"k\">(</span> <span class=\"k\">this</span> <span class=\"k\">)</span> <span class=\"k\">:</span>","                Tween<span class=\"k\">.</span>propHooks<span class=\"k\">.</span>_default<span class=\"k\">.</span>get<span class=\"k\">(</span> <span class=\"k\">this</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        run<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> percent <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> eased<span class=\"k\">,</span>","                hooks <span class=\"k\">=</span> Tween<span class=\"k\">.</span>propHooks<span class=\"k\">[</span> <span class=\"k\">this</span><span class=\"k\">.</span>prop <span class=\"k\">];</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">.</span>options<span class=\"k\">.</span>duration <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">this</span><span class=\"k\">.</span>pos <span class=\"k\">=</span> eased <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>easing<span class=\"k\">[</span> <span class=\"k\">this</span><span class=\"k\">.</span>easing <span class=\"k\">](</span>","                    percent<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>options<span class=\"k\">.</span>duration <span class=\"k\">*</span> percent<span class=\"k\">,</span> <span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"s\">1</span><span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>options<span class=\"k\">.</span>duration","                <span class=\"k\">);</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                <span class=\"k\">this</span><span class=\"k\">.</span>pos <span class=\"k\">=</span> eased <span class=\"k\">=</span> percent<span class=\"k\">;</span>","            <span class=\"k\">}</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>now <span class=\"k\">=</span> <span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">.</span>end <span class=\"k\">-</span> <span class=\"k\">this</span><span class=\"k\">.</span>start <span class=\"k\">)</span> <span class=\"k\">*</span> eased <span class=\"k\">+</span> <span class=\"k\">this</span><span class=\"k\">.</span>start<span class=\"k\">;</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">.</span>options<span class=\"k\">.</span>step <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">this</span><span class=\"k\">.</span>options<span class=\"k\">.</span>step<span class=\"k\">.</span>call<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">.</span>elem<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>now<span class=\"k\">,</span> <span class=\"k\">this</span> <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> hooks <span class=\"k\">&amp;&amp;</span> hooks<span class=\"k\">.</span>set <span class=\"k\">)</span> <span class=\"k\">{</span>","                hooks<span class=\"k\">.</span>set<span class=\"k\">(</span> <span class=\"k\">this</span> <span class=\"k\">);</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                Tween<span class=\"k\">.</span>propHooks<span class=\"k\">.</span>_default<span class=\"k\">.</span>set<span class=\"k\">(</span> <span class=\"k\">this</span> <span class=\"k\">);</span>","            <span class=\"k\">}</span>","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    Tween<span class=\"k\">.</span>prototype<span class=\"k\">.</span>init<span class=\"k\">.</span>prototype <span class=\"k\">=</span> Tween<span class=\"k\">.</span>prototype<span class=\"k\">;</span>","","    Tween<span class=\"k\">.</span>propHooks <span class=\"k\">=</span> <span class=\"k\">{</span>","        _default<span class=\"k\">:</span> <span class=\"k\">{</span>","            get<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> tween <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> result<span class=\"k\">;</span>","","                <span class=\"c\">// Use a property on the element directly when it is not a DOM element,</span>","                <span class=\"c\">// or when there is no matching style property that exists.</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> tween<span class=\"k\">.</span>elem<span class=\"k\">.</span>nodeType <span class=\"k\">!==</span> <span class=\"s\">1</span> <span class=\"k\">||</span>","                    tween<span class=\"k\">.</span>elem<span class=\"k\">[</span> tween<span class=\"k\">.</span>prop <span class=\"k\">]</span> <span class=\"k\">!=</span> <span class=\"k\">null</span> <span class=\"k\">&amp;&amp;</span> tween<span class=\"k\">.</span>elem<span class=\"k\">.</span>style<span class=\"k\">[</span> tween<span class=\"k\">.</span>prop <span class=\"k\">]</span> <span class=\"k\">==</span> <span class=\"k\">null</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">return</span> tween<span class=\"k\">.</span>elem<span class=\"k\">[</span> tween<span class=\"k\">.</span>prop <span class=\"k\">];</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// Passing an empty string as a 3rd parameter to .css will automatically</span>","                <span class=\"c\">// attempt a parseFloat and fallback to a string if the parse fails.</span>","                <span class=\"c\">// Simple values such as \"10px\" are parsed to Float;</span>","                <span class=\"c\">// complex values such as \"rotate(1rad)\" are returned as-is.</span>","                result <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>css<span class=\"k\">(</span> tween<span class=\"k\">.</span>elem<span class=\"k\">,</span> tween<span class=\"k\">.</span>prop<span class=\"k\">,</span> <span class=\"s\">\"\"</span> <span class=\"k\">);</span>","","                <span class=\"c\">// Empty strings, null, undefined and \"auto\" are converted to 0.</span>","                <span class=\"k\">return</span> <span class=\"k\">!</span>result <span class=\"k\">||</span> result <span class=\"k\">===</span> <span class=\"s\">\"auto\"</span> <span class=\"k\">?</span> <span class=\"s\">0</span> <span class=\"k\">:</span> result<span class=\"k\">;</span>","            <span class=\"k\">}</span><span class=\"k\">,</span>","            set<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> tween <span class=\"k\">)</span> <span class=\"k\">{</span>","","                <span class=\"c\">// Use step hook for back compat.</span>","                <span class=\"c\">// Use cssHook if its there.</span>","                <span class=\"c\">// Use .style if available and use plain properties where available.</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> jQuery<span class=\"k\">.</span>fx<span class=\"k\">.</span>step<span class=\"k\">[</span> tween<span class=\"k\">.</span>prop <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    jQuery<span class=\"k\">.</span>fx<span class=\"k\">.</span>step<span class=\"k\">[</span> tween<span class=\"k\">.</span>prop <span class=\"k\">](</span> tween <span class=\"k\">);</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> tween<span class=\"k\">.</span>elem<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">&amp;&amp;</span>","                    <span class=\"k\">(</span> tween<span class=\"k\">.</span>elem<span class=\"k\">.</span>style<span class=\"k\">[</span> jQuery<span class=\"k\">.</span>cssProps<span class=\"k\">[</span> tween<span class=\"k\">.</span>prop <span class=\"k\">]</span> <span class=\"k\">]</span> <span class=\"k\">!=</span> <span class=\"k\">null</span> <span class=\"k\">||</span>","                        jQuery<span class=\"k\">.</span>cssHooks<span class=\"k\">[</span> tween<span class=\"k\">.</span>prop <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    jQuery<span class=\"k\">.</span>style<span class=\"k\">(</span> tween<span class=\"k\">.</span>elem<span class=\"k\">,</span> tween<span class=\"k\">.</span>prop<span class=\"k\">,</span> tween<span class=\"k\">.</span>now <span class=\"k\">+</span> tween<span class=\"k\">.</span>unit <span class=\"k\">);</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    tween<span class=\"k\">.</span>elem<span class=\"k\">[</span> tween<span class=\"k\">.</span>prop <span class=\"k\">]</span> <span class=\"k\">=</span> tween<span class=\"k\">.</span>now<span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">// Support: IE &lt;=9 only</span>","<span class=\"c\">// Panic based approach to setting things on disconnected nodes</span>","    Tween<span class=\"k\">.</span>propHooks<span class=\"k\">.</span>scrollTop <span class=\"k\">=</span> Tween<span class=\"k\">.</span>propHooks<span class=\"k\">.</span>scrollLeft <span class=\"k\">=</span> <span class=\"k\">{</span>","        set<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> tween <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> tween<span class=\"k\">.</span>elem<span class=\"k\">.</span>nodeType <span class=\"k\">&amp;&amp;</span> tween<span class=\"k\">.</span>elem<span class=\"k\">.</span>parentNode <span class=\"k\">)</span> <span class=\"k\">{</span>","                tween<span class=\"k\">.</span>elem<span class=\"k\">[</span> tween<span class=\"k\">.</span>prop <span class=\"k\">]</span> <span class=\"k\">=</span> tween<span class=\"k\">.</span>now<span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    jQuery<span class=\"k\">.</span>easing <span class=\"k\">=</span> <span class=\"k\">{</span>","        linear<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> p <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> p<span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        swing<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> p <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"s\">0.5</span> <span class=\"k\">-</span> Math<span class=\"k\">.</span>cos<span class=\"k\">(</span> p <span class=\"k\">*</span> Math<span class=\"k\">.</span>PI <span class=\"k\">)</span> <span class=\"k\">/</span> <span class=\"s\">2</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        _default<span class=\"k\">:</span> <span class=\"s\">\"swing\"</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    jQuery<span class=\"k\">.</span>fx <span class=\"k\">=</span> Tween<span class=\"k\">.</span>prototype<span class=\"k\">.</span>init<span class=\"k\">;</span>","","<span class=\"c\">// Back compat &lt;1.8 extension point</span>","    jQuery<span class=\"k\">.</span>fx<span class=\"k\">.</span>step <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","","","","","    <span class=\"k\">var</span>","        fxNow<span class=\"k\">,</span> inProgress<span class=\"k\">,</span>","        rfxtypes <span class=\"k\">=</span> <span class=\"s\">/^(?:toggle|show|hide)$/</span><span class=\"k\">,</span>","        rrun <span class=\"k\">=</span> <span class=\"s\">/queueHooks$/</span><span class=\"k\">;</span>","","    <span class=\"k\">function</span> schedule<span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> inProgress <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> document<span class=\"k\">.</span>hidden <span class=\"k\">===</span> <span class=\"k\">false</span> <span class=\"k\">&amp;&amp;</span> window<span class=\"k\">.</span>requestAnimationFrame <span class=\"k\">)</span> <span class=\"k\">{</span>","                window<span class=\"k\">.</span>requestAnimationFrame<span class=\"k\">(</span> schedule <span class=\"k\">);</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                window<span class=\"k\">.</span>setTimeout<span class=\"k\">(</span> schedule<span class=\"k\">,</span> jQuery<span class=\"k\">.</span>fx<span class=\"k\">.</span>interval <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            jQuery<span class=\"k\">.</span>fx<span class=\"k\">.</span>tick<span class=\"k\">();</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","<span class=\"c\">// Animations created synchronously will run synchronously</span>","    <span class=\"k\">function</span> createFxNow<span class=\"k\">()</span> <span class=\"k\">{</span>","        window<span class=\"k\">.</span>setTimeout<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            fxNow <span class=\"k\">=</span> undefined<span class=\"k\">;</span>","        <span class=\"k\">}</span> <span class=\"k\">);</span>","        <span class=\"k\">return</span> <span class=\"k\">(</span> fxNow <span class=\"k\">=</span> Date<span class=\"k\">.</span>now<span class=\"k\">()</span> <span class=\"k\">);</span>","    <span class=\"k\">}</span>","","<span class=\"c\">// Generate parameters to create a standard animation</span>","    <span class=\"k\">function</span> genFx<span class=\"k\">(</span> type<span class=\"k\">,</span> includeWidth <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> which<span class=\"k\">,</span>","            i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","            attrs <span class=\"k\">=</span> <span class=\"k\">{</span> height<span class=\"k\">:</span> type <span class=\"k\">}</span><span class=\"k\">;</span>","","        <span class=\"c\">// If we include width, step value is 1 to do all cssExpand values,</span>","        <span class=\"c\">// otherwise step value is 2 to skip over Left and Right</span>","        includeWidth <span class=\"k\">=</span> includeWidth <span class=\"k\">?</span> <span class=\"s\">1</span> <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">;</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">;</span> i <span class=\"k\">&lt;</span> <span class=\"s\">4</span><span class=\"k\">;</span> i <span class=\"k\">+=</span> <span class=\"s\">2</span> <span class=\"k\">-</span> includeWidth <span class=\"k\">)</span> <span class=\"k\">{</span>","            which <span class=\"k\">=</span> cssExpand<span class=\"k\">[</span> i <span class=\"k\">];</span>","            attrs<span class=\"k\">[</span> <span class=\"s\">\"margin\"</span> <span class=\"k\">+</span> which <span class=\"k\">]</span> <span class=\"k\">=</span> attrs<span class=\"k\">[</span> <span class=\"s\">\"padding\"</span> <span class=\"k\">+</span> which <span class=\"k\">]</span> <span class=\"k\">=</span> type<span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span> includeWidth <span class=\"k\">)</span> <span class=\"k\">{</span>","            attrs<span class=\"k\">.</span>opacity <span class=\"k\">=</span> attrs<span class=\"k\">.</span>width <span class=\"k\">=</span> type<span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">return</span> attrs<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> createTween<span class=\"k\">(</span> value<span class=\"k\">,</span> prop<span class=\"k\">,</span> animation <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> tween<span class=\"k\">,</span>","            collection <span class=\"k\">=</span> <span class=\"k\">(</span> Animation<span class=\"k\">.</span>tweeners<span class=\"k\">[</span> prop <span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"k\">[]</span> <span class=\"k\">).</span>concat<span class=\"k\">(</span> Animation<span class=\"k\">.</span>tweeners<span class=\"k\">[</span> <span class=\"s\">\"*\"</span> <span class=\"k\">]</span> <span class=\"k\">),</span>","            index <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","            length <span class=\"k\">=</span> collection<span class=\"k\">.</span>length<span class=\"k\">;</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">;</span> index <span class=\"k\">&lt;</span> length<span class=\"k\">;</span> index<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">(</span> tween <span class=\"k\">=</span> collection<span class=\"k\">[</span> index <span class=\"k\">].</span>call<span class=\"k\">(</span> animation<span class=\"k\">,</span> prop<span class=\"k\">,</span> value <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                <span class=\"c\">// We're done with this property</span>","                <span class=\"k\">return</span> tween<span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> defaultPrefilter<span class=\"k\">(</span> elem<span class=\"k\">,</span> props<span class=\"k\">,</span> opts <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> prop<span class=\"k\">,</span> value<span class=\"k\">,</span> toggle<span class=\"k\">,</span> hooks<span class=\"k\">,</span> oldfire<span class=\"k\">,</span> propTween<span class=\"k\">,</span> restoreDisplay<span class=\"k\">,</span> display<span class=\"k\">,</span>","            isBox <span class=\"k\">=</span> <span class=\"s\">\"width\"</span> <span class=\"k\">in</span> props <span class=\"k\">||</span> <span class=\"s\">\"height\"</span> <span class=\"k\">in</span> props<span class=\"k\">,</span>","            anim <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">,</span>","            orig <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">,</span>","            style <span class=\"k\">=</span> elem<span class=\"k\">.</span>style<span class=\"k\">,</span>","            hidden <span class=\"k\">=</span> elem<span class=\"k\">.</span>nodeType <span class=\"k\">&amp;&amp;</span> isHiddenWithinTree<span class=\"k\">(</span> elem <span class=\"k\">),</span>","            dataShow <span class=\"k\">=</span> dataPriv<span class=\"k\">.</span>get<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"s\">\"fxshow\"</span> <span class=\"k\">);</span>","","        <span class=\"c\">// Queue-skipping animations hijack the fx hooks</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>opts<span class=\"k\">.</span>queue <span class=\"k\">)</span> <span class=\"k\">{</span>","            hooks <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>_queueHooks<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"s\">\"fx\"</span> <span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> hooks<span class=\"k\">.</span>unqueued <span class=\"k\">==</span> <span class=\"k\">null</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                hooks<span class=\"k\">.</span>unqueued <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","                oldfire <span class=\"k\">=</span> hooks<span class=\"k\">.</span>empty<span class=\"k\">.</span>fire<span class=\"k\">;</span>","                hooks<span class=\"k\">.</span>empty<span class=\"k\">.</span>fire <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>hooks<span class=\"k\">.</span>unqueued <span class=\"k\">)</span> <span class=\"k\">{</span>","                        oldfire<span class=\"k\">();</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","            hooks<span class=\"k\">.</span>unqueued<span class=\"k\">++;</span>","","            anim<span class=\"k\">.</span>always<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","","                <span class=\"c\">// Ensure the complete handler is called before this completes</span>","                anim<span class=\"k\">.</span>always<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                    hooks<span class=\"k\">.</span>unqueued<span class=\"k\">--;</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>jQuery<span class=\"k\">.</span>queue<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"s\">\"fx\"</span> <span class=\"k\">).</span>length <span class=\"k\">)</span> <span class=\"k\">{</span>","                        hooks<span class=\"k\">.</span>empty<span class=\"k\">.</span>fire<span class=\"k\">();</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span> <span class=\"k\">);</span>","            <span class=\"k\">}</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span>","","        <span class=\"c\">// Detect show/hide animations</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span> prop <span class=\"k\">in</span> props <span class=\"k\">)</span> <span class=\"k\">{</span>","            value <span class=\"k\">=</span> props<span class=\"k\">[</span> prop <span class=\"k\">];</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> rfxtypes<span class=\"k\">.</span>test<span class=\"k\">(</span> value <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">delete</span> props<span class=\"k\">[</span> prop <span class=\"k\">];</span>","                toggle <span class=\"k\">=</span> toggle <span class=\"k\">||</span> value <span class=\"k\">===</span> <span class=\"s\">\"toggle\"</span><span class=\"k\">;</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> value <span class=\"k\">===</span> <span class=\"k\">(</span> hidden <span class=\"k\">?</span> <span class=\"s\">\"hide\"</span> <span class=\"k\">:</span> <span class=\"s\">\"show\"</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                    <span class=\"c\">// Pretend to be hidden if this is a \"show\" and</span>","                    <span class=\"c\">// there is still data from a stopped show/hide</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> value <span class=\"k\">===</span> <span class=\"s\">\"show\"</span> <span class=\"k\">&amp;&amp;</span> dataShow <span class=\"k\">&amp;&amp;</span> dataShow<span class=\"k\">[</span> prop <span class=\"k\">]</span> <span class=\"k\">!==</span> undefined <span class=\"k\">)</span> <span class=\"k\">{</span>","                        hidden <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","","                        <span class=\"c\">// Ignore all other no-op show/hide data</span>","                    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                        <span class=\"k\">continue</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","                orig<span class=\"k\">[</span> prop <span class=\"k\">]</span> <span class=\"k\">=</span> dataShow <span class=\"k\">&amp;&amp;</span> dataShow<span class=\"k\">[</span> prop <span class=\"k\">]</span> <span class=\"k\">||</span> jQuery<span class=\"k\">.</span>style<span class=\"k\">(</span> elem<span class=\"k\">,</span> prop <span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","","        <span class=\"c\">// Bail out if this is a no-op like .hide().hide()</span>","        propTween <span class=\"k\">=</span> <span class=\"k\">!</span>jQuery<span class=\"k\">.</span>isEmptyObject<span class=\"k\">(</span> props <span class=\"k\">);</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>propTween <span class=\"k\">&amp;&amp;</span> jQuery<span class=\"k\">.</span>isEmptyObject<span class=\"k\">(</span> orig <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"c\">// Restrict \"overflow\" and \"display\" styles during box animations</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> isBox <span class=\"k\">&amp;&amp;</span> elem<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"c\">// Support: IE &lt;=9 - 11, Edge 12 - 15</span>","            <span class=\"c\">// Record all 3 overflow attributes because IE does not infer the shorthand</span>","            <span class=\"c\">// from identically-valued overflowX and overflowY and Edge just mirrors</span>","            <span class=\"c\">// the overflowX value there.</span>","            opts<span class=\"k\">.</span>overflow <span class=\"k\">=</span> <span class=\"k\">[</span> style<span class=\"k\">.</span>overflow<span class=\"k\">,</span> style<span class=\"k\">.</span>overflowX<span class=\"k\">,</span> style<span class=\"k\">.</span>overflowY <span class=\"k\">];</span>","","            <span class=\"c\">// Identify a display type, preferring old show/hide data over the CSS cascade</span>","            restoreDisplay <span class=\"k\">=</span> dataShow <span class=\"k\">&amp;&amp;</span> dataShow<span class=\"k\">.</span>display<span class=\"k\">;</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> restoreDisplay <span class=\"k\">==</span> <span class=\"k\">null</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                restoreDisplay <span class=\"k\">=</span> dataPriv<span class=\"k\">.</span>get<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"s\">\"display\"</span> <span class=\"k\">);</span>","            <span class=\"k\">}</span>","            display <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>css<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"s\">\"display\"</span> <span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> display <span class=\"k\">===</span> <span class=\"s\">\"none\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> restoreDisplay <span class=\"k\">)</span> <span class=\"k\">{</span>","                    display <span class=\"k\">=</span> restoreDisplay<span class=\"k\">;</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","","                    <span class=\"c\">// Get nonempty value(s) by temporarily forcing visibility</span>","                    showHide<span class=\"k\">(</span> <span class=\"k\">[</span> elem <span class=\"k\">],</span> <span class=\"k\">true</span> <span class=\"k\">);</span>","                    restoreDisplay <span class=\"k\">=</span> elem<span class=\"k\">.</span>style<span class=\"k\">.</span>display <span class=\"k\">||</span> restoreDisplay<span class=\"k\">;</span>","                    display <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>css<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"s\">\"display\"</span> <span class=\"k\">);</span>","                    showHide<span class=\"k\">(</span> <span class=\"k\">[</span> elem <span class=\"k\">]</span> <span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Animate inline elements as inline-block</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> display <span class=\"k\">===</span> <span class=\"s\">\"inline\"</span> <span class=\"k\">||</span> display <span class=\"k\">===</span> <span class=\"s\">\"inline-block\"</span> <span class=\"k\">&amp;&amp;</span> restoreDisplay <span class=\"k\">!=</span> <span class=\"k\">null</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> jQuery<span class=\"k\">.</span>css<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"s\">\"float\"</span> <span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"s\">\"none\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                    <span class=\"c\">// Restore the original display value at the end of pure show/hide animations</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>propTween <span class=\"k\">)</span> <span class=\"k\">{</span>","                        anim<span class=\"k\">.</span>done<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                            style<span class=\"k\">.</span>display <span class=\"k\">=</span> restoreDisplay<span class=\"k\">;</span>","                        <span class=\"k\">}</span> <span class=\"k\">);</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> restoreDisplay <span class=\"k\">==</span> <span class=\"k\">null</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                            display <span class=\"k\">=</span> style<span class=\"k\">.</span>display<span class=\"k\">;</span>","                            restoreDisplay <span class=\"k\">=</span> display <span class=\"k\">===</span> <span class=\"s\">\"none\"</span> <span class=\"k\">?</span> <span class=\"s\">\"\"</span> <span class=\"k\">:</span> display<span class=\"k\">;</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span>","                    style<span class=\"k\">.</span>display <span class=\"k\">=</span> <span class=\"s\">\"inline-block\"</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span> opts<span class=\"k\">.</span>overflow <span class=\"k\">)</span> <span class=\"k\">{</span>","            style<span class=\"k\">.</span>overflow <span class=\"k\">=</span> <span class=\"s\">\"hidden\"</span><span class=\"k\">;</span>","            anim<span class=\"k\">.</span>always<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                style<span class=\"k\">.</span>overflow <span class=\"k\">=</span> opts<span class=\"k\">.</span>overflow<span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">];</span>","                style<span class=\"k\">.</span>overflowX <span class=\"k\">=</span> opts<span class=\"k\">.</span>overflow<span class=\"k\">[</span> <span class=\"s\">1</span> <span class=\"k\">];</span>","                style<span class=\"k\">.</span>overflowY <span class=\"k\">=</span> opts<span class=\"k\">.</span>overflow<span class=\"k\">[</span> <span class=\"s\">2</span> <span class=\"k\">];</span>","            <span class=\"k\">}</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span>","","        <span class=\"c\">// Implement show/hide animations</span>","        propTween <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span> prop <span class=\"k\">in</span> orig <span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"c\">// General show/hide setup for this element animation</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>propTween <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> dataShow <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"s\">\"hidden\"</span> <span class=\"k\">in</span> dataShow <span class=\"k\">)</span> <span class=\"k\">{</span>","                        hidden <span class=\"k\">=</span> dataShow<span class=\"k\">.</span>hidden<span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    dataShow <span class=\"k\">=</span> dataPriv<span class=\"k\">.</span>access<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"s\">\"fxshow\"</span><span class=\"k\">,</span> <span class=\"k\">{</span> display<span class=\"k\">:</span> restoreDisplay <span class=\"k\">}</span> <span class=\"k\">);</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// Store hidden/visible for toggle so `.stop().toggle()` \"reverses\"</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> toggle <span class=\"k\">)</span> <span class=\"k\">{</span>","                    dataShow<span class=\"k\">.</span>hidden <span class=\"k\">=</span> <span class=\"k\">!</span>hidden<span class=\"k\">;</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// Show elements before animating them</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> hidden <span class=\"k\">)</span> <span class=\"k\">{</span>","                    showHide<span class=\"k\">(</span> <span class=\"k\">[</span> elem <span class=\"k\">],</span> <span class=\"k\">true</span> <span class=\"k\">);</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">/* eslint-disable no-loop-func */</span>","","                anim<span class=\"k\">.</span>done<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","","                    <span class=\"c\">/* eslint-enable no-loop-func */</span>","","                    <span class=\"c\">// The final step of a \"hide\" animation is actually hiding the element</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>hidden <span class=\"k\">)</span> <span class=\"k\">{</span>","                        showHide<span class=\"k\">(</span> <span class=\"k\">[</span> elem <span class=\"k\">]</span> <span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                    dataPriv<span class=\"k\">.</span>remove<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"s\">\"fxshow\"</span> <span class=\"k\">);</span>","                    <span class=\"k\">for</span> <span class=\"k\">(</span> prop <span class=\"k\">in</span> orig <span class=\"k\">)</span> <span class=\"k\">{</span>","                        jQuery<span class=\"k\">.</span>style<span class=\"k\">(</span> elem<span class=\"k\">,</span> prop<span class=\"k\">,</span> orig<span class=\"k\">[</span> prop <span class=\"k\">]</span> <span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span> <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Per-property setup</span>","            propTween <span class=\"k\">=</span> createTween<span class=\"k\">(</span> hidden <span class=\"k\">?</span> dataShow<span class=\"k\">[</span> prop <span class=\"k\">]</span> <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span> prop<span class=\"k\">,</span> anim <span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!(</span> prop <span class=\"k\">in</span> dataShow <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                dataShow<span class=\"k\">[</span> prop <span class=\"k\">]</span> <span class=\"k\">=</span> propTween<span class=\"k\">.</span>start<span class=\"k\">;</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> hidden <span class=\"k\">)</span> <span class=\"k\">{</span>","                    propTween<span class=\"k\">.</span>end <span class=\"k\">=</span> propTween<span class=\"k\">.</span>start<span class=\"k\">;</span>","                    propTween<span class=\"k\">.</span>start <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> propFilter<span class=\"k\">(</span> props<span class=\"k\">,</span> specialEasing <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> index<span class=\"k\">,</span> name<span class=\"k\">,</span> easing<span class=\"k\">,</span> value<span class=\"k\">,</span> hooks<span class=\"k\">;</span>","","        <span class=\"c\">// camelCase, specialEasing and expand cssHook pass</span>","        <span class=\"k\">for</span> <span class=\"k\">(</span> index <span class=\"k\">in</span> props <span class=\"k\">)</span> <span class=\"k\">{</span>","            name <span class=\"k\">=</span> camelCase<span class=\"k\">(</span> index <span class=\"k\">);</span>","            easing <span class=\"k\">=</span> specialEasing<span class=\"k\">[</span> name <span class=\"k\">];</span>","            value <span class=\"k\">=</span> props<span class=\"k\">[</span> index <span class=\"k\">];</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> Array<span class=\"k\">.</span>isArray<span class=\"k\">(</span> value <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                easing <span class=\"k\">=</span> value<span class=\"k\">[</span> <span class=\"s\">1</span> <span class=\"k\">];</span>","                value <span class=\"k\">=</span> props<span class=\"k\">[</span> index <span class=\"k\">]</span> <span class=\"k\">=</span> value<span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">];</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> index <span class=\"k\">!==</span> name <span class=\"k\">)</span> <span class=\"k\">{</span>","                props<span class=\"k\">[</span> name <span class=\"k\">]</span> <span class=\"k\">=</span> value<span class=\"k\">;</span>","                <span class=\"k\">delete</span> props<span class=\"k\">[</span> index <span class=\"k\">];</span>","            <span class=\"k\">}</span>","","            hooks <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>cssHooks<span class=\"k\">[</span> name <span class=\"k\">];</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> hooks <span class=\"k\">&amp;&amp;</span> <span class=\"s\">\"expand\"</span> <span class=\"k\">in</span> hooks <span class=\"k\">)</span> <span class=\"k\">{</span>","                value <span class=\"k\">=</span> hooks<span class=\"k\">.</span>expand<span class=\"k\">(</span> value <span class=\"k\">);</span>","                <span class=\"k\">delete</span> props<span class=\"k\">[</span> name <span class=\"k\">];</span>","","                <span class=\"c\">// Not quite $.extend, this won't overwrite existing keys.</span>","                <span class=\"c\">// Reusing 'index' because we have the correct \"name\"</span>","                <span class=\"k\">for</span> <span class=\"k\">(</span> index <span class=\"k\">in</span> value <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!(</span> index <span class=\"k\">in</span> props <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        props<span class=\"k\">[</span> index <span class=\"k\">]</span> <span class=\"k\">=</span> value<span class=\"k\">[</span> index <span class=\"k\">];</span>","                        specialEasing<span class=\"k\">[</span> index <span class=\"k\">]</span> <span class=\"k\">=</span> easing<span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                specialEasing<span class=\"k\">[</span> name <span class=\"k\">]</span> <span class=\"k\">=</span> easing<span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> Animation<span class=\"k\">(</span> elem<span class=\"k\">,</span> properties<span class=\"k\">,</span> options <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> result<span class=\"k\">,</span>","            stopped<span class=\"k\">,</span>","            index <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","            length <span class=\"k\">=</span> Animation<span class=\"k\">.</span>prefilters<span class=\"k\">.</span>length<span class=\"k\">,</span>","            deferred <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>Deferred<span class=\"k\">().</span>always<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","","                <span class=\"c\">// Don't match elem in the :animated selector</span>","                <span class=\"k\">delete</span> tick<span class=\"k\">.</span>elem<span class=\"k\">;</span>","            <span class=\"k\">}</span> <span class=\"k\">),</span>","            tick <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> stopped <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","                <span class=\"k\">var</span> currentTime <span class=\"k\">=</span> fxNow <span class=\"k\">||</span> createFxNow<span class=\"k\">(),</span>","                    remaining <span class=\"k\">=</span> Math<span class=\"k\">.</span>max<span class=\"k\">(</span> <span class=\"s\">0</span><span class=\"k\">,</span> animation<span class=\"k\">.</span>startTime <span class=\"k\">+</span> animation<span class=\"k\">.</span>duration <span class=\"k\">-</span> currentTime <span class=\"k\">),</span>","","                    <span class=\"c\">// Support: Android 2.3 only</span>","                    <span class=\"c\">// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)</span>","                    temp <span class=\"k\">=</span> remaining <span class=\"k\">/</span> animation<span class=\"k\">.</span>duration <span class=\"k\">||</span> <span class=\"s\">0</span><span class=\"k\">,</span>","                    percent <span class=\"k\">=</span> <span class=\"s\">1</span> <span class=\"k\">-</span> temp<span class=\"k\">,</span>","                    index <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","                    length <span class=\"k\">=</span> animation<span class=\"k\">.</span>tweens<span class=\"k\">.</span>length<span class=\"k\">;</span>","","                <span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">;</span> index <span class=\"k\">&lt;</span> length<span class=\"k\">;</span> index<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    animation<span class=\"k\">.</span>tweens<span class=\"k\">[</span> index <span class=\"k\">].</span>run<span class=\"k\">(</span> percent <span class=\"k\">);</span>","                <span class=\"k\">}</span>","","                deferred<span class=\"k\">.</span>notifyWith<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"k\">[</span> animation<span class=\"k\">,</span> percent<span class=\"k\">,</span> remaining <span class=\"k\">]</span> <span class=\"k\">);</span>","","                <span class=\"c\">// If there's more to do, yield</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> percent <span class=\"k\">&lt;</span> <span class=\"s\">1</span> <span class=\"k\">&amp;&amp;</span> length <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">return</span> remaining<span class=\"k\">;</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// If this was an empty animation, synthesize a final progress notification</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>length <span class=\"k\">)</span> <span class=\"k\">{</span>","                    deferred<span class=\"k\">.</span>notifyWith<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"k\">[</span> animation<span class=\"k\">,</span> <span class=\"s\">1</span><span class=\"k\">,</span> <span class=\"s\">0</span> <span class=\"k\">]</span> <span class=\"k\">);</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// Resolve the animation and report its conclusion</span>","                deferred<span class=\"k\">.</span>resolveWith<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"k\">[</span> animation <span class=\"k\">]</span> <span class=\"k\">);</span>","                <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","            <span class=\"k\">}</span><span class=\"k\">,</span>","            animation <span class=\"k\">=</span> deferred<span class=\"k\">.</span>promise<span class=\"k\">(</span> <span class=\"k\">{</span>","                elem<span class=\"k\">:</span> elem<span class=\"k\">,</span>","                props<span class=\"k\">:</span> jQuery<span class=\"k\">.</span>extend<span class=\"k\">(</span> <span class=\"k\">{}</span><span class=\"k\">,</span> properties <span class=\"k\">),</span>","                opts<span class=\"k\">:</span> jQuery<span class=\"k\">.</span>extend<span class=\"k\">(</span> <span class=\"k\">true</span><span class=\"k\">,</span> <span class=\"k\">{</span>","                    specialEasing<span class=\"k\">:</span> <span class=\"k\">{}</span><span class=\"k\">,</span>","                    easing<span class=\"k\">:</span> jQuery<span class=\"k\">.</span>easing<span class=\"k\">.</span>_default","                <span class=\"k\">}</span><span class=\"k\">,</span> options <span class=\"k\">),</span>","                originalProperties<span class=\"k\">:</span> properties<span class=\"k\">,</span>","                originalOptions<span class=\"k\">:</span> options<span class=\"k\">,</span>","                startTime<span class=\"k\">:</span> fxNow <span class=\"k\">||</span> createFxNow<span class=\"k\">(),</span>","                duration<span class=\"k\">:</span> options<span class=\"k\">.</span>duration<span class=\"k\">,</span>","                tweens<span class=\"k\">:</span> <span class=\"k\">[],</span>","                createTween<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> prop<span class=\"k\">,</span> end <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> tween <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>Tween<span class=\"k\">(</span> elem<span class=\"k\">,</span> animation<span class=\"k\">.</span>opts<span class=\"k\">,</span> prop<span class=\"k\">,</span> end<span class=\"k\">,</span>","                        animation<span class=\"k\">.</span>opts<span class=\"k\">.</span>specialEasing<span class=\"k\">[</span> prop <span class=\"k\">]</span> <span class=\"k\">||</span> animation<span class=\"k\">.</span>opts<span class=\"k\">.</span>easing <span class=\"k\">);</span>","                    animation<span class=\"k\">.</span>tweens<span class=\"k\">.</span>push<span class=\"k\">(</span> tween <span class=\"k\">);</span>","                    <span class=\"k\">return</span> tween<span class=\"k\">;</span>","                <span class=\"k\">}</span><span class=\"k\">,</span>","                stop<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> gotoEnd <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> index <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","","                        <span class=\"c\">// If we are going to the end, we want to run all the tweens</span>","                        <span class=\"c\">// otherwise we skip this part</span>","                        length <span class=\"k\">=</span> gotoEnd <span class=\"k\">?</span> animation<span class=\"k\">.</span>tweens<span class=\"k\">.</span>length <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">;</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> stopped <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                    stopped <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","                    <span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">;</span> index <span class=\"k\">&lt;</span> length<span class=\"k\">;</span> index<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        animation<span class=\"k\">.</span>tweens<span class=\"k\">[</span> index <span class=\"k\">].</span>run<span class=\"k\">(</span> <span class=\"s\">1</span> <span class=\"k\">);</span>","                    <span class=\"k\">}</span>","","                    <span class=\"c\">// Resolve when we played the last frame; otherwise, reject</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> gotoEnd <span class=\"k\">)</span> <span class=\"k\">{</span>","                        deferred<span class=\"k\">.</span>notifyWith<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"k\">[</span> animation<span class=\"k\">,</span> <span class=\"s\">1</span><span class=\"k\">,</span> <span class=\"s\">0</span> <span class=\"k\">]</span> <span class=\"k\">);</span>","                        deferred<span class=\"k\">.</span>resolveWith<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"k\">[</span> animation<span class=\"k\">,</span> gotoEnd <span class=\"k\">]</span> <span class=\"k\">);</span>","                    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                        deferred<span class=\"k\">.</span>rejectWith<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"k\">[</span> animation<span class=\"k\">,</span> gotoEnd <span class=\"k\">]</span> <span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                    <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span> <span class=\"k\">),</span>","            props <span class=\"k\">=</span> animation<span class=\"k\">.</span>props<span class=\"k\">;</span>","","        propFilter<span class=\"k\">(</span> props<span class=\"k\">,</span> animation<span class=\"k\">.</span>opts<span class=\"k\">.</span>specialEasing <span class=\"k\">);</span>","","        <span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">;</span> index <span class=\"k\">&lt;</span> length<span class=\"k\">;</span> index<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            result <span class=\"k\">=</span> Animation<span class=\"k\">.</span>prefilters<span class=\"k\">[</span> index <span class=\"k\">].</span>call<span class=\"k\">(</span> animation<span class=\"k\">,</span> elem<span class=\"k\">,</span> props<span class=\"k\">,</span> animation<span class=\"k\">.</span>opts <span class=\"k\">);</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> result <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> isFunction<span class=\"k\">(</span> result<span class=\"k\">.</span>stop <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    jQuery<span class=\"k\">.</span>_queueHooks<span class=\"k\">(</span> animation<span class=\"k\">.</span>elem<span class=\"k\">,</span> animation<span class=\"k\">.</span>opts<span class=\"k\">.</span>queue <span class=\"k\">).</span>stop <span class=\"k\">=</span>","                        result<span class=\"k\">.</span>stop<span class=\"k\">.</span>bind<span class=\"k\">(</span> result <span class=\"k\">);</span>","                <span class=\"k\">}</span>","                <span class=\"k\">return</span> result<span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","","        jQuery<span class=\"k\">.</span>map<span class=\"k\">(</span> props<span class=\"k\">,</span> createTween<span class=\"k\">,</span> animation <span class=\"k\">);</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span> isFunction<span class=\"k\">(</span> animation<span class=\"k\">.</span>opts<span class=\"k\">.</span>start <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            animation<span class=\"k\">.</span>opts<span class=\"k\">.</span>start<span class=\"k\">.</span>call<span class=\"k\">(</span> elem<span class=\"k\">,</span> animation <span class=\"k\">);</span>","        <span class=\"k\">}</span>","","        <span class=\"c\">// Attach callbacks from options</span>","        animation","            <span class=\"k\">.</span>progress<span class=\"k\">(</span> animation<span class=\"k\">.</span>opts<span class=\"k\">.</span>progress <span class=\"k\">)</span>","            <span class=\"k\">.</span>done<span class=\"k\">(</span> animation<span class=\"k\">.</span>opts<span class=\"k\">.</span>done<span class=\"k\">,</span> animation<span class=\"k\">.</span>opts<span class=\"k\">.</span>complete <span class=\"k\">)</span>","            <span class=\"k\">.</span>fail<span class=\"k\">(</span> animation<span class=\"k\">.</span>opts<span class=\"k\">.</span>fail <span class=\"k\">)</span>","            <span class=\"k\">.</span>always<span class=\"k\">(</span> animation<span class=\"k\">.</span>opts<span class=\"k\">.</span>always <span class=\"k\">);</span>","","        jQuery<span class=\"k\">.</span>fx<span class=\"k\">.</span>timer<span class=\"k\">(</span>","            jQuery<span class=\"k\">.</span>extend<span class=\"k\">(</span> tick<span class=\"k\">,</span> <span class=\"k\">{</span>","                elem<span class=\"k\">:</span> elem<span class=\"k\">,</span>","                anim<span class=\"k\">:</span> animation<span class=\"k\">,</span>","                queue<span class=\"k\">:</span> animation<span class=\"k\">.</span>opts<span class=\"k\">.</span>queue","            <span class=\"k\">}</span> <span class=\"k\">)</span>","        <span class=\"k\">);</span>","","        <span class=\"k\">return</span> animation<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    jQuery<span class=\"k\">.</span>Animation <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>extend<span class=\"k\">(</span> Animation<span class=\"k\">,</span> <span class=\"k\">{</span>","","        tweeners<span class=\"k\">:</span> <span class=\"k\">{</span>","            <span class=\"s\">\"*\"</span><span class=\"k\">:</span> <span class=\"k\">[</span> <span class=\"k\">function</span><span class=\"k\">(</span> prop<span class=\"k\">,</span> value <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> tween <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>createTween<span class=\"k\">(</span> prop<span class=\"k\">,</span> value <span class=\"k\">);</span>","                adjustCSS<span class=\"k\">(</span> tween<span class=\"k\">.</span>elem<span class=\"k\">,</span> prop<span class=\"k\">,</span> rcssNum<span class=\"k\">.</span>exec<span class=\"k\">(</span> value <span class=\"k\">),</span> tween <span class=\"k\">);</span>","                <span class=\"k\">return</span> tween<span class=\"k\">;</span>","            <span class=\"k\">}</span> <span class=\"k\">]</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        tweener<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> props<span class=\"k\">,</span> callback <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> isFunction<span class=\"k\">(</span> props <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                callback <span class=\"k\">=</span> props<span class=\"k\">;</span>","                props <span class=\"k\">=</span> <span class=\"k\">[</span> <span class=\"s\">\"*\"</span> <span class=\"k\">];</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                props <span class=\"k\">=</span> props<span class=\"k\">.</span>match<span class=\"k\">(</span> rnothtmlwhite <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">var</span> prop<span class=\"k\">,</span>","                index <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","                length <span class=\"k\">=</span> props<span class=\"k\">.</span>length<span class=\"k\">;</span>","","            <span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">;</span> index <span class=\"k\">&lt;</span> length<span class=\"k\">;</span> index<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                prop <span class=\"k\">=</span> props<span class=\"k\">[</span> index <span class=\"k\">];</span>","                Animation<span class=\"k\">.</span>tweeners<span class=\"k\">[</span> prop <span class=\"k\">]</span> <span class=\"k\">=</span> Animation<span class=\"k\">.</span>tweeners<span class=\"k\">[</span> prop <span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"k\">[];</span>","                Animation<span class=\"k\">.</span>tweeners<span class=\"k\">[</span> prop <span class=\"k\">].</span>unshift<span class=\"k\">(</span> callback <span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        prefilters<span class=\"k\">:</span> <span class=\"k\">[</span> defaultPrefilter <span class=\"k\">],</span>","","        prefilter<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> callback<span class=\"k\">,</span> prepend <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> prepend <span class=\"k\">)</span> <span class=\"k\">{</span>","                Animation<span class=\"k\">.</span>prefilters<span class=\"k\">.</span>unshift<span class=\"k\">(</span> callback <span class=\"k\">);</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                Animation<span class=\"k\">.</span>prefilters<span class=\"k\">.</span>push<span class=\"k\">(</span> callback <span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span> <span class=\"k\">);</span>","","    jQuery<span class=\"k\">.</span>speed <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> speed<span class=\"k\">,</span> easing<span class=\"k\">,</span> fn <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> opt <span class=\"k\">=</span> speed <span class=\"k\">&amp;&amp;</span> <span class=\"k\">typeof</span> speed <span class=\"k\">===</span> <span class=\"s\">\"object\"</span> <span class=\"k\">?</span> jQuery<span class=\"k\">.</span>extend<span class=\"k\">(</span> <span class=\"k\">{}</span><span class=\"k\">,</span> speed <span class=\"k\">)</span> <span class=\"k\">:</span> <span class=\"k\">{</span>","            complete<span class=\"k\">:</span> fn <span class=\"k\">||</span> <span class=\"k\">!</span>fn <span class=\"k\">&amp;&amp;</span> easing <span class=\"k\">||</span>","                isFunction<span class=\"k\">(</span> speed <span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> speed<span class=\"k\">,</span>","            duration<span class=\"k\">:</span> speed<span class=\"k\">,</span>","            easing<span class=\"k\">:</span> fn <span class=\"k\">&amp;&amp;</span> easing <span class=\"k\">||</span> easing <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>isFunction<span class=\"k\">(</span> easing <span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> easing","        <span class=\"k\">}</span><span class=\"k\">;</span>","","        <span class=\"c\">// Go to the end state if fx are off</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> jQuery<span class=\"k\">.</span>fx<span class=\"k\">.</span>off <span class=\"k\">)</span> <span class=\"k\">{</span>","            opt<span class=\"k\">.</span>duration <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">typeof</span> opt<span class=\"k\">.</span>duration <span class=\"k\">!==</span> <span class=\"s\">\"number\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> opt<span class=\"k\">.</span>duration <span class=\"k\">in</span> jQuery<span class=\"k\">.</span>fx<span class=\"k\">.</span>speeds <span class=\"k\">)</span> <span class=\"k\">{</span>","                    opt<span class=\"k\">.</span>duration <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>fx<span class=\"k\">.</span>speeds<span class=\"k\">[</span> opt<span class=\"k\">.</span>duration <span class=\"k\">];</span>","","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    opt<span class=\"k\">.</span>duration <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>fx<span class=\"k\">.</span>speeds<span class=\"k\">.</span>_default<span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","","        <span class=\"c\">// Normalize opt.queue - true/undefined/null -&gt; \"fx\"</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> opt<span class=\"k\">.</span>queue <span class=\"k\">==</span> <span class=\"k\">null</span> <span class=\"k\">||</span> opt<span class=\"k\">.</span>queue <span class=\"k\">===</span> <span class=\"k\">true</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            opt<span class=\"k\">.</span>queue <span class=\"k\">=</span> <span class=\"s\">\"fx\"</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"c\">// Queueing</span>","        opt<span class=\"k\">.</span>old <span class=\"k\">=</span> opt<span class=\"k\">.</span>complete<span class=\"k\">;</span>","","        opt<span class=\"k\">.</span>complete <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> isFunction<span class=\"k\">(</span> opt<span class=\"k\">.</span>old <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                opt<span class=\"k\">.</span>old<span class=\"k\">.</span>call<span class=\"k\">(</span> <span class=\"k\">this</span> <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> opt<span class=\"k\">.</span>queue <span class=\"k\">)</span> <span class=\"k\">{</span>","                jQuery<span class=\"k\">.</span>dequeue<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> opt<span class=\"k\">.</span>queue <span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","","        <span class=\"k\">return</span> opt<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    jQuery<span class=\"k\">.</span>fn<span class=\"k\">.</span>extend<span class=\"k\">(</span> <span class=\"k\">{</span>","        fadeTo<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> speed<span class=\"k\">,</span> to<span class=\"k\">,</span> easing<span class=\"k\">,</span> callback <span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"c\">// Show any hidden elements after setting opacity to 0</span>","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>filter<span class=\"k\">(</span> isHiddenWithinTree <span class=\"k\">).</span>css<span class=\"k\">(</span> <span class=\"s\">\"opacity\"</span><span class=\"k\">,</span> <span class=\"s\">0</span> <span class=\"k\">).</span>show<span class=\"k\">()</span>","","            <span class=\"c\">// Animate to the value specified</span>","                <span class=\"k\">.</span>end<span class=\"k\">().</span>animate<span class=\"k\">(</span> <span class=\"k\">{</span> opacity<span class=\"k\">:</span> to <span class=\"k\">}</span><span class=\"k\">,</span> speed<span class=\"k\">,</span> easing<span class=\"k\">,</span> callback <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        animate<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> prop<span class=\"k\">,</span> speed<span class=\"k\">,</span> easing<span class=\"k\">,</span> callback <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> empty <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>isEmptyObject<span class=\"k\">(</span> prop <span class=\"k\">),</span>","                optall <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>speed<span class=\"k\">(</span> speed<span class=\"k\">,</span> easing<span class=\"k\">,</span> callback <span class=\"k\">),</span>","                doAnimation <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","","                    <span class=\"c\">// Operate on a copy of prop so per-property easing won't be lost</span>","                    <span class=\"k\">var</span> anim <span class=\"k\">=</span> Animation<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> jQuery<span class=\"k\">.</span>extend<span class=\"k\">(</span> <span class=\"k\">{}</span><span class=\"k\">,</span> prop <span class=\"k\">),</span> optall <span class=\"k\">);</span>","","                    <span class=\"c\">// Empty animations, or finishing resolves immediately</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> empty <span class=\"k\">||</span> dataPriv<span class=\"k\">.</span>get<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"s\">\"finish\"</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        anim<span class=\"k\">.</span>stop<span class=\"k\">(</span> <span class=\"k\">true</span> <span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span><span class=\"k\">;</span>","            doAnimation<span class=\"k\">.</span>finish <span class=\"k\">=</span> doAnimation<span class=\"k\">;</span>","","            <span class=\"k\">return</span> empty <span class=\"k\">||</span> optall<span class=\"k\">.</span>queue <span class=\"k\">===</span> <span class=\"k\">false</span> <span class=\"k\">?</span>","                <span class=\"k\">this</span><span class=\"k\">.</span>each<span class=\"k\">(</span> doAnimation <span class=\"k\">)</span> <span class=\"k\">:</span>","                <span class=\"k\">this</span><span class=\"k\">.</span>queue<span class=\"k\">(</span> optall<span class=\"k\">.</span>queue<span class=\"k\">,</span> doAnimation <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        stop<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> type<span class=\"k\">,</span> clearQueue<span class=\"k\">,</span> gotoEnd <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> stopQueue <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> hooks <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> stop <span class=\"k\">=</span> hooks<span class=\"k\">.</span>stop<span class=\"k\">;</span>","                <span class=\"k\">delete</span> hooks<span class=\"k\">.</span>stop<span class=\"k\">;</span>","                stop<span class=\"k\">(</span> gotoEnd <span class=\"k\">);</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">typeof</span> type <span class=\"k\">!==</span> <span class=\"s\">\"string\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                gotoEnd <span class=\"k\">=</span> clearQueue<span class=\"k\">;</span>","                clearQueue <span class=\"k\">=</span> type<span class=\"k\">;</span>","                type <span class=\"k\">=</span> undefined<span class=\"k\">;</span>","            <span class=\"k\">}</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> clearQueue <span class=\"k\">&amp;&amp;</span> type <span class=\"k\">!==</span> <span class=\"k\">false</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">this</span><span class=\"k\">.</span>queue<span class=\"k\">(</span> type <span class=\"k\">||</span> <span class=\"s\">\"fx\"</span><span class=\"k\">,</span> <span class=\"k\">[]</span> <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>each<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> dequeue <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">,</span>","                    index <span class=\"k\">=</span> type <span class=\"k\">!=</span> <span class=\"k\">null</span> <span class=\"k\">&amp;&amp;</span> type <span class=\"k\">+</span> <span class=\"s\">\"queueHooks\"</span><span class=\"k\">,</span>","                    timers <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>timers<span class=\"k\">,</span>","                    data <span class=\"k\">=</span> dataPriv<span class=\"k\">.</span>get<span class=\"k\">(</span> <span class=\"k\">this</span> <span class=\"k\">);</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span> index <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> data<span class=\"k\">[</span> index <span class=\"k\">]</span> <span class=\"k\">&amp;&amp;</span> data<span class=\"k\">[</span> index <span class=\"k\">].</span>stop <span class=\"k\">)</span> <span class=\"k\">{</span>","                        stopQueue<span class=\"k\">(</span> data<span class=\"k\">[</span> index <span class=\"k\">]</span> <span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    <span class=\"k\">for</span> <span class=\"k\">(</span> index <span class=\"k\">in</span> data <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> data<span class=\"k\">[</span> index <span class=\"k\">]</span> <span class=\"k\">&amp;&amp;</span> data<span class=\"k\">[</span> index <span class=\"k\">].</span>stop <span class=\"k\">&amp;&amp;</span> rrun<span class=\"k\">.</span>test<span class=\"k\">(</span> index <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                            stopQueue<span class=\"k\">(</span> data<span class=\"k\">[</span> index <span class=\"k\">]</span> <span class=\"k\">);</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","","                <span class=\"k\">for</span> <span class=\"k\">(</span> index <span class=\"k\">=</span> timers<span class=\"k\">.</span>length<span class=\"k\">;</span> index<span class=\"k\">--;</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> timers<span class=\"k\">[</span> index <span class=\"k\">].</span>elem <span class=\"k\">===</span> <span class=\"k\">this</span> <span class=\"k\">&amp;&amp;</span>","                        <span class=\"k\">(</span> type <span class=\"k\">==</span> <span class=\"k\">null</span> <span class=\"k\">||</span> timers<span class=\"k\">[</span> index <span class=\"k\">].</span>queue <span class=\"k\">===</span> type <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                        timers<span class=\"k\">[</span> index <span class=\"k\">].</span>anim<span class=\"k\">.</span>stop<span class=\"k\">(</span> gotoEnd <span class=\"k\">);</span>","                        dequeue <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","                        timers<span class=\"k\">.</span>splice<span class=\"k\">(</span> index<span class=\"k\">,</span> <span class=\"s\">1</span> <span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// Start the next in the queue if the last step wasn't forced.</span>","                <span class=\"c\">// Timers currently will call their complete callbacks, which</span>","                <span class=\"c\">// will dequeue but only if they were gotoEnd.</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> dequeue <span class=\"k\">||</span> <span class=\"k\">!</span>gotoEnd <span class=\"k\">)</span> <span class=\"k\">{</span>","                    jQuery<span class=\"k\">.</span>dequeue<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> type <span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        finish<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> type <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> type <span class=\"k\">!==</span> <span class=\"k\">false</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                type <span class=\"k\">=</span> type <span class=\"k\">||</span> <span class=\"s\">\"fx\"</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>each<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> index<span class=\"k\">,</span>","                    data <span class=\"k\">=</span> dataPriv<span class=\"k\">.</span>get<span class=\"k\">(</span> <span class=\"k\">this</span> <span class=\"k\">),</span>","                    queue <span class=\"k\">=</span> data<span class=\"k\">[</span> type <span class=\"k\">+</span> <span class=\"s\">\"queue\"</span> <span class=\"k\">],</span>","                    hooks <span class=\"k\">=</span> data<span class=\"k\">[</span> type <span class=\"k\">+</span> <span class=\"s\">\"queueHooks\"</span> <span class=\"k\">],</span>","                    timers <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>timers<span class=\"k\">,</span>","                    length <span class=\"k\">=</span> queue <span class=\"k\">?</span> queue<span class=\"k\">.</span>length <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">;</span>","","                <span class=\"c\">// Enable finishing flag on private data</span>","                data<span class=\"k\">.</span>finish <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","","                <span class=\"c\">// Empty the queue first</span>","                jQuery<span class=\"k\">.</span>queue<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> type<span class=\"k\">,</span> <span class=\"k\">[]</span> <span class=\"k\">);</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span> hooks <span class=\"k\">&amp;&amp;</span> hooks<span class=\"k\">.</span>stop <span class=\"k\">)</span> <span class=\"k\">{</span>","                    hooks<span class=\"k\">.</span>stop<span class=\"k\">.</span>call<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"k\">true</span> <span class=\"k\">);</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// Look for any active animations, and finish them</span>","                <span class=\"k\">for</span> <span class=\"k\">(</span> index <span class=\"k\">=</span> timers<span class=\"k\">.</span>length<span class=\"k\">;</span> index<span class=\"k\">--;</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> timers<span class=\"k\">[</span> index <span class=\"k\">].</span>elem <span class=\"k\">===</span> <span class=\"k\">this</span> <span class=\"k\">&amp;&amp;</span> timers<span class=\"k\">[</span> index <span class=\"k\">].</span>queue <span class=\"k\">===</span> type <span class=\"k\">)</span> <span class=\"k\">{</span>","                        timers<span class=\"k\">[</span> index <span class=\"k\">].</span>anim<span class=\"k\">.</span>stop<span class=\"k\">(</span> <span class=\"k\">true</span> <span class=\"k\">);</span>","                        timers<span class=\"k\">.</span>splice<span class=\"k\">(</span> index<span class=\"k\">,</span> <span class=\"s\">1</span> <span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// Look for any animations in the old queue and finish them</span>","                <span class=\"k\">for</span> <span class=\"k\">(</span> index <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span> index <span class=\"k\">&lt;</span> length<span class=\"k\">;</span> index<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> queue<span class=\"k\">[</span> index <span class=\"k\">]</span> <span class=\"k\">&amp;&amp;</span> queue<span class=\"k\">[</span> index <span class=\"k\">].</span>finish <span class=\"k\">)</span> <span class=\"k\">{</span>","                        queue<span class=\"k\">[</span> index <span class=\"k\">].</span>finish<span class=\"k\">.</span>call<span class=\"k\">(</span> <span class=\"k\">this</span> <span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// Turn off finishing flag</span>","                <span class=\"k\">delete</span> data<span class=\"k\">.</span>finish<span class=\"k\">;</span>","            <span class=\"k\">}</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span> <span class=\"k\">);</span>","","    jQuery<span class=\"k\">.</span>each<span class=\"k\">(</span> <span class=\"k\">[</span> <span class=\"s\">\"toggle\"</span><span class=\"k\">,</span> <span class=\"s\">\"show\"</span><span class=\"k\">,</span> <span class=\"s\">\"hide\"</span> <span class=\"k\">],</span> <span class=\"k\">function</span><span class=\"k\">(</span> i<span class=\"k\">,</span> name <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> cssFn <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>fn<span class=\"k\">[</span> name <span class=\"k\">];</span>","        jQuery<span class=\"k\">.</span>fn<span class=\"k\">[</span> name <span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> speed<span class=\"k\">,</span> easing<span class=\"k\">,</span> callback <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> speed <span class=\"k\">==</span> <span class=\"k\">null</span> <span class=\"k\">||</span> <span class=\"k\">typeof</span> speed <span class=\"k\">===</span> <span class=\"s\">\"boolean\"</span> <span class=\"k\">?</span>","                cssFn<span class=\"k\">.</span>apply<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> arguments <span class=\"k\">)</span> <span class=\"k\">:</span>","                <span class=\"k\">this</span><span class=\"k\">.</span>animate<span class=\"k\">(</span> genFx<span class=\"k\">(</span> name<span class=\"k\">,</span> <span class=\"k\">true</span> <span class=\"k\">),</span> speed<span class=\"k\">,</span> easing<span class=\"k\">,</span> callback <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"k\">}</span> <span class=\"k\">);</span>","","<span class=\"c\">// Generate shortcuts for custom animations</span>","    jQuery<span class=\"k\">.</span>each<span class=\"k\">(</span> <span class=\"k\">{</span>","        slideDown<span class=\"k\">:</span> genFx<span class=\"k\">(</span> <span class=\"s\">\"show\"</span> <span class=\"k\">),</span>","        slideUp<span class=\"k\">:</span> genFx<span class=\"k\">(</span> <span class=\"s\">\"hide\"</span> <span class=\"k\">),</span>","        slideToggle<span class=\"k\">:</span> genFx<span class=\"k\">(</span> <span class=\"s\">\"toggle\"</span> <span class=\"k\">),</span>","        fadeIn<span class=\"k\">:</span> <span class=\"k\">{</span> opacity<span class=\"k\">:</span> <span class=\"s\">\"show\"</span> <span class=\"k\">}</span><span class=\"k\">,</span>","        fadeOut<span class=\"k\">:</span> <span class=\"k\">{</span> opacity<span class=\"k\">:</span> <span class=\"s\">\"hide\"</span> <span class=\"k\">}</span><span class=\"k\">,</span>","        fadeToggle<span class=\"k\">:</span> <span class=\"k\">{</span> opacity<span class=\"k\">:</span> <span class=\"s\">\"toggle\"</span> <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span> name<span class=\"k\">,</span> props <span class=\"k\">)</span> <span class=\"k\">{</span>","        jQuery<span class=\"k\">.</span>fn<span class=\"k\">[</span> name <span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> speed<span class=\"k\">,</span> easing<span class=\"k\">,</span> callback <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>animate<span class=\"k\">(</span> props<span class=\"k\">,</span> speed<span class=\"k\">,</span> easing<span class=\"k\">,</span> callback <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"k\">}</span> <span class=\"k\">);</span>","","    jQuery<span class=\"k\">.</span>timers <span class=\"k\">=</span> <span class=\"k\">[];</span>","    jQuery<span class=\"k\">.</span>fx<span class=\"k\">.</span>tick <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> timer<span class=\"k\">,</span>","            i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","            timers <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>timers<span class=\"k\">;</span>","","        fxNow <span class=\"k\">=</span> Date<span class=\"k\">.</span>now<span class=\"k\">();</span>","","        <span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">;</span> i <span class=\"k\">&lt;</span> timers<span class=\"k\">.</span>length<span class=\"k\">;</span> i<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            timer <span class=\"k\">=</span> timers<span class=\"k\">[</span> i <span class=\"k\">];</span>","","            <span class=\"c\">// Run the timer and safely remove it when done (allowing for external removal)</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>timer<span class=\"k\">()</span> <span class=\"k\">&amp;&amp;</span> timers<span class=\"k\">[</span> i <span class=\"k\">]</span> <span class=\"k\">===</span> timer <span class=\"k\">)</span> <span class=\"k\">{</span>","                timers<span class=\"k\">.</span>splice<span class=\"k\">(</span> i<span class=\"k\">--,</span> <span class=\"s\">1</span> <span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>timers<span class=\"k\">.</span>length <span class=\"k\">)</span> <span class=\"k\">{</span>","            jQuery<span class=\"k\">.</span>fx<span class=\"k\">.</span>stop<span class=\"k\">();</span>","        <span class=\"k\">}</span>","        fxNow <span class=\"k\">=</span> undefined<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    jQuery<span class=\"k\">.</span>fx<span class=\"k\">.</span>timer <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> timer <span class=\"k\">)</span> <span class=\"k\">{</span>","        jQuery<span class=\"k\">.</span>timers<span class=\"k\">.</span>push<span class=\"k\">(</span> timer <span class=\"k\">);</span>","        jQuery<span class=\"k\">.</span>fx<span class=\"k\">.</span>start<span class=\"k\">();</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    jQuery<span class=\"k\">.</span>fx<span class=\"k\">.</span>interval <span class=\"k\">=</span> <span class=\"s\">13</span><span class=\"k\">;</span>","    jQuery<span class=\"k\">.</span>fx<span class=\"k\">.</span>start <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> inProgress <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        inProgress <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","        schedule<span class=\"k\">();</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    jQuery<span class=\"k\">.</span>fx<span class=\"k\">.</span>stop <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","        inProgress <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    jQuery<span class=\"k\">.</span>fx<span class=\"k\">.</span>speeds <span class=\"k\">=</span> <span class=\"k\">{</span>","        slow<span class=\"k\">:</span> <span class=\"s\">600</span><span class=\"k\">,</span>","        fast<span class=\"k\">:</span> <span class=\"s\">200</span><span class=\"k\">,</span>","","        <span class=\"c\">// Default speed</span>","        _default<span class=\"k\">:</span> <span class=\"s\">400</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","","<span class=\"c\">// Based off of the plugin by Clint Helfers, with permission.</span>","<span class=\"c\">// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/</span>","    jQuery<span class=\"k\">.</span>fn<span class=\"k\">.</span>delay <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> time<span class=\"k\">,</span> type <span class=\"k\">)</span> <span class=\"k\">{</span>","        time <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>fx <span class=\"k\">?</span> jQuery<span class=\"k\">.</span>fx<span class=\"k\">.</span>speeds<span class=\"k\">[</span> time <span class=\"k\">]</span> <span class=\"k\">||</span> time <span class=\"k\">:</span> time<span class=\"k\">;</span>","        type <span class=\"k\">=</span> type <span class=\"k\">||</span> <span class=\"s\">\"fx\"</span><span class=\"k\">;</span>","","        <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>queue<span class=\"k\">(</span> type<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span> next<span class=\"k\">,</span> hooks <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> timeout <span class=\"k\">=</span> window<span class=\"k\">.</span>setTimeout<span class=\"k\">(</span> next<span class=\"k\">,</span> time <span class=\"k\">);</span>","            hooks<span class=\"k\">.</span>stop <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                window<span class=\"k\">.</span>clearTimeout<span class=\"k\">(</span> timeout <span class=\"k\">);</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","        <span class=\"k\">}</span> <span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","","    <span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> input <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span> <span class=\"s\">\"input\"</span> <span class=\"k\">),</span>","            select <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span> <span class=\"s\">\"select\"</span> <span class=\"k\">),</span>","            opt <span class=\"k\">=</span> select<span class=\"k\">.</span>appendChild<span class=\"k\">(</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span> <span class=\"s\">\"option\"</span> <span class=\"k\">)</span> <span class=\"k\">);</span>","","        input<span class=\"k\">.</span>type <span class=\"k\">=</span> <span class=\"s\">\"checkbox\"</span><span class=\"k\">;</span>","","        <span class=\"c\">// Support: Android &lt;=4.3 only</span>","        <span class=\"c\">// Default value for a checkbox should be \"on\"</span>","        support<span class=\"k\">.</span>checkOn <span class=\"k\">=</span> input<span class=\"k\">.</span>value <span class=\"k\">!==</span> <span class=\"s\">\"\"</span><span class=\"k\">;</span>","","        <span class=\"c\">// Support: IE &lt;=11 only</span>","        <span class=\"c\">// Must access selectedIndex to make default options select</span>","        support<span class=\"k\">.</span>optSelected <span class=\"k\">=</span> opt<span class=\"k\">.</span>selected<span class=\"k\">;</span>","","        <span class=\"c\">// Support: IE &lt;=11 only</span>","        <span class=\"c\">// An input loses its value after becoming a radio</span>","        input <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span> <span class=\"s\">\"input\"</span> <span class=\"k\">);</span>","        input<span class=\"k\">.</span>value <span class=\"k\">=</span> <span class=\"s\">\"t\"</span><span class=\"k\">;</span>","        input<span class=\"k\">.</span>type <span class=\"k\">=</span> <span class=\"s\">\"radio\"</span><span class=\"k\">;</span>","        support<span class=\"k\">.</span>radioValue <span class=\"k\">=</span> input<span class=\"k\">.</span>value <span class=\"k\">===</span> <span class=\"s\">\"t\"</span><span class=\"k\">;</span>","    <span class=\"k\">}</span> <span class=\"k\">)();</span>","","","    <span class=\"k\">var</span> boolHook<span class=\"k\">,</span>","        attrHandle <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>expr<span class=\"k\">.</span>attrHandle<span class=\"k\">;</span>","","    jQuery<span class=\"k\">.</span>fn<span class=\"k\">.</span>extend<span class=\"k\">(</span> <span class=\"k\">{</span>","        attr<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> name<span class=\"k\">,</span> value <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> access<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> jQuery<span class=\"k\">.</span>attr<span class=\"k\">,</span> name<span class=\"k\">,</span> value<span class=\"k\">,</span> arguments<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">1</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        removeAttr<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> name <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>each<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                jQuery<span class=\"k\">.</span>removeAttr<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> name <span class=\"k\">);</span>","            <span class=\"k\">}</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span> <span class=\"k\">);</span>","","    jQuery<span class=\"k\">.</span>extend<span class=\"k\">(</span> <span class=\"k\">{</span>","        attr<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> name<span class=\"k\">,</span> value <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> ret<span class=\"k\">,</span> hooks<span class=\"k\">,</span>","                nType <span class=\"k\">=</span> elem<span class=\"k\">.</span>nodeType<span class=\"k\">;</span>","","            <span class=\"c\">// Don't get/set attributes on text, comment and attribute nodes</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> nType <span class=\"k\">===</span> <span class=\"s\">3</span> <span class=\"k\">||</span> nType <span class=\"k\">===</span> <span class=\"s\">8</span> <span class=\"k\">||</span> nType <span class=\"k\">===</span> <span class=\"s\">2</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Fallback to prop when attributes are not supported</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">typeof</span> elem<span class=\"k\">.</span>getAttribute <span class=\"k\">===</span> <span class=\"s\">\"undefined\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> jQuery<span class=\"k\">.</span>prop<span class=\"k\">(</span> elem<span class=\"k\">,</span> name<span class=\"k\">,</span> value <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Attribute hooks are determined by the lowercase version</span>","            <span class=\"c\">// Grab necessary hook if one is defined</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> nType <span class=\"k\">!==</span> <span class=\"s\">1</span> <span class=\"k\">||</span> <span class=\"k\">!</span>jQuery<span class=\"k\">.</span>isXMLDoc<span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                hooks <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>attrHooks<span class=\"k\">[</span> name<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">]</span> <span class=\"k\">||</span>","                    <span class=\"k\">(</span> jQuery<span class=\"k\">.</span>expr<span class=\"k\">.</span>match<span class=\"k\">.</span>bool<span class=\"k\">.</span>test<span class=\"k\">(</span> name <span class=\"k\">)</span> <span class=\"k\">?</span> boolHook <span class=\"k\">:</span> undefined <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> value <span class=\"k\">!==</span> undefined <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> value <span class=\"k\">===</span> <span class=\"k\">null</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    jQuery<span class=\"k\">.</span>removeAttr<span class=\"k\">(</span> elem<span class=\"k\">,</span> name <span class=\"k\">);</span>","                    <span class=\"k\">return</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span> hooks <span class=\"k\">&amp;&amp;</span> <span class=\"s\">\"set\"</span> <span class=\"k\">in</span> hooks <span class=\"k\">&amp;&amp;</span>","                    <span class=\"k\">(</span> ret <span class=\"k\">=</span> hooks<span class=\"k\">.</span>set<span class=\"k\">(</span> elem<span class=\"k\">,</span> value<span class=\"k\">,</span> name <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">!==</span> undefined <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">return</span> ret<span class=\"k\">;</span>","                <span class=\"k\">}</span>","","                elem<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span> name<span class=\"k\">,</span> value <span class=\"k\">+</span> <span class=\"s\">\"\"</span> <span class=\"k\">);</span>","                <span class=\"k\">return</span> value<span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> hooks <span class=\"k\">&amp;&amp;</span> <span class=\"s\">\"get\"</span> <span class=\"k\">in</span> hooks <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span> ret <span class=\"k\">=</span> hooks<span class=\"k\">.</span>get<span class=\"k\">(</span> elem<span class=\"k\">,</span> name <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">!==</span> <span class=\"k\">null</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> ret<span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            ret <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>find<span class=\"k\">.</span>attr<span class=\"k\">(</span> elem<span class=\"k\">,</span> name <span class=\"k\">);</span>","","            <span class=\"c\">// Non-existent attributes return null, we normalize to undefined</span>","            <span class=\"k\">return</span> ret <span class=\"k\">==</span> <span class=\"k\">null</span> <span class=\"k\">?</span> undefined <span class=\"k\">:</span> ret<span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        attrHooks<span class=\"k\">:</span> <span class=\"k\">{</span>","            type<span class=\"k\">:</span> <span class=\"k\">{</span>","                set<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> value <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>support<span class=\"k\">.</span>radioValue <span class=\"k\">&amp;&amp;</span> value <span class=\"k\">===</span> <span class=\"s\">\"radio\"</span> <span class=\"k\">&amp;&amp;</span>","                        nodeName<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"s\">\"input\"</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">var</span> val <span class=\"k\">=</span> elem<span class=\"k\">.</span>value<span class=\"k\">;</span>","                        elem<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span> <span class=\"s\">\"type\"</span><span class=\"k\">,</span> value <span class=\"k\">);</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> val <span class=\"k\">)</span> <span class=\"k\">{</span>","                            elem<span class=\"k\">.</span>value <span class=\"k\">=</span> val<span class=\"k\">;</span>","                        <span class=\"k\">}</span>","                        <span class=\"k\">return</span> value<span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        removeAttr<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> value <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> name<span class=\"k\">,</span>","                i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","","                <span class=\"c\">// Attribute names can contain non-HTML whitespace characters</span>","                <span class=\"c\">// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2</span>","                attrNames <span class=\"k\">=</span> value <span class=\"k\">&amp;&amp;</span> value<span class=\"k\">.</span>match<span class=\"k\">(</span> rnothtmlwhite <span class=\"k\">);</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> attrNames <span class=\"k\">&amp;&amp;</span> elem<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">while</span> <span class=\"k\">(</span> <span class=\"k\">(</span> name <span class=\"k\">=</span> attrNames<span class=\"k\">[</span> i<span class=\"k\">++</span> <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    elem<span class=\"k\">.</span>removeAttribute<span class=\"k\">(</span> name <span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span> <span class=\"k\">);</span>","","<span class=\"c\">// Hooks for boolean attributes</span>","    boolHook <span class=\"k\">=</span> <span class=\"k\">{</span>","        set<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> value<span class=\"k\">,</span> name <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> value <span class=\"k\">===</span> <span class=\"k\">false</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                <span class=\"c\">// Remove boolean attributes when set to false</span>","                jQuery<span class=\"k\">.</span>removeAttr<span class=\"k\">(</span> elem<span class=\"k\">,</span> name <span class=\"k\">);</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                elem<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span> name<span class=\"k\">,</span> name <span class=\"k\">);</span>","            <span class=\"k\">}</span>","            <span class=\"k\">return</span> name<span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    jQuery<span class=\"k\">.</span>each<span class=\"k\">(</span> jQuery<span class=\"k\">.</span>expr<span class=\"k\">.</span>match<span class=\"k\">.</span>bool<span class=\"k\">.</span>source<span class=\"k\">.</span>match<span class=\"k\">(</span> <span class=\"s\">/\\w+/g</span> <span class=\"k\">),</span> <span class=\"k\">function</span><span class=\"k\">(</span> i<span class=\"k\">,</span> name <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> getter <span class=\"k\">=</span> attrHandle<span class=\"k\">[</span> name <span class=\"k\">]</span> <span class=\"k\">||</span> jQuery<span class=\"k\">.</span>find<span class=\"k\">.</span>attr<span class=\"k\">;</span>","","        attrHandle<span class=\"k\">[</span> name <span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> name<span class=\"k\">,</span> isXML <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> ret<span class=\"k\">,</span> handle<span class=\"k\">,</span>","                lowercaseName <span class=\"k\">=</span> name<span class=\"k\">.</span>toLowerCase<span class=\"k\">();</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>isXML <span class=\"k\">)</span> <span class=\"k\">{</span>","","                <span class=\"c\">// Avoid an infinite loop by temporarily removing this function from the getter</span>","                handle <span class=\"k\">=</span> attrHandle<span class=\"k\">[</span> lowercaseName <span class=\"k\">];</span>","                attrHandle<span class=\"k\">[</span> lowercaseName <span class=\"k\">]</span> <span class=\"k\">=</span> ret<span class=\"k\">;</span>","                ret <span class=\"k\">=</span> getter<span class=\"k\">(</span> elem<span class=\"k\">,</span> name<span class=\"k\">,</span> isXML <span class=\"k\">)</span> <span class=\"k\">!=</span> <span class=\"k\">null</span> <span class=\"k\">?</span>","                    lowercaseName <span class=\"k\">:</span>","                    <span class=\"k\">null</span><span class=\"k\">;</span>","                attrHandle<span class=\"k\">[</span> lowercaseName <span class=\"k\">]</span> <span class=\"k\">=</span> handle<span class=\"k\">;</span>","            <span class=\"k\">}</span>","            <span class=\"k\">return</span> ret<span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"k\">}</span> <span class=\"k\">);</span>","","","","","    <span class=\"k\">var</span> rfocusable <span class=\"k\">=</span> <span class=\"s\">/^(?:input|select|textarea|button)$/i</span><span class=\"k\">,</span>","        rclickable <span class=\"k\">=</span> <span class=\"s\">/^(?:a|area)$/i</span><span class=\"k\">;</span>","","    jQuery<span class=\"k\">.</span>fn<span class=\"k\">.</span>extend<span class=\"k\">(</span> <span class=\"k\">{</span>","        prop<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> name<span class=\"k\">,</span> value <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> access<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> jQuery<span class=\"k\">.</span>prop<span class=\"k\">,</span> name<span class=\"k\">,</span> value<span class=\"k\">,</span> arguments<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">1</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        removeProp<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> name <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>each<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                <span class=\"k\">delete</span> <span class=\"k\">this</span><span class=\"k\">[</span> jQuery<span class=\"k\">.</span>propFix<span class=\"k\">[</span> name <span class=\"k\">]</span> <span class=\"k\">||</span> name <span class=\"k\">];</span>","            <span class=\"k\">}</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span> <span class=\"k\">);</span>","","    jQuery<span class=\"k\">.</span>extend<span class=\"k\">(</span> <span class=\"k\">{</span>","        prop<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> name<span class=\"k\">,</span> value <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> ret<span class=\"k\">,</span> hooks<span class=\"k\">,</span>","                nType <span class=\"k\">=</span> elem<span class=\"k\">.</span>nodeType<span class=\"k\">;</span>","","            <span class=\"c\">// Don't get/set properties on text, comment and attribute nodes</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> nType <span class=\"k\">===</span> <span class=\"s\">3</span> <span class=\"k\">||</span> nType <span class=\"k\">===</span> <span class=\"s\">8</span> <span class=\"k\">||</span> nType <span class=\"k\">===</span> <span class=\"s\">2</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> nType <span class=\"k\">!==</span> <span class=\"s\">1</span> <span class=\"k\">||</span> <span class=\"k\">!</span>jQuery<span class=\"k\">.</span>isXMLDoc<span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                <span class=\"c\">// Fix name and attach hooks</span>","                name <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>propFix<span class=\"k\">[</span> name <span class=\"k\">]</span> <span class=\"k\">||</span> name<span class=\"k\">;</span>","                hooks <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>propHooks<span class=\"k\">[</span> name <span class=\"k\">];</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> value <span class=\"k\">!==</span> undefined <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> hooks <span class=\"k\">&amp;&amp;</span> <span class=\"s\">\"set\"</span> <span class=\"k\">in</span> hooks <span class=\"k\">&amp;&amp;</span>","                    <span class=\"k\">(</span> ret <span class=\"k\">=</span> hooks<span class=\"k\">.</span>set<span class=\"k\">(</span> elem<span class=\"k\">,</span> value<span class=\"k\">,</span> name <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">!==</span> undefined <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">return</span> ret<span class=\"k\">;</span>","                <span class=\"k\">}</span>","","                <span class=\"k\">return</span> <span class=\"k\">(</span> elem<span class=\"k\">[</span> name <span class=\"k\">]</span> <span class=\"k\">=</span> value <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> hooks <span class=\"k\">&amp;&amp;</span> <span class=\"s\">\"get\"</span> <span class=\"k\">in</span> hooks <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span> ret <span class=\"k\">=</span> hooks<span class=\"k\">.</span>get<span class=\"k\">(</span> elem<span class=\"k\">,</span> name <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">!==</span> <span class=\"k\">null</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> ret<span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">return</span> elem<span class=\"k\">[</span> name <span class=\"k\">];</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        propHooks<span class=\"k\">:</span> <span class=\"k\">{</span>","            tabIndex<span class=\"k\">:</span> <span class=\"k\">{</span>","                get<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","","                    <span class=\"c\">// Support: IE &lt;=9 - 11 only</span>","                    <span class=\"c\">// elem.tabIndex doesn't always return the</span>","                    <span class=\"c\">// correct value when it hasn't been explicitly set</span>","                    <span class=\"c\">// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/</span>","                    <span class=\"c\">// Use proper attribute retrieval(#12072)</span>","                    <span class=\"k\">var</span> tabindex <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>find<span class=\"k\">.</span>attr<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"s\">\"tabindex\"</span> <span class=\"k\">);</span>","","                    <span class=\"k\">if</span> <span class=\"k\">(</span> tabindex <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">return</span> parseInt<span class=\"k\">(</span> tabindex<span class=\"k\">,</span> <span class=\"s\">10</span> <span class=\"k\">);</span>","                    <span class=\"k\">}</span>","","                    <span class=\"k\">if</span> <span class=\"k\">(</span>","                        rfocusable<span class=\"k\">.</span>test<span class=\"k\">(</span> elem<span class=\"k\">.</span>nodeName <span class=\"k\">)</span> <span class=\"k\">||</span>","                        rclickable<span class=\"k\">.</span>test<span class=\"k\">(</span> elem<span class=\"k\">.</span>nodeName <span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span>","                        elem<span class=\"k\">.</span>href","                    <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">return</span> <span class=\"s\">0</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","","                    <span class=\"k\">return</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        propFix<span class=\"k\">:</span> <span class=\"k\">{</span>","            <span class=\"s\">\"for\"</span><span class=\"k\">:</span> <span class=\"s\">\"htmlFor\"</span><span class=\"k\">,</span>","            <span class=\"s\">\"class\"</span><span class=\"k\">:</span> <span class=\"s\">\"className\"</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span> <span class=\"k\">);</span>","","<span class=\"c\">// Support: IE &lt;=11 only</span>","<span class=\"c\">// Accessing the selectedIndex property</span>","<span class=\"c\">// forces the browser to respect setting selected</span>","<span class=\"c\">// on the option</span>","<span class=\"c\">// The getter ensures a default option is selected</span>","<span class=\"c\">// when in an optgroup</span>","<span class=\"c\">// eslint rule \"no-unused-expressions\" is disabled for this code</span>","<span class=\"c\">// since it considers such accessions noop</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>support<span class=\"k\">.</span>optSelected <span class=\"k\">)</span> <span class=\"k\">{</span>","        jQuery<span class=\"k\">.</span>propHooks<span class=\"k\">.</span>selected <span class=\"k\">=</span> <span class=\"k\">{</span>","            get<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","","                <span class=\"c\">/* eslint no-unused-expressions: \"off\" */</span>","","                <span class=\"k\">var</span> parent <span class=\"k\">=</span> elem<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> parent <span class=\"k\">&amp;&amp;</span> parent<span class=\"k\">.</span>parentNode <span class=\"k\">)</span> <span class=\"k\">{</span>","                    parent<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>selectedIndex<span class=\"k\">;</span>","                <span class=\"k\">}</span>","                <span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span>","            <span class=\"k\">}</span><span class=\"k\">,</span>","            set<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","","                <span class=\"c\">/* eslint no-unused-expressions: \"off\" */</span>","","                <span class=\"k\">var</span> parent <span class=\"k\">=</span> elem<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> parent <span class=\"k\">)</span> <span class=\"k\">{</span>","                    parent<span class=\"k\">.</span>selectedIndex<span class=\"k\">;</span>","","                    <span class=\"k\">if</span> <span class=\"k\">(</span> parent<span class=\"k\">.</span>parentNode <span class=\"k\">)</span> <span class=\"k\">{</span>","                        parent<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>selectedIndex<span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    jQuery<span class=\"k\">.</span>each<span class=\"k\">(</span> <span class=\"k\">[</span>","        <span class=\"s\">\"tabIndex\"</span><span class=\"k\">,</span>","        <span class=\"s\">\"readOnly\"</span><span class=\"k\">,</span>","        <span class=\"s\">\"maxLength\"</span><span class=\"k\">,</span>","        <span class=\"s\">\"cellSpacing\"</span><span class=\"k\">,</span>","        <span class=\"s\">\"cellPadding\"</span><span class=\"k\">,</span>","        <span class=\"s\">\"rowSpan\"</span><span class=\"k\">,</span>","        <span class=\"s\">\"colSpan\"</span><span class=\"k\">,</span>","        <span class=\"s\">\"useMap\"</span><span class=\"k\">,</span>","        <span class=\"s\">\"frameBorder\"</span><span class=\"k\">,</span>","        <span class=\"s\">\"contentEditable\"</span>","    <span class=\"k\">],</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","        jQuery<span class=\"k\">.</span>propFix<span class=\"k\">[</span> <span class=\"k\">this</span><span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">;</span>","    <span class=\"k\">}</span> <span class=\"k\">);</span>","","","","","    <span class=\"c\">// Strip and collapse whitespace according to HTML spec</span>","    <span class=\"c\">// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace</span>","    <span class=\"k\">function</span> stripAndCollapse<span class=\"k\">(</span> value <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> tokens <span class=\"k\">=</span> value<span class=\"k\">.</span>match<span class=\"k\">(</span> rnothtmlwhite <span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"k\">[];</span>","        <span class=\"k\">return</span> tokens<span class=\"k\">.</span>join<span class=\"k\">(</span> <span class=\"s\">\" \"</span> <span class=\"k\">);</span>","    <span class=\"k\">}</span>","","","    <span class=\"k\">function</span> getClass<span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> elem<span class=\"k\">.</span>getAttribute <span class=\"k\">&amp;&amp;</span> elem<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span> <span class=\"s\">\"class\"</span> <span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"s\">\"\"</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"k\">function</span> classesToArray<span class=\"k\">(</span> value <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> Array<span class=\"k\">.</span>isArray<span class=\"k\">(</span> value <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> value<span class=\"k\">;</span>","        <span class=\"k\">}</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">typeof</span> value <span class=\"k\">===</span> <span class=\"s\">\"string\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> value<span class=\"k\">.</span>match<span class=\"k\">(</span> rnothtmlwhite <span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"k\">[];</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> <span class=\"k\">[];</span>","    <span class=\"k\">}</span>","","    jQuery<span class=\"k\">.</span>fn<span class=\"k\">.</span>extend<span class=\"k\">(</span> <span class=\"k\">{</span>","        addClass<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> value <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> classes<span class=\"k\">,</span> elem<span class=\"k\">,</span> cur<span class=\"k\">,</span> curValue<span class=\"k\">,</span> clazz<span class=\"k\">,</span> j<span class=\"k\">,</span> finalValue<span class=\"k\">,</span>","                i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> isFunction<span class=\"k\">(</span> value <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>each<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">(</span> j <span class=\"k\">)</span> <span class=\"k\">{</span>","                    jQuery<span class=\"k\">(</span> <span class=\"k\">this</span> <span class=\"k\">).</span>addClass<span class=\"k\">(</span> value<span class=\"k\">.</span>call<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> j<span class=\"k\">,</span> getClass<span class=\"k\">(</span> <span class=\"k\">this</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">);</span>","                <span class=\"k\">}</span> <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            classes <span class=\"k\">=</span> classesToArray<span class=\"k\">(</span> value <span class=\"k\">);</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> classes<span class=\"k\">.</span>length <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">while</span> <span class=\"k\">(</span> <span class=\"k\">(</span> elem <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">[</span> i<span class=\"k\">++</span> <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    curValue <span class=\"k\">=</span> getClass<span class=\"k\">(</span> elem <span class=\"k\">);</span>","                    cur <span class=\"k\">=</span> elem<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span> <span class=\"s\">\" \"</span> <span class=\"k\">+</span> stripAndCollapse<span class=\"k\">(</span> curValue <span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">\" \"</span> <span class=\"k\">);</span>","","                    <span class=\"k\">if</span> <span class=\"k\">(</span> cur <span class=\"k\">)</span> <span class=\"k\">{</span>","                        j <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","                        <span class=\"k\">while</span> <span class=\"k\">(</span> <span class=\"k\">(</span> clazz <span class=\"k\">=</span> classes<span class=\"k\">[</span> j<span class=\"k\">++</span> <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span> cur<span class=\"k\">.</span>indexOf<span class=\"k\">(</span> <span class=\"s\">\" \"</span> <span class=\"k\">+</span> clazz <span class=\"k\">+</span> <span class=\"s\">\" \"</span> <span class=\"k\">)</span> <span class=\"k\">&lt;</span> <span class=\"s\">0</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                cur <span class=\"k\">+=</span> clazz <span class=\"k\">+</span> <span class=\"s\">\" \"</span><span class=\"k\">;</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span>","","                        <span class=\"c\">// Only assign if different to avoid unneeded rendering.</span>","                        finalValue <span class=\"k\">=</span> stripAndCollapse<span class=\"k\">(</span> cur <span class=\"k\">);</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> curValue <span class=\"k\">!==</span> finalValue <span class=\"k\">)</span> <span class=\"k\">{</span>","                            elem<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span> <span class=\"s\">\"class\"</span><span class=\"k\">,</span> finalValue <span class=\"k\">);</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        removeClass<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> value <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> classes<span class=\"k\">,</span> elem<span class=\"k\">,</span> cur<span class=\"k\">,</span> curValue<span class=\"k\">,</span> clazz<span class=\"k\">,</span> j<span class=\"k\">,</span> finalValue<span class=\"k\">,</span>","                i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> isFunction<span class=\"k\">(</span> value <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>each<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">(</span> j <span class=\"k\">)</span> <span class=\"k\">{</span>","                    jQuery<span class=\"k\">(</span> <span class=\"k\">this</span> <span class=\"k\">).</span>removeClass<span class=\"k\">(</span> value<span class=\"k\">.</span>call<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> j<span class=\"k\">,</span> getClass<span class=\"k\">(</span> <span class=\"k\">this</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">);</span>","                <span class=\"k\">}</span> <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>arguments<span class=\"k\">.</span>length <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>attr<span class=\"k\">(</span> <span class=\"s\">\"class\"</span><span class=\"k\">,</span> <span class=\"s\">\"\"</span> <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            classes <span class=\"k\">=</span> classesToArray<span class=\"k\">(</span> value <span class=\"k\">);</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> classes<span class=\"k\">.</span>length <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">while</span> <span class=\"k\">(</span> <span class=\"k\">(</span> elem <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">[</span> i<span class=\"k\">++</span> <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    curValue <span class=\"k\">=</span> getClass<span class=\"k\">(</span> elem <span class=\"k\">);</span>","","                    <span class=\"c\">// This expression is here for better compressibility (see addClass)</span>","                    cur <span class=\"k\">=</span> elem<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span> <span class=\"s\">\" \"</span> <span class=\"k\">+</span> stripAndCollapse<span class=\"k\">(</span> curValue <span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">\" \"</span> <span class=\"k\">);</span>","","                    <span class=\"k\">if</span> <span class=\"k\">(</span> cur <span class=\"k\">)</span> <span class=\"k\">{</span>","                        j <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","                        <span class=\"k\">while</span> <span class=\"k\">(</span> <span class=\"k\">(</span> clazz <span class=\"k\">=</span> classes<span class=\"k\">[</span> j<span class=\"k\">++</span> <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                            <span class=\"c\">// Remove *all* instances</span>","                            <span class=\"k\">while</span> <span class=\"k\">(</span> cur<span class=\"k\">.</span>indexOf<span class=\"k\">(</span> <span class=\"s\">\" \"</span> <span class=\"k\">+</span> clazz <span class=\"k\">+</span> <span class=\"s\">\" \"</span> <span class=\"k\">)</span> <span class=\"k\">&gt;</span> <span class=\"k\">-</span><span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                cur <span class=\"k\">=</span> cur<span class=\"k\">.</span>replace<span class=\"k\">(</span> <span class=\"s\">\" \"</span> <span class=\"k\">+</span> clazz <span class=\"k\">+</span> <span class=\"s\">\" \"</span><span class=\"k\">,</span> <span class=\"s\">\" \"</span> <span class=\"k\">);</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span>","","                        <span class=\"c\">// Only assign if different to avoid unneeded rendering.</span>","                        finalValue <span class=\"k\">=</span> stripAndCollapse<span class=\"k\">(</span> cur <span class=\"k\">);</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> curValue <span class=\"k\">!==</span> finalValue <span class=\"k\">)</span> <span class=\"k\">{</span>","                            elem<span class=\"k\">.</span>setAttribute<span class=\"k\">(</span> <span class=\"s\">\"class\"</span><span class=\"k\">,</span> finalValue <span class=\"k\">);</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        toggleClass<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> value<span class=\"k\">,</span> stateVal <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> type <span class=\"k\">=</span> <span class=\"k\">typeof</span> value<span class=\"k\">,</span>","                isValidValue <span class=\"k\">=</span> type <span class=\"k\">===</span> <span class=\"s\">\"string\"</span> <span class=\"k\">||</span> Array<span class=\"k\">.</span>isArray<span class=\"k\">(</span> value <span class=\"k\">);</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">typeof</span> stateVal <span class=\"k\">===</span> <span class=\"s\">\"boolean\"</span> <span class=\"k\">&amp;&amp;</span> isValidValue <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> stateVal <span class=\"k\">?</span> <span class=\"k\">this</span><span class=\"k\">.</span>addClass<span class=\"k\">(</span> value <span class=\"k\">)</span> <span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">.</span>removeClass<span class=\"k\">(</span> value <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> isFunction<span class=\"k\">(</span> value <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>each<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">(</span> i <span class=\"k\">)</span> <span class=\"k\">{</span>","                    jQuery<span class=\"k\">(</span> <span class=\"k\">this</span> <span class=\"k\">).</span>toggleClass<span class=\"k\">(</span>","                        value<span class=\"k\">.</span>call<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> i<span class=\"k\">,</span> getClass<span class=\"k\">(</span> <span class=\"k\">this</span> <span class=\"k\">),</span> stateVal <span class=\"k\">),</span>","                        stateVal","                    <span class=\"k\">);</span>","                <span class=\"k\">}</span> <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>each<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> className<span class=\"k\">,</span> i<span class=\"k\">,</span> self<span class=\"k\">,</span> classNames<span class=\"k\">;</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span> isValidValue <span class=\"k\">)</span> <span class=\"k\">{</span>","","                    <span class=\"c\">// Toggle individual class names</span>","                    i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","                    self <span class=\"k\">=</span> jQuery<span class=\"k\">(</span> <span class=\"k\">this</span> <span class=\"k\">);</span>","                    classNames <span class=\"k\">=</span> classesToArray<span class=\"k\">(</span> value <span class=\"k\">);</span>","","                    <span class=\"k\">while</span> <span class=\"k\">(</span> <span class=\"k\">(</span> className <span class=\"k\">=</span> classNames<span class=\"k\">[</span> i<span class=\"k\">++</span> <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                        <span class=\"c\">// Check each className given, space separated list</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> self<span class=\"k\">.</span>hasClass<span class=\"k\">(</span> className <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                            self<span class=\"k\">.</span>removeClass<span class=\"k\">(</span> className <span class=\"k\">);</span>","                        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                            self<span class=\"k\">.</span>addClass<span class=\"k\">(</span> className <span class=\"k\">);</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span>","","                    <span class=\"c\">// Toggle whole class name</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> value <span class=\"k\">===</span> undefined <span class=\"k\">||</span> type <span class=\"k\">===</span> <span class=\"s\">\"boolean\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    className <span class=\"k\">=</span> getClass<span class=\"k\">(</span> <span class=\"k\">this</span> <span class=\"k\">);</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> className <span class=\"k\">)</span> <span class=\"k\">{</span>","","                        <span class=\"c\">// Store className if set</span>","                        dataPriv<span class=\"k\">.</span>set<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"s\">\"__className__\"</span><span class=\"k\">,</span> className <span class=\"k\">);</span>","                    <span class=\"k\">}</span>","","                    <span class=\"c\">// If the element has a class name or if we're passed `false`,</span>","                    <span class=\"c\">// then remove the whole classname (if there was one, the above saved it).</span>","                    <span class=\"c\">// Otherwise bring back whatever was previously saved (if anything),</span>","                    <span class=\"c\">// falling back to the empty string if nothing was stored.</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">.</span>setAttribute <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">this</span><span class=\"k\">.</span>setAttribute<span class=\"k\">(</span> <span class=\"s\">\"class\"</span><span class=\"k\">,</span>","                            className <span class=\"k\">||</span> value <span class=\"k\">===</span> <span class=\"k\">false</span> <span class=\"k\">?</span>","                                <span class=\"s\">\"\"</span> <span class=\"k\">:</span>","                                dataPriv<span class=\"k\">.</span>get<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"s\">\"__className__\"</span> <span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"s\">\"\"</span>","                        <span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        hasClass<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> selector <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> className<span class=\"k\">,</span> elem<span class=\"k\">,</span>","                i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","","            className <span class=\"k\">=</span> <span class=\"s\">\" \"</span> <span class=\"k\">+</span> selector <span class=\"k\">+</span> <span class=\"s\">\" \"</span><span class=\"k\">;</span>","            <span class=\"k\">while</span> <span class=\"k\">(</span> <span class=\"k\">(</span> elem <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">[</span> i<span class=\"k\">++</span> <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> elem<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">&amp;&amp;</span>","                    <span class=\"k\">(</span> <span class=\"s\">\" \"</span> <span class=\"k\">+</span> stripAndCollapse<span class=\"k\">(</span> getClass<span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">\" \"</span> <span class=\"k\">).</span>indexOf<span class=\"k\">(</span> className <span class=\"k\">)</span> <span class=\"k\">&gt;</span> <span class=\"k\">-</span><span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">return</span> <span class=\"k\">true</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span> <span class=\"k\">);</span>","","","","","    <span class=\"k\">var</span> rreturn <span class=\"k\">=</span> <span class=\"s\">/\\r/g</span><span class=\"k\">;</span>","","    jQuery<span class=\"k\">.</span>fn<span class=\"k\">.</span>extend<span class=\"k\">(</span> <span class=\"k\">{</span>","        val<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> value <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> hooks<span class=\"k\">,</span> ret<span class=\"k\">,</span> valueIsFunction<span class=\"k\">,</span>","                elem <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">];</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>arguments<span class=\"k\">.</span>length <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","                    hooks <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>valHooks<span class=\"k\">[</span> elem<span class=\"k\">.</span>type <span class=\"k\">]</span> <span class=\"k\">||</span>","                        jQuery<span class=\"k\">.</span>valHooks<span class=\"k\">[</span> elem<span class=\"k\">.</span>nodeName<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">];</span>","","                    <span class=\"k\">if</span> <span class=\"k\">(</span> hooks <span class=\"k\">&amp;&amp;</span>","                        <span class=\"s\">\"get\"</span> <span class=\"k\">in</span> hooks <span class=\"k\">&amp;&amp;</span>","                        <span class=\"k\">(</span> ret <span class=\"k\">=</span> hooks<span class=\"k\">.</span>get<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"s\">\"value\"</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">!==</span> undefined","                    <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">return</span> ret<span class=\"k\">;</span>","                    <span class=\"k\">}</span>","","                    ret <span class=\"k\">=</span> elem<span class=\"k\">.</span>value<span class=\"k\">;</span>","","                    <span class=\"c\">// Handle most common string cases</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">typeof</span> ret <span class=\"k\">===</span> <span class=\"s\">\"string\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">return</span> ret<span class=\"k\">.</span>replace<span class=\"k\">(</span> rreturn<span class=\"k\">,</span> <span class=\"s\">\"\"</span> <span class=\"k\">);</span>","                    <span class=\"k\">}</span>","","                    <span class=\"c\">// Handle cases where value is null/undef or number</span>","                    <span class=\"k\">return</span> ret <span class=\"k\">==</span> <span class=\"k\">null</span> <span class=\"k\">?</span> <span class=\"s\">\"\"</span> <span class=\"k\">:</span> ret<span class=\"k\">;</span>","                <span class=\"k\">}</span>","","                <span class=\"k\">return</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            valueIsFunction <span class=\"k\">=</span> isFunction<span class=\"k\">(</span> value <span class=\"k\">);</span>","","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>each<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">(</span> i <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> val<span class=\"k\">;</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">.</span>nodeType <span class=\"k\">!==</span> <span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">return</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span> valueIsFunction <span class=\"k\">)</span> <span class=\"k\">{</span>","                    val <span class=\"k\">=</span> value<span class=\"k\">.</span>call<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> i<span class=\"k\">,</span> jQuery<span class=\"k\">(</span> <span class=\"k\">this</span> <span class=\"k\">).</span>val<span class=\"k\">()</span> <span class=\"k\">);</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    val <span class=\"k\">=</span> value<span class=\"k\">;</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// Treat null/undefined as \"\"; convert numbers to string</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> val <span class=\"k\">==</span> <span class=\"k\">null</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    val <span class=\"k\">=</span> <span class=\"s\">\"\"</span><span class=\"k\">;</span>","","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">typeof</span> val <span class=\"k\">===</span> <span class=\"s\">\"number\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    val <span class=\"k\">+=</span> <span class=\"s\">\"\"</span><span class=\"k\">;</span>","","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> Array<span class=\"k\">.</span>isArray<span class=\"k\">(</span> val <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    val <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>map<span class=\"k\">(</span> val<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span> value <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">return</span> value <span class=\"k\">==</span> <span class=\"k\">null</span> <span class=\"k\">?</span> <span class=\"s\">\"\"</span> <span class=\"k\">:</span> value <span class=\"k\">+</span> <span class=\"s\">\"\"</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span> <span class=\"k\">);</span>","                <span class=\"k\">}</span>","","                hooks <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>valHooks<span class=\"k\">[</span> <span class=\"k\">this</span><span class=\"k\">.</span>type <span class=\"k\">]</span> <span class=\"k\">||</span> jQuery<span class=\"k\">.</span>valHooks<span class=\"k\">[</span> <span class=\"k\">this</span><span class=\"k\">.</span>nodeName<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">];</span>","","                <span class=\"c\">// If set returns undefined, fall back to normal setting</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>hooks <span class=\"k\">||</span> <span class=\"k\">!(</span> <span class=\"s\">\"set\"</span> <span class=\"k\">in</span> hooks <span class=\"k\">)</span> <span class=\"k\">||</span> hooks<span class=\"k\">.</span>set<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> val<span class=\"k\">,</span> <span class=\"s\">\"value\"</span> <span class=\"k\">)</span> <span class=\"k\">===</span> undefined <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">this</span><span class=\"k\">.</span>value <span class=\"k\">=</span> val<span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span> <span class=\"k\">);</span>","","    jQuery<span class=\"k\">.</span>extend<span class=\"k\">(</span> <span class=\"k\">{</span>","        valHooks<span class=\"k\">:</span> <span class=\"k\">{</span>","            option<span class=\"k\">:</span> <span class=\"k\">{</span>","                get<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","","                    <span class=\"k\">var</span> val <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>find<span class=\"k\">.</span>attr<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"s\">\"value\"</span> <span class=\"k\">);</span>","                    <span class=\"k\">return</span> val <span class=\"k\">!=</span> <span class=\"k\">null</span> <span class=\"k\">?</span>","                        val <span class=\"k\">:</span>","","                        <span class=\"c\">// Support: IE &lt;=10 - 11 only</span>","                        <span class=\"c\">// option.text throws exceptions (#14686, #14858)</span>","                        <span class=\"c\">// Strip and collapse whitespace</span>","                        <span class=\"c\">// https://html.spec.whatwg.org/#strip-and-collapse-whitespace</span>","                        stripAndCollapse<span class=\"k\">(</span> jQuery<span class=\"k\">.</span>text<span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span><span class=\"k\">,</span>","            select<span class=\"k\">:</span> <span class=\"k\">{</span>","                get<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> value<span class=\"k\">,</span> option<span class=\"k\">,</span> i<span class=\"k\">,</span>","                        options <span class=\"k\">=</span> elem<span class=\"k\">.</span>options<span class=\"k\">,</span>","                        index <span class=\"k\">=</span> elem<span class=\"k\">.</span>selectedIndex<span class=\"k\">,</span>","                        one <span class=\"k\">=</span> elem<span class=\"k\">.</span>type <span class=\"k\">===</span> <span class=\"s\">\"select-one\"</span><span class=\"k\">,</span>","                        values <span class=\"k\">=</span> one <span class=\"k\">?</span> <span class=\"k\">null</span> <span class=\"k\">:</span> <span class=\"k\">[],</span>","                        max <span class=\"k\">=</span> one <span class=\"k\">?</span> index <span class=\"k\">+</span> <span class=\"s\">1</span> <span class=\"k\">:</span> options<span class=\"k\">.</span>length<span class=\"k\">;</span>","","                    <span class=\"k\">if</span> <span class=\"k\">(</span> index <span class=\"k\">&lt;</span> <span class=\"s\">0</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        i <span class=\"k\">=</span> max<span class=\"k\">;</span>","","                    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                        i <span class=\"k\">=</span> one <span class=\"k\">?</span> index <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","","                    <span class=\"c\">// Loop through all the selected options</span>","                    <span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">;</span> i <span class=\"k\">&lt;</span> max<span class=\"k\">;</span> i<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        option <span class=\"k\">=</span> options<span class=\"k\">[</span> i <span class=\"k\">];</span>","","                        <span class=\"c\">// Support: IE &lt;=9 only</span>","                        <span class=\"c\">// IE8-9 doesn't update selected after form reset (#2551)</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">(</span> option<span class=\"k\">.</span>selected <span class=\"k\">||</span> i <span class=\"k\">===</span> index <span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span>","","                            <span class=\"c\">// Don't return options that are disabled or in a disabled optgroup</span>","                            <span class=\"k\">!</span>option<span class=\"k\">.</span>disabled <span class=\"k\">&amp;&amp;</span>","                            <span class=\"k\">(</span> <span class=\"k\">!</span>option<span class=\"k\">.</span>parentNode<span class=\"k\">.</span>disabled <span class=\"k\">||</span>","                                <span class=\"k\">!</span>nodeName<span class=\"k\">(</span> option<span class=\"k\">.</span>parentNode<span class=\"k\">,</span> <span class=\"s\">\"optgroup\"</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                            <span class=\"c\">// Get the specific value for the option</span>","                            value <span class=\"k\">=</span> jQuery<span class=\"k\">(</span> option <span class=\"k\">).</span>val<span class=\"k\">();</span>","","                            <span class=\"c\">// We don't need an array for one selects</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span> one <span class=\"k\">)</span> <span class=\"k\">{</span>","                                <span class=\"k\">return</span> value<span class=\"k\">;</span>","                            <span class=\"k\">}</span>","","                            <span class=\"c\">// Multi-Selects return an array</span>","                            values<span class=\"k\">.</span>push<span class=\"k\">(</span> value <span class=\"k\">);</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span>","","                    <span class=\"k\">return</span> values<span class=\"k\">;</span>","                <span class=\"k\">}</span><span class=\"k\">,</span>","","                set<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> value <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> optionSet<span class=\"k\">,</span> option<span class=\"k\">,</span>","                        options <span class=\"k\">=</span> elem<span class=\"k\">.</span>options<span class=\"k\">,</span>","                        values <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>makeArray<span class=\"k\">(</span> value <span class=\"k\">),</span>","                        i <span class=\"k\">=</span> options<span class=\"k\">.</span>length<span class=\"k\">;</span>","","                    <span class=\"k\">while</span> <span class=\"k\">(</span> i<span class=\"k\">--</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        option <span class=\"k\">=</span> options<span class=\"k\">[</span> i <span class=\"k\">];</span>","","                        <span class=\"c\">/* eslint-disable no-cond-assign */</span>","","                        <span class=\"k\">if</span> <span class=\"k\">(</span> option<span class=\"k\">.</span>selected <span class=\"k\">=</span>","                            jQuery<span class=\"k\">.</span>inArray<span class=\"k\">(</span> jQuery<span class=\"k\">.</span>valHooks<span class=\"k\">.</span>option<span class=\"k\">.</span>get<span class=\"k\">(</span> option <span class=\"k\">),</span> values <span class=\"k\">)</span> <span class=\"k\">&gt;</span> <span class=\"k\">-</span><span class=\"s\">1</span>","                        <span class=\"k\">)</span> <span class=\"k\">{</span>","                            optionSet <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","                        <span class=\"k\">}</span>","","                        <span class=\"c\">/* eslint-enable no-cond-assign */</span>","                    <span class=\"k\">}</span>","","                    <span class=\"c\">// Force browsers to behave consistently when non-matching value is set</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>optionSet <span class=\"k\">)</span> <span class=\"k\">{</span>","                        elem<span class=\"k\">.</span>selectedIndex <span class=\"k\">=</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                    <span class=\"k\">return</span> values<span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span> <span class=\"k\">);</span>","","<span class=\"c\">// Radios and checkboxes getter/setter</span>","    jQuery<span class=\"k\">.</span>each<span class=\"k\">(</span> <span class=\"k\">[</span> <span class=\"s\">\"radio\"</span><span class=\"k\">,</span> <span class=\"s\">\"checkbox\"</span> <span class=\"k\">],</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","        jQuery<span class=\"k\">.</span>valHooks<span class=\"k\">[</span> <span class=\"k\">this</span> <span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","            set<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> value <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> Array<span class=\"k\">.</span>isArray<span class=\"k\">(</span> value <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">return</span> <span class=\"k\">(</span> elem<span class=\"k\">.</span>checked <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>inArray<span class=\"k\">(</span> jQuery<span class=\"k\">(</span> elem <span class=\"k\">).</span>val<span class=\"k\">(),</span> value <span class=\"k\">)</span> <span class=\"k\">&gt;</span> <span class=\"k\">-</span><span class=\"s\">1</span> <span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>support<span class=\"k\">.</span>checkOn <span class=\"k\">)</span> <span class=\"k\">{</span>","            jQuery<span class=\"k\">.</span>valHooks<span class=\"k\">[</span> <span class=\"k\">this</span> <span class=\"k\">].</span>get <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> elem<span class=\"k\">.</span>getAttribute<span class=\"k\">(</span> <span class=\"s\">\"value\"</span> <span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"k\">null</span> <span class=\"k\">?</span> <span class=\"s\">\"on\"</span> <span class=\"k\">:</span> elem<span class=\"k\">.</span>value<span class=\"k\">;</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span> <span class=\"k\">);</span>","","","","","<span class=\"c\">// Return jQuery for attributes-only inclusion</span>","","","    support<span class=\"k\">.</span>focusin <span class=\"k\">=</span> <span class=\"s\">\"onfocusin\"</span> <span class=\"k\">in</span> window<span class=\"k\">;</span>","","","    <span class=\"k\">var</span> rfocusMorph <span class=\"k\">=</span> <span class=\"s\">/^(?:focusinfocus|focusoutblur)$/</span><span class=\"k\">,</span>","        stopPropagationCallback <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> e <span class=\"k\">)</span> <span class=\"k\">{</span>","            e<span class=\"k\">.</span>stopPropagation<span class=\"k\">();</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","","    jQuery<span class=\"k\">.</span>extend<span class=\"k\">(</span> jQuery<span class=\"k\">.</span>event<span class=\"k\">,</span> <span class=\"k\">{</span>","","        trigger<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> event<span class=\"k\">,</span> data<span class=\"k\">,</span> elem<span class=\"k\">,</span> onlyHandlers <span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"k\">var</span> i<span class=\"k\">,</span> cur<span class=\"k\">,</span> tmp<span class=\"k\">,</span> bubbleType<span class=\"k\">,</span> ontype<span class=\"k\">,</span> handle<span class=\"k\">,</span> special<span class=\"k\">,</span> lastElement<span class=\"k\">,</span>","                eventPath <span class=\"k\">=</span> <span class=\"k\">[</span> elem <span class=\"k\">||</span> document <span class=\"k\">],</span>","                type <span class=\"k\">=</span> hasOwn<span class=\"k\">.</span>call<span class=\"k\">(</span> event<span class=\"k\">,</span> <span class=\"s\">\"type\"</span> <span class=\"k\">)</span> <span class=\"k\">?</span> event<span class=\"k\">.</span>type <span class=\"k\">:</span> event<span class=\"k\">,</span>","                namespaces <span class=\"k\">=</span> hasOwn<span class=\"k\">.</span>call<span class=\"k\">(</span> event<span class=\"k\">,</span> <span class=\"s\">\"namespace\"</span> <span class=\"k\">)</span> <span class=\"k\">?</span> event<span class=\"k\">.</span>namespace<span class=\"k\">.</span>split<span class=\"k\">(</span> <span class=\"s\">\".\"</span> <span class=\"k\">)</span> <span class=\"k\">:</span> <span class=\"k\">[];</span>","","            cur <span class=\"k\">=</span> lastElement <span class=\"k\">=</span> tmp <span class=\"k\">=</span> elem <span class=\"k\">=</span> elem <span class=\"k\">||</span> document<span class=\"k\">;</span>","","            <span class=\"c\">// Don't do events on text and comment nodes</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> elem<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">3</span> <span class=\"k\">||</span> elem<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">8</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// focus/blur morphs to focusin/out; ensure we're not firing them right now</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> rfocusMorph<span class=\"k\">.</span>test<span class=\"k\">(</span> type <span class=\"k\">+</span> jQuery<span class=\"k\">.</span>event<span class=\"k\">.</span>triggered <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> type<span class=\"k\">.</span>indexOf<span class=\"k\">(</span> <span class=\"s\">\".\"</span> <span class=\"k\">)</span> <span class=\"k\">&gt;</span> <span class=\"k\">-</span><span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                <span class=\"c\">// Namespaced trigger; create a regexp to match event type in handle()</span>","                namespaces <span class=\"k\">=</span> type<span class=\"k\">.</span>split<span class=\"k\">(</span> <span class=\"s\">\".\"</span> <span class=\"k\">);</span>","                type <span class=\"k\">=</span> namespaces<span class=\"k\">.</span>shift<span class=\"k\">();</span>","                namespaces<span class=\"k\">.</span>sort<span class=\"k\">();</span>","            <span class=\"k\">}</span>","            ontype <span class=\"k\">=</span> type<span class=\"k\">.</span>indexOf<span class=\"k\">(</span> <span class=\"s\">\":\"</span> <span class=\"k\">)</span> <span class=\"k\">&lt;</span> <span class=\"s\">0</span> <span class=\"k\">&amp;&amp;</span> <span class=\"s\">\"on\"</span> <span class=\"k\">+</span> type<span class=\"k\">;</span>","","            <span class=\"c\">// Caller can pass in a jQuery.Event object, Object, or just an event type string</span>","            event <span class=\"k\">=</span> event<span class=\"k\">[</span> jQuery<span class=\"k\">.</span>expando <span class=\"k\">]</span> <span class=\"k\">?</span>","                event <span class=\"k\">:</span>","                <span class=\"k\">new</span> jQuery<span class=\"k\">.</span>Event<span class=\"k\">(</span> type<span class=\"k\">,</span> <span class=\"k\">typeof</span> event <span class=\"k\">===</span> <span class=\"s\">\"object\"</span> <span class=\"k\">&amp;&amp;</span> event <span class=\"k\">);</span>","","            <span class=\"c\">// Trigger bitmask: &amp; 1 for native handlers; &amp; 2 for jQuery (always true)</span>","            event<span class=\"k\">.</span>isTrigger <span class=\"k\">=</span> onlyHandlers <span class=\"k\">?</span> <span class=\"s\">2</span> <span class=\"k\">:</span> <span class=\"s\">3</span><span class=\"k\">;</span>","            event<span class=\"k\">.</span>namespace <span class=\"k\">=</span> namespaces<span class=\"k\">.</span>join<span class=\"k\">(</span> <span class=\"s\">\".\"</span> <span class=\"k\">);</span>","            event<span class=\"k\">.</span>rnamespace <span class=\"k\">=</span> event<span class=\"k\">.</span>namespace <span class=\"k\">?</span>","                <span class=\"k\">new</span> RegExp<span class=\"k\">(</span> <span class=\"s\">\"(^|</span><span class=\"t\">\\\\</span><span class=\"s\">.)\"</span> <span class=\"k\">+</span> namespaces<span class=\"k\">.</span>join<span class=\"k\">(</span> <span class=\"s\">\"</span><span class=\"t\">\\\\</span><span class=\"s\">.(?:.*</span><span class=\"t\">\\\\</span><span class=\"s\">.|)\"</span> <span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">\"(</span><span class=\"t\">\\\\</span><span class=\"s\">.|$)\"</span> <span class=\"k\">)</span> <span class=\"k\">:</span>","                <span class=\"k\">null</span><span class=\"k\">;</span>","","            <span class=\"c\">// Clean up the event in case it is being reused</span>","            event<span class=\"k\">.</span>result <span class=\"k\">=</span> undefined<span class=\"k\">;</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>event<span class=\"k\">.</span>target <span class=\"k\">)</span> <span class=\"k\">{</span>","                event<span class=\"k\">.</span>target <span class=\"k\">=</span> elem<span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Clone any incoming data and prepend the event, creating the handler arg list</span>","            data <span class=\"k\">=</span> data <span class=\"k\">==</span> <span class=\"k\">null</span> <span class=\"k\">?</span>","                <span class=\"k\">[</span> event <span class=\"k\">]</span> <span class=\"k\">:</span>","                jQuery<span class=\"k\">.</span>makeArray<span class=\"k\">(</span> data<span class=\"k\">,</span> <span class=\"k\">[</span> event <span class=\"k\">]</span> <span class=\"k\">);</span>","","            <span class=\"c\">// Allow special events to draw outside the lines</span>","            special <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>event<span class=\"k\">.</span>special<span class=\"k\">[</span> type <span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>onlyHandlers <span class=\"k\">&amp;&amp;</span> special<span class=\"k\">.</span>trigger <span class=\"k\">&amp;&amp;</span> special<span class=\"k\">.</span>trigger<span class=\"k\">.</span>apply<span class=\"k\">(</span> elem<span class=\"k\">,</span> data <span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"k\">false</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Determine event propagation path in advance, per W3C events spec (#9951)</span>","            <span class=\"c\">// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>onlyHandlers <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>special<span class=\"k\">.</span>noBubble <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>isWindow<span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                bubbleType <span class=\"k\">=</span> special<span class=\"k\">.</span>delegateType <span class=\"k\">||</span> type<span class=\"k\">;</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>rfocusMorph<span class=\"k\">.</span>test<span class=\"k\">(</span> bubbleType <span class=\"k\">+</span> type <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    cur <span class=\"k\">=</span> cur<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","                <span class=\"k\">}</span>","                <span class=\"k\">for</span> <span class=\"k\">(</span> <span class=\"k\">;</span> cur<span class=\"k\">;</span> cur <span class=\"k\">=</span> cur<span class=\"k\">.</span>parentNode <span class=\"k\">)</span> <span class=\"k\">{</span>","                    eventPath<span class=\"k\">.</span>push<span class=\"k\">(</span> cur <span class=\"k\">);</span>","                    tmp <span class=\"k\">=</span> cur<span class=\"k\">;</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// Only add window if we got to document (e.g., not plain obj or detached DOM)</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> tmp <span class=\"k\">===</span> <span class=\"k\">(</span> elem<span class=\"k\">.</span>ownerDocument <span class=\"k\">||</span> document <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    eventPath<span class=\"k\">.</span>push<span class=\"k\">(</span> tmp<span class=\"k\">.</span>defaultView <span class=\"k\">||</span> tmp<span class=\"k\">.</span>parentWindow <span class=\"k\">||</span> window <span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Fire handlers on the event path</span>","            i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","            <span class=\"k\">while</span> <span class=\"k\">(</span> <span class=\"k\">(</span> cur <span class=\"k\">=</span> eventPath<span class=\"k\">[</span> i<span class=\"k\">++</span> <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>event<span class=\"k\">.</span>isPropagationStopped<span class=\"k\">()</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                lastElement <span class=\"k\">=</span> cur<span class=\"k\">;</span>","                event<span class=\"k\">.</span>type <span class=\"k\">=</span> i <span class=\"k\">&gt;</span> <span class=\"s\">1</span> <span class=\"k\">?</span>","                    bubbleType <span class=\"k\">:</span>","                    special<span class=\"k\">.</span>bindType <span class=\"k\">||</span> type<span class=\"k\">;</span>","","                <span class=\"c\">// jQuery handler</span>","                handle <span class=\"k\">=</span> <span class=\"k\">(</span> dataPriv<span class=\"k\">.</span>get<span class=\"k\">(</span> cur<span class=\"k\">,</span> <span class=\"s\">\"events\"</span> <span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"k\">{}</span> <span class=\"k\">)[</span> event<span class=\"k\">.</span>type <span class=\"k\">]</span> <span class=\"k\">&amp;&amp;</span>","                    dataPriv<span class=\"k\">.</span>get<span class=\"k\">(</span> cur<span class=\"k\">,</span> <span class=\"s\">\"handle\"</span> <span class=\"k\">);</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> handle <span class=\"k\">)</span> <span class=\"k\">{</span>","                    handle<span class=\"k\">.</span>apply<span class=\"k\">(</span> cur<span class=\"k\">,</span> data <span class=\"k\">);</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// Native handler</span>","                handle <span class=\"k\">=</span> ontype <span class=\"k\">&amp;&amp;</span> cur<span class=\"k\">[</span> ontype <span class=\"k\">];</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> handle <span class=\"k\">&amp;&amp;</span> handle<span class=\"k\">.</span>apply <span class=\"k\">&amp;&amp;</span> acceptData<span class=\"k\">(</span> cur <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    event<span class=\"k\">.</span>result <span class=\"k\">=</span> handle<span class=\"k\">.</span>apply<span class=\"k\">(</span> cur<span class=\"k\">,</span> data <span class=\"k\">);</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> event<span class=\"k\">.</span>result <span class=\"k\">===</span> <span class=\"k\">false</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        event<span class=\"k\">.</span>preventDefault<span class=\"k\">();</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","            event<span class=\"k\">.</span>type <span class=\"k\">=</span> type<span class=\"k\">;</span>","","            <span class=\"c\">// If nobody prevented the default action, do it now</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>onlyHandlers <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>event<span class=\"k\">.</span>isDefaultPrevented<span class=\"k\">()</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">(</span> <span class=\"k\">!</span>special<span class=\"k\">.</span>_default <span class=\"k\">||</span>","                    special<span class=\"k\">.</span>_default<span class=\"k\">.</span>apply<span class=\"k\">(</span> eventPath<span class=\"k\">.</span>pop<span class=\"k\">(),</span> data <span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"k\">false</span> <span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span>","                    acceptData<span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                    <span class=\"c\">// Call a native DOM method on the target with the same name as the event.</span>","                    <span class=\"c\">// Don't do default actions on window, that's where global variables be (#6170)</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> ontype <span class=\"k\">&amp;&amp;</span> isFunction<span class=\"k\">(</span> elem<span class=\"k\">[</span> type <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>isWindow<span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                        <span class=\"c\">// Don't re-trigger an onFOO event when we call its FOO() method</span>","                        tmp <span class=\"k\">=</span> elem<span class=\"k\">[</span> ontype <span class=\"k\">];</span>","","                        <span class=\"k\">if</span> <span class=\"k\">(</span> tmp <span class=\"k\">)</span> <span class=\"k\">{</span>","                            elem<span class=\"k\">[</span> ontype <span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","                        <span class=\"k\">}</span>","","                        <span class=\"c\">// Prevent re-triggering of the same event, since we already bubbled it above</span>","                        jQuery<span class=\"k\">.</span>event<span class=\"k\">.</span>triggered <span class=\"k\">=</span> type<span class=\"k\">;</span>","","                        <span class=\"k\">if</span> <span class=\"k\">(</span> event<span class=\"k\">.</span>isPropagationStopped<span class=\"k\">()</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                            lastElement<span class=\"k\">.</span>addEventListener<span class=\"k\">(</span> type<span class=\"k\">,</span> stopPropagationCallback <span class=\"k\">);</span>","                        <span class=\"k\">}</span>","","                        elem<span class=\"k\">[</span> type <span class=\"k\">]();</span>","","                        <span class=\"k\">if</span> <span class=\"k\">(</span> event<span class=\"k\">.</span>isPropagationStopped<span class=\"k\">()</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                            lastElement<span class=\"k\">.</span>removeEventListener<span class=\"k\">(</span> type<span class=\"k\">,</span> stopPropagationCallback <span class=\"k\">);</span>","                        <span class=\"k\">}</span>","","                        jQuery<span class=\"k\">.</span>event<span class=\"k\">.</span>triggered <span class=\"k\">=</span> undefined<span class=\"k\">;</span>","","                        <span class=\"k\">if</span> <span class=\"k\">(</span> tmp <span class=\"k\">)</span> <span class=\"k\">{</span>","                            elem<span class=\"k\">[</span> ontype <span class=\"k\">]</span> <span class=\"k\">=</span> tmp<span class=\"k\">;</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">return</span> event<span class=\"k\">.</span>result<span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        <span class=\"c\">// Piggyback on a donor event to simulate a different one</span>","        <span class=\"c\">// Used only for `focus(in | out)` events</span>","        simulate<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> type<span class=\"k\">,</span> elem<span class=\"k\">,</span> event <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> e <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>extend<span class=\"k\">(</span>","                <span class=\"k\">new</span> jQuery<span class=\"k\">.</span>Event<span class=\"k\">(),</span>","                event<span class=\"k\">,</span>","                <span class=\"k\">{</span>","                    type<span class=\"k\">:</span> type<span class=\"k\">,</span>","                    isSimulated<span class=\"k\">:</span> <span class=\"k\">true</span>","                <span class=\"k\">}</span>","            <span class=\"k\">);</span>","","            jQuery<span class=\"k\">.</span>event<span class=\"k\">.</span>trigger<span class=\"k\">(</span> e<span class=\"k\">,</span> <span class=\"k\">null</span><span class=\"k\">,</span> elem <span class=\"k\">);</span>","        <span class=\"k\">}</span>","","    <span class=\"k\">}</span> <span class=\"k\">);</span>","","    jQuery<span class=\"k\">.</span>fn<span class=\"k\">.</span>extend<span class=\"k\">(</span> <span class=\"k\">{</span>","","        trigger<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> type<span class=\"k\">,</span> data <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>each<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                jQuery<span class=\"k\">.</span>event<span class=\"k\">.</span>trigger<span class=\"k\">(</span> type<span class=\"k\">,</span> data<span class=\"k\">,</span> <span class=\"k\">this</span> <span class=\"k\">);</span>","            <span class=\"k\">}</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        triggerHandler<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> type<span class=\"k\">,</span> data <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> elem <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">];</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> jQuery<span class=\"k\">.</span>event<span class=\"k\">.</span>trigger<span class=\"k\">(</span> type<span class=\"k\">,</span> data<span class=\"k\">,</span> elem<span class=\"k\">,</span> <span class=\"k\">true</span> <span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span> <span class=\"k\">);</span>","","","<span class=\"c\">// Support: Firefox &lt;=44</span>","<span class=\"c\">// Firefox doesn't have focus(in | out) events</span>","<span class=\"c\">// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787</span>","<span class=\"c\">//</span>","<span class=\"c\">// Support: Chrome &lt;=48 - 49, Safari &lt;=9.0 - 9.1</span>","<span class=\"c\">// focus(in | out) events fire after focus &amp; blur events,</span>","<span class=\"c\">// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order</span>","<span class=\"c\">// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>support<span class=\"k\">.</span>focusin <span class=\"k\">)</span> <span class=\"k\">{</span>","        jQuery<span class=\"k\">.</span>each<span class=\"k\">(</span> <span class=\"k\">{</span> focus<span class=\"k\">:</span> <span class=\"s\">\"focusin\"</span><span class=\"k\">,</span> blur<span class=\"k\">:</span> <span class=\"s\">\"focusout\"</span> <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span> orig<span class=\"k\">,</span> fix <span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"c\">// Attach a single capturing handler on the document while someone wants focusin/focusout</span>","            <span class=\"k\">var</span> handler <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> event <span class=\"k\">)</span> <span class=\"k\">{</span>","                jQuery<span class=\"k\">.</span>event<span class=\"k\">.</span>simulate<span class=\"k\">(</span> fix<span class=\"k\">,</span> event<span class=\"k\">.</span>target<span class=\"k\">,</span> jQuery<span class=\"k\">.</span>event<span class=\"k\">.</span>fix<span class=\"k\">(</span> event <span class=\"k\">)</span> <span class=\"k\">);</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","","            jQuery<span class=\"k\">.</span>event<span class=\"k\">.</span>special<span class=\"k\">[</span> fix <span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">{</span>","                setup<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> doc <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>ownerDocument <span class=\"k\">||</span> <span class=\"k\">this</span><span class=\"k\">,</span>","                        attaches <span class=\"k\">=</span> dataPriv<span class=\"k\">.</span>access<span class=\"k\">(</span> doc<span class=\"k\">,</span> fix <span class=\"k\">);</span>","","                    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>attaches <span class=\"k\">)</span> <span class=\"k\">{</span>","                        doc<span class=\"k\">.</span>addEventListener<span class=\"k\">(</span> orig<span class=\"k\">,</span> handler<span class=\"k\">,</span> <span class=\"k\">true</span> <span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                    dataPriv<span class=\"k\">.</span>access<span class=\"k\">(</span> doc<span class=\"k\">,</span> fix<span class=\"k\">,</span> <span class=\"k\">(</span> attaches <span class=\"k\">||</span> <span class=\"s\">0</span> <span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">1</span> <span class=\"k\">);</span>","                <span class=\"k\">}</span><span class=\"k\">,</span>","                teardown<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> doc <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>ownerDocument <span class=\"k\">||</span> <span class=\"k\">this</span><span class=\"k\">,</span>","                        attaches <span class=\"k\">=</span> dataPriv<span class=\"k\">.</span>access<span class=\"k\">(</span> doc<span class=\"k\">,</span> fix <span class=\"k\">)</span> <span class=\"k\">-</span> <span class=\"s\">1</span><span class=\"k\">;</span>","","                    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>attaches <span class=\"k\">)</span> <span class=\"k\">{</span>","                        doc<span class=\"k\">.</span>removeEventListener<span class=\"k\">(</span> orig<span class=\"k\">,</span> handler<span class=\"k\">,</span> <span class=\"k\">true</span> <span class=\"k\">);</span>","                        dataPriv<span class=\"k\">.</span>remove<span class=\"k\">(</span> doc<span class=\"k\">,</span> fix <span class=\"k\">);</span>","","                    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                        dataPriv<span class=\"k\">.</span>access<span class=\"k\">(</span> doc<span class=\"k\">,</span> fix<span class=\"k\">,</span> attaches <span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","        <span class=\"k\">}</span> <span class=\"k\">);</span>","    <span class=\"k\">}</span>","    <span class=\"k\">var</span> location <span class=\"k\">=</span> window<span class=\"k\">.</span>location<span class=\"k\">;</span>","","    <span class=\"k\">var</span> nonce <span class=\"k\">=</span> Date<span class=\"k\">.</span>now<span class=\"k\">();</span>","","    <span class=\"k\">var</span> rquery <span class=\"k\">=</span> <span class=\"k\">(</span> <span class=\"s\">/\\?/</span> <span class=\"k\">);</span>","","","","<span class=\"c\">// Cross-browser xml parsing</span>","    jQuery<span class=\"k\">.</span>parseXML <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> data <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> xml<span class=\"k\">;</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>data <span class=\"k\">||</span> <span class=\"k\">typeof</span> data <span class=\"k\">!==</span> <span class=\"s\">\"string\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"c\">// Support: IE 9 - 11 only</span>","        <span class=\"c\">// IE throws on parseFromString with invalid input.</span>","        <span class=\"k\">try</span> <span class=\"k\">{</span>","            xml <span class=\"k\">=</span> <span class=\"k\">(</span> <span class=\"k\">new</span> window<span class=\"k\">.</span>DOMParser<span class=\"k\">()</span> <span class=\"k\">).</span>parseFromString<span class=\"k\">(</span> data<span class=\"k\">,</span> <span class=\"s\">\"text/xml\"</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span> <span class=\"k\">catch</span> <span class=\"k\">(</span> e <span class=\"k\">)</span> <span class=\"k\">{</span>","            xml <span class=\"k\">=</span> undefined<span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>xml <span class=\"k\">||</span> xml<span class=\"k\">.</span>getElementsByTagName<span class=\"k\">(</span> <span class=\"s\">\"parsererror\"</span> <span class=\"k\">).</span>length <span class=\"k\">)</span> <span class=\"k\">{</span>","            jQuery<span class=\"k\">.</span>error<span class=\"k\">(</span> <span class=\"s\">\"Invalid XML: \"</span> <span class=\"k\">+</span> data <span class=\"k\">);</span>","        <span class=\"k\">}</span>","        <span class=\"k\">return</span> xml<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","","    <span class=\"k\">var</span>","        rbracket <span class=\"k\">=</span> <span class=\"s\">/\\[\\]$/</span><span class=\"k\">,</span>","        rCRLF <span class=\"k\">=</span> <span class=\"s\">/\\r?\\n/g</span><span class=\"k\">,</span>","        rsubmitterTypes <span class=\"k\">=</span> <span class=\"s\">/^(?:submit|button|image|reset|file)$/i</span><span class=\"k\">,</span>","        rsubmittable <span class=\"k\">=</span> <span class=\"s\">/^(?:input|select|textarea|keygen)/i</span><span class=\"k\">;</span>","","    <span class=\"k\">function</span> buildParams<span class=\"k\">(</span> prefix<span class=\"k\">,</span> obj<span class=\"k\">,</span> traditional<span class=\"k\">,</span> add <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> name<span class=\"k\">;</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span> Array<span class=\"k\">.</span>isArray<span class=\"k\">(</span> obj <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"c\">// Serialize array item.</span>","            jQuery<span class=\"k\">.</span>each<span class=\"k\">(</span> obj<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span> i<span class=\"k\">,</span> v <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> traditional <span class=\"k\">||</span> rbracket<span class=\"k\">.</span>test<span class=\"k\">(</span> prefix <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                    <span class=\"c\">// Treat each array item as a scalar.</span>","                    add<span class=\"k\">(</span> prefix<span class=\"k\">,</span> v <span class=\"k\">);</span>","","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","","                    <span class=\"c\">// Item is non-scalar (array or object), encode its numeric index.</span>","                    buildParams<span class=\"k\">(</span>","                        prefix <span class=\"k\">+</span> <span class=\"s\">\"[\"</span> <span class=\"k\">+</span> <span class=\"k\">(</span> <span class=\"k\">typeof</span> v <span class=\"k\">===</span> <span class=\"s\">\"object\"</span> <span class=\"k\">&amp;&amp;</span> v <span class=\"k\">!=</span> <span class=\"k\">null</span> <span class=\"k\">?</span> i <span class=\"k\">:</span> <span class=\"s\">\"\"</span> <span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">\"]\"</span><span class=\"k\">,</span>","                        v<span class=\"k\">,</span>","                        traditional<span class=\"k\">,</span>","                        add","                    <span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span> <span class=\"k\">);</span>","","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>traditional <span class=\"k\">&amp;&amp;</span> toType<span class=\"k\">(</span> obj <span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"s\">\"object\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"c\">// Serialize object item.</span>","            <span class=\"k\">for</span> <span class=\"k\">(</span> name <span class=\"k\">in</span> obj <span class=\"k\">)</span> <span class=\"k\">{</span>","                buildParams<span class=\"k\">(</span> prefix <span class=\"k\">+</span> <span class=\"s\">\"[\"</span> <span class=\"k\">+</span> name <span class=\"k\">+</span> <span class=\"s\">\"]\"</span><span class=\"k\">,</span> obj<span class=\"k\">[</span> name <span class=\"k\">],</span> traditional<span class=\"k\">,</span> add <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","","            <span class=\"c\">// Serialize scalar item.</span>","            add<span class=\"k\">(</span> prefix<span class=\"k\">,</span> obj <span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","<span class=\"c\">// Serialize an array of form elements or a set of</span>","<span class=\"c\">// key/values into a query string</span>","    jQuery<span class=\"k\">.</span>param <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> a<span class=\"k\">,</span> traditional <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> prefix<span class=\"k\">,</span>","            s <span class=\"k\">=</span> <span class=\"k\">[],</span>","            add <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> key<span class=\"k\">,</span> valueOrFunction <span class=\"k\">)</span> <span class=\"k\">{</span>","","                <span class=\"c\">// If value is a function, invoke it and use its return value</span>","                <span class=\"k\">var</span> value <span class=\"k\">=</span> isFunction<span class=\"k\">(</span> valueOrFunction <span class=\"k\">)</span> <span class=\"k\">?</span>","                    valueOrFunction<span class=\"k\">()</span> <span class=\"k\">:</span>","                    valueOrFunction<span class=\"k\">;</span>","","                s<span class=\"k\">[</span> s<span class=\"k\">.</span>length <span class=\"k\">]</span> <span class=\"k\">=</span> encodeURIComponent<span class=\"k\">(</span> key <span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">\"=\"</span> <span class=\"k\">+</span>","                    encodeURIComponent<span class=\"k\">(</span> value <span class=\"k\">==</span> <span class=\"k\">null</span> <span class=\"k\">?</span> <span class=\"s\">\"\"</span> <span class=\"k\">:</span> value <span class=\"k\">);</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","","        <span class=\"c\">// If an array was passed in, assume that it is an array of form elements.</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> Array<span class=\"k\">.</span>isArray<span class=\"k\">(</span> a <span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"k\">(</span> a<span class=\"k\">.</span>jquery <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>jQuery<span class=\"k\">.</span>isPlainObject<span class=\"k\">(</span> a <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"c\">// Serialize the form elements</span>","            jQuery<span class=\"k\">.</span>each<span class=\"k\">(</span> a<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                add<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">.</span>name<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">.</span>value <span class=\"k\">);</span>","            <span class=\"k\">}</span> <span class=\"k\">);</span>","","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","","            <span class=\"c\">// If traditional, encode the \"old\" way (the way 1.3.2 or older</span>","            <span class=\"c\">// did it), otherwise encode params recursively.</span>","            <span class=\"k\">for</span> <span class=\"k\">(</span> prefix <span class=\"k\">in</span> a <span class=\"k\">)</span> <span class=\"k\">{</span>","                buildParams<span class=\"k\">(</span> prefix<span class=\"k\">,</span> a<span class=\"k\">[</span> prefix <span class=\"k\">],</span> traditional<span class=\"k\">,</span> add <span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","","        <span class=\"c\">// Return the resulting serialization</span>","        <span class=\"k\">return</span> s<span class=\"k\">.</span>join<span class=\"k\">(</span> <span class=\"s\">\"&amp;\"</span> <span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    jQuery<span class=\"k\">.</span>fn<span class=\"k\">.</span>extend<span class=\"k\">(</span> <span class=\"k\">{</span>","        serialize<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> jQuery<span class=\"k\">.</span>param<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">.</span>serializeArray<span class=\"k\">()</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        serializeArray<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>map<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","","                <span class=\"c\">// Can add propHook for \"elements\" to filter or add form elements</span>","                <span class=\"k\">var</span> elements <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>prop<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"s\">\"elements\"</span> <span class=\"k\">);</span>","                <span class=\"k\">return</span> elements <span class=\"k\">?</span> jQuery<span class=\"k\">.</span>makeArray<span class=\"k\">(</span> elements <span class=\"k\">)</span> <span class=\"k\">:</span> <span class=\"k\">this</span><span class=\"k\">;</span>","            <span class=\"k\">}</span> <span class=\"k\">)</span>","                <span class=\"k\">.</span>filter<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> type <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>type<span class=\"k\">;</span>","","                    <span class=\"c\">// Use .is( \":disabled\" ) so that fieldset[disabled] works</span>","                    <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>name <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>jQuery<span class=\"k\">(</span> <span class=\"k\">this</span> <span class=\"k\">).</span>is<span class=\"k\">(</span> <span class=\"s\">\":disabled\"</span> <span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span>","                        rsubmittable<span class=\"k\">.</span>test<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">.</span>nodeName <span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>rsubmitterTypes<span class=\"k\">.</span>test<span class=\"k\">(</span> type <span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span>","                        <span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">.</span>checked <span class=\"k\">||</span> <span class=\"k\">!</span>rcheckableType<span class=\"k\">.</span>test<span class=\"k\">(</span> type <span class=\"k\">)</span> <span class=\"k\">);</span>","                <span class=\"k\">}</span> <span class=\"k\">)</span>","                <span class=\"k\">.</span>map<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">(</span> i<span class=\"k\">,</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> val <span class=\"k\">=</span> jQuery<span class=\"k\">(</span> <span class=\"k\">this</span> <span class=\"k\">).</span>val<span class=\"k\">();</span>","","                    <span class=\"k\">if</span> <span class=\"k\">(</span> val <span class=\"k\">==</span> <span class=\"k\">null</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">return</span> <span class=\"k\">null</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","","                    <span class=\"k\">if</span> <span class=\"k\">(</span> Array<span class=\"k\">.</span>isArray<span class=\"k\">(</span> val <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">return</span> jQuery<span class=\"k\">.</span>map<span class=\"k\">(</span> val<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span> val <span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">return</span> <span class=\"k\">{</span> name<span class=\"k\">:</span> elem<span class=\"k\">.</span>name<span class=\"k\">,</span> value<span class=\"k\">:</span> val<span class=\"k\">.</span>replace<span class=\"k\">(</span> rCRLF<span class=\"k\">,</span> <span class=\"s\">\"</span><span class=\"t\">\\r\\n</span><span class=\"s\">\"</span> <span class=\"k\">)</span> <span class=\"k\">}</span><span class=\"k\">;</span>","                        <span class=\"k\">}</span> <span class=\"k\">);</span>","                    <span class=\"k\">}</span>","","                    <span class=\"k\">return</span> <span class=\"k\">{</span> name<span class=\"k\">:</span> elem<span class=\"k\">.</span>name<span class=\"k\">,</span> value<span class=\"k\">:</span> val<span class=\"k\">.</span>replace<span class=\"k\">(</span> rCRLF<span class=\"k\">,</span> <span class=\"s\">\"</span><span class=\"t\">\\r\\n</span><span class=\"s\">\"</span> <span class=\"k\">)</span> <span class=\"k\">}</span><span class=\"k\">;</span>","                <span class=\"k\">}</span> <span class=\"k\">).</span>get<span class=\"k\">();</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span> <span class=\"k\">);</span>","","","    <span class=\"k\">var</span>","        r20 <span class=\"k\">=</span> <span class=\"s\">/%20/g</span><span class=\"k\">,</span>","        rhash <span class=\"k\">=</span> <span class=\"s\">/#.*$/</span><span class=\"k\">,</span>","        rantiCache <span class=\"k\">=</span> <span class=\"s\">/([?&amp;])_=[^&amp;]*/</span><span class=\"k\">,</span>","        rheaders <span class=\"k\">=</span> <span class=\"s\">/^(.*?):[ \\t]*([^\\r\\n]*)$/mg</span><span class=\"k\">,</span>","","        <span class=\"c\">// #7653, #8125, #8152: local protocol detection</span>","        rlocalProtocol <span class=\"k\">=</span> <span class=\"s\">/^(?:about|app|app-storage|.+-extension|file|res|widget):$/</span><span class=\"k\">,</span>","        rnoContent <span class=\"k\">=</span> <span class=\"s\">/^(?:GET|HEAD)$/</span><span class=\"k\">,</span>","        rprotocol <span class=\"k\">=</span> <span class=\"s\">/^\\/\\//</span><span class=\"k\">,</span>","","        <span class=\"c\">/* Prefilters</span>","<span class=\"c\">\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)</span>","<span class=\"c\">\t * 2) These are called:</span>","<span class=\"c\">\t *    - BEFORE asking for a transport</span>","<span class=\"c\">\t *    - AFTER param serialization (s.data is a string if s.processData is true)</span>","<span class=\"c\">\t * 3) key is the dataType</span>","<span class=\"c\">\t * 4) the catchall symbol \"*\" can be used</span>","<span class=\"c\">\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed</span>","<span class=\"c\">\t */</span>","        prefilters <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">,</span>","","        <span class=\"c\">/* Transports bindings</span>","<span class=\"c\">\t * 1) key is the dataType</span>","<span class=\"c\">\t * 2) the catchall symbol \"*\" can be used</span>","<span class=\"c\">\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed</span>","<span class=\"c\">\t */</span>","        transports <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">,</span>","","        <span class=\"c\">// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression</span>","        allTypes <span class=\"k\">=</span> <span class=\"s\">\"*/\"</span><span class=\"k\">.</span>concat<span class=\"k\">(</span> <span class=\"s\">\"*\"</span> <span class=\"k\">),</span>","","        <span class=\"c\">// Anchor tag for parsing the document origin</span>","        originAnchor <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span> <span class=\"s\">\"a\"</span> <span class=\"k\">);</span>","    originAnchor<span class=\"k\">.</span>href <span class=\"k\">=</span> location<span class=\"k\">.</span>href<span class=\"k\">;</span>","","<span class=\"c\">// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport</span>","    <span class=\"k\">function</span> addToPrefiltersOrTransports<span class=\"k\">(</span> structure <span class=\"k\">)</span> <span class=\"k\">{</span>","","        <span class=\"c\">// dataTypeExpression is optional and defaults to \"*\"</span>","        <span class=\"k\">return</span> <span class=\"k\">function</span><span class=\"k\">(</span> dataTypeExpression<span class=\"k\">,</span> func <span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">typeof</span> dataTypeExpression <span class=\"k\">!==</span> <span class=\"s\">\"string\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                func <span class=\"k\">=</span> dataTypeExpression<span class=\"k\">;</span>","                dataTypeExpression <span class=\"k\">=</span> <span class=\"s\">\"*\"</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">var</span> dataType<span class=\"k\">,</span>","                i <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">,</span>","                dataTypes <span class=\"k\">=</span> dataTypeExpression<span class=\"k\">.</span>toLowerCase<span class=\"k\">().</span>match<span class=\"k\">(</span> rnothtmlwhite <span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"k\">[];</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> isFunction<span class=\"k\">(</span> func <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                <span class=\"c\">// For each dataType in the dataTypeExpression</span>","                <span class=\"k\">while</span> <span class=\"k\">(</span> <span class=\"k\">(</span> dataType <span class=\"k\">=</span> dataTypes<span class=\"k\">[</span> i<span class=\"k\">++</span> <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                    <span class=\"c\">// Prepend if requested</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> dataType<span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">]</span> <span class=\"k\">===</span> <span class=\"s\">\"+\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        dataType <span class=\"k\">=</span> dataType<span class=\"k\">.</span>slice<span class=\"k\">(</span> <span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"s\">\"*\"</span><span class=\"k\">;</span>","                        <span class=\"k\">(</span> structure<span class=\"k\">[</span> dataType <span class=\"k\">]</span> <span class=\"k\">=</span> structure<span class=\"k\">[</span> dataType <span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"k\">[]</span> <span class=\"k\">).</span>unshift<span class=\"k\">(</span> func <span class=\"k\">);</span>","","                        <span class=\"c\">// Otherwise append</span>","                    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                        <span class=\"k\">(</span> structure<span class=\"k\">[</span> dataType <span class=\"k\">]</span> <span class=\"k\">=</span> structure<span class=\"k\">[</span> dataType <span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"k\">[]</span> <span class=\"k\">).</span>push<span class=\"k\">(</span> func <span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","","<span class=\"c\">// Base inspection function for prefilters and transports</span>","    <span class=\"k\">function</span> inspectPrefiltersOrTransports<span class=\"k\">(</span> structure<span class=\"k\">,</span> options<span class=\"k\">,</span> originalOptions<span class=\"k\">,</span> jqXHR <span class=\"k\">)</span> <span class=\"k\">{</span>","","        <span class=\"k\">var</span> inspected <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">,</span>","            seekingTransport <span class=\"k\">=</span> <span class=\"k\">(</span> structure <span class=\"k\">===</span> transports <span class=\"k\">);</span>","","        <span class=\"k\">function</span> inspect<span class=\"k\">(</span> dataType <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> selected<span class=\"k\">;</span>","            inspected<span class=\"k\">[</span> dataType <span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","            jQuery<span class=\"k\">.</span>each<span class=\"k\">(</span> structure<span class=\"k\">[</span> dataType <span class=\"k\">]</span> <span class=\"k\">||</span> <span class=\"k\">[],</span> <span class=\"k\">function</span><span class=\"k\">(</span> _<span class=\"k\">,</span> prefilterOrFactory <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> dataTypeOrTransport <span class=\"k\">=</span> prefilterOrFactory<span class=\"k\">(</span> options<span class=\"k\">,</span> originalOptions<span class=\"k\">,</span> jqXHR <span class=\"k\">);</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">typeof</span> dataTypeOrTransport <span class=\"k\">===</span> <span class=\"s\">\"string\"</span> <span class=\"k\">&amp;&amp;</span>","                    <span class=\"k\">!</span>seekingTransport <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>inspected<span class=\"k\">[</span> dataTypeOrTransport <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                    options<span class=\"k\">.</span>dataTypes<span class=\"k\">.</span>unshift<span class=\"k\">(</span> dataTypeOrTransport <span class=\"k\">);</span>","                    inspect<span class=\"k\">(</span> dataTypeOrTransport <span class=\"k\">);</span>","                    <span class=\"k\">return</span> <span class=\"k\">false</span><span class=\"k\">;</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> seekingTransport <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">return</span> <span class=\"k\">!(</span> selected <span class=\"k\">=</span> dataTypeOrTransport <span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span> <span class=\"k\">);</span>","            <span class=\"k\">return</span> selected<span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">return</span> inspect<span class=\"k\">(</span> options<span class=\"k\">.</span>dataTypes<span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"k\">!</span>inspected<span class=\"k\">[</span> <span class=\"s\">\"*\"</span> <span class=\"k\">]</span> <span class=\"k\">&amp;&amp;</span> inspect<span class=\"k\">(</span> <span class=\"s\">\"*\"</span> <span class=\"k\">);</span>","    <span class=\"k\">}</span>","","<span class=\"c\">// A special extend for ajax options</span>","<span class=\"c\">// that takes \"flat\" options (not to be deep extended)</span>","<span class=\"c\">// Fixes #9887</span>","    <span class=\"k\">function</span> ajaxExtend<span class=\"k\">(</span> target<span class=\"k\">,</span> src <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> key<span class=\"k\">,</span> deep<span class=\"k\">,</span>","            flatOptions <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>ajaxSettings<span class=\"k\">.</span>flatOptions <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","","        <span class=\"k\">for</span> <span class=\"k\">(</span> key <span class=\"k\">in</span> src <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> src<span class=\"k\">[</span> key <span class=\"k\">]</span> <span class=\"k\">!==</span> undefined <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">(</span> flatOptions<span class=\"k\">[</span> key <span class=\"k\">]</span> <span class=\"k\">?</span> target <span class=\"k\">:</span> <span class=\"k\">(</span> deep <span class=\"k\">||</span> <span class=\"k\">(</span> deep <span class=\"k\">=</span> <span class=\"k\">{}</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">)[</span> key <span class=\"k\">]</span> <span class=\"k\">=</span> src<span class=\"k\">[</span> key <span class=\"k\">];</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> deep <span class=\"k\">)</span> <span class=\"k\">{</span>","            jQuery<span class=\"k\">.</span>extend<span class=\"k\">(</span> <span class=\"k\">true</span><span class=\"k\">,</span> target<span class=\"k\">,</span> deep <span class=\"k\">);</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">return</span> target<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    <span class=\"c\">/* Handles responses to an ajax request:</span>","<span class=\"c\"> * - finds the right dataType (mediates between content-type and expected dataType)</span>","<span class=\"c\"> * - returns the corresponding response</span>","<span class=\"c\"> */</span>","    <span class=\"k\">function</span> ajaxHandleResponses<span class=\"k\">(</span> s<span class=\"k\">,</span> jqXHR<span class=\"k\">,</span> responses <span class=\"k\">)</span> <span class=\"k\">{</span>","","        <span class=\"k\">var</span> ct<span class=\"k\">,</span> type<span class=\"k\">,</span> finalDataType<span class=\"k\">,</span> firstDataType<span class=\"k\">,</span>","            contents <span class=\"k\">=</span> s<span class=\"k\">.</span>contents<span class=\"k\">,</span>","            dataTypes <span class=\"k\">=</span> s<span class=\"k\">.</span>dataTypes<span class=\"k\">;</span>","","        <span class=\"c\">// Remove auto dataType and get content-type in the process</span>","        <span class=\"k\">while</span> <span class=\"k\">(</span> dataTypes<span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">]</span> <span class=\"k\">===</span> <span class=\"s\">\"*\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            dataTypes<span class=\"k\">.</span>shift<span class=\"k\">();</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> ct <span class=\"k\">===</span> undefined <span class=\"k\">)</span> <span class=\"k\">{</span>","                ct <span class=\"k\">=</span> s<span class=\"k\">.</span>mimeType <span class=\"k\">||</span> jqXHR<span class=\"k\">.</span>getResponseHeader<span class=\"k\">(</span> <span class=\"s\">\"Content-Type\"</span> <span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","","        <span class=\"c\">// Check if we're dealing with a known content-type</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> ct <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">for</span> <span class=\"k\">(</span> type <span class=\"k\">in</span> contents <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> contents<span class=\"k\">[</span> type <span class=\"k\">]</span> <span class=\"k\">&amp;&amp;</span> contents<span class=\"k\">[</span> type <span class=\"k\">].</span>test<span class=\"k\">(</span> ct <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    dataTypes<span class=\"k\">.</span>unshift<span class=\"k\">(</span> type <span class=\"k\">);</span>","                    <span class=\"k\">break</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","","        <span class=\"c\">// Check to see if we have a response for the expected dataType</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> dataTypes<span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">]</span> <span class=\"k\">in</span> responses <span class=\"k\">)</span> <span class=\"k\">{</span>","            finalDataType <span class=\"k\">=</span> dataTypes<span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">];</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","","            <span class=\"c\">// Try convertible dataTypes</span>","            <span class=\"k\">for</span> <span class=\"k\">(</span> type <span class=\"k\">in</span> responses <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>dataTypes<span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">]</span> <span class=\"k\">||</span> s<span class=\"k\">.</span>converters<span class=\"k\">[</span> type <span class=\"k\">+</span> <span class=\"s\">\" \"</span> <span class=\"k\">+</span> dataTypes<span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">]</span> <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    finalDataType <span class=\"k\">=</span> type<span class=\"k\">;</span>","                    <span class=\"k\">break</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>firstDataType <span class=\"k\">)</span> <span class=\"k\">{</span>","                    firstDataType <span class=\"k\">=</span> type<span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Or just use first one</span>","            finalDataType <span class=\"k\">=</span> finalDataType <span class=\"k\">||</span> firstDataType<span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"c\">// If we found a dataType</span>","        <span class=\"c\">// We add the dataType to the list if needed</span>","        <span class=\"c\">// and return the corresponding response</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> finalDataType <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> finalDataType <span class=\"k\">!==</span> dataTypes<span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                dataTypes<span class=\"k\">.</span>unshift<span class=\"k\">(</span> finalDataType <span class=\"k\">);</span>","            <span class=\"k\">}</span>","            <span class=\"k\">return</span> responses<span class=\"k\">[</span> finalDataType <span class=\"k\">];</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span>","","    <span class=\"c\">/* Chain conversions given the request and the original response</span>","<span class=\"c\"> * Also sets the responseXXX fields on the jqXHR instance</span>","<span class=\"c\"> */</span>","    <span class=\"k\">function</span> ajaxConvert<span class=\"k\">(</span> s<span class=\"k\">,</span> response<span class=\"k\">,</span> jqXHR<span class=\"k\">,</span> isSuccess <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> conv2<span class=\"k\">,</span> current<span class=\"k\">,</span> conv<span class=\"k\">,</span> tmp<span class=\"k\">,</span> prev<span class=\"k\">,</span>","            converters <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">,</span>","","            <span class=\"c\">// Work with a copy of dataTypes in case we need to modify it for conversion</span>","            dataTypes <span class=\"k\">=</span> s<span class=\"k\">.</span>dataTypes<span class=\"k\">.</span>slice<span class=\"k\">();</span>","","        <span class=\"c\">// Create converters map with lowercased keys</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> dataTypes<span class=\"k\">[</span> <span class=\"s\">1</span> <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">for</span> <span class=\"k\">(</span> conv <span class=\"k\">in</span> s<span class=\"k\">.</span>converters <span class=\"k\">)</span> <span class=\"k\">{</span>","                converters<span class=\"k\">[</span> conv<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">]</span> <span class=\"k\">=</span> s<span class=\"k\">.</span>converters<span class=\"k\">[</span> conv <span class=\"k\">];</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","","        current <span class=\"k\">=</span> dataTypes<span class=\"k\">.</span>shift<span class=\"k\">();</span>","","        <span class=\"c\">// Convert to each sequential dataType</span>","        <span class=\"k\">while</span> <span class=\"k\">(</span> current <span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> s<span class=\"k\">.</span>responseFields<span class=\"k\">[</span> current <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                jqXHR<span class=\"k\">[</span> s<span class=\"k\">.</span>responseFields<span class=\"k\">[</span> current <span class=\"k\">]</span> <span class=\"k\">]</span> <span class=\"k\">=</span> response<span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Apply the dataFilter if provided</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>prev <span class=\"k\">&amp;&amp;</span> isSuccess <span class=\"k\">&amp;&amp;</span> s<span class=\"k\">.</span>dataFilter <span class=\"k\">)</span> <span class=\"k\">{</span>","                response <span class=\"k\">=</span> s<span class=\"k\">.</span>dataFilter<span class=\"k\">(</span> response<span class=\"k\">,</span> s<span class=\"k\">.</span>dataType <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            prev <span class=\"k\">=</span> current<span class=\"k\">;</span>","            current <span class=\"k\">=</span> dataTypes<span class=\"k\">.</span>shift<span class=\"k\">();</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> current <span class=\"k\">)</span> <span class=\"k\">{</span>","","                <span class=\"c\">// There's only work to do if current dataType is non-auto</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> current <span class=\"k\">===</span> <span class=\"s\">\"*\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                    current <span class=\"k\">=</span> prev<span class=\"k\">;</span>","","                    <span class=\"c\">// Convert response if prev dataType is non-auto and differs from current</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> prev <span class=\"k\">!==</span> <span class=\"s\">\"*\"</span> <span class=\"k\">&amp;&amp;</span> prev <span class=\"k\">!==</span> current <span class=\"k\">)</span> <span class=\"k\">{</span>","","                    <span class=\"c\">// Seek a direct converter</span>","                    conv <span class=\"k\">=</span> converters<span class=\"k\">[</span> prev <span class=\"k\">+</span> <span class=\"s\">\" \"</span> <span class=\"k\">+</span> current <span class=\"k\">]</span> <span class=\"k\">||</span> converters<span class=\"k\">[</span> <span class=\"s\">\"* \"</span> <span class=\"k\">+</span> current <span class=\"k\">];</span>","","                    <span class=\"c\">// If none found, seek a pair</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>conv <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">for</span> <span class=\"k\">(</span> conv2 <span class=\"k\">in</span> converters <span class=\"k\">)</span> <span class=\"k\">{</span>","","                            <span class=\"c\">// If conv2 outputs current</span>","                            tmp <span class=\"k\">=</span> conv2<span class=\"k\">.</span>split<span class=\"k\">(</span> <span class=\"s\">\" \"</span> <span class=\"k\">);</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span> tmp<span class=\"k\">[</span> <span class=\"s\">1</span> <span class=\"k\">]</span> <span class=\"k\">===</span> current <span class=\"k\">)</span> <span class=\"k\">{</span>","","                                <span class=\"c\">// If prev can be converted to accepted input</span>","                                conv <span class=\"k\">=</span> converters<span class=\"k\">[</span> prev <span class=\"k\">+</span> <span class=\"s\">\" \"</span> <span class=\"k\">+</span> tmp<span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">]</span> <span class=\"k\">]</span> <span class=\"k\">||</span>","                                    converters<span class=\"k\">[</span> <span class=\"s\">\"* \"</span> <span class=\"k\">+</span> tmp<span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">]</span> <span class=\"k\">];</span>","                                <span class=\"k\">if</span> <span class=\"k\">(</span> conv <span class=\"k\">)</span> <span class=\"k\">{</span>","","                                    <span class=\"c\">// Condense equivalence converters</span>","                                    <span class=\"k\">if</span> <span class=\"k\">(</span> conv <span class=\"k\">===</span> <span class=\"k\">true</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                        conv <span class=\"k\">=</span> converters<span class=\"k\">[</span> conv2 <span class=\"k\">];</span>","","                                        <span class=\"c\">// Otherwise, insert the intermediate dataType</span>","                                    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> converters<span class=\"k\">[</span> conv2 <span class=\"k\">]</span> <span class=\"k\">!==</span> <span class=\"k\">true</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                        current <span class=\"k\">=</span> tmp<span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">];</span>","                                        dataTypes<span class=\"k\">.</span>unshift<span class=\"k\">(</span> tmp<span class=\"k\">[</span> <span class=\"s\">1</span> <span class=\"k\">]</span> <span class=\"k\">);</span>","                                    <span class=\"k\">}</span>","                                    <span class=\"k\">break</span><span class=\"k\">;</span>","                                <span class=\"k\">}</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span>","","                    <span class=\"c\">// Apply converter (if not an equivalence)</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> conv <span class=\"k\">!==</span> <span class=\"k\">true</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                        <span class=\"c\">// Unless errors are allowed to bubble, catch and return them</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> conv <span class=\"k\">&amp;&amp;</span> s<span class=\"k\">.</span>throws <span class=\"k\">)</span> <span class=\"k\">{</span>","                            response <span class=\"k\">=</span> conv<span class=\"k\">(</span> response <span class=\"k\">);</span>","                        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                            <span class=\"k\">try</span> <span class=\"k\">{</span>","                                response <span class=\"k\">=</span> conv<span class=\"k\">(</span> response <span class=\"k\">);</span>","                            <span class=\"k\">}</span> <span class=\"k\">catch</span> <span class=\"k\">(</span> e <span class=\"k\">)</span> <span class=\"k\">{</span>","                                <span class=\"k\">return</span> <span class=\"k\">{</span>","                                    state<span class=\"k\">:</span> <span class=\"s\">\"parsererror\"</span><span class=\"k\">,</span>","                                    error<span class=\"k\">:</span> conv <span class=\"k\">?</span> e <span class=\"k\">:</span> <span class=\"s\">\"No conversion from \"</span> <span class=\"k\">+</span> prev <span class=\"k\">+</span> <span class=\"s\">\" to \"</span> <span class=\"k\">+</span> current","                                <span class=\"k\">}</span><span class=\"k\">;</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">return</span> <span class=\"k\">{</span> state<span class=\"k\">:</span> <span class=\"s\">\"success\"</span><span class=\"k\">,</span> data<span class=\"k\">:</span> response <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"k\">}</span>","","    jQuery<span class=\"k\">.</span>extend<span class=\"k\">(</span> <span class=\"k\">{</span>","","        <span class=\"c\">// Counter for holding the number of active queries</span>","        active<span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span>","","        <span class=\"c\">// Last-Modified header cache for next request</span>","        lastModified<span class=\"k\">:</span> <span class=\"k\">{}</span><span class=\"k\">,</span>","        etag<span class=\"k\">:</span> <span class=\"k\">{}</span><span class=\"k\">,</span>","","        ajaxSettings<span class=\"k\">:</span> <span class=\"k\">{</span>","            url<span class=\"k\">:</span> location<span class=\"k\">.</span>href<span class=\"k\">,</span>","            type<span class=\"k\">:</span> <span class=\"s\">\"GET\"</span><span class=\"k\">,</span>","            isLocal<span class=\"k\">:</span> rlocalProtocol<span class=\"k\">.</span>test<span class=\"k\">(</span> location<span class=\"k\">.</span>protocol <span class=\"k\">),</span>","            global<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","            processData<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","            async<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","            contentType<span class=\"k\">:</span> <span class=\"s\">\"application/x-www-form-urlencoded; charset=UTF-8\"</span><span class=\"k\">,</span>","","            <span class=\"c\">/*</span>","<span class=\"c\">\t\ttimeout: 0,</span>","<span class=\"c\">\t\tdata: null,</span>","<span class=\"c\">\t\tdataType: null,</span>","<span class=\"c\">\t\tusername: null,</span>","<span class=\"c\">\t\tpassword: null,</span>","<span class=\"c\">\t\tcache: null,</span>","<span class=\"c\">\t\tthrows: false,</span>","<span class=\"c\">\t\ttraditional: false,</span>","<span class=\"c\">\t\theaders: {},</span>","<span class=\"c\">\t\t*/</span>","","            accepts<span class=\"k\">:</span> <span class=\"k\">{</span>","                <span class=\"s\">\"*\"</span><span class=\"k\">:</span> allTypes<span class=\"k\">,</span>","                text<span class=\"k\">:</span> <span class=\"s\">\"text/plain\"</span><span class=\"k\">,</span>","                html<span class=\"k\">:</span> <span class=\"s\">\"text/html\"</span><span class=\"k\">,</span>","                xml<span class=\"k\">:</span> <span class=\"s\">\"application/xml, text/xml\"</span><span class=\"k\">,</span>","                json<span class=\"k\">:</span> <span class=\"s\">\"application/json, text/javascript\"</span>","            <span class=\"k\">}</span><span class=\"k\">,</span>","","            contents<span class=\"k\">:</span> <span class=\"k\">{</span>","                xml<span class=\"k\">:</span> <span class=\"s\">/\\bxml\\b/</span><span class=\"k\">,</span>","                html<span class=\"k\">:</span> <span class=\"s\">/\\bhtml/</span><span class=\"k\">,</span>","                json<span class=\"k\">:</span> <span class=\"s\">/\\bjson\\b/</span>","            <span class=\"k\">}</span><span class=\"k\">,</span>","","            responseFields<span class=\"k\">:</span> <span class=\"k\">{</span>","                xml<span class=\"k\">:</span> <span class=\"s\">\"responseXML\"</span><span class=\"k\">,</span>","                text<span class=\"k\">:</span> <span class=\"s\">\"responseText\"</span><span class=\"k\">,</span>","                json<span class=\"k\">:</span> <span class=\"s\">\"responseJSON\"</span>","            <span class=\"k\">}</span><span class=\"k\">,</span>","","            <span class=\"c\">// Data converters</span>","            <span class=\"c\">// Keys separate source (or catchall \"*\") and destination types with a single space</span>","            converters<span class=\"k\">:</span> <span class=\"k\">{</span>","","                <span class=\"c\">// Convert anything to text</span>","                <span class=\"s\">\"* text\"</span><span class=\"k\">:</span> String<span class=\"k\">,</span>","","                <span class=\"c\">// Text to html (true = no transformation)</span>","                <span class=\"s\">\"text html\"</span><span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","","                <span class=\"c\">// Evaluate text as a json expression</span>","                <span class=\"s\">\"text json\"</span><span class=\"k\">:</span> JSON<span class=\"k\">.</span>parse<span class=\"k\">,</span>","","                <span class=\"c\">// Parse text as xml</span>","                <span class=\"s\">\"text xml\"</span><span class=\"k\">:</span> jQuery<span class=\"k\">.</span>parseXML","            <span class=\"k\">}</span><span class=\"k\">,</span>","","            <span class=\"c\">// For options that shouldn't be deep extended:</span>","            <span class=\"c\">// you can add your own custom options here if</span>","            <span class=\"c\">// and when you create one that shouldn't be</span>","            <span class=\"c\">// deep extended (see ajaxExtend)</span>","            flatOptions<span class=\"k\">:</span> <span class=\"k\">{</span>","                url<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","                context<span class=\"k\">:</span> <span class=\"k\">true</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        <span class=\"c\">// Creates a full fledged settings object into target</span>","        <span class=\"c\">// with both ajaxSettings and settings fields.</span>","        <span class=\"c\">// If target is omitted, writes into ajaxSettings.</span>","        ajaxSetup<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> target<span class=\"k\">,</span> settings <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> settings <span class=\"k\">?</span>","","                <span class=\"c\">// Building a settings object</span>","                ajaxExtend<span class=\"k\">(</span> ajaxExtend<span class=\"k\">(</span> target<span class=\"k\">,</span> jQuery<span class=\"k\">.</span>ajaxSettings <span class=\"k\">),</span> settings <span class=\"k\">)</span> <span class=\"k\">:</span>","","                <span class=\"c\">// Extending ajaxSettings</span>","                ajaxExtend<span class=\"k\">(</span> jQuery<span class=\"k\">.</span>ajaxSettings<span class=\"k\">,</span> target <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        ajaxPrefilter<span class=\"k\">:</span> addToPrefiltersOrTransports<span class=\"k\">(</span> prefilters <span class=\"k\">),</span>","        ajaxTransport<span class=\"k\">:</span> addToPrefiltersOrTransports<span class=\"k\">(</span> transports <span class=\"k\">),</span>","","        <span class=\"c\">// Main method</span>","        ajax<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> url<span class=\"k\">,</span> options <span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"c\">// If url is an object, simulate pre-1.5 signature</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">typeof</span> url <span class=\"k\">===</span> <span class=\"s\">\"object\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                options <span class=\"k\">=</span> url<span class=\"k\">;</span>","                url <span class=\"k\">=</span> undefined<span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Force options to be an object</span>","            options <span class=\"k\">=</span> options <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","","            <span class=\"k\">var</span> transport<span class=\"k\">,</span>","","                <span class=\"c\">// URL without anti-cache param</span>","                cacheURL<span class=\"k\">,</span>","","                <span class=\"c\">// Response headers</span>","                responseHeadersString<span class=\"k\">,</span>","                responseHeaders<span class=\"k\">,</span>","","                <span class=\"c\">// timeout handle</span>","                timeoutTimer<span class=\"k\">,</span>","","                <span class=\"c\">// Url cleanup var</span>","                urlAnchor<span class=\"k\">,</span>","","                <span class=\"c\">// Request state (becomes false upon send and true upon completion)</span>","                completed<span class=\"k\">,</span>","","                <span class=\"c\">// To know if global events are to be dispatched</span>","                fireGlobals<span class=\"k\">,</span>","","                <span class=\"c\">// Loop variable</span>","                i<span class=\"k\">,</span>","","                <span class=\"c\">// uncached part of the url</span>","                uncached<span class=\"k\">,</span>","","                <span class=\"c\">// Create the final options object</span>","                s <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>ajaxSetup<span class=\"k\">(</span> <span class=\"k\">{}</span><span class=\"k\">,</span> options <span class=\"k\">),</span>","","                <span class=\"c\">// Callbacks context</span>","                callbackContext <span class=\"k\">=</span> s<span class=\"k\">.</span>context <span class=\"k\">||</span> s<span class=\"k\">,</span>","","                <span class=\"c\">// Context for global events is callbackContext if it is a DOM node or jQuery collection</span>","                globalEventContext <span class=\"k\">=</span> s<span class=\"k\">.</span>context <span class=\"k\">&amp;&amp;</span>","                <span class=\"k\">(</span> callbackContext<span class=\"k\">.</span>nodeType <span class=\"k\">||</span> callbackContext<span class=\"k\">.</span>jquery <span class=\"k\">)</span> <span class=\"k\">?</span>","                    jQuery<span class=\"k\">(</span> callbackContext <span class=\"k\">)</span> <span class=\"k\">:</span>","                    jQuery<span class=\"k\">.</span>event<span class=\"k\">,</span>","","                <span class=\"c\">// Deferreds</span>","                deferred <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>Deferred<span class=\"k\">(),</span>","                completeDeferred <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>Callbacks<span class=\"k\">(</span> <span class=\"s\">\"once memory\"</span> <span class=\"k\">),</span>","","                <span class=\"c\">// Status-dependent callbacks</span>","                statusCode <span class=\"k\">=</span> s<span class=\"k\">.</span>statusCode <span class=\"k\">||</span> <span class=\"k\">{}</span><span class=\"k\">,</span>","","                <span class=\"c\">// Headers (they are sent all at once)</span>","                requestHeaders <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">,</span>","                requestHeadersNames <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">,</span>","","                <span class=\"c\">// Default abort message</span>","                strAbort <span class=\"k\">=</span> <span class=\"s\">\"canceled\"</span><span class=\"k\">,</span>","","                <span class=\"c\">// Fake xhr</span>","                jqXHR <span class=\"k\">=</span> <span class=\"k\">{</span>","                    readyState<span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span>","","                    <span class=\"c\">// Builds headers hashtable if needed</span>","                    getResponseHeader<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> key <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">var</span> match<span class=\"k\">;</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> completed <span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>responseHeaders <span class=\"k\">)</span> <span class=\"k\">{</span>","                                responseHeaders <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","                                <span class=\"k\">while</span> <span class=\"k\">(</span> <span class=\"k\">(</span> match <span class=\"k\">=</span> rheaders<span class=\"k\">.</span>exec<span class=\"k\">(</span> responseHeadersString <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                    responseHeaders<span class=\"k\">[</span> match<span class=\"k\">[</span> <span class=\"s\">1</span> <span class=\"k\">].</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">]</span> <span class=\"k\">=</span> match<span class=\"k\">[</span> <span class=\"s\">2</span> <span class=\"k\">];</span>","                                <span class=\"k\">}</span>","                            <span class=\"k\">}</span>","                            match <span class=\"k\">=</span> responseHeaders<span class=\"k\">[</span> key<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">];</span>","                        <span class=\"k\">}</span>","                        <span class=\"k\">return</span> match <span class=\"k\">==</span> <span class=\"k\">null</span> <span class=\"k\">?</span> <span class=\"k\">null</span> <span class=\"k\">:</span> match<span class=\"k\">;</span>","                    <span class=\"k\">}</span><span class=\"k\">,</span>","","                    <span class=\"c\">// Raw string</span>","                    getAllResponseHeaders<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                        <span class=\"k\">return</span> completed <span class=\"k\">?</span> responseHeadersString <span class=\"k\">:</span> <span class=\"k\">null</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span><span class=\"k\">,</span>","","                    <span class=\"c\">// Caches the header</span>","                    setRequestHeader<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> name<span class=\"k\">,</span> value <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> completed <span class=\"k\">==</span> <span class=\"k\">null</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                            name <span class=\"k\">=</span> requestHeadersNames<span class=\"k\">[</span> name<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">]</span> <span class=\"k\">=</span>","                                requestHeadersNames<span class=\"k\">[</span> name<span class=\"k\">.</span>toLowerCase<span class=\"k\">()</span> <span class=\"k\">]</span> <span class=\"k\">||</span> name<span class=\"k\">;</span>","                            requestHeaders<span class=\"k\">[</span> name <span class=\"k\">]</span> <span class=\"k\">=</span> value<span class=\"k\">;</span>","                        <span class=\"k\">}</span>","                        <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span><span class=\"k\">,</span>","","                    <span class=\"c\">// Overrides response content-type header</span>","                    overrideMimeType<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> type <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> completed <span class=\"k\">==</span> <span class=\"k\">null</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                            s<span class=\"k\">.</span>mimeType <span class=\"k\">=</span> type<span class=\"k\">;</span>","                        <span class=\"k\">}</span>","                        <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span><span class=\"k\">,</span>","","                    <span class=\"c\">// Status-dependent callbacks</span>","                    statusCode<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> map <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">var</span> code<span class=\"k\">;</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> map <span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span> completed <span class=\"k\">)</span> <span class=\"k\">{</span>","","                                <span class=\"c\">// Execute the appropriate callbacks</span>","                                jqXHR<span class=\"k\">.</span>always<span class=\"k\">(</span> map<span class=\"k\">[</span> jqXHR<span class=\"k\">.</span>status <span class=\"k\">]</span> <span class=\"k\">);</span>","                            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","","                                <span class=\"c\">// Lazy-add the new callbacks in a way that preserves old ones</span>","                                <span class=\"k\">for</span> <span class=\"k\">(</span> code <span class=\"k\">in</span> map <span class=\"k\">)</span> <span class=\"k\">{</span>","                                    statusCode<span class=\"k\">[</span> code <span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">[</span> statusCode<span class=\"k\">[</span> code <span class=\"k\">],</span> map<span class=\"k\">[</span> code <span class=\"k\">]</span> <span class=\"k\">];</span>","                                <span class=\"k\">}</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span>","                        <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span><span class=\"k\">,</span>","","                    <span class=\"c\">// Cancel the request</span>","                    abort<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> statusText <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">var</span> finalText <span class=\"k\">=</span> statusText <span class=\"k\">||</span> strAbort<span class=\"k\">;</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> transport <span class=\"k\">)</span> <span class=\"k\">{</span>","                            transport<span class=\"k\">.</span>abort<span class=\"k\">(</span> finalText <span class=\"k\">);</span>","                        <span class=\"k\">}</span>","                        done<span class=\"k\">(</span> <span class=\"s\">0</span><span class=\"k\">,</span> finalText <span class=\"k\">);</span>","                        <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span><span class=\"k\">;</span>","","            <span class=\"c\">// Attach deferreds</span>","            deferred<span class=\"k\">.</span>promise<span class=\"k\">(</span> jqXHR <span class=\"k\">);</span>","","            <span class=\"c\">// Add protocol if not provided (prefilters might expect it)</span>","            <span class=\"c\">// Handle falsy url in the settings object (#10093: consistency with old signature)</span>","            <span class=\"c\">// We also use the url parameter if available</span>","            s<span class=\"k\">.</span>url <span class=\"k\">=</span> <span class=\"k\">(</span> <span class=\"k\">(</span> url <span class=\"k\">||</span> s<span class=\"k\">.</span>url <span class=\"k\">||</span> location<span class=\"k\">.</span>href <span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">\"\"</span> <span class=\"k\">)</span>","                <span class=\"k\">.</span>replace<span class=\"k\">(</span> rprotocol<span class=\"k\">,</span> location<span class=\"k\">.</span>protocol <span class=\"k\">+</span> <span class=\"s\">\"//\"</span> <span class=\"k\">);</span>","","            <span class=\"c\">// Alias method option to type as per ticket #12004</span>","            s<span class=\"k\">.</span>type <span class=\"k\">=</span> options<span class=\"k\">.</span>method <span class=\"k\">||</span> options<span class=\"k\">.</span>type <span class=\"k\">||</span> s<span class=\"k\">.</span>method <span class=\"k\">||</span> s<span class=\"k\">.</span>type<span class=\"k\">;</span>","","            <span class=\"c\">// Extract dataTypes list</span>","            s<span class=\"k\">.</span>dataTypes <span class=\"k\">=</span> <span class=\"k\">(</span> s<span class=\"k\">.</span>dataType <span class=\"k\">||</span> <span class=\"s\">\"*\"</span> <span class=\"k\">).</span>toLowerCase<span class=\"k\">().</span>match<span class=\"k\">(</span> rnothtmlwhite <span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"k\">[</span> <span class=\"s\">\"\"</span> <span class=\"k\">];</span>","","            <span class=\"c\">// A cross-domain request is in order when the origin doesn't match the current origin.</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> s<span class=\"k\">.</span>crossDomain <span class=\"k\">==</span> <span class=\"k\">null</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                urlAnchor <span class=\"k\">=</span> document<span class=\"k\">.</span>createElement<span class=\"k\">(</span> <span class=\"s\">\"a\"</span> <span class=\"k\">);</span>","","                <span class=\"c\">// Support: IE &lt;=8 - 11, Edge 12 - 15</span>","                <span class=\"c\">// IE throws exception on accessing the href property if url is malformed,</span>","                <span class=\"c\">// e.g. http://example.com:80x/</span>","                <span class=\"k\">try</span> <span class=\"k\">{</span>","                    urlAnchor<span class=\"k\">.</span>href <span class=\"k\">=</span> s<span class=\"k\">.</span>url<span class=\"k\">;</span>","","                    <span class=\"c\">// Support: IE &lt;=8 - 11 only</span>","                    <span class=\"c\">// Anchor's host property isn't correctly set when s.url is relative</span>","                    urlAnchor<span class=\"k\">.</span>href <span class=\"k\">=</span> urlAnchor<span class=\"k\">.</span>href<span class=\"k\">;</span>","                    s<span class=\"k\">.</span>crossDomain <span class=\"k\">=</span> originAnchor<span class=\"k\">.</span>protocol <span class=\"k\">+</span> <span class=\"s\">\"//\"</span> <span class=\"k\">+</span> originAnchor<span class=\"k\">.</span>host <span class=\"k\">!==</span>","                        urlAnchor<span class=\"k\">.</span>protocol <span class=\"k\">+</span> <span class=\"s\">\"//\"</span> <span class=\"k\">+</span> urlAnchor<span class=\"k\">.</span>host<span class=\"k\">;</span>","                <span class=\"k\">}</span> <span class=\"k\">catch</span> <span class=\"k\">(</span> e <span class=\"k\">)</span> <span class=\"k\">{</span>","","                    <span class=\"c\">// If there is an error parsing the URL, assume it is crossDomain,</span>","                    <span class=\"c\">// it can be rejected by the transport if it is invalid</span>","                    s<span class=\"k\">.</span>crossDomain <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Convert data if not already a string</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> s<span class=\"k\">.</span>data <span class=\"k\">&amp;&amp;</span> s<span class=\"k\">.</span>processData <span class=\"k\">&amp;&amp;</span> <span class=\"k\">typeof</span> s<span class=\"k\">.</span>data <span class=\"k\">!==</span> <span class=\"s\">\"string\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                s<span class=\"k\">.</span>data <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>param<span class=\"k\">(</span> s<span class=\"k\">.</span>data<span class=\"k\">,</span> s<span class=\"k\">.</span>traditional <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Apply prefilters</span>","            inspectPrefiltersOrTransports<span class=\"k\">(</span> prefilters<span class=\"k\">,</span> s<span class=\"k\">,</span> options<span class=\"k\">,</span> jqXHR <span class=\"k\">);</span>","","            <span class=\"c\">// If request was aborted inside a prefilter, stop there</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> completed <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> jqXHR<span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// We can fire global events as of now if asked to</span>","            <span class=\"c\">// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)</span>","            fireGlobals <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>event <span class=\"k\">&amp;&amp;</span> s<span class=\"k\">.</span>global<span class=\"k\">;</span>","","            <span class=\"c\">// Watch for a new set of requests</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> fireGlobals <span class=\"k\">&amp;&amp;</span> jQuery<span class=\"k\">.</span>active<span class=\"k\">++</span> <span class=\"k\">===</span> <span class=\"s\">0</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                jQuery<span class=\"k\">.</span>event<span class=\"k\">.</span>trigger<span class=\"k\">(</span> <span class=\"s\">\"ajaxStart\"</span> <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Uppercase the type</span>","            s<span class=\"k\">.</span>type <span class=\"k\">=</span> s<span class=\"k\">.</span>type<span class=\"k\">.</span>toUpperCase<span class=\"k\">();</span>","","            <span class=\"c\">// Determine if request has content</span>","            s<span class=\"k\">.</span>hasContent <span class=\"k\">=</span> <span class=\"k\">!</span>rnoContent<span class=\"k\">.</span>test<span class=\"k\">(</span> s<span class=\"k\">.</span>type <span class=\"k\">);</span>","","            <span class=\"c\">// Save the URL in case we're toying with the If-Modified-Since</span>","            <span class=\"c\">// and/or If-None-Match header later on</span>","            <span class=\"c\">// Remove hash to simplify url manipulation</span>","            cacheURL <span class=\"k\">=</span> s<span class=\"k\">.</span>url<span class=\"k\">.</span>replace<span class=\"k\">(</span> rhash<span class=\"k\">,</span> <span class=\"s\">\"\"</span> <span class=\"k\">);</span>","","            <span class=\"c\">// More options handling for requests with no content</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>s<span class=\"k\">.</span>hasContent <span class=\"k\">)</span> <span class=\"k\">{</span>","","                <span class=\"c\">// Remember the hash so we can put it back</span>","                uncached <span class=\"k\">=</span> s<span class=\"k\">.</span>url<span class=\"k\">.</span>slice<span class=\"k\">(</span> cacheURL<span class=\"k\">.</span>length <span class=\"k\">);</span>","","                <span class=\"c\">// If data is available and should be processed, append data to url</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> s<span class=\"k\">.</span>data <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span> s<span class=\"k\">.</span>processData <span class=\"k\">||</span> <span class=\"k\">typeof</span> s<span class=\"k\">.</span>data <span class=\"k\">===</span> <span class=\"s\">\"string\"</span> <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    cacheURL <span class=\"k\">+=</span> <span class=\"k\">(</span> rquery<span class=\"k\">.</span>test<span class=\"k\">(</span> cacheURL <span class=\"k\">)</span> <span class=\"k\">?</span> <span class=\"s\">\"&amp;\"</span> <span class=\"k\">:</span> <span class=\"s\">\"?\"</span> <span class=\"k\">)</span> <span class=\"k\">+</span> s<span class=\"k\">.</span>data<span class=\"k\">;</span>","","                    <span class=\"c\">// #9682: remove data so that it's not used in an eventual retry</span>","                    <span class=\"k\">delete</span> s<span class=\"k\">.</span>data<span class=\"k\">;</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// Add or update anti-cache param if needed</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> s<span class=\"k\">.</span>cache <span class=\"k\">===</span> <span class=\"k\">false</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    cacheURL <span class=\"k\">=</span> cacheURL<span class=\"k\">.</span>replace<span class=\"k\">(</span> rantiCache<span class=\"k\">,</span> <span class=\"s\">\"$1\"</span> <span class=\"k\">);</span>","                    uncached <span class=\"k\">=</span> <span class=\"k\">(</span> rquery<span class=\"k\">.</span>test<span class=\"k\">(</span> cacheURL <span class=\"k\">)</span> <span class=\"k\">?</span> <span class=\"s\">\"&amp;\"</span> <span class=\"k\">:</span> <span class=\"s\">\"?\"</span> <span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">\"_=\"</span> <span class=\"k\">+</span> <span class=\"k\">(</span> nonce<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">+</span> uncached<span class=\"k\">;</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// Put hash and anti-cache on the URL that will be requested (gh-1732)</span>","                s<span class=\"k\">.</span>url <span class=\"k\">=</span> cacheURL <span class=\"k\">+</span> uncached<span class=\"k\">;</span>","","                <span class=\"c\">// Change '%20' to '+' if this is encoded form body content (gh-2658)</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> s<span class=\"k\">.</span>data <span class=\"k\">&amp;&amp;</span> s<span class=\"k\">.</span>processData <span class=\"k\">&amp;&amp;</span>","                <span class=\"k\">(</span> s<span class=\"k\">.</span>contentType <span class=\"k\">||</span> <span class=\"s\">\"\"</span> <span class=\"k\">).</span>indexOf<span class=\"k\">(</span> <span class=\"s\">\"application/x-www-form-urlencoded\"</span> <span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"s\">0</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                s<span class=\"k\">.</span>data <span class=\"k\">=</span> s<span class=\"k\">.</span>data<span class=\"k\">.</span>replace<span class=\"k\">(</span> r20<span class=\"k\">,</span> <span class=\"s\">\"+\"</span> <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> s<span class=\"k\">.</span>ifModified <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> jQuery<span class=\"k\">.</span>lastModified<span class=\"k\">[</span> cacheURL <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    jqXHR<span class=\"k\">.</span>setRequestHeader<span class=\"k\">(</span> <span class=\"s\">\"If-Modified-Since\"</span><span class=\"k\">,</span> jQuery<span class=\"k\">.</span>lastModified<span class=\"k\">[</span> cacheURL <span class=\"k\">]</span> <span class=\"k\">);</span>","                <span class=\"k\">}</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> jQuery<span class=\"k\">.</span>etag<span class=\"k\">[</span> cacheURL <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    jqXHR<span class=\"k\">.</span>setRequestHeader<span class=\"k\">(</span> <span class=\"s\">\"If-None-Match\"</span><span class=\"k\">,</span> jQuery<span class=\"k\">.</span>etag<span class=\"k\">[</span> cacheURL <span class=\"k\">]</span> <span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Set the correct header, if data is being sent</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> s<span class=\"k\">.</span>data <span class=\"k\">&amp;&amp;</span> s<span class=\"k\">.</span>hasContent <span class=\"k\">&amp;&amp;</span> s<span class=\"k\">.</span>contentType <span class=\"k\">!==</span> <span class=\"k\">false</span> <span class=\"k\">||</span> options<span class=\"k\">.</span>contentType <span class=\"k\">)</span> <span class=\"k\">{</span>","                jqXHR<span class=\"k\">.</span>setRequestHeader<span class=\"k\">(</span> <span class=\"s\">\"Content-Type\"</span><span class=\"k\">,</span> s<span class=\"k\">.</span>contentType <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Set the Accepts header for the server, depending on the dataType</span>","            jqXHR<span class=\"k\">.</span>setRequestHeader<span class=\"k\">(</span>","                <span class=\"s\">\"Accept\"</span><span class=\"k\">,</span>","                s<span class=\"k\">.</span>dataTypes<span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">]</span> <span class=\"k\">&amp;&amp;</span> s<span class=\"k\">.</span>accepts<span class=\"k\">[</span> s<span class=\"k\">.</span>dataTypes<span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">]</span> <span class=\"k\">]</span> <span class=\"k\">?</span>","                    s<span class=\"k\">.</span>accepts<span class=\"k\">[</span> s<span class=\"k\">.</span>dataTypes<span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">]</span> <span class=\"k\">]</span> <span class=\"k\">+</span>","                    <span class=\"k\">(</span> s<span class=\"k\">.</span>dataTypes<span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">]</span> <span class=\"k\">!==</span> <span class=\"s\">\"*\"</span> <span class=\"k\">?</span> <span class=\"s\">\", \"</span> <span class=\"k\">+</span> allTypes <span class=\"k\">+</span> <span class=\"s\">\"; q=0.01\"</span> <span class=\"k\">:</span> <span class=\"s\">\"\"</span> <span class=\"k\">)</span> <span class=\"k\">:</span>","                    s<span class=\"k\">.</span>accepts<span class=\"k\">[</span> <span class=\"s\">\"*\"</span> <span class=\"k\">]</span>","            <span class=\"k\">);</span>","","            <span class=\"c\">// Check for headers option</span>","            <span class=\"k\">for</span> <span class=\"k\">(</span> i <span class=\"k\">in</span> s<span class=\"k\">.</span>headers <span class=\"k\">)</span> <span class=\"k\">{</span>","                jqXHR<span class=\"k\">.</span>setRequestHeader<span class=\"k\">(</span> i<span class=\"k\">,</span> s<span class=\"k\">.</span>headers<span class=\"k\">[</span> i <span class=\"k\">]</span> <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Allow custom headers/mimetypes and early abort</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> s<span class=\"k\">.</span>beforeSend <span class=\"k\">&amp;&amp;</span>","                <span class=\"k\">(</span> s<span class=\"k\">.</span>beforeSend<span class=\"k\">.</span>call<span class=\"k\">(</span> callbackContext<span class=\"k\">,</span> jqXHR<span class=\"k\">,</span> s <span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"k\">false</span> <span class=\"k\">||</span> completed <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                <span class=\"c\">// Abort if not done already and return</span>","                <span class=\"k\">return</span> jqXHR<span class=\"k\">.</span>abort<span class=\"k\">();</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Aborting is no longer a cancellation</span>","            strAbort <span class=\"k\">=</span> <span class=\"s\">\"abort\"</span><span class=\"k\">;</span>","","            <span class=\"c\">// Install callbacks on deferreds</span>","            completeDeferred<span class=\"k\">.</span>add<span class=\"k\">(</span> s<span class=\"k\">.</span>complete <span class=\"k\">);</span>","            jqXHR<span class=\"k\">.</span>done<span class=\"k\">(</span> s<span class=\"k\">.</span>success <span class=\"k\">);</span>","            jqXHR<span class=\"k\">.</span>fail<span class=\"k\">(</span> s<span class=\"k\">.</span>error <span class=\"k\">);</span>","","            <span class=\"c\">// Get transport</span>","            transport <span class=\"k\">=</span> inspectPrefiltersOrTransports<span class=\"k\">(</span> transports<span class=\"k\">,</span> s<span class=\"k\">,</span> options<span class=\"k\">,</span> jqXHR <span class=\"k\">);</span>","","            <span class=\"c\">// If no transport, we auto-abort</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>transport <span class=\"k\">)</span> <span class=\"k\">{</span>","                done<span class=\"k\">(</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">,</span> <span class=\"s\">\"No Transport\"</span> <span class=\"k\">);</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                jqXHR<span class=\"k\">.</span>readyState <span class=\"k\">=</span> <span class=\"s\">1</span><span class=\"k\">;</span>","","                <span class=\"c\">// Send global event</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> fireGlobals <span class=\"k\">)</span> <span class=\"k\">{</span>","                    globalEventContext<span class=\"k\">.</span>trigger<span class=\"k\">(</span> <span class=\"s\">\"ajaxSend\"</span><span class=\"k\">,</span> <span class=\"k\">[</span> jqXHR<span class=\"k\">,</span> s <span class=\"k\">]</span> <span class=\"k\">);</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// If request was aborted inside ajaxSend, stop there</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> completed <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">return</span> jqXHR<span class=\"k\">;</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// Timeout</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> s<span class=\"k\">.</span>async <span class=\"k\">&amp;&amp;</span> s<span class=\"k\">.</span>timeout <span class=\"k\">&gt;</span> <span class=\"s\">0</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    timeoutTimer <span class=\"k\">=</span> window<span class=\"k\">.</span>setTimeout<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                        jqXHR<span class=\"k\">.</span>abort<span class=\"k\">(</span> <span class=\"s\">\"timeout\"</span> <span class=\"k\">);</span>","                    <span class=\"k\">}</span><span class=\"k\">,</span> s<span class=\"k\">.</span>timeout <span class=\"k\">);</span>","                <span class=\"k\">}</span>","","                <span class=\"k\">try</span> <span class=\"k\">{</span>","                    completed <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","                    transport<span class=\"k\">.</span>send<span class=\"k\">(</span> requestHeaders<span class=\"k\">,</span> done <span class=\"k\">);</span>","                <span class=\"k\">}</span> <span class=\"k\">catch</span> <span class=\"k\">(</span> e <span class=\"k\">)</span> <span class=\"k\">{</span>","","                    <span class=\"c\">// Rethrow post-completion exceptions</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> completed <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">throw</span> e<span class=\"k\">;</span>","                    <span class=\"k\">}</span>","","                    <span class=\"c\">// Propagate others as results</span>","                    done<span class=\"k\">(</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">,</span> e <span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Callback for when everything is done</span>","            <span class=\"k\">function</span> done<span class=\"k\">(</span> status<span class=\"k\">,</span> nativeStatusText<span class=\"k\">,</span> responses<span class=\"k\">,</span> headers <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> isSuccess<span class=\"k\">,</span> success<span class=\"k\">,</span> error<span class=\"k\">,</span> response<span class=\"k\">,</span> modified<span class=\"k\">,</span>","                    statusText <span class=\"k\">=</span> nativeStatusText<span class=\"k\">;</span>","","                <span class=\"c\">// Ignore repeat invocations</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> completed <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">return</span><span class=\"k\">;</span>","                <span class=\"k\">}</span>","","                completed <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","","                <span class=\"c\">// Clear timeout if it exists</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> timeoutTimer <span class=\"k\">)</span> <span class=\"k\">{</span>","                    window<span class=\"k\">.</span>clearTimeout<span class=\"k\">(</span> timeoutTimer <span class=\"k\">);</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// Dereference transport for early garbage collection</span>","                <span class=\"c\">// (no matter how long the jqXHR object will be used)</span>","                transport <span class=\"k\">=</span> undefined<span class=\"k\">;</span>","","                <span class=\"c\">// Cache response headers</span>","                responseHeadersString <span class=\"k\">=</span> headers <span class=\"k\">||</span> <span class=\"s\">\"\"</span><span class=\"k\">;</span>","","                <span class=\"c\">// Set readyState</span>","                jqXHR<span class=\"k\">.</span>readyState <span class=\"k\">=</span> status <span class=\"k\">&gt;</span> <span class=\"s\">0</span> <span class=\"k\">?</span> <span class=\"s\">4</span> <span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">;</span>","","                <span class=\"c\">// Determine if successful</span>","                isSuccess <span class=\"k\">=</span> status <span class=\"k\">&gt;=</span> <span class=\"s\">200</span> <span class=\"k\">&amp;&amp;</span> status <span class=\"k\">&lt;</span> <span class=\"s\">300</span> <span class=\"k\">||</span> status <span class=\"k\">===</span> <span class=\"s\">304</span><span class=\"k\">;</span>","","                <span class=\"c\">// Get response data</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> responses <span class=\"k\">)</span> <span class=\"k\">{</span>","                    response <span class=\"k\">=</span> ajaxHandleResponses<span class=\"k\">(</span> s<span class=\"k\">,</span> jqXHR<span class=\"k\">,</span> responses <span class=\"k\">);</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// Convert no matter what (that way responseXXX fields are always set)</span>","                response <span class=\"k\">=</span> ajaxConvert<span class=\"k\">(</span> s<span class=\"k\">,</span> response<span class=\"k\">,</span> jqXHR<span class=\"k\">,</span> isSuccess <span class=\"k\">);</span>","","                <span class=\"c\">// If successful, handle type chaining</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> isSuccess <span class=\"k\">)</span> <span class=\"k\">{</span>","","                    <span class=\"c\">// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> s<span class=\"k\">.</span>ifModified <span class=\"k\">)</span> <span class=\"k\">{</span>","                        modified <span class=\"k\">=</span> jqXHR<span class=\"k\">.</span>getResponseHeader<span class=\"k\">(</span> <span class=\"s\">\"Last-Modified\"</span> <span class=\"k\">);</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> modified <span class=\"k\">)</span> <span class=\"k\">{</span>","                            jQuery<span class=\"k\">.</span>lastModified<span class=\"k\">[</span> cacheURL <span class=\"k\">]</span> <span class=\"k\">=</span> modified<span class=\"k\">;</span>","                        <span class=\"k\">}</span>","                        modified <span class=\"k\">=</span> jqXHR<span class=\"k\">.</span>getResponseHeader<span class=\"k\">(</span> <span class=\"s\">\"etag\"</span> <span class=\"k\">);</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> modified <span class=\"k\">)</span> <span class=\"k\">{</span>","                            jQuery<span class=\"k\">.</span>etag<span class=\"k\">[</span> cacheURL <span class=\"k\">]</span> <span class=\"k\">=</span> modified<span class=\"k\">;</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span>","","                    <span class=\"c\">// if no content</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> status <span class=\"k\">===</span> <span class=\"s\">204</span> <span class=\"k\">||</span> s<span class=\"k\">.</span>type <span class=\"k\">===</span> <span class=\"s\">\"HEAD\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        statusText <span class=\"k\">=</span> <span class=\"s\">\"nocontent\"</span><span class=\"k\">;</span>","","                        <span class=\"c\">// if not modified</span>","                    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> status <span class=\"k\">===</span> <span class=\"s\">304</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        statusText <span class=\"k\">=</span> <span class=\"s\">\"notmodified\"</span><span class=\"k\">;</span>","","                        <span class=\"c\">// If we have data, let's convert it</span>","                    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                        statusText <span class=\"k\">=</span> response<span class=\"k\">.</span>state<span class=\"k\">;</span>","                        success <span class=\"k\">=</span> response<span class=\"k\">.</span>data<span class=\"k\">;</span>","                        error <span class=\"k\">=</span> response<span class=\"k\">.</span>error<span class=\"k\">;</span>","                        isSuccess <span class=\"k\">=</span> <span class=\"k\">!</span>error<span class=\"k\">;</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","","                    <span class=\"c\">// Extract error from statusText and normalize for non-aborts</span>","                    error <span class=\"k\">=</span> statusText<span class=\"k\">;</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> status <span class=\"k\">||</span> <span class=\"k\">!</span>statusText <span class=\"k\">)</span> <span class=\"k\">{</span>","                        statusText <span class=\"k\">=</span> <span class=\"s\">\"error\"</span><span class=\"k\">;</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> status <span class=\"k\">&lt;</span> <span class=\"s\">0</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                            status <span class=\"k\">=</span> <span class=\"s\">0</span><span class=\"k\">;</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// Set data for the fake xhr object</span>","                jqXHR<span class=\"k\">.</span>status <span class=\"k\">=</span> status<span class=\"k\">;</span>","                jqXHR<span class=\"k\">.</span>statusText <span class=\"k\">=</span> <span class=\"k\">(</span> nativeStatusText <span class=\"k\">||</span> statusText <span class=\"k\">)</span> <span class=\"k\">+</span> <span class=\"s\">\"\"</span><span class=\"k\">;</span>","","                <span class=\"c\">// Success/Error</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> isSuccess <span class=\"k\">)</span> <span class=\"k\">{</span>","                    deferred<span class=\"k\">.</span>resolveWith<span class=\"k\">(</span> callbackContext<span class=\"k\">,</span> <span class=\"k\">[</span> success<span class=\"k\">,</span> statusText<span class=\"k\">,</span> jqXHR <span class=\"k\">]</span> <span class=\"k\">);</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    deferred<span class=\"k\">.</span>rejectWith<span class=\"k\">(</span> callbackContext<span class=\"k\">,</span> <span class=\"k\">[</span> jqXHR<span class=\"k\">,</span> statusText<span class=\"k\">,</span> error <span class=\"k\">]</span> <span class=\"k\">);</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// Status-dependent callbacks</span>","                jqXHR<span class=\"k\">.</span>statusCode<span class=\"k\">(</span> statusCode <span class=\"k\">);</span>","                statusCode <span class=\"k\">=</span> undefined<span class=\"k\">;</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span> fireGlobals <span class=\"k\">)</span> <span class=\"k\">{</span>","                    globalEventContext<span class=\"k\">.</span>trigger<span class=\"k\">(</span> isSuccess <span class=\"k\">?</span> <span class=\"s\">\"ajaxSuccess\"</span> <span class=\"k\">:</span> <span class=\"s\">\"ajaxError\"</span><span class=\"k\">,</span>","                        <span class=\"k\">[</span> jqXHR<span class=\"k\">,</span> s<span class=\"k\">,</span> isSuccess <span class=\"k\">?</span> success <span class=\"k\">:</span> error <span class=\"k\">]</span> <span class=\"k\">);</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// Complete</span>","                completeDeferred<span class=\"k\">.</span>fireWith<span class=\"k\">(</span> callbackContext<span class=\"k\">,</span> <span class=\"k\">[</span> jqXHR<span class=\"k\">,</span> statusText <span class=\"k\">]</span> <span class=\"k\">);</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span> fireGlobals <span class=\"k\">)</span> <span class=\"k\">{</span>","                    globalEventContext<span class=\"k\">.</span>trigger<span class=\"k\">(</span> <span class=\"s\">\"ajaxComplete\"</span><span class=\"k\">,</span> <span class=\"k\">[</span> jqXHR<span class=\"k\">,</span> s <span class=\"k\">]</span> <span class=\"k\">);</span>","","                    <span class=\"c\">// Handle the global AJAX counter</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!(</span> <span class=\"k\">--</span>jQuery<span class=\"k\">.</span>active <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        jQuery<span class=\"k\">.</span>event<span class=\"k\">.</span>trigger<span class=\"k\">(</span> <span class=\"s\">\"ajaxStop\"</span> <span class=\"k\">);</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">return</span> jqXHR<span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        getJSON<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> url<span class=\"k\">,</span> data<span class=\"k\">,</span> callback <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> jQuery<span class=\"k\">.</span>get<span class=\"k\">(</span> url<span class=\"k\">,</span> data<span class=\"k\">,</span> callback<span class=\"k\">,</span> <span class=\"s\">\"json\"</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        getScript<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> url<span class=\"k\">,</span> callback <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> jQuery<span class=\"k\">.</span>get<span class=\"k\">(</span> url<span class=\"k\">,</span> undefined<span class=\"k\">,</span> callback<span class=\"k\">,</span> <span class=\"s\">\"script\"</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span> <span class=\"k\">);</span>","","    jQuery<span class=\"k\">.</span>each<span class=\"k\">(</span> <span class=\"k\">[</span> <span class=\"s\">\"get\"</span><span class=\"k\">,</span> <span class=\"s\">\"post\"</span> <span class=\"k\">],</span> <span class=\"k\">function</span><span class=\"k\">(</span> i<span class=\"k\">,</span> method <span class=\"k\">)</span> <span class=\"k\">{</span>","        jQuery<span class=\"k\">[</span> method <span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> url<span class=\"k\">,</span> data<span class=\"k\">,</span> callback<span class=\"k\">,</span> type <span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"c\">// Shift arguments if data argument was omitted</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> isFunction<span class=\"k\">(</span> data <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                type <span class=\"k\">=</span> type <span class=\"k\">||</span> callback<span class=\"k\">;</span>","                callback <span class=\"k\">=</span> data<span class=\"k\">;</span>","                data <span class=\"k\">=</span> undefined<span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// The url can be an options object (which then must have .url)</span>","            <span class=\"k\">return</span> jQuery<span class=\"k\">.</span>ajax<span class=\"k\">(</span> jQuery<span class=\"k\">.</span>extend<span class=\"k\">(</span> <span class=\"k\">{</span>","                url<span class=\"k\">:</span> url<span class=\"k\">,</span>","                type<span class=\"k\">:</span> method<span class=\"k\">,</span>","                dataType<span class=\"k\">:</span> type<span class=\"k\">,</span>","                data<span class=\"k\">:</span> data<span class=\"k\">,</span>","                success<span class=\"k\">:</span> callback","            <span class=\"k\">}</span><span class=\"k\">,</span> jQuery<span class=\"k\">.</span>isPlainObject<span class=\"k\">(</span> url <span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> url <span class=\"k\">)</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"k\">}</span> <span class=\"k\">);</span>","","","    jQuery<span class=\"k\">.</span>_evalUrl <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> url <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> jQuery<span class=\"k\">.</span>ajax<span class=\"k\">(</span> <span class=\"k\">{</span>","            url<span class=\"k\">:</span> url<span class=\"k\">,</span>","","            <span class=\"c\">// Make this explicit, since user can override this through ajaxSetup (#11264)</span>","            type<span class=\"k\">:</span> <span class=\"s\">\"GET\"</span><span class=\"k\">,</span>","            dataType<span class=\"k\">:</span> <span class=\"s\">\"script\"</span><span class=\"k\">,</span>","            cache<span class=\"k\">:</span> <span class=\"k\">true</span><span class=\"k\">,</span>","            async<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","            global<span class=\"k\">:</span> <span class=\"k\">false</span><span class=\"k\">,</span>","            <span class=\"s\">\"throws\"</span><span class=\"k\">:</span> <span class=\"k\">true</span>","        <span class=\"k\">}</span> <span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","","    jQuery<span class=\"k\">.</span>fn<span class=\"k\">.</span>extend<span class=\"k\">(</span> <span class=\"k\">{</span>","        wrapAll<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> html <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> wrap<span class=\"k\">;</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> isFunction<span class=\"k\">(</span> html <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    html <span class=\"k\">=</span> html<span class=\"k\">.</span>call<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">]</span> <span class=\"k\">);</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// The elements to wrap the target around</span>","                wrap <span class=\"k\">=</span> jQuery<span class=\"k\">(</span> html<span class=\"k\">,</span> <span class=\"k\">this</span><span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">].</span>ownerDocument <span class=\"k\">).</span>eq<span class=\"k\">(</span> <span class=\"s\">0</span> <span class=\"k\">).</span>clone<span class=\"k\">(</span> <span class=\"k\">true</span> <span class=\"k\">);</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">].</span>parentNode <span class=\"k\">)</span> <span class=\"k\">{</span>","                    wrap<span class=\"k\">.</span>insertBefore<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">]</span> <span class=\"k\">);</span>","                <span class=\"k\">}</span>","","                wrap<span class=\"k\">.</span>map<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> elem <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">;</span>","","                    <span class=\"k\">while</span> <span class=\"k\">(</span> elem<span class=\"k\">.</span>firstElementChild <span class=\"k\">)</span> <span class=\"k\">{</span>","                        elem <span class=\"k\">=</span> elem<span class=\"k\">.</span>firstElementChild<span class=\"k\">;</span>","                    <span class=\"k\">}</span>","","                    <span class=\"k\">return</span> elem<span class=\"k\">;</span>","                <span class=\"k\">}</span> <span class=\"k\">).</span>append<span class=\"k\">(</span> <span class=\"k\">this</span> <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        wrapInner<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> html <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> isFunction<span class=\"k\">(</span> html <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>each<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">(</span> i <span class=\"k\">)</span> <span class=\"k\">{</span>","                    jQuery<span class=\"k\">(</span> <span class=\"k\">this</span> <span class=\"k\">).</span>wrapInner<span class=\"k\">(</span> html<span class=\"k\">.</span>call<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> i <span class=\"k\">)</span> <span class=\"k\">);</span>","                <span class=\"k\">}</span> <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>each<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> self <span class=\"k\">=</span> jQuery<span class=\"k\">(</span> <span class=\"k\">this</span> <span class=\"k\">),</span>","                    contents <span class=\"k\">=</span> self<span class=\"k\">.</span>contents<span class=\"k\">();</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span> contents<span class=\"k\">.</span>length <span class=\"k\">)</span> <span class=\"k\">{</span>","                    contents<span class=\"k\">.</span>wrapAll<span class=\"k\">(</span> html <span class=\"k\">);</span>","","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    self<span class=\"k\">.</span>append<span class=\"k\">(</span> html <span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        wrap<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> html <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> htmlIsFunction <span class=\"k\">=</span> isFunction<span class=\"k\">(</span> html <span class=\"k\">);</span>","","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>each<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">(</span> i <span class=\"k\">)</span> <span class=\"k\">{</span>","                jQuery<span class=\"k\">(</span> <span class=\"k\">this</span> <span class=\"k\">).</span>wrapAll<span class=\"k\">(</span> htmlIsFunction <span class=\"k\">?</span> html<span class=\"k\">.</span>call<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> i <span class=\"k\">)</span> <span class=\"k\">:</span> html <span class=\"k\">);</span>","            <span class=\"k\">}</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        unwrap<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> selector <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">this</span><span class=\"k\">.</span>parent<span class=\"k\">(</span> selector <span class=\"k\">).</span>not<span class=\"k\">(</span> <span class=\"s\">\"body\"</span> <span class=\"k\">).</span>each<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                jQuery<span class=\"k\">(</span> <span class=\"k\">this</span> <span class=\"k\">).</span>replaceWith<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">.</span>childNodes <span class=\"k\">);</span>","            <span class=\"k\">}</span> <span class=\"k\">);</span>","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span> <span class=\"k\">);</span>","","","    jQuery<span class=\"k\">.</span>expr<span class=\"k\">.</span>pseudos<span class=\"k\">.</span>hidden <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> <span class=\"k\">!</span>jQuery<span class=\"k\">.</span>expr<span class=\"k\">.</span>pseudos<span class=\"k\">.</span>visible<span class=\"k\">(</span> elem <span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","    jQuery<span class=\"k\">.</span>expr<span class=\"k\">.</span>pseudos<span class=\"k\">.</span>visible <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> <span class=\"k\">!!(</span> elem<span class=\"k\">.</span>offsetWidth <span class=\"k\">||</span> elem<span class=\"k\">.</span>offsetHeight <span class=\"k\">||</span> elem<span class=\"k\">.</span>getClientRects<span class=\"k\">().</span>length <span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","","","","    jQuery<span class=\"k\">.</span>ajaxSettings<span class=\"k\">.</span>xhr <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">try</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">new</span> window<span class=\"k\">.</span>XMLHttpRequest<span class=\"k\">();</span>","        <span class=\"k\">}</span> <span class=\"k\">catch</span> <span class=\"k\">(</span> e <span class=\"k\">)</span> <span class=\"k\">{}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    <span class=\"k\">var</span> xhrSuccessStatus <span class=\"k\">=</span> <span class=\"k\">{</span>","","            <span class=\"c\">// File protocol always yields status code 0, assume 200</span>","            <span class=\"s\">0</span><span class=\"k\">:</span> <span class=\"s\">200</span><span class=\"k\">,</span>","","            <span class=\"c\">// Support: IE &lt;=9 only</span>","            <span class=\"c\">// #1450: sometimes IE returns 1223 when it should be 204</span>","            <span class=\"s\">1223</span><span class=\"k\">:</span> <span class=\"s\">204</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        xhrSupported <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>ajaxSettings<span class=\"k\">.</span>xhr<span class=\"k\">();</span>","","    support<span class=\"k\">.</span>cors <span class=\"k\">=</span> <span class=\"k\">!!</span>xhrSupported <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span> <span class=\"s\">\"withCredentials\"</span> <span class=\"k\">in</span> xhrSupported <span class=\"k\">);</span>","    support<span class=\"k\">.</span>ajax <span class=\"k\">=</span> xhrSupported <span class=\"k\">=</span> <span class=\"k\">!!</span>xhrSupported<span class=\"k\">;</span>","","    jQuery<span class=\"k\">.</span>ajaxTransport<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">(</span> options <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> callback<span class=\"k\">,</span> errorCallback<span class=\"k\">;</span>","","        <span class=\"c\">// Cross domain only allowed if supported through XMLHttpRequest</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> support<span class=\"k\">.</span>cors <span class=\"k\">||</span> xhrSupported <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>options<span class=\"k\">.</span>crossDomain <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">{</span>","                send<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> headers<span class=\"k\">,</span> complete <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> i<span class=\"k\">,</span>","                        xhr <span class=\"k\">=</span> options<span class=\"k\">.</span>xhr<span class=\"k\">();</span>","","                    xhr<span class=\"k\">.</span>open<span class=\"k\">(</span>","                        options<span class=\"k\">.</span>type<span class=\"k\">,</span>","                        options<span class=\"k\">.</span>url<span class=\"k\">,</span>","                        options<span class=\"k\">.</span>async<span class=\"k\">,</span>","                        options<span class=\"k\">.</span>username<span class=\"k\">,</span>","                        options<span class=\"k\">.</span>password","                    <span class=\"k\">);</span>","","                    <span class=\"c\">// Apply custom fields if provided</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> options<span class=\"k\">.</span>xhrFields <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">for</span> <span class=\"k\">(</span> i <span class=\"k\">in</span> options<span class=\"k\">.</span>xhrFields <span class=\"k\">)</span> <span class=\"k\">{</span>","                            xhr<span class=\"k\">[</span> i <span class=\"k\">]</span> <span class=\"k\">=</span> options<span class=\"k\">.</span>xhrFields<span class=\"k\">[</span> i <span class=\"k\">];</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span>","","                    <span class=\"c\">// Override mime type if needed</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> options<span class=\"k\">.</span>mimeType <span class=\"k\">&amp;&amp;</span> xhr<span class=\"k\">.</span>overrideMimeType <span class=\"k\">)</span> <span class=\"k\">{</span>","                        xhr<span class=\"k\">.</span>overrideMimeType<span class=\"k\">(</span> options<span class=\"k\">.</span>mimeType <span class=\"k\">);</span>","                    <span class=\"k\">}</span>","","                    <span class=\"c\">// X-Requested-With header</span>","                    <span class=\"c\">// For cross-domain requests, seeing as conditions for a preflight are</span>","                    <span class=\"c\">// akin to a jigsaw puzzle, we simply never set it to be sure.</span>","                    <span class=\"c\">// (it can always be set on a per-request basis or even using ajaxSetup)</span>","                    <span class=\"c\">// For same-domain requests, won't change header if already provided.</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>options<span class=\"k\">.</span>crossDomain <span class=\"k\">&amp;&amp;</span> <span class=\"k\">!</span>headers<span class=\"k\">[</span> <span class=\"s\">\"X-Requested-With\"</span> <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                        headers<span class=\"k\">[</span> <span class=\"s\">\"X-Requested-With\"</span> <span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">\"XMLHttpRequest\"</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","","                    <span class=\"c\">// Set headers</span>","                    <span class=\"k\">for</span> <span class=\"k\">(</span> i <span class=\"k\">in</span> headers <span class=\"k\">)</span> <span class=\"k\">{</span>","                        xhr<span class=\"k\">.</span>setRequestHeader<span class=\"k\">(</span> i<span class=\"k\">,</span> headers<span class=\"k\">[</span> i <span class=\"k\">]</span> <span class=\"k\">);</span>","                    <span class=\"k\">}</span>","","                    <span class=\"c\">// Callback</span>","                    callback <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> type <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">return</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span> callback <span class=\"k\">)</span> <span class=\"k\">{</span>","                                callback <span class=\"k\">=</span> errorCallback <span class=\"k\">=</span> xhr<span class=\"k\">.</span>onload <span class=\"k\">=</span>","                                    xhr<span class=\"k\">.</span>onerror <span class=\"k\">=</span> xhr<span class=\"k\">.</span>onabort <span class=\"k\">=</span> xhr<span class=\"k\">.</span>ontimeout <span class=\"k\">=</span>","                                        xhr<span class=\"k\">.</span>onreadystatechange <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","","                                <span class=\"k\">if</span> <span class=\"k\">(</span> type <span class=\"k\">===</span> <span class=\"s\">\"abort\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                    xhr<span class=\"k\">.</span>abort<span class=\"k\">();</span>","                                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> type <span class=\"k\">===</span> <span class=\"s\">\"error\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                                    <span class=\"c\">// Support: IE &lt;=9 only</span>","                                    <span class=\"c\">// On a manual native abort, IE9 throws</span>","                                    <span class=\"c\">// errors on any property access that is not readyState</span>","                                    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">typeof</span> xhr<span class=\"k\">.</span>status <span class=\"k\">!==</span> <span class=\"s\">\"number\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                                        complete<span class=\"k\">(</span> <span class=\"s\">0</span><span class=\"k\">,</span> <span class=\"s\">\"error\"</span> <span class=\"k\">);</span>","                                    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                                        complete<span class=\"k\">(</span>","","                                            <span class=\"c\">// File: protocol always yields status 0; see #8605, #14207</span>","                                            xhr<span class=\"k\">.</span>status<span class=\"k\">,</span>","                                            xhr<span class=\"k\">.</span>statusText","                                        <span class=\"k\">);</span>","                                    <span class=\"k\">}</span>","                                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                                    complete<span class=\"k\">(</span>","                                        xhrSuccessStatus<span class=\"k\">[</span> xhr<span class=\"k\">.</span>status <span class=\"k\">]</span> <span class=\"k\">||</span> xhr<span class=\"k\">.</span>status<span class=\"k\">,</span>","                                        xhr<span class=\"k\">.</span>statusText<span class=\"k\">,</span>","","                                        <span class=\"c\">// Support: IE &lt;=9 only</span>","                                        <span class=\"c\">// IE9 has no XHR2 but throws on binary (trac-11426)</span>","                                        <span class=\"c\">// For XHR2 non-text, let the caller handle it (gh-2498)</span>","                                        <span class=\"k\">(</span> xhr<span class=\"k\">.</span>responseType <span class=\"k\">||</span> <span class=\"s\">\"text\"</span> <span class=\"k\">)</span> <span class=\"k\">!==</span> <span class=\"s\">\"text\"</span>  <span class=\"k\">||</span>","                                        <span class=\"k\">typeof</span> xhr<span class=\"k\">.</span>responseText <span class=\"k\">!==</span> <span class=\"s\">\"string\"</span> <span class=\"k\">?</span>","                                            <span class=\"k\">{</span> binary<span class=\"k\">:</span> xhr<span class=\"k\">.</span>response <span class=\"k\">}</span> <span class=\"k\">:</span>","                                            <span class=\"k\">{</span> text<span class=\"k\">:</span> xhr<span class=\"k\">.</span>responseText <span class=\"k\">}</span><span class=\"k\">,</span>","                                        xhr<span class=\"k\">.</span>getAllResponseHeaders<span class=\"k\">()</span>","                                    <span class=\"k\">);</span>","                                <span class=\"k\">}</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span><span class=\"k\">;</span>","","                    <span class=\"c\">// Listen to events</span>","                    xhr<span class=\"k\">.</span>onload <span class=\"k\">=</span> callback<span class=\"k\">();</span>","                    errorCallback <span class=\"k\">=</span> xhr<span class=\"k\">.</span>onerror <span class=\"k\">=</span> xhr<span class=\"k\">.</span>ontimeout <span class=\"k\">=</span> callback<span class=\"k\">(</span> <span class=\"s\">\"error\"</span> <span class=\"k\">);</span>","","                    <span class=\"c\">// Support: IE 9 only</span>","                    <span class=\"c\">// Use onreadystatechange to replace onabort</span>","                    <span class=\"c\">// to handle uncaught aborts</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> xhr<span class=\"k\">.</span>onabort <span class=\"k\">!==</span> undefined <span class=\"k\">)</span> <span class=\"k\">{</span>","                        xhr<span class=\"k\">.</span>onabort <span class=\"k\">=</span> errorCallback<span class=\"k\">;</span>","                    <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                        xhr<span class=\"k\">.</span>onreadystatechange <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","","                            <span class=\"c\">// Check readyState before timeout as it changes</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span> xhr<span class=\"k\">.</span>readyState <span class=\"k\">===</span> <span class=\"s\">4</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                                <span class=\"c\">// Allow onerror to be called first,</span>","                                <span class=\"c\">// but that will not handle a native abort</span>","                                <span class=\"c\">// Also, save errorCallback to a variable</span>","                                <span class=\"c\">// as xhr.onerror cannot be accessed</span>","                                window<span class=\"k\">.</span>setTimeout<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                                    <span class=\"k\">if</span> <span class=\"k\">(</span> callback <span class=\"k\">)</span> <span class=\"k\">{</span>","                                        errorCallback<span class=\"k\">();</span>","                                    <span class=\"k\">}</span>","                                <span class=\"k\">}</span> <span class=\"k\">);</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span><span class=\"k\">;</span>","                    <span class=\"k\">}</span>","","                    <span class=\"c\">// Create the abort callback</span>","                    callback <span class=\"k\">=</span> callback<span class=\"k\">(</span> <span class=\"s\">\"abort\"</span> <span class=\"k\">);</span>","","                    <span class=\"k\">try</span> <span class=\"k\">{</span>","","                        <span class=\"c\">// Do send the request (this may raise an exception)</span>","                        xhr<span class=\"k\">.</span>send<span class=\"k\">(</span> options<span class=\"k\">.</span>hasContent <span class=\"k\">&amp;&amp;</span> options<span class=\"k\">.</span>data <span class=\"k\">||</span> <span class=\"k\">null</span> <span class=\"k\">);</span>","                    <span class=\"k\">}</span> <span class=\"k\">catch</span> <span class=\"k\">(</span> e <span class=\"k\">)</span> <span class=\"k\">{</span>","","                        <span class=\"c\">// #14683: Only rethrow if this hasn't been notified as an error yet</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> callback <span class=\"k\">)</span> <span class=\"k\">{</span>","                            <span class=\"k\">throw</span> e<span class=\"k\">;</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span><span class=\"k\">,</span>","","                abort<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> callback <span class=\"k\">)</span> <span class=\"k\">{</span>","                        callback<span class=\"k\">();</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span> <span class=\"k\">);</span>","","","","","<span class=\"c\">// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)</span>","    jQuery<span class=\"k\">.</span>ajaxPrefilter<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">(</span> s <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> s<span class=\"k\">.</span>crossDomain <span class=\"k\">)</span> <span class=\"k\">{</span>","            s<span class=\"k\">.</span>contents<span class=\"k\">.</span>script <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span> <span class=\"k\">);</span>","","<span class=\"c\">// Install script dataType</span>","    jQuery<span class=\"k\">.</span>ajaxSetup<span class=\"k\">(</span> <span class=\"k\">{</span>","        accepts<span class=\"k\">:</span> <span class=\"k\">{</span>","            script<span class=\"k\">:</span> <span class=\"s\">\"text/javascript, application/javascript, \"</span> <span class=\"k\">+</span>","                <span class=\"s\">\"application/ecmascript, application/x-ecmascript\"</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        contents<span class=\"k\">:</span> <span class=\"k\">{</span>","            script<span class=\"k\">:</span> <span class=\"s\">/\\b(?:java|ecma)script\\b/</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        converters<span class=\"k\">:</span> <span class=\"k\">{</span>","            <span class=\"s\">\"text script\"</span><span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> text <span class=\"k\">)</span> <span class=\"k\">{</span>","                jQuery<span class=\"k\">.</span>globalEval<span class=\"k\">(</span> text <span class=\"k\">);</span>","                <span class=\"k\">return</span> text<span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span> <span class=\"k\">);</span>","","<span class=\"c\">// Handle cache's special case and crossDomain</span>","    jQuery<span class=\"k\">.</span>ajaxPrefilter<span class=\"k\">(</span> <span class=\"s\">\"script\"</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span> s <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> s<span class=\"k\">.</span>cache <span class=\"k\">===</span> undefined <span class=\"k\">)</span> <span class=\"k\">{</span>","            s<span class=\"k\">.</span>cache <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> s<span class=\"k\">.</span>crossDomain <span class=\"k\">)</span> <span class=\"k\">{</span>","            s<span class=\"k\">.</span>type <span class=\"k\">=</span> <span class=\"s\">\"GET\"</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span> <span class=\"k\">);</span>","","<span class=\"c\">// Bind script tag hack transport</span>","    jQuery<span class=\"k\">.</span>ajaxTransport<span class=\"k\">(</span> <span class=\"s\">\"script\"</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span> s <span class=\"k\">)</span> <span class=\"k\">{</span>","","        <span class=\"c\">// This transport only deals with cross domain requests</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> s<span class=\"k\">.</span>crossDomain <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> script<span class=\"k\">,</span> callback<span class=\"k\">;</span>","            <span class=\"k\">return</span> <span class=\"k\">{</span>","                send<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> _<span class=\"k\">,</span> complete <span class=\"k\">)</span> <span class=\"k\">{</span>","                    script <span class=\"k\">=</span> jQuery<span class=\"k\">(</span> <span class=\"s\">\"&lt;script&gt;\"</span> <span class=\"k\">).</span>prop<span class=\"k\">(</span> <span class=\"k\">{</span>","                        charset<span class=\"k\">:</span> s<span class=\"k\">.</span>scriptCharset<span class=\"k\">,</span>","                        src<span class=\"k\">:</span> s<span class=\"k\">.</span>url","                    <span class=\"k\">}</span> <span class=\"k\">).</span>on<span class=\"k\">(</span>","                        <span class=\"s\">\"load error\"</span><span class=\"k\">,</span>","                        callback <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> evt <span class=\"k\">)</span> <span class=\"k\">{</span>","                            script<span class=\"k\">.</span>remove<span class=\"k\">();</span>","                            callback <span class=\"k\">=</span> <span class=\"k\">null</span><span class=\"k\">;</span>","                            <span class=\"k\">if</span> <span class=\"k\">(</span> evt <span class=\"k\">)</span> <span class=\"k\">{</span>","                                complete<span class=\"k\">(</span> evt<span class=\"k\">.</span>type <span class=\"k\">===</span> <span class=\"s\">\"error\"</span> <span class=\"k\">?</span> <span class=\"s\">404</span> <span class=\"k\">:</span> <span class=\"s\">200</span><span class=\"k\">,</span> evt<span class=\"k\">.</span>type <span class=\"k\">);</span>","                            <span class=\"k\">}</span>","                        <span class=\"k\">}</span>","                    <span class=\"k\">);</span>","","                    <span class=\"c\">// Use native DOM manipulation to avoid our domManip AJAX trickery</span>","                    document<span class=\"k\">.</span>head<span class=\"k\">.</span>appendChild<span class=\"k\">(</span> script<span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">]</span> <span class=\"k\">);</span>","                <span class=\"k\">}</span><span class=\"k\">,</span>","                abort<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                    <span class=\"k\">if</span> <span class=\"k\">(</span> callback <span class=\"k\">)</span> <span class=\"k\">{</span>","                        callback<span class=\"k\">();</span>","                    <span class=\"k\">}</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span> <span class=\"k\">);</span>","","","","","    <span class=\"k\">var</span> oldCallbacks <span class=\"k\">=</span> <span class=\"k\">[],</span>","        rjsonp <span class=\"k\">=</span> <span class=\"s\">/(=)\\?(?=&amp;|$)|\\?\\?/</span><span class=\"k\">;</span>","","<span class=\"c\">// Default jsonp settings</span>","    jQuery<span class=\"k\">.</span>ajaxSetup<span class=\"k\">(</span> <span class=\"k\">{</span>","        jsonp<span class=\"k\">:</span> <span class=\"s\">\"callback\"</span><span class=\"k\">,</span>","        jsonpCallback<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> callback <span class=\"k\">=</span> oldCallbacks<span class=\"k\">.</span>pop<span class=\"k\">()</span> <span class=\"k\">||</span> <span class=\"k\">(</span> jQuery<span class=\"k\">.</span>expando <span class=\"k\">+</span> <span class=\"s\">\"_\"</span> <span class=\"k\">+</span> <span class=\"k\">(</span> nonce<span class=\"k\">++</span> <span class=\"k\">)</span> <span class=\"k\">);</span>","            <span class=\"k\">this</span><span class=\"k\">[</span> callback <span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">true</span><span class=\"k\">;</span>","            <span class=\"k\">return</span> callback<span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span> <span class=\"k\">);</span>","","<span class=\"c\">// Detect, normalize options and install callbacks for jsonp requests</span>","    jQuery<span class=\"k\">.</span>ajaxPrefilter<span class=\"k\">(</span> <span class=\"s\">\"json jsonp\"</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span> s<span class=\"k\">,</span> originalSettings<span class=\"k\">,</span> jqXHR <span class=\"k\">)</span> <span class=\"k\">{</span>","","        <span class=\"k\">var</span> callbackName<span class=\"k\">,</span> overwritten<span class=\"k\">,</span> responseContainer<span class=\"k\">,</span>","            jsonProp <span class=\"k\">=</span> s<span class=\"k\">.</span>jsonp <span class=\"k\">!==</span> <span class=\"k\">false</span> <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span> rjsonp<span class=\"k\">.</span>test<span class=\"k\">(</span> s<span class=\"k\">.</span>url <span class=\"k\">)</span> <span class=\"k\">?</span>","                    <span class=\"s\">\"url\"</span> <span class=\"k\">:</span>","                    <span class=\"k\">typeof</span> s<span class=\"k\">.</span>data <span class=\"k\">===</span> <span class=\"s\">\"string\"</span> <span class=\"k\">&amp;&amp;</span>","                    <span class=\"k\">(</span> s<span class=\"k\">.</span>contentType <span class=\"k\">||</span> <span class=\"s\">\"\"</span> <span class=\"k\">)</span>","                        <span class=\"k\">.</span>indexOf<span class=\"k\">(</span> <span class=\"s\">\"application/x-www-form-urlencoded\"</span> <span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"s\">0</span> <span class=\"k\">&amp;&amp;</span>","                    rjsonp<span class=\"k\">.</span>test<span class=\"k\">(</span> s<span class=\"k\">.</span>data <span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span> <span class=\"s\">\"data\"</span>","            <span class=\"k\">);</span>","","        <span class=\"c\">// Handle iff the expected data type is \"jsonp\" or we have a parameter to set</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> jsonProp <span class=\"k\">||</span> s<span class=\"k\">.</span>dataTypes<span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">]</span> <span class=\"k\">===</span> <span class=\"s\">\"jsonp\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"c\">// Get callback name, remembering preexisting value associated with it</span>","            callbackName <span class=\"k\">=</span> s<span class=\"k\">.</span>jsonpCallback <span class=\"k\">=</span> isFunction<span class=\"k\">(</span> s<span class=\"k\">.</span>jsonpCallback <span class=\"k\">)</span> <span class=\"k\">?</span>","                s<span class=\"k\">.</span>jsonpCallback<span class=\"k\">()</span> <span class=\"k\">:</span>","                s<span class=\"k\">.</span>jsonpCallback<span class=\"k\">;</span>","","            <span class=\"c\">// Insert callback into url or form data</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> jsonProp <span class=\"k\">)</span> <span class=\"k\">{</span>","                s<span class=\"k\">[</span> jsonProp <span class=\"k\">]</span> <span class=\"k\">=</span> s<span class=\"k\">[</span> jsonProp <span class=\"k\">].</span>replace<span class=\"k\">(</span> rjsonp<span class=\"k\">,</span> <span class=\"s\">\"$1\"</span> <span class=\"k\">+</span> callbackName <span class=\"k\">);</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> s<span class=\"k\">.</span>jsonp <span class=\"k\">!==</span> <span class=\"k\">false</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                s<span class=\"k\">.</span>url <span class=\"k\">+=</span> <span class=\"k\">(</span> rquery<span class=\"k\">.</span>test<span class=\"k\">(</span> s<span class=\"k\">.</span>url <span class=\"k\">)</span> <span class=\"k\">?</span> <span class=\"s\">\"&amp;\"</span> <span class=\"k\">:</span> <span class=\"s\">\"?\"</span> <span class=\"k\">)</span> <span class=\"k\">+</span> s<span class=\"k\">.</span>jsonp <span class=\"k\">+</span> <span class=\"s\">\"=\"</span> <span class=\"k\">+</span> callbackName<span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Use data converter to retrieve json after script execution</span>","            s<span class=\"k\">.</span>converters<span class=\"k\">[</span> <span class=\"s\">\"script json\"</span> <span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>responseContainer <span class=\"k\">)</span> <span class=\"k\">{</span>","                    jQuery<span class=\"k\">.</span>error<span class=\"k\">(</span> callbackName <span class=\"k\">+</span> <span class=\"s\">\" was not called\"</span> <span class=\"k\">);</span>","                <span class=\"k\">}</span>","                <span class=\"k\">return</span> responseContainer<span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">];</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","","            <span class=\"c\">// Force json dataType</span>","            s<span class=\"k\">.</span>dataTypes<span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"s\">\"json\"</span><span class=\"k\">;</span>","","            <span class=\"c\">// Install callback</span>","            overwritten <span class=\"k\">=</span> window<span class=\"k\">[</span> callbackName <span class=\"k\">];</span>","            window<span class=\"k\">[</span> callbackName <span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                responseContainer <span class=\"k\">=</span> arguments<span class=\"k\">;</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","","            <span class=\"c\">// Clean-up function (fires after converters)</span>","            jqXHR<span class=\"k\">.</span>always<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","","                <span class=\"c\">// If previous value didn't exist - remove it</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> overwritten <span class=\"k\">===</span> undefined <span class=\"k\">)</span> <span class=\"k\">{</span>","                    jQuery<span class=\"k\">(</span> window <span class=\"k\">).</span>removeProp<span class=\"k\">(</span> callbackName <span class=\"k\">);</span>","","                    <span class=\"c\">// Otherwise restore preexisting value</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    window<span class=\"k\">[</span> callbackName <span class=\"k\">]</span> <span class=\"k\">=</span> overwritten<span class=\"k\">;</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// Save back as free</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> s<span class=\"k\">[</span> callbackName <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                    <span class=\"c\">// Make sure that re-using the options doesn't screw things around</span>","                    s<span class=\"k\">.</span>jsonpCallback <span class=\"k\">=</span> originalSettings<span class=\"k\">.</span>jsonpCallback<span class=\"k\">;</span>","","                    <span class=\"c\">// Save the callback name for future use</span>","                    oldCallbacks<span class=\"k\">.</span>push<span class=\"k\">(</span> callbackName <span class=\"k\">);</span>","                <span class=\"k\">}</span>","","                <span class=\"c\">// Call if it was a function and we have a response</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> responseContainer <span class=\"k\">&amp;&amp;</span> isFunction<span class=\"k\">(</span> overwritten <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    overwritten<span class=\"k\">(</span> responseContainer<span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">]</span> <span class=\"k\">);</span>","                <span class=\"k\">}</span>","","                responseContainer <span class=\"k\">=</span> overwritten <span class=\"k\">=</span> undefined<span class=\"k\">;</span>","            <span class=\"k\">}</span> <span class=\"k\">);</span>","","            <span class=\"c\">// Delegate to script</span>","            <span class=\"k\">return</span> <span class=\"s\">\"script\"</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span> <span class=\"k\">);</span>","","","","","<span class=\"c\">// Support: Safari 8 only</span>","<span class=\"c\">// In Safari 8 documents created via document.implementation.createHTMLDocument</span>","<span class=\"c\">// collapse sibling forms: the second one becomes a child of the first one.</span>","<span class=\"c\">// Because of that, this security measure has to be disabled in Safari 8.</span>","<span class=\"c\">// https://bugs.webkit.org/show_bug.cgi?id=137337</span>","    support<span class=\"k\">.</span>createHTMLDocument <span class=\"k\">=</span> <span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> body <span class=\"k\">=</span> document<span class=\"k\">.</span>implementation<span class=\"k\">.</span>createHTMLDocument<span class=\"k\">(</span> <span class=\"s\">\"\"</span> <span class=\"k\">).</span>body<span class=\"k\">;</span>","        body<span class=\"k\">.</span>innerHTML <span class=\"k\">=</span> <span class=\"s\">\"&lt;form&gt;&lt;/form&gt;&lt;form&gt;&lt;/form&gt;\"</span><span class=\"k\">;</span>","        <span class=\"k\">return</span> body<span class=\"k\">.</span>childNodes<span class=\"k\">.</span>length <span class=\"k\">===</span> <span class=\"s\">2</span><span class=\"k\">;</span>","    <span class=\"k\">}</span> <span class=\"k\">)();</span>","","","<span class=\"c\">// Argument \"data\" should be string of html</span>","<span class=\"c\">// context (optional): If specified, the fragment will be created in this context,</span>","<span class=\"c\">// defaults to document</span>","<span class=\"c\">// keepScripts (optional): If true, will include scripts passed in the html string</span>","    jQuery<span class=\"k\">.</span>parseHTML <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> data<span class=\"k\">,</span> context<span class=\"k\">,</span> keepScripts <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">typeof</span> data <span class=\"k\">!==</span> <span class=\"s\">\"string\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">[];</span>","        <span class=\"k\">}</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">typeof</span> context <span class=\"k\">===</span> <span class=\"s\">\"boolean\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            keepScripts <span class=\"k\">=</span> context<span class=\"k\">;</span>","            context <span class=\"k\">=</span> <span class=\"k\">false</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">var</span> base<span class=\"k\">,</span> parsed<span class=\"k\">,</span> scripts<span class=\"k\">;</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>context <span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"c\">// Stop scripts or inline event handlers from being executed immediately</span>","            <span class=\"c\">// by using document.implementation</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> support<span class=\"k\">.</span>createHTMLDocument <span class=\"k\">)</span> <span class=\"k\">{</span>","                context <span class=\"k\">=</span> document<span class=\"k\">.</span>implementation<span class=\"k\">.</span>createHTMLDocument<span class=\"k\">(</span> <span class=\"s\">\"\"</span> <span class=\"k\">);</span>","","                <span class=\"c\">// Set the base href for the created document</span>","                <span class=\"c\">// so any parsed elements with URLs</span>","                <span class=\"c\">// are based on the document's URL (gh-2965)</span>","                base <span class=\"k\">=</span> context<span class=\"k\">.</span>createElement<span class=\"k\">(</span> <span class=\"s\">\"base\"</span> <span class=\"k\">);</span>","                base<span class=\"k\">.</span>href <span class=\"k\">=</span> document<span class=\"k\">.</span>location<span class=\"k\">.</span>href<span class=\"k\">;</span>","                context<span class=\"k\">.</span>head<span class=\"k\">.</span>appendChild<span class=\"k\">(</span> base <span class=\"k\">);</span>","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                context <span class=\"k\">=</span> document<span class=\"k\">;</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","","        parsed <span class=\"k\">=</span> rsingleTag<span class=\"k\">.</span>exec<span class=\"k\">(</span> data <span class=\"k\">);</span>","        scripts <span class=\"k\">=</span> <span class=\"k\">!</span>keepScripts <span class=\"k\">&amp;&amp;</span> <span class=\"k\">[];</span>","","        <span class=\"c\">// Single tag</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> parsed <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">[</span> context<span class=\"k\">.</span>createElement<span class=\"k\">(</span> parsed<span class=\"k\">[</span> <span class=\"s\">1</span> <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">];</span>","        <span class=\"k\">}</span>","","        parsed <span class=\"k\">=</span> buildFragment<span class=\"k\">(</span> <span class=\"k\">[</span> data <span class=\"k\">],</span> context<span class=\"k\">,</span> scripts <span class=\"k\">);</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span> scripts <span class=\"k\">&amp;&amp;</span> scripts<span class=\"k\">.</span>length <span class=\"k\">)</span> <span class=\"k\">{</span>","            jQuery<span class=\"k\">(</span> scripts <span class=\"k\">).</span>remove<span class=\"k\">();</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">return</span> jQuery<span class=\"k\">.</span>merge<span class=\"k\">(</span> <span class=\"k\">[],</span> parsed<span class=\"k\">.</span>childNodes <span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","","    <span class=\"c\">/**</span>","<span class=\"c\">     * Load a url into a page</span>","<span class=\"c\">     */</span>","    jQuery<span class=\"k\">.</span>fn<span class=\"k\">.</span>load <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> url<span class=\"k\">,</span> params<span class=\"k\">,</span> callback <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> selector<span class=\"k\">,</span> type<span class=\"k\">,</span> response<span class=\"k\">,</span>","            self <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">,</span>","            off <span class=\"k\">=</span> url<span class=\"k\">.</span>indexOf<span class=\"k\">(</span> <span class=\"s\">\" \"</span> <span class=\"k\">);</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span> off <span class=\"k\">&gt;</span> <span class=\"k\">-</span><span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            selector <span class=\"k\">=</span> stripAndCollapse<span class=\"k\">(</span> url<span class=\"k\">.</span>slice<span class=\"k\">(</span> off <span class=\"k\">)</span> <span class=\"k\">);</span>","            url <span class=\"k\">=</span> url<span class=\"k\">.</span>slice<span class=\"k\">(</span> <span class=\"s\">0</span><span class=\"k\">,</span> off <span class=\"k\">);</span>","        <span class=\"k\">}</span>","","        <span class=\"c\">// If it's a function</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> isFunction<span class=\"k\">(</span> params <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"c\">// We assume that it's the callback</span>","            callback <span class=\"k\">=</span> params<span class=\"k\">;</span>","            params <span class=\"k\">=</span> undefined<span class=\"k\">;</span>","","            <span class=\"c\">// Otherwise, build a param string</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> params <span class=\"k\">&amp;&amp;</span> <span class=\"k\">typeof</span> params <span class=\"k\">===</span> <span class=\"s\">\"object\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            type <span class=\"k\">=</span> <span class=\"s\">\"POST\"</span><span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"c\">// If we have elements to modify, make the request</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> self<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">0</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            jQuery<span class=\"k\">.</span>ajax<span class=\"k\">(</span> <span class=\"k\">{</span>","                url<span class=\"k\">:</span> url<span class=\"k\">,</span>","","                <span class=\"c\">// If \"type\" variable is undefined, then \"GET\" method will be used.</span>","                <span class=\"c\">// Make value of this field explicit since</span>","                <span class=\"c\">// user can override it through ajaxSetup method</span>","                type<span class=\"k\">:</span> type <span class=\"k\">||</span> <span class=\"s\">\"GET\"</span><span class=\"k\">,</span>","                dataType<span class=\"k\">:</span> <span class=\"s\">\"html\"</span><span class=\"k\">,</span>","                data<span class=\"k\">:</span> params","            <span class=\"k\">}</span> <span class=\"k\">).</span>done<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">(</span> responseText <span class=\"k\">)</span> <span class=\"k\">{</span>","","                <span class=\"c\">// Save response for use in complete callback</span>","                response <span class=\"k\">=</span> arguments<span class=\"k\">;</span>","","                self<span class=\"k\">.</span>html<span class=\"k\">(</span> selector <span class=\"k\">?</span>","","                    <span class=\"c\">// If a selector was specified, locate the right elements in a dummy div</span>","                    <span class=\"c\">// Exclude scripts to avoid IE 'Permission Denied' errors</span>","                    jQuery<span class=\"k\">(</span> <span class=\"s\">\"&lt;div&gt;\"</span> <span class=\"k\">).</span>append<span class=\"k\">(</span> jQuery<span class=\"k\">.</span>parseHTML<span class=\"k\">(</span> responseText <span class=\"k\">)</span> <span class=\"k\">).</span>find<span class=\"k\">(</span> selector <span class=\"k\">)</span> <span class=\"k\">:</span>","","                    <span class=\"c\">// Otherwise use the full result</span>","                    responseText <span class=\"k\">);</span>","","                <span class=\"c\">// If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"</span>","                <span class=\"c\">// but they are ignored because response was set above.</span>","                <span class=\"c\">// If it fails, this function gets \"jqXHR\", \"status\", \"error\"</span>","            <span class=\"k\">}</span> <span class=\"k\">).</span>always<span class=\"k\">(</span> callback <span class=\"k\">&amp;&amp;</span> <span class=\"k\">function</span><span class=\"k\">(</span> jqXHR<span class=\"k\">,</span> status <span class=\"k\">)</span> <span class=\"k\">{</span>","                self<span class=\"k\">.</span>each<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                    callback<span class=\"k\">.</span>apply<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> response <span class=\"k\">||</span> <span class=\"k\">[</span> jqXHR<span class=\"k\">.</span>responseText<span class=\"k\">,</span> status<span class=\"k\">,</span> jqXHR <span class=\"k\">]</span> <span class=\"k\">);</span>","                <span class=\"k\">}</span> <span class=\"k\">);</span>","            <span class=\"k\">}</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","","","","<span class=\"c\">// Attach a bunch of functions for handling common AJAX events</span>","    jQuery<span class=\"k\">.</span>each<span class=\"k\">(</span> <span class=\"k\">[</span>","        <span class=\"s\">\"ajaxStart\"</span><span class=\"k\">,</span>","        <span class=\"s\">\"ajaxStop\"</span><span class=\"k\">,</span>","        <span class=\"s\">\"ajaxComplete\"</span><span class=\"k\">,</span>","        <span class=\"s\">\"ajaxError\"</span><span class=\"k\">,</span>","        <span class=\"s\">\"ajaxSuccess\"</span><span class=\"k\">,</span>","        <span class=\"s\">\"ajaxSend\"</span>","    <span class=\"k\">],</span> <span class=\"k\">function</span><span class=\"k\">(</span> i<span class=\"k\">,</span> type <span class=\"k\">)</span> <span class=\"k\">{</span>","        jQuery<span class=\"k\">.</span>fn<span class=\"k\">[</span> type <span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> fn <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>on<span class=\"k\">(</span> type<span class=\"k\">,</span> fn <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"k\">}</span> <span class=\"k\">);</span>","","","","","    jQuery<span class=\"k\">.</span>expr<span class=\"k\">.</span>pseudos<span class=\"k\">.</span>animated <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">return</span> jQuery<span class=\"k\">.</span>grep<span class=\"k\">(</span> jQuery<span class=\"k\">.</span>timers<span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span> fn <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> elem <span class=\"k\">===</span> fn<span class=\"k\">.</span>elem<span class=\"k\">;</span>","        <span class=\"k\">}</span> <span class=\"k\">).</span>length<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","","","","    jQuery<span class=\"k\">.</span>offset <span class=\"k\">=</span> <span class=\"k\">{</span>","        setOffset<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> options<span class=\"k\">,</span> i <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">var</span> curPosition<span class=\"k\">,</span> curLeft<span class=\"k\">,</span> curCSSTop<span class=\"k\">,</span> curTop<span class=\"k\">,</span> curOffset<span class=\"k\">,</span> curCSSLeft<span class=\"k\">,</span> calculatePosition<span class=\"k\">,</span>","                position <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>css<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"s\">\"position\"</span> <span class=\"k\">),</span>","                curElem <span class=\"k\">=</span> jQuery<span class=\"k\">(</span> elem <span class=\"k\">),</span>","                props <span class=\"k\">=</span> <span class=\"k\">{}</span><span class=\"k\">;</span>","","            <span class=\"c\">// Set position first, in-case top/left are set even on static elem</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> position <span class=\"k\">===</span> <span class=\"s\">\"static\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                elem<span class=\"k\">.</span>style<span class=\"k\">.</span>position <span class=\"k\">=</span> <span class=\"s\">\"relative\"</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            curOffset <span class=\"k\">=</span> curElem<span class=\"k\">.</span>offset<span class=\"k\">();</span>","            curCSSTop <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>css<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"s\">\"top\"</span> <span class=\"k\">);</span>","            curCSSLeft <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>css<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"s\">\"left\"</span> <span class=\"k\">);</span>","            calculatePosition <span class=\"k\">=</span> <span class=\"k\">(</span> position <span class=\"k\">===</span> <span class=\"s\">\"absolute\"</span> <span class=\"k\">||</span> position <span class=\"k\">===</span> <span class=\"s\">\"fixed\"</span> <span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span>","                <span class=\"k\">(</span> curCSSTop <span class=\"k\">+</span> curCSSLeft <span class=\"k\">).</span>indexOf<span class=\"k\">(</span> <span class=\"s\">\"auto\"</span> <span class=\"k\">)</span> <span class=\"k\">&gt;</span> <span class=\"k\">-</span><span class=\"s\">1</span><span class=\"k\">;</span>","","            <span class=\"c\">// Need to be able to calculate position if either</span>","            <span class=\"c\">// top or left is auto and position is either absolute or fixed</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> calculatePosition <span class=\"k\">)</span> <span class=\"k\">{</span>","                curPosition <span class=\"k\">=</span> curElem<span class=\"k\">.</span>position<span class=\"k\">();</span>","                curTop <span class=\"k\">=</span> curPosition<span class=\"k\">.</span>top<span class=\"k\">;</span>","                curLeft <span class=\"k\">=</span> curPosition<span class=\"k\">.</span>left<span class=\"k\">;</span>","","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                curTop <span class=\"k\">=</span> parseFloat<span class=\"k\">(</span> curCSSTop <span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"s\">0</span><span class=\"k\">;</span>","                curLeft <span class=\"k\">=</span> parseFloat<span class=\"k\">(</span> curCSSLeft <span class=\"k\">)</span> <span class=\"k\">||</span> <span class=\"s\">0</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> isFunction<span class=\"k\">(</span> options <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                <span class=\"c\">// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)</span>","                options <span class=\"k\">=</span> options<span class=\"k\">.</span>call<span class=\"k\">(</span> elem<span class=\"k\">,</span> i<span class=\"k\">,</span> jQuery<span class=\"k\">.</span>extend<span class=\"k\">(</span> <span class=\"k\">{}</span><span class=\"k\">,</span> curOffset <span class=\"k\">)</span> <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> options<span class=\"k\">.</span>top <span class=\"k\">!=</span> <span class=\"k\">null</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                props<span class=\"k\">.</span>top <span class=\"k\">=</span> <span class=\"k\">(</span> options<span class=\"k\">.</span>top <span class=\"k\">-</span> curOffset<span class=\"k\">.</span>top <span class=\"k\">)</span> <span class=\"k\">+</span> curTop<span class=\"k\">;</span>","            <span class=\"k\">}</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> options<span class=\"k\">.</span>left <span class=\"k\">!=</span> <span class=\"k\">null</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                props<span class=\"k\">.</span>left <span class=\"k\">=</span> <span class=\"k\">(</span> options<span class=\"k\">.</span>left <span class=\"k\">-</span> curOffset<span class=\"k\">.</span>left <span class=\"k\">)</span> <span class=\"k\">+</span> curLeft<span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"s\">\"using\"</span> <span class=\"k\">in</span> options <span class=\"k\">)</span> <span class=\"k\">{</span>","                options<span class=\"k\">.</span>using<span class=\"k\">.</span>call<span class=\"k\">(</span> elem<span class=\"k\">,</span> props <span class=\"k\">);</span>","","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                curElem<span class=\"k\">.</span>css<span class=\"k\">(</span> props <span class=\"k\">);</span>","            <span class=\"k\">}</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    jQuery<span class=\"k\">.</span>fn<span class=\"k\">.</span>extend<span class=\"k\">(</span> <span class=\"k\">{</span>","","        <span class=\"c\">// offset() relates an element's border box to the document origin</span>","        offset<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> options <span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"c\">// Preserve chaining for setter</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> arguments<span class=\"k\">.</span>length <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> options <span class=\"k\">===</span> undefined <span class=\"k\">?</span>","                    <span class=\"k\">this</span> <span class=\"k\">:</span>","                    <span class=\"k\">this</span><span class=\"k\">.</span>each<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">(</span> i <span class=\"k\">)</span> <span class=\"k\">{</span>","                        jQuery<span class=\"k\">.</span>offset<span class=\"k\">.</span>setOffset<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> options<span class=\"k\">,</span> i <span class=\"k\">);</span>","                    <span class=\"k\">}</span> <span class=\"k\">);</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">var</span> rect<span class=\"k\">,</span> win<span class=\"k\">,</span>","                elem <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">];</span>","","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>elem <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Return zeros for disconnected and hidden (display: none) elements (gh-2310)</span>","            <span class=\"c\">// Support: IE &lt;=11 only</span>","            <span class=\"c\">// Running getBoundingClientRect on a</span>","            <span class=\"c\">// disconnected node in IE throws an error</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>elem<span class=\"k\">.</span>getClientRects<span class=\"k\">().</span>length <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> <span class=\"k\">{</span> top<span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span> left<span class=\"k\">:</span> <span class=\"s\">0</span> <span class=\"k\">}</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Get document-relative position by adding viewport scroll to viewport-relative gBCR</span>","            rect <span class=\"k\">=</span> elem<span class=\"k\">.</span>getBoundingClientRect<span class=\"k\">();</span>","            win <span class=\"k\">=</span> elem<span class=\"k\">.</span>ownerDocument<span class=\"k\">.</span>defaultView<span class=\"k\">;</span>","            <span class=\"k\">return</span> <span class=\"k\">{</span>","                top<span class=\"k\">:</span> rect<span class=\"k\">.</span>top <span class=\"k\">+</span> win<span class=\"k\">.</span>pageYOffset<span class=\"k\">,</span>","                left<span class=\"k\">:</span> rect<span class=\"k\">.</span>left <span class=\"k\">+</span> win<span class=\"k\">.</span>pageXOffset","            <span class=\"k\">}</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        <span class=\"c\">// position() relates an element's margin box to its offset parent's padding box</span>","        <span class=\"c\">// This corresponds to the behavior of CSS absolute positioning</span>","        position<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span><span class=\"k\">this</span><span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">]</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span><span class=\"k\">;</span>","            <span class=\"k\">}</span>","","            <span class=\"k\">var</span> offsetParent<span class=\"k\">,</span> offset<span class=\"k\">,</span> doc<span class=\"k\">,</span>","                elem <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">[</span> <span class=\"s\">0</span> <span class=\"k\">],</span>","                parentOffset <span class=\"k\">=</span> <span class=\"k\">{</span> top<span class=\"k\">:</span> <span class=\"s\">0</span><span class=\"k\">,</span> left<span class=\"k\">:</span> <span class=\"s\">0</span> <span class=\"k\">}</span><span class=\"k\">;</span>","","            <span class=\"c\">// position:fixed elements are offset from the viewport, which itself always has zero offset</span>","            <span class=\"k\">if</span> <span class=\"k\">(</span> jQuery<span class=\"k\">.</span>css<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"s\">\"position\"</span> <span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"s\">\"fixed\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                <span class=\"c\">// Assume position:fixed implies availability of getBoundingClientRect</span>","                offset <span class=\"k\">=</span> elem<span class=\"k\">.</span>getBoundingClientRect<span class=\"k\">();</span>","","            <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                offset <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>offset<span class=\"k\">();</span>","","                <span class=\"c\">// Account for the *real* offset parent, which can be the document or its root element</span>","                <span class=\"c\">// when a statically positioned element is identified</span>","                doc <span class=\"k\">=</span> elem<span class=\"k\">.</span>ownerDocument<span class=\"k\">;</span>","                offsetParent <span class=\"k\">=</span> elem<span class=\"k\">.</span>offsetParent <span class=\"k\">||</span> doc<span class=\"k\">.</span>documentElement<span class=\"k\">;</span>","                <span class=\"k\">while</span> <span class=\"k\">(</span> offsetParent <span class=\"k\">&amp;&amp;</span>","                <span class=\"k\">(</span> offsetParent <span class=\"k\">===</span> doc<span class=\"k\">.</span>body <span class=\"k\">||</span> offsetParent <span class=\"k\">===</span> doc<span class=\"k\">.</span>documentElement <span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span>","                jQuery<span class=\"k\">.</span>css<span class=\"k\">(</span> offsetParent<span class=\"k\">,</span> <span class=\"s\">\"position\"</span> <span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"s\">\"static\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                    offsetParent <span class=\"k\">=</span> offsetParent<span class=\"k\">.</span>parentNode<span class=\"k\">;</span>","                <span class=\"k\">}</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> offsetParent <span class=\"k\">&amp;&amp;</span> offsetParent <span class=\"k\">!==</span> elem <span class=\"k\">&amp;&amp;</span> offsetParent<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                    <span class=\"c\">// Incorporate borders into its offset, since they are outside its content origin</span>","                    parentOffset <span class=\"k\">=</span> jQuery<span class=\"k\">(</span> offsetParent <span class=\"k\">).</span>offset<span class=\"k\">();</span>","                    parentOffset<span class=\"k\">.</span>top <span class=\"k\">+=</span> jQuery<span class=\"k\">.</span>css<span class=\"k\">(</span> offsetParent<span class=\"k\">,</span> <span class=\"s\">\"borderTopWidth\"</span><span class=\"k\">,</span> <span class=\"k\">true</span> <span class=\"k\">);</span>","                    parentOffset<span class=\"k\">.</span>left <span class=\"k\">+=</span> jQuery<span class=\"k\">.</span>css<span class=\"k\">(</span> offsetParent<span class=\"k\">,</span> <span class=\"s\">\"borderLeftWidth\"</span><span class=\"k\">,</span> <span class=\"k\">true</span> <span class=\"k\">);</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","","            <span class=\"c\">// Subtract parent offsets and element margins</span>","            <span class=\"k\">return</span> <span class=\"k\">{</span>","                top<span class=\"k\">:</span> offset<span class=\"k\">.</span>top <span class=\"k\">-</span> parentOffset<span class=\"k\">.</span>top <span class=\"k\">-</span> jQuery<span class=\"k\">.</span>css<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"s\">\"marginTop\"</span><span class=\"k\">,</span> <span class=\"k\">true</span> <span class=\"k\">),</span>","                left<span class=\"k\">:</span> offset<span class=\"k\">.</span>left <span class=\"k\">-</span> parentOffset<span class=\"k\">.</span>left <span class=\"k\">-</span> jQuery<span class=\"k\">.</span>css<span class=\"k\">(</span> elem<span class=\"k\">,</span> <span class=\"s\">\"marginLeft\"</span><span class=\"k\">,</span> <span class=\"k\">true</span> <span class=\"k\">)</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        <span class=\"c\">// This method will return documentElement in the following cases:</span>","        <span class=\"c\">// 1) For the element inside the iframe without offsetParent, this method will return</span>","        <span class=\"c\">//    documentElement of the parent window</span>","        <span class=\"c\">// 2) For the hidden or detached element</span>","        <span class=\"c\">// 3) For body or html element, i.e. in case of the html node - it will return itself</span>","        <span class=\"c\">//</span>","        <span class=\"c\">// but those exceptions were never presented as a real life use-cases</span>","        <span class=\"c\">// and might be considered as more preferable results.</span>","        <span class=\"c\">//</span>","        <span class=\"c\">// This logic, however, is not guaranteed and can change at any point in the future</span>","        offsetParent<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>map<span class=\"k\">(</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","                <span class=\"k\">var</span> offsetParent <span class=\"k\">=</span> <span class=\"k\">this</span><span class=\"k\">.</span>offsetParent<span class=\"k\">;</span>","","                <span class=\"k\">while</span> <span class=\"k\">(</span> offsetParent <span class=\"k\">&amp;&amp;</span> jQuery<span class=\"k\">.</span>css<span class=\"k\">(</span> offsetParent<span class=\"k\">,</span> <span class=\"s\">\"position\"</span> <span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"s\">\"static\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    offsetParent <span class=\"k\">=</span> offsetParent<span class=\"k\">.</span>offsetParent<span class=\"k\">;</span>","                <span class=\"k\">}</span>","","                <span class=\"k\">return</span> offsetParent <span class=\"k\">||</span> documentElement<span class=\"k\">;</span>","            <span class=\"k\">}</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span> <span class=\"k\">);</span>","","<span class=\"c\">// Create scrollLeft and scrollTop methods</span>","    jQuery<span class=\"k\">.</span>each<span class=\"k\">(</span> <span class=\"k\">{</span> scrollLeft<span class=\"k\">:</span> <span class=\"s\">\"pageXOffset\"</span><span class=\"k\">,</span> scrollTop<span class=\"k\">:</span> <span class=\"s\">\"pageYOffset\"</span> <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span> method<span class=\"k\">,</span> prop <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> top <span class=\"k\">=</span> <span class=\"s\">\"pageYOffset\"</span> <span class=\"k\">===</span> prop<span class=\"k\">;</span>","","        jQuery<span class=\"k\">.</span>fn<span class=\"k\">[</span> method <span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> val <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> access<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> method<span class=\"k\">,</span> val <span class=\"k\">)</span> <span class=\"k\">{</span>","","                <span class=\"c\">// Coalesce documents and windows</span>","                <span class=\"k\">var</span> win<span class=\"k\">;</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> isWindow<span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    win <span class=\"k\">=</span> elem<span class=\"k\">;</span>","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">if</span> <span class=\"k\">(</span> elem<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">9</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                    win <span class=\"k\">=</span> elem<span class=\"k\">.</span>defaultView<span class=\"k\">;</span>","                <span class=\"k\">}</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span> val <span class=\"k\">===</span> undefined <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">return</span> win <span class=\"k\">?</span> win<span class=\"k\">[</span> prop <span class=\"k\">]</span> <span class=\"k\">:</span> elem<span class=\"k\">[</span> method <span class=\"k\">];</span>","                <span class=\"k\">}</span>","","                <span class=\"k\">if</span> <span class=\"k\">(</span> win <span class=\"k\">)</span> <span class=\"k\">{</span>","                    win<span class=\"k\">.</span>scrollTo<span class=\"k\">(</span>","                        <span class=\"k\">!</span>top <span class=\"k\">?</span> val <span class=\"k\">:</span> win<span class=\"k\">.</span>pageXOffset<span class=\"k\">,</span>","                        top <span class=\"k\">?</span> val <span class=\"k\">:</span> win<span class=\"k\">.</span>pageYOffset","                    <span class=\"k\">);</span>","","                <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","                    elem<span class=\"k\">[</span> method <span class=\"k\">]</span> <span class=\"k\">=</span> val<span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span><span class=\"k\">,</span> method<span class=\"k\">,</span> val<span class=\"k\">,</span> arguments<span class=\"k\">.</span>length <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","    <span class=\"k\">}</span> <span class=\"k\">);</span>","","<span class=\"c\">// Support: Safari &lt;=7 - 9.1, Chrome &lt;=37 - 49</span>","<span class=\"c\">// Add the top/left cssHooks using jQuery.fn.position</span>","<span class=\"c\">// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084</span>","<span class=\"c\">// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347</span>","<span class=\"c\">// getComputedStyle returns percent when specified for top/left/bottom/right;</span>","<span class=\"c\">// rather than make the css module depend on the offset module, just check for it here</span>","    jQuery<span class=\"k\">.</span>each<span class=\"k\">(</span> <span class=\"k\">[</span> <span class=\"s\">\"top\"</span><span class=\"k\">,</span> <span class=\"s\">\"left\"</span> <span class=\"k\">],</span> <span class=\"k\">function</span><span class=\"k\">(</span> i<span class=\"k\">,</span> prop <span class=\"k\">)</span> <span class=\"k\">{</span>","        jQuery<span class=\"k\">.</span>cssHooks<span class=\"k\">[</span> prop <span class=\"k\">]</span> <span class=\"k\">=</span> addGetHookIf<span class=\"k\">(</span> support<span class=\"k\">.</span>pixelPosition<span class=\"k\">,</span>","            <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> computed <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">if</span> <span class=\"k\">(</span> computed <span class=\"k\">)</span> <span class=\"k\">{</span>","                    computed <span class=\"k\">=</span> curCSS<span class=\"k\">(</span> elem<span class=\"k\">,</span> prop <span class=\"k\">);</span>","","                    <span class=\"c\">// If curCSS returns percentage, fallback to offset</span>","                    <span class=\"k\">return</span> rnumnonpx<span class=\"k\">.</span>test<span class=\"k\">(</span> computed <span class=\"k\">)</span> <span class=\"k\">?</span>","                        jQuery<span class=\"k\">(</span> elem <span class=\"k\">).</span>position<span class=\"k\">()[</span> prop <span class=\"k\">]</span> <span class=\"k\">+</span> <span class=\"s\">\"px\"</span> <span class=\"k\">:</span>","                        computed<span class=\"k\">;</span>","                <span class=\"k\">}</span>","            <span class=\"k\">}</span>","        <span class=\"k\">);</span>","    <span class=\"k\">}</span> <span class=\"k\">);</span>","","","<span class=\"c\">// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods</span>","    jQuery<span class=\"k\">.</span>each<span class=\"k\">(</span> <span class=\"k\">{</span> Height<span class=\"k\">:</span> <span class=\"s\">\"height\"</span><span class=\"k\">,</span> Width<span class=\"k\">:</span> <span class=\"s\">\"width\"</span> <span class=\"k\">}</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span> name<span class=\"k\">,</span> type <span class=\"k\">)</span> <span class=\"k\">{</span>","        jQuery<span class=\"k\">.</span>each<span class=\"k\">(</span> <span class=\"k\">{</span> padding<span class=\"k\">:</span> <span class=\"s\">\"inner\"</span> <span class=\"k\">+</span> name<span class=\"k\">,</span> content<span class=\"k\">:</span> type<span class=\"k\">,</span> <span class=\"s\">\"\"</span><span class=\"k\">:</span> <span class=\"s\">\"outer\"</span> <span class=\"k\">+</span> name <span class=\"k\">}</span><span class=\"k\">,</span>","            <span class=\"k\">function</span><span class=\"k\">(</span> defaultExtra<span class=\"k\">,</span> funcName <span class=\"k\">)</span> <span class=\"k\">{</span>","","                <span class=\"c\">// Margin is only for outerHeight, outerWidth</span>","                jQuery<span class=\"k\">.</span>fn<span class=\"k\">[</span> funcName <span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> margin<span class=\"k\">,</span> value <span class=\"k\">)</span> <span class=\"k\">{</span>","                    <span class=\"k\">var</span> chainable <span class=\"k\">=</span> arguments<span class=\"k\">.</span>length <span class=\"k\">&amp;&amp;</span> <span class=\"k\">(</span> defaultExtra <span class=\"k\">||</span> <span class=\"k\">typeof</span> margin <span class=\"k\">!==</span> <span class=\"s\">\"boolean\"</span> <span class=\"k\">),</span>","                        extra <span class=\"k\">=</span> defaultExtra <span class=\"k\">||</span> <span class=\"k\">(</span> margin <span class=\"k\">===</span> <span class=\"k\">true</span> <span class=\"k\">||</span> value <span class=\"k\">===</span> <span class=\"k\">true</span> <span class=\"k\">?</span> <span class=\"s\">\"margin\"</span> <span class=\"k\">:</span> <span class=\"s\">\"border\"</span> <span class=\"k\">);</span>","","                    <span class=\"k\">return</span> access<span class=\"k\">(</span> <span class=\"k\">this</span><span class=\"k\">,</span> <span class=\"k\">function</span><span class=\"k\">(</span> elem<span class=\"k\">,</span> type<span class=\"k\">,</span> value <span class=\"k\">)</span> <span class=\"k\">{</span>","                        <span class=\"k\">var</span> doc<span class=\"k\">;</span>","","                        <span class=\"k\">if</span> <span class=\"k\">(</span> isWindow<span class=\"k\">(</span> elem <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","","                            <span class=\"c\">// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)</span>","                            <span class=\"k\">return</span> funcName<span class=\"k\">.</span>indexOf<span class=\"k\">(</span> <span class=\"s\">\"outer\"</span> <span class=\"k\">)</span> <span class=\"k\">===</span> <span class=\"s\">0</span> <span class=\"k\">?</span>","                                elem<span class=\"k\">[</span> <span class=\"s\">\"inner\"</span> <span class=\"k\">+</span> name <span class=\"k\">]</span> <span class=\"k\">:</span>","                                elem<span class=\"k\">.</span>document<span class=\"k\">.</span>documentElement<span class=\"k\">[</span> <span class=\"s\">\"client\"</span> <span class=\"k\">+</span> name <span class=\"k\">];</span>","                        <span class=\"k\">}</span>","","                        <span class=\"c\">// Get document width or height</span>","                        <span class=\"k\">if</span> <span class=\"k\">(</span> elem<span class=\"k\">.</span>nodeType <span class=\"k\">===</span> <span class=\"s\">9</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","                            doc <span class=\"k\">=</span> elem<span class=\"k\">.</span>documentElement<span class=\"k\">;</span>","","                            <span class=\"c\">// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],</span>","                            <span class=\"c\">// whichever is greatest</span>","                            <span class=\"k\">return</span> Math<span class=\"k\">.</span>max<span class=\"k\">(</span>","                                elem<span class=\"k\">.</span>body<span class=\"k\">[</span> <span class=\"s\">\"scroll\"</span> <span class=\"k\">+</span> name <span class=\"k\">],</span> doc<span class=\"k\">[</span> <span class=\"s\">\"scroll\"</span> <span class=\"k\">+</span> name <span class=\"k\">],</span>","                                elem<span class=\"k\">.</span>body<span class=\"k\">[</span> <span class=\"s\">\"offset\"</span> <span class=\"k\">+</span> name <span class=\"k\">],</span> doc<span class=\"k\">[</span> <span class=\"s\">\"offset\"</span> <span class=\"k\">+</span> name <span class=\"k\">],</span>","                                doc<span class=\"k\">[</span> <span class=\"s\">\"client\"</span> <span class=\"k\">+</span> name <span class=\"k\">]</span>","                            <span class=\"k\">);</span>","                        <span class=\"k\">}</span>","","                        <span class=\"k\">return</span> value <span class=\"k\">===</span> undefined <span class=\"k\">?</span>","","                            <span class=\"c\">// Get width or height on the element, requesting but not forcing parseFloat</span>","                            jQuery<span class=\"k\">.</span>css<span class=\"k\">(</span> elem<span class=\"k\">,</span> type<span class=\"k\">,</span> extra <span class=\"k\">)</span> <span class=\"k\">:</span>","","                            <span class=\"c\">// Set width or height on the element</span>","                            jQuery<span class=\"k\">.</span>style<span class=\"k\">(</span> elem<span class=\"k\">,</span> type<span class=\"k\">,</span> value<span class=\"k\">,</span> extra <span class=\"k\">);</span>","                    <span class=\"k\">}</span><span class=\"k\">,</span> type<span class=\"k\">,</span> chainable <span class=\"k\">?</span> margin <span class=\"k\">:</span> undefined<span class=\"k\">,</span> chainable <span class=\"k\">);</span>","                <span class=\"k\">}</span><span class=\"k\">;</span>","            <span class=\"k\">}</span> <span class=\"k\">);</span>","    <span class=\"k\">}</span> <span class=\"k\">);</span>","","","    jQuery<span class=\"k\">.</span>each<span class=\"k\">(</span> <span class=\"k\">(</span> <span class=\"s\">\"blur focus focusin focusout resize scroll click dblclick \"</span> <span class=\"k\">+</span>","        <span class=\"s\">\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \"</span> <span class=\"k\">+</span>","        <span class=\"s\">\"change select submit keydown keypress keyup contextmenu\"</span> <span class=\"k\">).</span>split<span class=\"k\">(</span> <span class=\"s\">\" \"</span> <span class=\"k\">),</span>","        <span class=\"k\">function</span><span class=\"k\">(</span> i<span class=\"k\">,</span> name <span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"c\">// Handle event binding</span>","            jQuery<span class=\"k\">.</span>fn<span class=\"k\">[</span> name <span class=\"k\">]</span> <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> data<span class=\"k\">,</span> fn <span class=\"k\">)</span> <span class=\"k\">{</span>","                <span class=\"k\">return</span> arguments<span class=\"k\">.</span>length <span class=\"k\">&gt;</span> <span class=\"s\">0</span> <span class=\"k\">?</span>","                    <span class=\"k\">this</span><span class=\"k\">.</span>on<span class=\"k\">(</span> name<span class=\"k\">,</span> <span class=\"k\">null</span><span class=\"k\">,</span> data<span class=\"k\">,</span> fn <span class=\"k\">)</span> <span class=\"k\">:</span>","                    <span class=\"k\">this</span><span class=\"k\">.</span>trigger<span class=\"k\">(</span> name <span class=\"k\">);</span>","            <span class=\"k\">}</span><span class=\"k\">;</span>","        <span class=\"k\">}</span> <span class=\"k\">);</span>","","    jQuery<span class=\"k\">.</span>fn<span class=\"k\">.</span>extend<span class=\"k\">(</span> <span class=\"k\">{</span>","        hover<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> fnOver<span class=\"k\">,</span> fnOut <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>mouseenter<span class=\"k\">(</span> fnOver <span class=\"k\">).</span>mouseleave<span class=\"k\">(</span> fnOut <span class=\"k\">||</span> fnOver <span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span> <span class=\"k\">);</span>","","","","","    jQuery<span class=\"k\">.</span>fn<span class=\"k\">.</span>extend<span class=\"k\">(</span> <span class=\"k\">{</span>","","        bind<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> types<span class=\"k\">,</span> data<span class=\"k\">,</span> fn <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>on<span class=\"k\">(</span> types<span class=\"k\">,</span> <span class=\"k\">null</span><span class=\"k\">,</span> data<span class=\"k\">,</span> fn <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        unbind<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> types<span class=\"k\">,</span> fn <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>off<span class=\"k\">(</span> types<span class=\"k\">,</span> <span class=\"k\">null</span><span class=\"k\">,</span> fn <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","","        delegate<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> selector<span class=\"k\">,</span> types<span class=\"k\">,</span> data<span class=\"k\">,</span> fn <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"k\">.</span>on<span class=\"k\">(</span> types<span class=\"k\">,</span> selector<span class=\"k\">,</span> data<span class=\"k\">,</span> fn <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">,</span>","        undelegate<span class=\"k\">:</span> <span class=\"k\">function</span><span class=\"k\">(</span> selector<span class=\"k\">,</span> types<span class=\"k\">,</span> fn <span class=\"k\">)</span> <span class=\"k\">{</span>","","            <span class=\"c\">// ( namespace ) or ( selector, types [, fn] )</span>","            <span class=\"k\">return</span> arguments<span class=\"k\">.</span>length <span class=\"k\">===</span> <span class=\"s\">1</span> <span class=\"k\">?</span>","                <span class=\"k\">this</span><span class=\"k\">.</span>off<span class=\"k\">(</span> selector<span class=\"k\">,</span> <span class=\"s\">\"**\"</span> <span class=\"k\">)</span> <span class=\"k\">:</span>","                <span class=\"k\">this</span><span class=\"k\">.</span>off<span class=\"k\">(</span> types<span class=\"k\">,</span> selector <span class=\"k\">||</span> <span class=\"s\">\"**\"</span><span class=\"k\">,</span> fn <span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span> <span class=\"k\">);</span>","","<span class=\"c\">// Bind a function to a context, optionally partially applying any</span>","<span class=\"c\">// arguments.</span>","<span class=\"c\">// jQuery.proxy is deprecated to promote standards (specifically Function#bind)</span>","<span class=\"c\">// However, it is not slated for removal any time soon</span>","    jQuery<span class=\"k\">.</span>proxy <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> fn<span class=\"k\">,</span> context <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">var</span> tmp<span class=\"k\">,</span> args<span class=\"k\">,</span> proxy<span class=\"k\">;</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">typeof</span> context <span class=\"k\">===</span> <span class=\"s\">\"string\"</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            tmp <span class=\"k\">=</span> fn<span class=\"k\">[</span> context <span class=\"k\">];</span>","            context <span class=\"k\">=</span> fn<span class=\"k\">;</span>","            fn <span class=\"k\">=</span> tmp<span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"c\">// Quick check to determine if target is callable, in the spec</span>","        <span class=\"c\">// this throws a TypeError, but we will just return undefined.</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>isFunction<span class=\"k\">(</span> fn <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> undefined<span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"c\">// Simulated bind</span>","        args <span class=\"k\">=</span> slice<span class=\"k\">.</span>call<span class=\"k\">(</span> arguments<span class=\"k\">,</span> <span class=\"s\">2</span> <span class=\"k\">);</span>","        proxy <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> fn<span class=\"k\">.</span>apply<span class=\"k\">(</span> context <span class=\"k\">||</span> <span class=\"k\">this</span><span class=\"k\">,</span> args<span class=\"k\">.</span>concat<span class=\"k\">(</span> slice<span class=\"k\">.</span>call<span class=\"k\">(</span> arguments <span class=\"k\">)</span> <span class=\"k\">)</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span><span class=\"k\">;</span>","","        <span class=\"c\">// Set the guid of unique handler to the same of original handler, so it can be removed</span>","        proxy<span class=\"k\">.</span>guid <span class=\"k\">=</span> fn<span class=\"k\">.</span>guid <span class=\"k\">=</span> fn<span class=\"k\">.</span>guid <span class=\"k\">||</span> jQuery<span class=\"k\">.</span>guid<span class=\"k\">++;</span>","","        <span class=\"k\">return</span> proxy<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","    jQuery<span class=\"k\">.</span>holdReady <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> hold <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> hold <span class=\"k\">)</span> <span class=\"k\">{</span>","            jQuery<span class=\"k\">.</span>readyWait<span class=\"k\">++;</span>","        <span class=\"k\">}</span> <span class=\"k\">else</span> <span class=\"k\">{</span>","            jQuery<span class=\"k\">.</span>ready<span class=\"k\">(</span> <span class=\"k\">true</span> <span class=\"k\">);</span>","        <span class=\"k\">}</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","    jQuery<span class=\"k\">.</span>isArray <span class=\"k\">=</span> Array<span class=\"k\">.</span>isArray<span class=\"k\">;</span>","    jQuery<span class=\"k\">.</span>parseJSON <span class=\"k\">=</span> JSON<span class=\"k\">.</span>parse<span class=\"k\">;</span>","    jQuery<span class=\"k\">.</span>nodeName <span class=\"k\">=</span> nodeName<span class=\"k\">;</span>","    jQuery<span class=\"k\">.</span>isFunction <span class=\"k\">=</span> isFunction<span class=\"k\">;</span>","    jQuery<span class=\"k\">.</span>isWindow <span class=\"k\">=</span> isWindow<span class=\"k\">;</span>","    jQuery<span class=\"k\">.</span>camelCase <span class=\"k\">=</span> camelCase<span class=\"k\">;</span>","    jQuery<span class=\"k\">.</span>type <span class=\"k\">=</span> toType<span class=\"k\">;</span>","","    jQuery<span class=\"k\">.</span>now <span class=\"k\">=</span> Date<span class=\"k\">.</span>now<span class=\"k\">;</span>","","    jQuery<span class=\"k\">.</span>isNumeric <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> obj <span class=\"k\">)</span> <span class=\"k\">{</span>","","        <span class=\"c\">// As of jQuery 3.0, isNumeric is limited to</span>","        <span class=\"c\">// strings and numbers (primitives or objects)</span>","        <span class=\"c\">// that can be coerced to finite numbers (gh-2662)</span>","        <span class=\"k\">var</span> type <span class=\"k\">=</span> jQuery<span class=\"k\">.</span>type<span class=\"k\">(</span> obj <span class=\"k\">);</span>","        <span class=\"k\">return</span> <span class=\"k\">(</span> type <span class=\"k\">===</span> <span class=\"s\">\"number\"</span> <span class=\"k\">||</span> type <span class=\"k\">===</span> <span class=\"s\">\"string\"</span> <span class=\"k\">)</span> <span class=\"k\">&amp;&amp;</span>","","            <span class=\"c\">// parseFloat NaNs numeric-cast false positives (\"\")</span>","            <span class=\"c\">// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")</span>","            <span class=\"c\">// subtraction forces infinities to NaN</span>","            <span class=\"k\">!</span>isNaN<span class=\"k\">(</span> obj <span class=\"k\">-</span> parseFloat<span class=\"k\">(</span> obj <span class=\"k\">)</span> <span class=\"k\">);</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","","","","<span class=\"c\">// Register as a named AMD module, since jQuery can be concatenated with other</span>","<span class=\"c\">// files that may use define, but not via a proper concatenation script that</span>","<span class=\"c\">// understands anonymous AMD modules. A named AMD is safest and most robust</span>","<span class=\"c\">// way to register. Lowercase jquery is used because AMD module names are</span>","<span class=\"c\">// derived from file names, and jQuery is normally delivered in a lowercase</span>","<span class=\"c\">// file name. Do this after creating the global so that if an AMD module wants</span>","<span class=\"c\">// to call noConflict to hide this version of jQuery, it will work.</span>","","<span class=\"c\">// Note that for maximum portability, libraries that are not jQuery should</span>","<span class=\"c\">// declare themselves as anonymous modules, and avoid setting a global if an</span>","<span class=\"c\">// AMD loader is present. jQuery is a special case. For more information, see</span>","<span class=\"c\">// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon</span>","","    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">typeof</span> define <span class=\"k\">===</span> <span class=\"s\">\"function\"</span> <span class=\"k\">&amp;&amp;</span> define<span class=\"k\">.</span>amd <span class=\"k\">)</span> <span class=\"k\">{</span>","        define<span class=\"k\">(</span> <span class=\"s\">\"jquery\"</span><span class=\"k\">,</span> <span class=\"k\">[],</span> <span class=\"k\">function</span><span class=\"k\">()</span> <span class=\"k\">{</span>","            <span class=\"k\">return</span> jQuery<span class=\"k\">;</span>","        <span class=\"k\">}</span> <span class=\"k\">);</span>","    <span class=\"k\">}</span>","","","","","    <span class=\"k\">var</span>","","        <span class=\"c\">// Map over jQuery in case of overwrite</span>","        _jQuery <span class=\"k\">=</span> window<span class=\"k\">.</span>jQuery<span class=\"k\">,</span>","","        <span class=\"c\">// Map over the $ in case of overwrite</span>","        _$ <span class=\"k\">=</span> window<span class=\"k\">.</span>$<span class=\"k\">;</span>","","    jQuery<span class=\"k\">.</span>noConflict <span class=\"k\">=</span> <span class=\"k\">function</span><span class=\"k\">(</span> deep <span class=\"k\">)</span> <span class=\"k\">{</span>","        <span class=\"k\">if</span> <span class=\"k\">(</span> window<span class=\"k\">.</span>$ <span class=\"k\">===</span> jQuery <span class=\"k\">)</span> <span class=\"k\">{</span>","            window<span class=\"k\">.</span>$ <span class=\"k\">=</span> _$<span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">if</span> <span class=\"k\">(</span> deep <span class=\"k\">&amp;&amp;</span> window<span class=\"k\">.</span>jQuery <span class=\"k\">===</span> jQuery <span class=\"k\">)</span> <span class=\"k\">{</span>","            window<span class=\"k\">.</span>jQuery <span class=\"k\">=</span> _jQuery<span class=\"k\">;</span>","        <span class=\"k\">}</span>","","        <span class=\"k\">return</span> jQuery<span class=\"k\">;</span>","    <span class=\"k\">}</span><span class=\"k\">;</span>","","<span class=\"c\">// Expose jQuery and $ identifiers, even in AMD</span>","<span class=\"c\">// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)</span>","<span class=\"c\">// and CommonJS for browser emulators (#13566)</span>","    <span class=\"k\">if</span> <span class=\"k\">(</span> <span class=\"k\">!</span>noGlobal <span class=\"k\">)</span> <span class=\"k\">{</span>","        window<span class=\"k\">.</span>jQuery <span class=\"k\">=</span> window<span class=\"k\">.</span>$ <span class=\"k\">=</span> jQuery<span class=\"k\">;</span>","    <span class=\"k\">}</span>","","","","","    <span class=\"k\">return</span> jQuery<span class=\"k\">;</span>","<span class=\"k\">}</span> <span class=\"k\">);</span>"];
_$jscoverage['jquery.js'][14]++;
(function (global, factory) {
  _$jscoverage['jquery.js'][16]++;
  "use strict";
  _$jscoverage['jquery.js'][18]++;
  if ((((typeof module) === "object") && ((typeof module.exports) === "object"))) {
    _$jscoverage['jquery.js'][27]++;
    module.exports = (global.document? factory(global, true): (function (w) {
  _$jscoverage['jquery.js'][30]++;
  if ((! w.document)) {
    _$jscoverage['jquery.js'][31]++;
    throw new Error("jQuery requires a window with a document");
  }
  _$jscoverage['jquery.js'][33]++;
  return factory(w);
}));
  }
  else {
    _$jscoverage['jquery.js'][36]++;
    factory(global);
  }
})((((typeof window) !== "undefined")? window: this), (function (window, noGlobal) {
  _$jscoverage['jquery.js'][46]++;
  "use strict";
  _$jscoverage['jquery.js'][48]++;
  var arr = [];
  _$jscoverage['jquery.js'][50]++;
  var document = window.document;
  _$jscoverage['jquery.js'][52]++;
  var getProto = Object.getPrototypeOf;
  _$jscoverage['jquery.js'][54]++;
  var slice = arr.slice;
  _$jscoverage['jquery.js'][56]++;
  var concat = arr.concat;
  _$jscoverage['jquery.js'][58]++;
  var push = arr.push;
  _$jscoverage['jquery.js'][60]++;
  var indexOf = arr.indexOf;
  _$jscoverage['jquery.js'][62]++;
  var class2type = {};
  _$jscoverage['jquery.js'][64]++;
  var toString = class2type.toString;
  _$jscoverage['jquery.js'][66]++;
  var hasOwn = class2type.hasOwnProperty;
  _$jscoverage['jquery.js'][68]++;
  var fnToString = hasOwn.toString;
  _$jscoverage['jquery.js'][70]++;
  var ObjectFunctionString = fnToString.call(Object);
  _$jscoverage['jquery.js'][72]++;
  var support = {};
  _$jscoverage['jquery.js'][74]++;
  var isFunction = (function isFunction(obj) {
  _$jscoverage['jquery.js'][80]++;
  return (((typeof obj) === "function") && ((typeof obj.nodeType) !== "number"));
});
  _$jscoverage['jquery.js'][84]++;
  var isWindow = (function isWindow(obj) {
  _$jscoverage['jquery.js'][85]++;
  return ((obj != null) && (obj === obj.window));
});
  _$jscoverage['jquery.js'][91]++;
  var preservedScriptAttributes = {type: true, src: true, noModule: true};
  _$jscoverage['jquery.js'][97]++;
  function DOMEval(code, doc, node) {
    _$jscoverage['jquery.js'][98]++;
    doc = (doc || document);
    _$jscoverage['jquery.js'][100]++;
    var i, script = doc.createElement("script");
    _$jscoverage['jquery.js'][103]++;
    script.text = code;
    _$jscoverage['jquery.js'][104]++;
    if (node) {
      _$jscoverage['jquery.js'][105]++;
      for (i in preservedScriptAttributes) {
        _$jscoverage['jquery.js'][106]++;
        if (node[i]) {
          _$jscoverage['jquery.js'][107]++;
          script[i] = node[i];
        }
}
    }
    _$jscoverage['jquery.js'][111]++;
    doc.head.appendChild(script).parentNode.removeChild(script);
}
  _$jscoverage['jquery.js'][115]++;
  function toType(obj) {
    _$jscoverage['jquery.js'][116]++;
    if ((obj == null)) {
      _$jscoverage['jquery.js'][117]++;
      return (obj + "");
    }
    _$jscoverage['jquery.js'][121]++;
    return ((((typeof obj) === "object") || ((typeof obj) === "function"))? (class2type[toString.call(obj)] || "object"): (typeof obj));
}
  _$jscoverage['jquery.js'][131]++;
  var version = "3.3.1", jQuery = (function (selector, context) {
  _$jscoverage['jquery.js'][139]++;
  return new (jQuery.fn.init)(selector, context);
}), rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;
  _$jscoverage['jquery.js'][146]++;
  jQuery.fn = (jQuery.prototype = {jquery: version, constructor: jQuery, length: 0, toArray: (function () {
  _$jscoverage['jquery.js'][157]++;
  return slice.call(this);
}), get: (function (num) {
  _$jscoverage['jquery.js'][165]++;
  if ((num == null)) {
    _$jscoverage['jquery.js'][166]++;
    return slice.call(this);
  }
  _$jscoverage['jquery.js'][170]++;
  return ((num < 0)? this[(num + this.length)]: this[num]);
}), pushStack: (function (elems) {
  _$jscoverage['jquery.js'][178]++;
  var ret = jQuery.merge(this.constructor(), elems);
  _$jscoverage['jquery.js'][181]++;
  ret.prevObject = this;
  _$jscoverage['jquery.js'][184]++;
  return ret;
}), each: (function (callback) {
  _$jscoverage['jquery.js'][189]++;
  return jQuery.each(this, callback);
}), map: (function (callback) {
  _$jscoverage['jquery.js'][193]++;
  return this.pushStack(jQuery.map(this, (function (elem, i) {
  _$jscoverage['jquery.js'][194]++;
  return callback.call(elem, i, elem);
})));
}), slice: (function () {
  _$jscoverage['jquery.js'][199]++;
  return this.pushStack(slice.apply(this, arguments));
}), first: (function () {
  _$jscoverage['jquery.js'][203]++;
  return this.eq(0);
}), last: (function () {
  _$jscoverage['jquery.js'][207]++;
  return this.eq(-1);
}), eq: (function (i) {
  _$jscoverage['jquery.js'][211]++;
  var len = this.length, j = ((+ i) + ((i < 0)? len: 0));
  _$jscoverage['jquery.js'][213]++;
  return this.pushStack((((j >= 0) && (j < len))? [this[j]]: []));
}), end: (function () {
  _$jscoverage['jquery.js'][217]++;
  return (this.prevObject || this.constructor());
}), push: push, sort: arr.sort, splice: arr.splice});
  _$jscoverage['jquery.js'][227]++;
  jQuery.extend = (jQuery.fn.extend = (function () {
  _$jscoverage['jquery.js'][228]++;
  var options, name, src, copy, copyIsArray, clone, target = (arguments[0] || {}), i = 1, length = arguments.length, deep = false;
  _$jscoverage['jquery.js'][235]++;
  if (((typeof target) === "boolean")) {
    _$jscoverage['jquery.js'][236]++;
    deep = target;
    _$jscoverage['jquery.js'][239]++;
    target = (arguments[i] || {});
    _$jscoverage['jquery.js'][240]++;
    (i++);
  }
  _$jscoverage['jquery.js'][244]++;
  if ((((typeof target) !== "object") && (! isFunction(target)))) {
    _$jscoverage['jquery.js'][245]++;
    target = {};
  }
  _$jscoverage['jquery.js'][249]++;
  if ((i === length)) {
    _$jscoverage['jquery.js'][250]++;
    target = this;
    _$jscoverage['jquery.js'][251]++;
    (i--);
  }
  _$jscoverage['jquery.js'][254]++;
  for (; (i < length); (i++)) {
    _$jscoverage['jquery.js'][257]++;
    if (((options = arguments[i]) != null)) {
      _$jscoverage['jquery.js'][260]++;
      for (name in options) {
        _$jscoverage['jquery.js'][261]++;
        src = target[name];
        _$jscoverage['jquery.js'][262]++;
        copy = options[name];
        _$jscoverage['jquery.js'][265]++;
        if ((target === copy)) {
          _$jscoverage['jquery.js'][266]++;
          continue;
        }
        _$jscoverage['jquery.js'][270]++;
        if ((deep && copy && (jQuery.isPlainObject(copy) || (copyIsArray = Array.isArray(copy))))) {
          _$jscoverage['jquery.js'][273]++;
          if (copyIsArray) {
            _$jscoverage['jquery.js'][274]++;
            copyIsArray = false;
            _$jscoverage['jquery.js'][275]++;
            clone = ((src && Array.isArray(src))? src: []);
          }
          else {
            _$jscoverage['jquery.js'][278]++;
            clone = ((src && jQuery.isPlainObject(src))? src: {});
          }
          _$jscoverage['jquery.js'][282]++;
          target[name] = jQuery.extend(deep, clone, copy);
        }
        else {
          _$jscoverage['jquery.js'][285]++;
          if ((copy !== undefined)) {
            _$jscoverage['jquery.js'][286]++;
            target[name] = copy;
          }
        }
}
    }
}
  _$jscoverage['jquery.js'][293]++;
  return target;
}));
  _$jscoverage['jquery.js'][296]++;
  jQuery.extend({expando: ("jQuery" + (version + Math.random()).replace(/\D/g, "")), isReady: true, error: (function (msg) {
  _$jscoverage['jquery.js'][305]++;
  throw new Error(msg);
}), noop: (function () {
}), isPlainObject: (function (obj) {
  _$jscoverage['jquery.js'][311]++;
  var proto, Ctor;
  _$jscoverage['jquery.js'][315]++;
  if (((! obj) || (toString.call(obj) !== "[object Object]"))) {
    _$jscoverage['jquery.js'][316]++;
    return false;
  }
  _$jscoverage['jquery.js'][319]++;
  proto = getProto(obj);
  _$jscoverage['jquery.js'][322]++;
  if ((! proto)) {
    _$jscoverage['jquery.js'][323]++;
    return true;
  }
  _$jscoverage['jquery.js'][327]++;
  Ctor = (hasOwn.call(proto, "constructor") && proto.constructor);
  _$jscoverage['jquery.js'][328]++;
  return (((typeof Ctor) === "function") && (fnToString.call(Ctor) === ObjectFunctionString));
}), isEmptyObject: (function (obj) {
  _$jscoverage['jquery.js'][335]++;
  var name;
  _$jscoverage['jquery.js'][337]++;
  for (name in obj) {
    _$jscoverage['jquery.js'][338]++;
    return false;
}
  _$jscoverage['jquery.js'][340]++;
  return true;
}), globalEval: (function (code) {
  _$jscoverage['jquery.js'][345]++;
  DOMEval(code);
}), each: (function (obj, callback) {
  _$jscoverage['jquery.js'][349]++;
  var length, i = 0;
  _$jscoverage['jquery.js'][351]++;
  if (isArrayLike(obj)) {
    _$jscoverage['jquery.js'][352]++;
    length = obj.length;
    _$jscoverage['jquery.js'][353]++;
    for (; (i < length); (i++)) {
      _$jscoverage['jquery.js'][354]++;
      if ((callback.call(obj[i], i, obj[i]) === false)) {
        _$jscoverage['jquery.js'][355]++;
        break;
      }
}
  }
  else {
    _$jscoverage['jquery.js'][359]++;
    for (i in obj) {
      _$jscoverage['jquery.js'][360]++;
      if ((callback.call(obj[i], i, obj[i]) === false)) {
        _$jscoverage['jquery.js'][361]++;
        break;
      }
}
  }
  _$jscoverage['jquery.js'][366]++;
  return obj;
}), trim: (function (text) {
  _$jscoverage['jquery.js'][371]++;
  return ((text == null)? "": (text + "").replace(rtrim, ""));
}), makeArray: (function (arr, results) {
  _$jscoverage['jquery.js'][378]++;
  var ret = (results || []);
  _$jscoverage['jquery.js'][380]++;
  if ((arr != null)) {
    _$jscoverage['jquery.js'][381]++;
    if (isArrayLike(Object(arr))) {
      _$jscoverage['jquery.js'][382]++;
      jQuery.merge(ret, (((typeof arr) === "string")? [arr]: arr));
    }
    else {
      _$jscoverage['jquery.js'][387]++;
      push.call(ret, arr);
    }
  }
  _$jscoverage['jquery.js'][391]++;
  return ret;
}), inArray: (function (elem, arr, i) {
  _$jscoverage['jquery.js'][395]++;
  return ((arr == null)? -1: indexOf.call(arr, elem, i));
}), merge: (function (first, second) {
  _$jscoverage['jquery.js'][401]++;
  var len = (+ second.length), j = 0, i = first.length;
  _$jscoverage['jquery.js'][405]++;
  for (; (j < len); (j++)) {
    _$jscoverage['jquery.js'][406]++;
    first[(i++)] = second[j];
}
  _$jscoverage['jquery.js'][409]++;
  first.length = i;
  _$jscoverage['jquery.js'][411]++;
  return first;
}), grep: (function (elems, callback, invert) {
  _$jscoverage['jquery.js'][415]++;
  var callbackInverse, matches = [], i = 0, length = elems.length, callbackExpect = (! invert);
  _$jscoverage['jquery.js'][423]++;
  for (; (i < length); (i++)) {
    _$jscoverage['jquery.js'][424]++;
    callbackInverse = (! callback(elems[i], i));
    _$jscoverage['jquery.js'][425]++;
    if ((callbackInverse !== callbackExpect)) {
      _$jscoverage['jquery.js'][426]++;
      matches.push(elems[i]);
    }
}
  _$jscoverage['jquery.js'][430]++;
  return matches;
}), map: (function (elems, callback, arg) {
  _$jscoverage['jquery.js'][435]++;
  var length, value, i = 0, ret = [];
  _$jscoverage['jquery.js'][440]++;
  if (isArrayLike(elems)) {
    _$jscoverage['jquery.js'][441]++;
    length = elems.length;
    _$jscoverage['jquery.js'][442]++;
    for (; (i < length); (i++)) {
      _$jscoverage['jquery.js'][443]++;
      value = callback(elems[i], i, arg);
      _$jscoverage['jquery.js'][445]++;
      if ((value != null)) {
        _$jscoverage['jquery.js'][446]++;
        ret.push(value);
      }
}
  }
  else {
    _$jscoverage['jquery.js'][452]++;
    for (i in elems) {
      _$jscoverage['jquery.js'][453]++;
      value = callback(elems[i], i, arg);
      _$jscoverage['jquery.js'][455]++;
      if ((value != null)) {
        _$jscoverage['jquery.js'][456]++;
        ret.push(value);
      }
}
  }
  _$jscoverage['jquery.js'][462]++;
  return concat.apply([], ret);
}), guid: 1, support: support});
  _$jscoverage['jquery.js'][473]++;
  if (((typeof Symbol) === "function")) {
    _$jscoverage['jquery.js'][474]++;
    jQuery.fn[Symbol.iterator] = arr[Symbol.iterator];
  }
  _$jscoverage['jquery.js'][478]++;
  jQuery.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), (function (i, name) {
  _$jscoverage['jquery.js'][480]++;
  class2type[("[object " + name + "]")] = name.toLowerCase();
}));
  _$jscoverage['jquery.js'][483]++;
  function isArrayLike(obj) {
    _$jscoverage['jquery.js'][489]++;
    var length = ((! (! obj)) && ("length" in obj) && obj.length), type = toType(obj);
    _$jscoverage['jquery.js'][492]++;
    if ((isFunction(obj) || isWindow(obj))) {
      _$jscoverage['jquery.js'][493]++;
      return false;
    }
    _$jscoverage['jquery.js'][496]++;
    return ((type === "array") || (length === 0) || (((typeof length) === "number") && (length > 0) && ((length - 1) in obj)));
}
  _$jscoverage['jquery.js'][499]++;
  var Sizzle = (function (window) {
  _$jscoverage['jquery.js'][512]++;
  var i, support, Expr, getText, isXML, tokenize, compile, select, outermostContext, sortInput, hasDuplicate, setDocument, document, docElem, documentIsHTML, rbuggyQSA, rbuggyMatches, matches, contains, expando = ("sizzle" + (1 * new Date())), preferredDoc = window.document, dirruns = 0, done = 0, classCache = createCache(), tokenCache = createCache(), compilerCache = createCache(), sortOrder = (function (a, b) {
  _$jscoverage['jquery.js'][543]++;
  if ((a === b)) {
    _$jscoverage['jquery.js'][544]++;
    hasDuplicate = true;
  }
  _$jscoverage['jquery.js'][546]++;
  return 0;
}), hasOwn = ({}).hasOwnProperty, arr = [], pop = arr.pop, push_native = arr.push, push = arr.push, slice = arr.slice, indexOf = (function (list, elem) {
  _$jscoverage['jquery.js'][559]++;
  var i = 0, len = list.length;
  _$jscoverage['jquery.js'][561]++;
  for (; (i < len); (i++)) {
    _$jscoverage['jquery.js'][562]++;
    if ((list[i] === elem)) {
      _$jscoverage['jquery.js'][563]++;
      return i;
    }
}
  _$jscoverage['jquery.js'][566]++;
  return -1;
}), booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped", whitespace = "[\\x20\\t\\r\\n\\f]", identifier = "(?:\\\\.|[\\w-]|[^\u0000-\\xa0])+", attributes = ("\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace + "*([*^$|!~]?=)" + whitespace + "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace + "*\\]"), pseudos = (":(" + identifier + ")(?:\\((" + "('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" + "((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" + ".*" + ")\\)|)"), rwhitespace = new RegExp((whitespace + "+"), "g"), rtrim = new RegExp(("^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$"), "g"), rcomma = new RegExp(("^" + whitespace + "*," + whitespace + "*")), rcombinators = new RegExp(("^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*")), rattributeQuotes = new RegExp(("=" + whitespace + "*([^\\]'\"]*?)" + whitespace + "*\\]"), "g"), rpseudo = new RegExp(pseudos), ridentifier = new RegExp(("^" + identifier + "$")), matchExpr = {"ID": new RegExp(("^#(" + identifier + ")")), "CLASS": new RegExp(("^\\.(" + identifier + ")")), "TAG": new RegExp(("^(" + identifier + "|[*])")), "ATTR": new RegExp(("^" + attributes)), "PSEUDO": new RegExp(("^" + pseudos)), "CHILD": new RegExp(("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace + "*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace + "*(\\d+)|))" + whitespace + "*\\)|)"), "i"), "bool": new RegExp(("^(?:" + booleans + ")$"), "i"), "needsContext": new RegExp(("^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)"), "i")}, rinputs = /^(?:input|select|textarea|button)$/i, rheader = /^h\d$/i, rnative = /^[^{]+\{\s*\[native \w/, rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/, rsibling = /[+~]/, runescape = new RegExp(("\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)"), "ig"), funescape = (function (_, escaped, escapedWhitespace) {
  _$jscoverage['jquery.js'][639]++;
  var high = (("0x" + escaped) - 65536);
  _$jscoverage['jquery.js'][643]++;
  return (((high !== high) || escapedWhitespace)? escaped: ((high < 0)? String.fromCharCode((high + 65536)): String.fromCharCode(((high >> 10) | 55296), ((high & 1023) | 56320))));
}), rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g, fcssescape = (function (ch, asCodePoint) {
  _$jscoverage['jquery.js'][656]++;
  if (asCodePoint) {
    _$jscoverage['jquery.js'][659]++;
    if ((ch === "\u0000")) {
      _$jscoverage['jquery.js'][660]++;
      return "\ufffd";
    }
    _$jscoverage['jquery.js'][664]++;
    return (ch.slice(0, -1) + "\\" + ch.charCodeAt((ch.length - 1)).toString(16) + " ");
  }
  _$jscoverage['jquery.js'][668]++;
  return ("\\" + ch);
}), unloadHandler = (function () {
  _$jscoverage['jquery.js'][676]++;
  setDocument();
}), disabledAncestor = addCombinator((function (elem) {
  _$jscoverage['jquery.js'][681]++;
  return ((elem.disabled === true) && (("form" in elem) || ("label" in elem)));
}), {dir: "parentNode", next: "legend"});
  _$jscoverage['jquery.js'][687]++;
  try {
    _$jscoverage['jquery.js'][688]++;
    push.apply((arr = slice.call(preferredDoc.childNodes)), preferredDoc.childNodes);
    _$jscoverage['jquery.js'][694]++;
    arr[preferredDoc.childNodes.length].nodeType;
  }
  catch (e) {
    _$jscoverage['jquery.js'][696]++;
    push = {apply: (arr.length? (function (target, els) {
  _$jscoverage['jquery.js'][700]++;
  push_native.apply(target, slice.call(els));
}): (function (target, els) {
  _$jscoverage['jquery.js'][706]++;
  var j = target.length, i = 0;
  _$jscoverage['jquery.js'][709]++;
  while ((target[(j++)] = els[(i++)])) {
}
  _$jscoverage['jquery.js'][710]++;
  target.length = (j - 1);
}))};
  }
  _$jscoverage['jquery.js'][715]++;
  function Sizzle(selector, context, results, seed) {
    _$jscoverage['jquery.js'][716]++;
    var m, i, elem, nid, match, groups, newSelector, newContext = (context && context.ownerDocument), nodeType = (context? context.nodeType: 9);
    _$jscoverage['jquery.js'][722]++;
    results = (results || []);
    _$jscoverage['jquery.js'][725]++;
    if ((((typeof selector) !== "string") || (! selector) || ((nodeType !== 1) && (nodeType !== 9) && (nodeType !== 11)))) {
      _$jscoverage['jquery.js'][728]++;
      return results;
    }
    _$jscoverage['jquery.js'][732]++;
    if ((! seed)) {
      _$jscoverage['jquery.js'][734]++;
      if (((context? (context.ownerDocument || context): preferredDoc) !== document)) {
        _$jscoverage['jquery.js'][735]++;
        setDocument(context);
      }
      _$jscoverage['jquery.js'][737]++;
      context = (context || document);
      _$jscoverage['jquery.js'][739]++;
      if (documentIsHTML) {
        _$jscoverage['jquery.js'][743]++;
        if (((nodeType !== 11) && (match = rquickExpr.exec(selector)))) {
          _$jscoverage['jquery.js'][746]++;
          if ((m = match[1])) {
            _$jscoverage['jquery.js'][749]++;
            if ((nodeType === 9)) {
              _$jscoverage['jquery.js'][750]++;
              if ((elem = context.getElementById(m))) {
                _$jscoverage['jquery.js'][755]++;
                if ((elem.id === m)) {
                  _$jscoverage['jquery.js'][756]++;
                  results.push(elem);
                  _$jscoverage['jquery.js'][757]++;
                  return results;
                }
              }
              else {
                _$jscoverage['jquery.js'][760]++;
                return results;
              }
            }
            else {
              _$jscoverage['jquery.js'][769]++;
              if ((newContext && (elem = newContext.getElementById(m)) && contains(context, elem) && (elem.id === m))) {
                _$jscoverage['jquery.js'][773]++;
                results.push(elem);
                _$jscoverage['jquery.js'][774]++;
                return results;
              }
            }
          }
          else {
            _$jscoverage['jquery.js'][779]++;
            if (match[2]) {
              _$jscoverage['jquery.js'][780]++;
              push.apply(results, context.getElementsByTagName(selector));
              _$jscoverage['jquery.js'][781]++;
              return results;
            }
            else {
              _$jscoverage['jquery.js'][784]++;
              if (((m = match[3]) && support.getElementsByClassName && context.getElementsByClassName)) {
                _$jscoverage['jquery.js'][787]++;
                push.apply(results, context.getElementsByClassName(m));
                _$jscoverage['jquery.js'][788]++;
                return results;
              }
            }
          }
        }
        _$jscoverage['jquery.js'][793]++;
        if ((support.qsa && (! compilerCache[(selector + " ")]) && ((! rbuggyQSA) || (! rbuggyQSA.test(selector))))) {
          _$jscoverage['jquery.js'][797]++;
          if ((nodeType !== 1)) {
            _$jscoverage['jquery.js'][798]++;
            newContext = context;
            _$jscoverage['jquery.js'][799]++;
            newSelector = selector;
          }
          else {
            _$jscoverage['jquery.js'][805]++;
            if ((context.nodeName.toLowerCase() !== "object")) {
              _$jscoverage['jquery.js'][808]++;
              if ((nid = context.getAttribute("id"))) {
                _$jscoverage['jquery.js'][809]++;
                nid = nid.replace(rcssescape, fcssescape);
              }
              else {
                _$jscoverage['jquery.js'][811]++;
                context.setAttribute("id", (nid = expando));
              }
              _$jscoverage['jquery.js'][815]++;
              groups = tokenize(selector);
              _$jscoverage['jquery.js'][816]++;
              i = groups.length;
              _$jscoverage['jquery.js'][817]++;
              while ((i--)) {
                _$jscoverage['jquery.js'][818]++;
                groups[i] = ("#" + nid + " " + toSelector(groups[i]));
}
              _$jscoverage['jquery.js'][820]++;
              newSelector = groups.join(",");
              _$jscoverage['jquery.js'][823]++;
              newContext = ((rsibling.test(selector) && testContext(context.parentNode)) || context);
            }
          }
          _$jscoverage['jquery.js'][827]++;
          if (newSelector) {
            _$jscoverage['jquery.js'][828]++;
            try {
              _$jscoverage['jquery.js'][829]++;
              push.apply(results, newContext.querySelectorAll(newSelector));
              _$jscoverage['jquery.js'][832]++;
              return results;
            }
            catch (qsaError) {
            }
            finally {
              _$jscoverage['jquery.js'][835]++;
              if ((nid === expando)) {
                _$jscoverage['jquery.js'][836]++;
                context.removeAttribute("id");
              }
            }
          }
        }
      }
    }
    _$jscoverage['jquery.js'][845]++;
    return select(selector.replace(rtrim, "$1"), context, results, seed);
}
  _$jscoverage['jquery.js'][854]++;
  function createCache() {
    _$jscoverage['jquery.js'][855]++;
    var keys = [];
    _$jscoverage['jquery.js'][857]++;
    function cache(key, value) {
      _$jscoverage['jquery.js'][859]++;
      if ((keys.push((key + " ")) > Expr.cacheLength)) {
        _$jscoverage['jquery.js'][861]++;
        (delete cache[keys.shift()]);
      }
      _$jscoverage['jquery.js'][863]++;
      return (cache[(key + " ")] = value);
}
    _$jscoverage['jquery.js'][865]++;
    return cache;
}
  _$jscoverage['jquery.js'][872]++;
  function markFunction(fn) {
    _$jscoverage['jquery.js'][873]++;
    fn[expando] = true;
    _$jscoverage['jquery.js'][874]++;
    return fn;
}
  _$jscoverage['jquery.js'][881]++;
  function assert(fn) {
    _$jscoverage['jquery.js'][882]++;
    var el = document.createElement("fieldset");
    _$jscoverage['jquery.js'][884]++;
    try {
      _$jscoverage['jquery.js'][885]++;
      return (! (! fn(el)));
    }
    catch (e) {
      _$jscoverage['jquery.js'][887]++;
      return false;
    }
    finally {
      _$jscoverage['jquery.js'][890]++;
      if (el.parentNode) {
        _$jscoverage['jquery.js'][891]++;
        el.parentNode.removeChild(el);
      }
      _$jscoverage['jquery.js'][894]++;
      el = null;
    }
}
  _$jscoverage['jquery.js'][903]++;
  function addHandle(attrs, handler) {
    _$jscoverage['jquery.js'][904]++;
    var arr = attrs.split("|"), i = arr.length;
    _$jscoverage['jquery.js'][907]++;
    while ((i--)) {
      _$jscoverage['jquery.js'][908]++;
      Expr.attrHandle[arr[i]] = handler;
}
}
  _$jscoverage['jquery.js'][918]++;
  function siblingCheck(a, b) {
    _$jscoverage['jquery.js'][919]++;
    var cur = (b && a), diff = (cur && (a.nodeType === 1) && (b.nodeType === 1) && (a.sourceIndex - b.sourceIndex));
    _$jscoverage['jquery.js'][924]++;
    if (diff) {
      _$jscoverage['jquery.js'][925]++;
      return diff;
    }
    _$jscoverage['jquery.js'][929]++;
    if (cur) {
      _$jscoverage['jquery.js'][930]++;
      while ((cur = cur.nextSibling)) {
        _$jscoverage['jquery.js'][931]++;
        if ((cur === b)) {
          _$jscoverage['jquery.js'][932]++;
          return -1;
        }
}
    }
    _$jscoverage['jquery.js'][937]++;
    return (a? 1: -1);
}
  _$jscoverage['jquery.js'][944]++;
  function createInputPseudo(type) {
    _$jscoverage['jquery.js'][945]++;
    return (function (elem) {
  _$jscoverage['jquery.js'][946]++;
  var name = elem.nodeName.toLowerCase();
  _$jscoverage['jquery.js'][947]++;
  return ((name === "input") && (elem.type === type));
});
}
  _$jscoverage['jquery.js'][955]++;
  function createButtonPseudo(type) {
    _$jscoverage['jquery.js'][956]++;
    return (function (elem) {
  _$jscoverage['jquery.js'][957]++;
  var name = elem.nodeName.toLowerCase();
  _$jscoverage['jquery.js'][958]++;
  return (((name === "input") || (name === "button")) && (elem.type === type));
});
}
  _$jscoverage['jquery.js'][966]++;
  function createDisabledPseudo(disabled) {
    _$jscoverage['jquery.js'][969]++;
    return (function (elem) {
  _$jscoverage['jquery.js'][974]++;
  if (("form" in elem)) {
    _$jscoverage['jquery.js'][983]++;
    if ((elem.parentNode && (elem.disabled === false))) {
      _$jscoverage['jquery.js'][986]++;
      if (("label" in elem)) {
        _$jscoverage['jquery.js'][987]++;
        if (("label" in elem.parentNode)) {
          _$jscoverage['jquery.js'][988]++;
          return (elem.parentNode.disabled === disabled);
        }
        else {
          _$jscoverage['jquery.js'][990]++;
          return (elem.disabled === disabled);
        }
      }
      _$jscoverage['jquery.js'][996]++;
      return ((elem.isDisabled === disabled) || ((elem.isDisabled !== (! disabled)) && (disabledAncestor(elem) === disabled)));
    }
    _$jscoverage['jquery.js'][1004]++;
    return (elem.disabled === disabled);
  }
  else {
    _$jscoverage['jquery.js'][1009]++;
    if (("label" in elem)) {
      _$jscoverage['jquery.js'][1010]++;
      return (elem.disabled === disabled);
    }
  }
  _$jscoverage['jquery.js'][1014]++;
  return false;
});
}
  _$jscoverage['jquery.js'][1022]++;
  function createPositionalPseudo(fn) {
    _$jscoverage['jquery.js'][1023]++;
    return markFunction((function (argument) {
  _$jscoverage['jquery.js'][1024]++;
  argument = (+ argument);
  _$jscoverage['jquery.js'][1025]++;
  return markFunction((function (seed, matches) {
  _$jscoverage['jquery.js'][1026]++;
  var j, matchIndexes = fn([], seed.length, argument), i = matchIndexes.length;
  _$jscoverage['jquery.js'][1031]++;
  while ((i--)) {
    _$jscoverage['jquery.js'][1032]++;
    if (seed[(j = matchIndexes[i])]) {
      _$jscoverage['jquery.js'][1033]++;
      seed[j] = (! (matches[j] = seed[j]));
    }
}
}));
}));
}
  _$jscoverage['jquery.js'][1045]++;
  function testContext(context) {
    _$jscoverage['jquery.js'][1046]++;
    return (context && ((typeof context.getElementsByTagName) !== "undefined") && context);
}
  _$jscoverage['jquery.js'][1050]++;
  support = (Sizzle.support = {});
  _$jscoverage['jquery.js'][1057]++;
  isXML = (Sizzle.isXML = (function (elem) {
  _$jscoverage['jquery.js'][1060]++;
  var documentElement = (elem && (elem.ownerDocument || elem).documentElement);
  _$jscoverage['jquery.js'][1061]++;
  return (documentElement? (documentElement.nodeName !== "HTML"): false);
}));
  _$jscoverage['jquery.js'][1069]++;
  setDocument = (Sizzle.setDocument = (function (node) {
  _$jscoverage['jquery.js'][1070]++;
  var hasCompare, subWindow, doc = (node? (node.ownerDocument || node): preferredDoc);
  _$jscoverage['jquery.js'][1074]++;
  if (((doc === document) || (doc.nodeType !== 9) || (! doc.documentElement))) {
    _$jscoverage['jquery.js'][1075]++;
    return document;
  }
  _$jscoverage['jquery.js'][1079]++;
  document = doc;
  _$jscoverage['jquery.js'][1080]++;
  docElem = document.documentElement;
  _$jscoverage['jquery.js'][1081]++;
  documentIsHTML = (! isXML(document));
  _$jscoverage['jquery.js'][1085]++;
  if (((preferredDoc !== document) && (subWindow = document.defaultView) && (subWindow.top !== subWindow))) {
    _$jscoverage['jquery.js'][1089]++;
    if (subWindow.addEventListener) {
      _$jscoverage['jquery.js'][1090]++;
      subWindow.addEventListener("unload", unloadHandler, false);
    }
    else {
      _$jscoverage['jquery.js'][1093]++;
      if (subWindow.attachEvent) {
        _$jscoverage['jquery.js'][1094]++;
        subWindow.attachEvent("onunload", unloadHandler);
      }
    }
  }
  _$jscoverage['jquery.js'][1104]++;
  support.attributes = assert((function (el) {
  _$jscoverage['jquery.js'][1105]++;
  el.className = "i";
  _$jscoverage['jquery.js'][1106]++;
  return (! el.getAttribute("className"));
}));
  _$jscoverage['jquery.js'][1113]++;
  support.getElementsByTagName = assert((function (el) {
  _$jscoverage['jquery.js'][1114]++;
  el.appendChild(document.createComment(""));
  _$jscoverage['jquery.js'][1115]++;
  return (! el.getElementsByTagName("*").length);
}));
  _$jscoverage['jquery.js'][1119]++;
  support.getElementsByClassName = rnative.test(document.getElementsByClassName);
  _$jscoverage['jquery.js'][1125]++;
  support.getById = assert((function (el) {
  _$jscoverage['jquery.js'][1126]++;
  docElem.appendChild(el).id = expando;
  _$jscoverage['jquery.js'][1127]++;
  return ((! document.getElementsByName) || (! document.getElementsByName(expando).length));
}));
  _$jscoverage['jquery.js'][1131]++;
  if (support.getById) {
    _$jscoverage['jquery.js'][1132]++;
    Expr.filter.ID = (function (id) {
  _$jscoverage['jquery.js'][1133]++;
  var attrId = id.replace(runescape, funescape);
  _$jscoverage['jquery.js'][1134]++;
  return (function (elem) {
  _$jscoverage['jquery.js'][1135]++;
  return (elem.getAttribute("id") === attrId);
});
});
    _$jscoverage['jquery.js'][1138]++;
    Expr.find.ID = (function (id, context) {
  _$jscoverage['jquery.js'][1139]++;
  if ((((typeof context.getElementById) !== "undefined") && documentIsHTML)) {
    _$jscoverage['jquery.js'][1140]++;
    var elem = context.getElementById(id);
    _$jscoverage['jquery.js'][1141]++;
    return (elem? [elem]: []);
  }
});
  }
  else {
    _$jscoverage['jquery.js'][1145]++;
    Expr.filter.ID = (function (id) {
  _$jscoverage['jquery.js'][1146]++;
  var attrId = id.replace(runescape, funescape);
  _$jscoverage['jquery.js'][1147]++;
  return (function (elem) {
  _$jscoverage['jquery.js'][1148]++;
  var node = (((typeof elem.getAttributeNode) !== "undefined") && elem.getAttributeNode("id"));
  _$jscoverage['jquery.js'][1150]++;
  return (node && (node.value === attrId));
});
});
    _$jscoverage['jquery.js'][1156]++;
    Expr.find.ID = (function (id, context) {
  _$jscoverage['jquery.js'][1157]++;
  if ((((typeof context.getElementById) !== "undefined") && documentIsHTML)) {
    _$jscoverage['jquery.js'][1158]++;
    var node, i, elems, elem = context.getElementById(id);
    _$jscoverage['jquery.js'][1161]++;
    if (elem) {
      _$jscoverage['jquery.js'][1164]++;
      node = elem.getAttributeNode("id");
      _$jscoverage['jquery.js'][1165]++;
      if ((node && (node.value === id))) {
        _$jscoverage['jquery.js'][1166]++;
        return [elem];
      }
      _$jscoverage['jquery.js'][1170]++;
      elems = context.getElementsByName(id);
      _$jscoverage['jquery.js'][1171]++;
      i = 0;
      _$jscoverage['jquery.js'][1172]++;
      while ((elem = elems[(i++)])) {
        _$jscoverage['jquery.js'][1173]++;
        node = elem.getAttributeNode("id");
        _$jscoverage['jquery.js'][1174]++;
        if ((node && (node.value === id))) {
          _$jscoverage['jquery.js'][1175]++;
          return [elem];
        }
}
    }
    _$jscoverage['jquery.js'][1180]++;
    return [];
  }
});
  }
  _$jscoverage['jquery.js'][1186]++;
  Expr.find.TAG = (support.getElementsByTagName? (function (tag, context) {
  _$jscoverage['jquery.js'][1188]++;
  if (((typeof context.getElementsByTagName) !== "undefined")) {
    _$jscoverage['jquery.js'][1189]++;
    return context.getElementsByTagName(tag);
  }
  else {
    _$jscoverage['jquery.js'][1192]++;
    if (support.qsa) {
      _$jscoverage['jquery.js'][1193]++;
      return context.querySelectorAll(tag);
    }
  }
}): (function (tag, context) {
  _$jscoverage['jquery.js'][1198]++;
  var elem, tmp = [], i = 0, results = context.getElementsByTagName(tag);
  _$jscoverage['jquery.js'][1205]++;
  if ((tag === "*")) {
    _$jscoverage['jquery.js'][1206]++;
    while ((elem = results[(i++)])) {
      _$jscoverage['jquery.js'][1207]++;
      if ((elem.nodeType === 1)) {
        _$jscoverage['jquery.js'][1208]++;
        tmp.push(elem);
      }
}
    _$jscoverage['jquery.js'][1212]++;
    return tmp;
  }
  _$jscoverage['jquery.js'][1214]++;
  return results;
}));
  _$jscoverage['jquery.js'][1218]++;
  Expr.find.CLASS = (support.getElementsByClassName && (function (className, context) {
  _$jscoverage['jquery.js'][1219]++;
  if ((((typeof context.getElementsByClassName) !== "undefined") && documentIsHTML)) {
    _$jscoverage['jquery.js'][1220]++;
    return context.getElementsByClassName(className);
  }
}));
  _$jscoverage['jquery.js'][1230]++;
  rbuggyMatches = [];
  _$jscoverage['jquery.js'][1237]++;
  rbuggyQSA = [];
  _$jscoverage['jquery.js'][1239]++;
  if ((support.qsa = rnative.test(document.querySelectorAll))) {
    _$jscoverage['jquery.js'][1242]++;
    assert((function (el) {
  _$jscoverage['jquery.js'][1248]++;
  docElem.appendChild(el).innerHTML = ("<a id='" + expando + "'></a>" + "<select id='" + expando + "-\r\\' msallowcapture=''>" + "<option selected=''></option></select>");
  _$jscoverage['jquery.js'][1256]++;
  if (el.querySelectorAll("[msallowcapture^='']").length) {
    _$jscoverage['jquery.js'][1257]++;
    rbuggyQSA.push(("[*^$]=" + whitespace + "*(?:''|\"\")"));
  }
  _$jscoverage['jquery.js'][1262]++;
  if ((! el.querySelectorAll("[selected]").length)) {
    _$jscoverage['jquery.js'][1263]++;
    rbuggyQSA.push(("\\[" + whitespace + "*(?:value|" + booleans + ")"));
  }
  _$jscoverage['jquery.js'][1267]++;
  if ((! el.querySelectorAll(("[id~=" + expando + "-]")).length)) {
    _$jscoverage['jquery.js'][1268]++;
    rbuggyQSA.push("~=");
  }
  _$jscoverage['jquery.js'][1274]++;
  if ((! el.querySelectorAll(":checked").length)) {
    _$jscoverage['jquery.js'][1275]++;
    rbuggyQSA.push(":checked");
  }
  _$jscoverage['jquery.js'][1281]++;
  if ((! el.querySelectorAll(("a#" + expando + "+*")).length)) {
    _$jscoverage['jquery.js'][1282]++;
    rbuggyQSA.push(".#.+[+~]");
  }
}));
    _$jscoverage['jquery.js'][1286]++;
    assert((function (el) {
  _$jscoverage['jquery.js'][1287]++;
  el.innerHTML = "<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";
  _$jscoverage['jquery.js'][1292]++;
  var input = document.createElement("input");
  _$jscoverage['jquery.js'][1293]++;
  input.setAttribute("type", "hidden");
  _$jscoverage['jquery.js'][1294]++;
  el.appendChild(input).setAttribute("name", "D");
  _$jscoverage['jquery.js'][1298]++;
  if (el.querySelectorAll("[name=d]").length) {
    _$jscoverage['jquery.js'][1299]++;
    rbuggyQSA.push(("name" + whitespace + "*[*^$|!~]?="));
  }
  _$jscoverage['jquery.js'][1304]++;
  if ((el.querySelectorAll(":enabled").length !== 2)) {
    _$jscoverage['jquery.js'][1305]++;
    rbuggyQSA.push(":enabled", ":disabled");
  }
  _$jscoverage['jquery.js'][1310]++;
  docElem.appendChild(el).disabled = true;
  _$jscoverage['jquery.js'][1311]++;
  if ((el.querySelectorAll(":disabled").length !== 2)) {
    _$jscoverage['jquery.js'][1312]++;
    rbuggyQSA.push(":enabled", ":disabled");
  }
  _$jscoverage['jquery.js'][1316]++;
  el.querySelectorAll("*,:x");
  _$jscoverage['jquery.js'][1317]++;
  rbuggyQSA.push(",.*:");
}));
  }
  _$jscoverage['jquery.js'][1321]++;
  if ((support.matchesSelector = rnative.test((matches = (docElem.matches || docElem.webkitMatchesSelector || docElem.mozMatchesSelector || docElem.oMatchesSelector || docElem.msMatchesSelector))))) {
    _$jscoverage['jquery.js'][1327]++;
    assert((function (el) {
  _$jscoverage['jquery.js'][1330]++;
  support.disconnectedMatch = matches.call(el, "*");
  _$jscoverage['jquery.js'][1334]++;
  matches.call(el, "[s!='']:x");
  _$jscoverage['jquery.js'][1335]++;
  rbuggyMatches.push("!=", pseudos);
}));
  }
  _$jscoverage['jquery.js'][1339]++;
  rbuggyQSA = (rbuggyQSA.length && new RegExp(rbuggyQSA.join("|")));
  _$jscoverage['jquery.js'][1340]++;
  rbuggyMatches = (rbuggyMatches.length && new RegExp(rbuggyMatches.join("|")));
  _$jscoverage['jquery.js'][1344]++;
  hasCompare = rnative.test(docElem.compareDocumentPosition);
  _$jscoverage['jquery.js'][1349]++;
  contains = ((hasCompare || rnative.test(docElem.contains))? (function (a, b) {
  _$jscoverage['jquery.js'][1351]++;
  var adown = ((a.nodeType === 9)? a.documentElement: a), bup = (b && b.parentNode);
  _$jscoverage['jquery.js'][1353]++;
  return ((a === bup) || (! (! (bup && (bup.nodeType === 1) && (adown.contains? adown.contains(bup): (a.compareDocumentPosition && (a.compareDocumentPosition(bup) & 16)))))));
}): (function (a, b) {
  _$jscoverage['jquery.js'][1360]++;
  if (b) {
    _$jscoverage['jquery.js'][1361]++;
    while ((b = b.parentNode)) {
      _$jscoverage['jquery.js'][1362]++;
      if ((b === a)) {
        _$jscoverage['jquery.js'][1363]++;
        return true;
      }
}
  }
  _$jscoverage['jquery.js'][1367]++;
  return false;
}));
  _$jscoverage['jquery.js'][1374]++;
  sortOrder = (hasCompare? (function (a, b) {
  _$jscoverage['jquery.js'][1378]++;
  if ((a === b)) {
    _$jscoverage['jquery.js'][1379]++;
    hasDuplicate = true;
    _$jscoverage['jquery.js'][1380]++;
    return 0;
  }
  _$jscoverage['jquery.js'][1384]++;
  var compare = ((! a.compareDocumentPosition) - (! b.compareDocumentPosition));
  _$jscoverage['jquery.js'][1385]++;
  if (compare) {
    _$jscoverage['jquery.js'][1386]++;
    return compare;
  }
  _$jscoverage['jquery.js'][1390]++;
  compare = (((a.ownerDocument || a) === (b.ownerDocument || b))? a.compareDocumentPosition(b): 1);
  _$jscoverage['jquery.js'][1397]++;
  if (((compare & 1) || ((! support.sortDetached) && (b.compareDocumentPosition(a) === compare)))) {
    _$jscoverage['jquery.js'][1401]++;
    if (((a === document) || ((a.ownerDocument === preferredDoc) && contains(preferredDoc, a)))) {
      _$jscoverage['jquery.js'][1402]++;
      return -1;
    }
    _$jscoverage['jquery.js'][1404]++;
    if (((b === document) || ((b.ownerDocument === preferredDoc) && contains(preferredDoc, b)))) {
      _$jscoverage['jquery.js'][1405]++;
      return 1;
    }
    _$jscoverage['jquery.js'][1409]++;
    return (sortInput? (indexOf(sortInput, a) - indexOf(sortInput, b)): 0);
  }
  _$jscoverage['jquery.js'][1414]++;
  return ((compare & 4)? -1: 1);
}): (function (a, b) {
  _$jscoverage['jquery.js'][1418]++;
  if ((a === b)) {
    _$jscoverage['jquery.js'][1419]++;
    hasDuplicate = true;
    _$jscoverage['jquery.js'][1420]++;
    return 0;
  }
  _$jscoverage['jquery.js'][1423]++;
  var cur, i = 0, aup = a.parentNode, bup = b.parentNode, ap = [a], bp = [b];
  _$jscoverage['jquery.js'][1431]++;
  if (((! aup) || (! bup))) {
    _$jscoverage['jquery.js'][1432]++;
    return ((a === document)? -1: ((b === document)? 1: (aup? -1: (bup? 1: (sortInput? (indexOf(sortInput, a) - indexOf(sortInput, b)): 0)))));
  }
  else {
    _$jscoverage['jquery.js'][1441]++;
    if ((aup === bup)) {
      _$jscoverage['jquery.js'][1442]++;
      return siblingCheck(a, b);
    }
  }
  _$jscoverage['jquery.js'][1446]++;
  cur = a;
  _$jscoverage['jquery.js'][1447]++;
  while ((cur = cur.parentNode)) {
    _$jscoverage['jquery.js'][1448]++;
    ap.unshift(cur);
}
  _$jscoverage['jquery.js'][1450]++;
  cur = b;
  _$jscoverage['jquery.js'][1451]++;
  while ((cur = cur.parentNode)) {
    _$jscoverage['jquery.js'][1452]++;
    bp.unshift(cur);
}
  _$jscoverage['jquery.js'][1456]++;
  while ((ap[i] === bp[i])) {
    _$jscoverage['jquery.js'][1457]++;
    (i++);
}
  _$jscoverage['jquery.js'][1460]++;
  return (i? siblingCheck(ap[i], bp[i]): ((ap[i] === preferredDoc)? -1: ((bp[i] === preferredDoc)? 1: 0)));
}));
  _$jscoverage['jquery.js'][1470]++;
  return document;
}));
  _$jscoverage['jquery.js'][1473]++;
  Sizzle.matches = (function (expr, elements) {
  _$jscoverage['jquery.js'][1474]++;
  return Sizzle(expr, null, null, elements);
});
  _$jscoverage['jquery.js'][1477]++;
  Sizzle.matchesSelector = (function (elem, expr) {
  _$jscoverage['jquery.js'][1479]++;
  if (((elem.ownerDocument || elem) !== document)) {
    _$jscoverage['jquery.js'][1480]++;
    setDocument(elem);
  }
  _$jscoverage['jquery.js'][1484]++;
  expr = expr.replace(rattributeQuotes, "='$1']");
  _$jscoverage['jquery.js'][1486]++;
  if ((support.matchesSelector && documentIsHTML && (! compilerCache[(expr + " ")]) && ((! rbuggyMatches) || (! rbuggyMatches.test(expr))) && ((! rbuggyQSA) || (! rbuggyQSA.test(expr))))) {
    _$jscoverage['jquery.js'][1491]++;
    try {
      _$jscoverage['jquery.js'][1492]++;
      var ret = matches.call(elem, expr);
      _$jscoverage['jquery.js'][1495]++;
      if ((ret || support.disconnectedMatch || (elem.document && (elem.document.nodeType !== 11)))) {
        _$jscoverage['jquery.js'][1499]++;
        return ret;
      }
    }
    catch (e) {
    }
  }
  _$jscoverage['jquery.js'][1504]++;
  return (Sizzle(expr, document, null, [elem]).length > 0);
});
  _$jscoverage['jquery.js'][1507]++;
  Sizzle.contains = (function (context, elem) {
  _$jscoverage['jquery.js'][1509]++;
  if (((context.ownerDocument || context) !== document)) {
    _$jscoverage['jquery.js'][1510]++;
    setDocument(context);
  }
  _$jscoverage['jquery.js'][1512]++;
  return contains(context, elem);
});
  _$jscoverage['jquery.js'][1515]++;
  Sizzle.attr = (function (elem, name) {
  _$jscoverage['jquery.js'][1517]++;
  if (((elem.ownerDocument || elem) !== document)) {
    _$jscoverage['jquery.js'][1518]++;
    setDocument(elem);
  }
  _$jscoverage['jquery.js'][1521]++;
  var fn = Expr.attrHandle[name.toLowerCase()], val = ((fn && hasOwn.call(Expr.attrHandle, name.toLowerCase()))? fn(elem, name, (! documentIsHTML)): undefined);
  _$jscoverage['jquery.js'][1527]++;
  return ((val !== undefined)? val: ((support.attributes || (! documentIsHTML))? elem.getAttribute(name): (((val = elem.getAttributeNode(name)) && val.specified)? val.value: null)));
});
  _$jscoverage['jquery.js'][1536]++;
  Sizzle.escape = (function (sel) {
  _$jscoverage['jquery.js'][1537]++;
  return (sel + "").replace(rcssescape, fcssescape);
});
  _$jscoverage['jquery.js'][1540]++;
  Sizzle.error = (function (msg) {
  _$jscoverage['jquery.js'][1541]++;
  throw new Error(("Syntax error, unrecognized expression: " + msg));
});
  _$jscoverage['jquery.js'][1548]++;
  Sizzle.uniqueSort = (function (results) {
  _$jscoverage['jquery.js'][1549]++;
  var elem, duplicates = [], j = 0, i = 0;
  _$jscoverage['jquery.js'][1555]++;
  hasDuplicate = (! support.detectDuplicates);
  _$jscoverage['jquery.js'][1556]++;
  sortInput = ((! support.sortStable) && results.slice(0));
  _$jscoverage['jquery.js'][1557]++;
  results.sort(sortOrder);
  _$jscoverage['jquery.js'][1559]++;
  if (hasDuplicate) {
    _$jscoverage['jquery.js'][1560]++;
    while ((elem = results[(i++)])) {
      _$jscoverage['jquery.js'][1561]++;
      if ((elem === results[i])) {
        _$jscoverage['jquery.js'][1562]++;
        j = duplicates.push(i);
      }
}
    _$jscoverage['jquery.js'][1565]++;
    while ((j--)) {
      _$jscoverage['jquery.js'][1566]++;
      results.splice(duplicates[j], 1);
}
  }
  _$jscoverage['jquery.js'][1572]++;
  sortInput = null;
  _$jscoverage['jquery.js'][1574]++;
  return results;
});
  _$jscoverage['jquery.js'][1581]++;
  getText = (Sizzle.getText = (function (elem) {
  _$jscoverage['jquery.js'][1582]++;
  var node, ret = "", i = 0, nodeType = elem.nodeType;
  _$jscoverage['jquery.js'][1587]++;
  if ((! nodeType)) {
    _$jscoverage['jquery.js'][1589]++;
    while ((node = elem[(i++)])) {
      _$jscoverage['jquery.js'][1591]++;
      ret += getText(node);
}
  }
  else {
    _$jscoverage['jquery.js'][1593]++;
    if (((nodeType === 1) || (nodeType === 9) || (nodeType === 11))) {
      _$jscoverage['jquery.js'][1596]++;
      if (((typeof elem.textContent) === "string")) {
        _$jscoverage['jquery.js'][1597]++;
        return elem.textContent;
      }
      else {
        _$jscoverage['jquery.js'][1600]++;
        for (elem = elem.firstChild; elem; (elem = elem.nextSibling)) {
          _$jscoverage['jquery.js'][1601]++;
          ret += getText(elem);
}
      }
    }
    else {
      _$jscoverage['jquery.js'][1604]++;
      if (((nodeType === 3) || (nodeType === 4))) {
        _$jscoverage['jquery.js'][1605]++;
        return elem.nodeValue;
      }
    }
  }
  _$jscoverage['jquery.js'][1609]++;
  return ret;
}));
  _$jscoverage['jquery.js'][1612]++;
  Expr = (Sizzle.selectors = {cacheLength: 50, createPseudo: markFunction, match: matchExpr, attrHandle: {}, find: {}, relative: {">": {dir: "parentNode", first: true}, " ": {dir: "parentNode"}, "+": {dir: "previousSibling", first: true}, "~": {dir: "previousSibling"}}, preFilter: {"ATTR": (function (match) {
  _$jscoverage['jquery.js'][1634]++;
  match[1] = match[1].replace(runescape, funescape);
  _$jscoverage['jquery.js'][1637]++;
  match[3] = (match[3] || match[4] || match[5] || "").replace(runescape, funescape);
  _$jscoverage['jquery.js'][1639]++;
  if ((match[2] === "~=")) {
    _$jscoverage['jquery.js'][1640]++;
    match[3] = (" " + match[3] + " ");
  }
  _$jscoverage['jquery.js'][1643]++;
  return match.slice(0, 4);
}), "CHILD": (function (match) {
  _$jscoverage['jquery.js'][1657]++;
  match[1] = match[1].toLowerCase();
  _$jscoverage['jquery.js'][1659]++;
  if ((match[1].slice(0, 3) === "nth")) {
    _$jscoverage['jquery.js'][1661]++;
    if ((! match[3])) {
      _$jscoverage['jquery.js'][1662]++;
      Sizzle.error(match[0]);
    }
    _$jscoverage['jquery.js'][1667]++;
    match[4] = (+ (match[4]? (match[5] + (match[6] || 1)): (2 * ((match[3] === "even") || (match[3] === "odd")))));
    _$jscoverage['jquery.js'][1668]++;
    match[5] = (+ ((match[7] + match[8]) || (match[3] === "odd")));
  }
  else {
    _$jscoverage['jquery.js'][1671]++;
    if (match[3]) {
      _$jscoverage['jquery.js'][1672]++;
      Sizzle.error(match[0]);
    }
  }
  _$jscoverage['jquery.js'][1675]++;
  return match;
}), "PSEUDO": (function (match) {
  _$jscoverage['jquery.js'][1679]++;
  var excess, unquoted = ((! match[6]) && match[2]);
  _$jscoverage['jquery.js'][1682]++;
  if (matchExpr.CHILD.test(match[0])) {
    _$jscoverage['jquery.js'][1683]++;
    return null;
  }
  _$jscoverage['jquery.js'][1687]++;
  if (match[3]) {
    _$jscoverage['jquery.js'][1688]++;
    match[2] = (match[4] || match[5] || "");
  }
  else {
    _$jscoverage['jquery.js'][1691]++;
    if ((unquoted && rpseudo.test(unquoted) && (excess = tokenize(unquoted, true)) && (excess = (unquoted.indexOf(")", (unquoted.length - excess)) - unquoted.length)))) {
      _$jscoverage['jquery.js'][1698]++;
      match[0] = match[0].slice(0, excess);
      _$jscoverage['jquery.js'][1699]++;
      match[2] = unquoted.slice(0, excess);
    }
  }
  _$jscoverage['jquery.js'][1703]++;
  return match.slice(0, 3);
})}, filter: {"TAG": (function (nodeNameSelector) {
  _$jscoverage['jquery.js'][1710]++;
  var nodeName = nodeNameSelector.replace(runescape, funescape).toLowerCase();
  _$jscoverage['jquery.js'][1711]++;
  return ((nodeNameSelector === "*")? (function () {
  _$jscoverage['jquery.js'][1712]++;
  return true;
}): (function (elem) {
  _$jscoverage['jquery.js'][1714]++;
  return (elem.nodeName && (elem.nodeName.toLowerCase() === nodeName));
}));
}), "CLASS": (function (className) {
  _$jscoverage['jquery.js'][1719]++;
  var pattern = classCache[(className + " ")];
  _$jscoverage['jquery.js'][1721]++;
  return (pattern || ((pattern = new RegExp(("(^|" + whitespace + ")" + className + "(" + whitespace + "|$)"))) && classCache(className, (function (elem) {
  _$jscoverage['jquery.js'][1724]++;
  return pattern.test(((((typeof elem.className) === "string") && elem.className) || (((typeof elem.getAttribute) !== "undefined") && elem.getAttribute("class")) || ""));
}))));
}), "ATTR": (function (name, operator, check) {
  _$jscoverage['jquery.js'][1729]++;
  return (function (elem) {
  _$jscoverage['jquery.js'][1730]++;
  var result = Sizzle.attr(elem, name);
  _$jscoverage['jquery.js'][1732]++;
  if ((result == null)) {
    _$jscoverage['jquery.js'][1733]++;
    return (operator === "!=");
  }
  _$jscoverage['jquery.js'][1735]++;
  if ((! operator)) {
    _$jscoverage['jquery.js'][1736]++;
    return true;
  }
  _$jscoverage['jquery.js'][1739]++;
  result += "";
  _$jscoverage['jquery.js'][1741]++;
  return ((operator === "=")? (result === check): ((operator === "!=")? (result !== check): ((operator === "^=")? (check && (result.indexOf(check) === 0)): ((operator === "*=")? (check && (result.indexOf(check) > -1)): ((operator === "$=")? (check && (result.slice((- check.length)) === check)): ((operator === "~=")? ((" " + result.replace(rwhitespace, " ") + " ").indexOf(check) > -1): ((operator === "|=")? ((result === check) || (result.slice(0, (check.length + 1)) === (check + "-"))): false)))))));
});
}), "CHILD": (function (type, what, argument, first, last) {
  _$jscoverage['jquery.js'][1753]++;
  var simple = (type.slice(0, 3) !== "nth"), forward = (type.slice(-4) !== "last"), ofType = (what === "of-type");
  _$jscoverage['jquery.js'][1757]++;
  return (((first === 1) && (last === 0))? (function (elem) {
  _$jscoverage['jquery.js'][1761]++;
  return (! (! elem.parentNode));
}): (function (elem, context, xml) {
  _$jscoverage['jquery.js'][1765]++;
  var cache, uniqueCache, outerCache, node, nodeIndex, start, dir = ((simple !== forward)? "nextSibling": "previousSibling"), parent = elem.parentNode, name = (ofType && elem.nodeName.toLowerCase()), useCache = ((! xml) && (! ofType)), diff = false;
  _$jscoverage['jquery.js'][1772]++;
  if (parent) {
    _$jscoverage['jquery.js'][1775]++;
    if (simple) {
      _$jscoverage['jquery.js'][1776]++;
      while (dir) {
        _$jscoverage['jquery.js'][1777]++;
        node = elem;
        _$jscoverage['jquery.js'][1778]++;
        while ((node = node[dir])) {
          _$jscoverage['jquery.js'][1779]++;
          if ((ofType? (node.nodeName.toLowerCase() === name): (node.nodeType === 1))) {
            _$jscoverage['jquery.js'][1783]++;
            return false;
          }
}
        _$jscoverage['jquery.js'][1787]++;
        start = (dir = ((type === "only") && (! start) && "nextSibling"));
}
      _$jscoverage['jquery.js'][1789]++;
      return true;
    }
    _$jscoverage['jquery.js'][1792]++;
    start = [(forward? parent.firstChild: parent.lastChild)];
    _$jscoverage['jquery.js'][1795]++;
    if ((forward && useCache)) {
      _$jscoverage['jquery.js'][1800]++;
      node = parent;
      _$jscoverage['jquery.js'][1801]++;
      outerCache = (node[expando] || (node[expando] = {}));
      _$jscoverage['jquery.js'][1805]++;
      uniqueCache = (outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {}));
      _$jscoverage['jquery.js'][1808]++;
      cache = (uniqueCache[type] || []);
      _$jscoverage['jquery.js'][1809]++;
      nodeIndex = ((cache[0] === dirruns) && cache[1]);
      _$jscoverage['jquery.js'][1810]++;
      diff = (nodeIndex && cache[2]);
      _$jscoverage['jquery.js'][1811]++;
      node = (nodeIndex && parent.childNodes[nodeIndex]);
      _$jscoverage['jquery.js'][1813]++;
      while ((node = (((++nodeIndex) && node && node[dir]) || (diff = (nodeIndex = 0)) || start.pop()))) {
        _$jscoverage['jquery.js'][1819]++;
        if (((node.nodeType === 1) && (++diff) && (node === elem))) {
          _$jscoverage['jquery.js'][1820]++;
          uniqueCache[type] = [dirruns, nodeIndex, diff];
          _$jscoverage['jquery.js'][1821]++;
          break;
        }
}
    }
    else {
      _$jscoverage['jquery.js'][1827]++;
      if (useCache) {
        _$jscoverage['jquery.js'][1829]++;
        node = elem;
        _$jscoverage['jquery.js'][1830]++;
        outerCache = (node[expando] || (node[expando] = {}));
        _$jscoverage['jquery.js'][1834]++;
        uniqueCache = (outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {}));
        _$jscoverage['jquery.js'][1837]++;
        cache = (uniqueCache[type] || []);
        _$jscoverage['jquery.js'][1838]++;
        nodeIndex = ((cache[0] === dirruns) && cache[1]);
        _$jscoverage['jquery.js'][1839]++;
        diff = nodeIndex;
      }
      _$jscoverage['jquery.js'][1844]++;
      if ((diff === false)) {
        _$jscoverage['jquery.js'][1846]++;
        while ((node = (((++nodeIndex) && node && node[dir]) || (diff = (nodeIndex = 0)) || start.pop()))) {
          _$jscoverage['jquery.js'][1849]++;
          if (((ofType? (node.nodeName.toLowerCase() === name): (node.nodeType === 1)) && (++diff))) {
            _$jscoverage['jquery.js'][1855]++;
            if (useCache) {
              _$jscoverage['jquery.js'][1856]++;
              outerCache = (node[expando] || (node[expando] = {}));
              _$jscoverage['jquery.js'][1860]++;
              uniqueCache = (outerCache[node.uniqueID] || (outerCache[node.uniqueID] = {}));
              _$jscoverage['jquery.js'][1863]++;
              uniqueCache[type] = [dirruns, diff];
            }
            _$jscoverage['jquery.js'][1866]++;
            if ((node === elem)) {
              _$jscoverage['jquery.js'][1867]++;
              break;
            }
          }
}
      }
    }
    _$jscoverage['jquery.js'][1875]++;
    diff -= last;
    _$jscoverage['jquery.js'][1876]++;
    return ((diff === first) || (((diff % first) === 0) && ((diff / first) >= 0)));
  }
}));
}), "PSEUDO": (function (pseudo, argument) {
  _$jscoverage['jquery.js'][1886]++;
  var args, fn = (Expr.pseudos[pseudo] || Expr.setFilters[pseudo.toLowerCase()] || Sizzle.error(("unsupported pseudo: " + pseudo)));
  _$jscoverage['jquery.js'][1893]++;
  if (fn[expando]) {
    _$jscoverage['jquery.js'][1894]++;
    return fn(argument);
  }
  _$jscoverage['jquery.js'][1898]++;
  if ((fn.length > 1)) {
    _$jscoverage['jquery.js'][1899]++;
    args = [pseudo, pseudo, "", argument];
    _$jscoverage['jquery.js'][1900]++;
    return (Expr.setFilters.hasOwnProperty(pseudo.toLowerCase())? markFunction((function (seed, matches) {
  _$jscoverage['jquery.js'][1902]++;
  var idx, matched = fn(seed, argument), i = matched.length;
  _$jscoverage['jquery.js'][1905]++;
  while ((i--)) {
    _$jscoverage['jquery.js'][1906]++;
    idx = indexOf(seed, matched[i]);
    _$jscoverage['jquery.js'][1907]++;
    seed[idx] = (! (matches[idx] = matched[i]));
}
})): (function (elem) {
  _$jscoverage['jquery.js'][1911]++;
  return fn(elem, 0, args);
}));
  }
  _$jscoverage['jquery.js'][1915]++;
  return fn;
})}, pseudos: {"not": markFunction((function (selector) {
  _$jscoverage['jquery.js'][1925]++;
  var input = [], results = [], matcher = compile(selector.replace(rtrim, "$1"));
  _$jscoverage['jquery.js'][1929]++;
  return (matcher[expando]? markFunction((function (seed, matches, context, xml) {
  _$jscoverage['jquery.js'][1931]++;
  var elem, unmatched = matcher(seed, null, xml, []), i = seed.length;
  _$jscoverage['jquery.js'][1936]++;
  while ((i--)) {
    _$jscoverage['jquery.js'][1937]++;
    if ((elem = unmatched[i])) {
      _$jscoverage['jquery.js'][1938]++;
      seed[i] = (! (matches[i] = elem));
    }
}
})): (function (elem, context, xml) {
  _$jscoverage['jquery.js'][1943]++;
  input[0] = elem;
  _$jscoverage['jquery.js'][1944]++;
  matcher(input, null, xml, results);
  _$jscoverage['jquery.js'][1946]++;
  input[0] = null;
  _$jscoverage['jquery.js'][1947]++;
  return (! results.pop());
}));
})), "has": markFunction((function (selector) {
  _$jscoverage['jquery.js'][1952]++;
  return (function (elem) {
  _$jscoverage['jquery.js'][1953]++;
  return (Sizzle(selector, elem).length > 0);
});
})), "contains": markFunction((function (text) {
  _$jscoverage['jquery.js'][1958]++;
  text = text.replace(runescape, funescape);
  _$jscoverage['jquery.js'][1959]++;
  return (function (elem) {
  _$jscoverage['jquery.js'][1960]++;
  return ((elem.textContent || elem.innerText || getText(elem)).indexOf(text) > -1);
});
})), "lang": markFunction((function (lang) {
  _$jscoverage['jquery.js'][1973]++;
  if ((! ridentifier.test((lang || "")))) {
    _$jscoverage['jquery.js'][1974]++;
    Sizzle.error(("unsupported lang: " + lang));
  }
  _$jscoverage['jquery.js'][1976]++;
  lang = lang.replace(runescape, funescape).toLowerCase();
  _$jscoverage['jquery.js'][1977]++;
  return (function (elem) {
  _$jscoverage['jquery.js'][1978]++;
  var elemLang;
  _$jscoverage['jquery.js'][1979]++;
  do {
    _$jscoverage['jquery.js'][1980]++;
    if ((elemLang = (documentIsHTML? elem.lang: (elem.getAttribute("xml:lang") || elem.getAttribute("lang"))))) {
      _$jscoverage['jquery.js'][1984]++;
      elemLang = elemLang.toLowerCase();
      _$jscoverage['jquery.js'][1985]++;
      return ((elemLang === lang) || (elemLang.indexOf((lang + "-")) === 0));
    }
}
  while (((elem = elem.parentNode) && (elem.nodeType === 1)));
  _$jscoverage['jquery.js'][1988]++;
  return false;
});
})), "target": (function (elem) {
  _$jscoverage['jquery.js'][1994]++;
  var hash = (window.location && window.location.hash);
  _$jscoverage['jquery.js'][1995]++;
  return (hash && (hash.slice(1) === elem.id));
}), "root": (function (elem) {
  _$jscoverage['jquery.js'][1999]++;
  return (elem === docElem);
}), "focus": (function (elem) {
  _$jscoverage['jquery.js'][2003]++;
  return ((elem === document.activeElement) && ((! document.hasFocus) || document.hasFocus()) && (! (! (elem.type || elem.href || (~ elem.tabIndex)))));
}), "enabled": createDisabledPseudo(false), "disabled": createDisabledPseudo(true), "checked": (function (elem) {
  _$jscoverage['jquery.js'][2013]++;
  var nodeName = elem.nodeName.toLowerCase();
  _$jscoverage['jquery.js'][2014]++;
  return (((nodeName === "input") && (! (! elem.checked))) || ((nodeName === "option") && (! (! elem.selected))));
}), "selected": (function (elem) {
  _$jscoverage['jquery.js'][2020]++;
  if (elem.parentNode) {
    _$jscoverage['jquery.js'][2021]++;
    elem.parentNode.selectedIndex;
  }
  _$jscoverage['jquery.js'][2024]++;
  return (elem.selected === true);
}), "empty": (function (elem) {
  _$jscoverage['jquery.js'][2033]++;
  for (elem = elem.firstChild; elem; (elem = elem.nextSibling)) {
    _$jscoverage['jquery.js'][2034]++;
    if ((elem.nodeType < 6)) {
      _$jscoverage['jquery.js'][2035]++;
      return false;
    }
}
  _$jscoverage['jquery.js'][2038]++;
  return true;
}), "parent": (function (elem) {
  _$jscoverage['jquery.js'][2042]++;
  return (! Expr.pseudos.empty(elem));
}), "header": (function (elem) {
  _$jscoverage['jquery.js'][2047]++;
  return rheader.test(elem.nodeName);
}), "input": (function (elem) {
  _$jscoverage['jquery.js'][2051]++;
  return rinputs.test(elem.nodeName);
}), "button": (function (elem) {
  _$jscoverage['jquery.js'][2055]++;
  var name = elem.nodeName.toLowerCase();
  _$jscoverage['jquery.js'][2056]++;
  return (((name === "input") && (elem.type === "button")) || (name === "button"));
}), "text": (function (elem) {
  _$jscoverage['jquery.js'][2060]++;
  var attr;
  _$jscoverage['jquery.js'][2061]++;
  return ((elem.nodeName.toLowerCase() === "input") && (elem.type === "text") && (((attr = elem.getAttribute("type")) == null) || (attr.toLowerCase() === "text")));
}), "first": createPositionalPseudo((function () {
  _$jscoverage['jquery.js'][2071]++;
  return [0];
})), "last": createPositionalPseudo((function (matchIndexes, length) {
  _$jscoverage['jquery.js'][2075]++;
  return [(length - 1)];
})), "eq": createPositionalPseudo((function (matchIndexes, length, argument) {
  _$jscoverage['jquery.js'][2079]++;
  return [((argument < 0)? (argument + length): argument)];
})), "even": createPositionalPseudo((function (matchIndexes, length) {
  _$jscoverage['jquery.js'][2083]++;
  var i = 0;
  _$jscoverage['jquery.js'][2084]++;
  for (; (i < length); (i += 2)) {
    _$jscoverage['jquery.js'][2085]++;
    matchIndexes.push(i);
}
  _$jscoverage['jquery.js'][2087]++;
  return matchIndexes;
})), "odd": createPositionalPseudo((function (matchIndexes, length) {
  _$jscoverage['jquery.js'][2091]++;
  var i = 1;
  _$jscoverage['jquery.js'][2092]++;
  for (; (i < length); (i += 2)) {
    _$jscoverage['jquery.js'][2093]++;
    matchIndexes.push(i);
}
  _$jscoverage['jquery.js'][2095]++;
  return matchIndexes;
})), "lt": createPositionalPseudo((function (matchIndexes, length, argument) {
  _$jscoverage['jquery.js'][2099]++;
  var i = ((argument < 0)? (argument + length): argument);
  _$jscoverage['jquery.js'][2100]++;
  for (; ((--i) >= 0);) {
    _$jscoverage['jquery.js'][2101]++;
    matchIndexes.push(i);
}
  _$jscoverage['jquery.js'][2103]++;
  return matchIndexes;
})), "gt": createPositionalPseudo((function (matchIndexes, length, argument) {
  _$jscoverage['jquery.js'][2107]++;
  var i = ((argument < 0)? (argument + length): argument);
  _$jscoverage['jquery.js'][2108]++;
  for (; ((++i) < length);) {
    _$jscoverage['jquery.js'][2109]++;
    matchIndexes.push(i);
}
  _$jscoverage['jquery.js'][2111]++;
  return matchIndexes;
}))}});
  _$jscoverage['jquery.js'][2116]++;
  Expr.pseudos.nth = Expr.pseudos.eq;
  _$jscoverage['jquery.js'][2119]++;
  for (i in {radio: true, checkbox: true, file: true, password: true, image: true}) {
    _$jscoverage['jquery.js'][2120]++;
    Expr.pseudos[i] = createInputPseudo(i);
}
  _$jscoverage['jquery.js'][2122]++;
  for (i in {submit: true, reset: true}) {
    _$jscoverage['jquery.js'][2123]++;
    Expr.pseudos[i] = createButtonPseudo(i);
}
  _$jscoverage['jquery.js'][2127]++;
  function setFilters() {
}
  _$jscoverage['jquery.js'][2128]++;
  setFilters.prototype = (Expr.filters = Expr.pseudos);
  _$jscoverage['jquery.js'][2129]++;
  Expr.setFilters = new setFilters();
  _$jscoverage['jquery.js'][2131]++;
  tokenize = (Sizzle.tokenize = (function (selector, parseOnly) {
  _$jscoverage['jquery.js'][2132]++;
  var matched, match, tokens, type, soFar, groups, preFilters, cached = tokenCache[(selector + " ")];
  _$jscoverage['jquery.js'][2136]++;
  if (cached) {
    _$jscoverage['jquery.js'][2137]++;
    return (parseOnly? 0: cached.slice(0));
  }
  _$jscoverage['jquery.js'][2140]++;
  soFar = selector;
  _$jscoverage['jquery.js'][2141]++;
  groups = [];
  _$jscoverage['jquery.js'][2142]++;
  preFilters = Expr.preFilter;
  _$jscoverage['jquery.js'][2144]++;
  while (soFar) {
    _$jscoverage['jquery.js'][2147]++;
    if (((! matched) || (match = rcomma.exec(soFar)))) {
      _$jscoverage['jquery.js'][2148]++;
      if (match) {
        _$jscoverage['jquery.js'][2150]++;
        soFar = (soFar.slice(match[0].length) || soFar);
      }
      _$jscoverage['jquery.js'][2152]++;
      groups.push((tokens = []));
    }
    _$jscoverage['jquery.js'][2155]++;
    matched = false;
    _$jscoverage['jquery.js'][2158]++;
    if ((match = rcombinators.exec(soFar))) {
      _$jscoverage['jquery.js'][2159]++;
      matched = match.shift();
      _$jscoverage['jquery.js'][2160]++;
      tokens.push({value: matched, type: match[0].replace(rtrim, " ")});
      _$jscoverage['jquery.js'][2165]++;
      soFar = soFar.slice(matched.length);
    }
    _$jscoverage['jquery.js'][2169]++;
    for (type in Expr.filter) {
      _$jscoverage['jquery.js'][2170]++;
      if (((match = matchExpr[type].exec(soFar)) && ((! preFilters[type]) || (match = (preFilters[type])(match))))) {
        _$jscoverage['jquery.js'][2172]++;
        matched = match.shift();
        _$jscoverage['jquery.js'][2173]++;
        tokens.push({value: matched, type: type, matches: match});
        _$jscoverage['jquery.js'][2178]++;
        soFar = soFar.slice(matched.length);
      }
}
    _$jscoverage['jquery.js'][2182]++;
    if ((! matched)) {
      _$jscoverage['jquery.js'][2183]++;
      break;
    }
}
  _$jscoverage['jquery.js'][2190]++;
  return (parseOnly? soFar.length: (soFar? Sizzle.error(selector): tokenCache(selector, groups).slice(0)));
}));
  _$jscoverage['jquery.js'][2198]++;
  function toSelector(tokens) {
    _$jscoverage['jquery.js'][2199]++;
    var i = 0, len = tokens.length, selector = "";
    _$jscoverage['jquery.js'][2202]++;
    for (; (i < len); (i++)) {
      _$jscoverage['jquery.js'][2203]++;
      selector += tokens[i].value;
}
    _$jscoverage['jquery.js'][2205]++;
    return selector;
}
  _$jscoverage['jquery.js'][2208]++;
  function addCombinator(matcher, combinator, base) {
    _$jscoverage['jquery.js'][2209]++;
    var dir = combinator.dir, skip = combinator.next, key = (skip || dir), checkNonElements = (base && (key === "parentNode")), doneName = (done++);
    _$jscoverage['jquery.js'][2215]++;
    return (combinator.first? (function (elem, context, xml) {
  _$jscoverage['jquery.js'][2218]++;
  while ((elem = elem[dir])) {
    _$jscoverage['jquery.js'][2219]++;
    if (((elem.nodeType === 1) || checkNonElements)) {
      _$jscoverage['jquery.js'][2220]++;
      return matcher(elem, context, xml);
    }
}
  _$jscoverage['jquery.js'][2223]++;
  return false;
}): (function (elem, context, xml) {
  _$jscoverage['jquery.js'][2228]++;
  var oldCache, uniqueCache, outerCache, newCache = [dirruns, doneName];
  _$jscoverage['jquery.js'][2232]++;
  if (xml) {
    _$jscoverage['jquery.js'][2233]++;
    while ((elem = elem[dir])) {
      _$jscoverage['jquery.js'][2234]++;
      if (((elem.nodeType === 1) || checkNonElements)) {
        _$jscoverage['jquery.js'][2235]++;
        if (matcher(elem, context, xml)) {
          _$jscoverage['jquery.js'][2236]++;
          return true;
        }
      }
}
  }
  else {
    _$jscoverage['jquery.js'][2241]++;
    while ((elem = elem[dir])) {
      _$jscoverage['jquery.js'][2242]++;
      if (((elem.nodeType === 1) || checkNonElements)) {
        _$jscoverage['jquery.js'][2243]++;
        outerCache = (elem[expando] || (elem[expando] = {}));
        _$jscoverage['jquery.js'][2247]++;
        uniqueCache = (outerCache[elem.uniqueID] || (outerCache[elem.uniqueID] = {}));
        _$jscoverage['jquery.js'][2249]++;
        if ((skip && (skip === elem.nodeName.toLowerCase()))) {
          _$jscoverage['jquery.js'][2250]++;
          elem = (elem[dir] || elem);
        }
        else {
          _$jscoverage['jquery.js'][2251]++;
          if (((oldCache = uniqueCache[key]) && (oldCache[0] === dirruns) && (oldCache[1] === doneName))) {
            _$jscoverage['jquery.js'][2255]++;
            return (newCache[2] = oldCache[2]);
          }
          else {
            _$jscoverage['jquery.js'][2258]++;
            uniqueCache[key] = newCache;
            _$jscoverage['jquery.js'][2261]++;
            if ((newCache[2] = matcher(elem, context, xml))) {
              _$jscoverage['jquery.js'][2262]++;
              return true;
            }
          }
        }
      }
}
  }
  _$jscoverage['jquery.js'][2268]++;
  return false;
}));
}
  _$jscoverage['jquery.js'][2272]++;
  function elementMatcher(matchers) {
    _$jscoverage['jquery.js'][2273]++;
    return ((matchers.length > 1)? (function (elem, context, xml) {
  _$jscoverage['jquery.js'][2275]++;
  var i = matchers.length;
  _$jscoverage['jquery.js'][2276]++;
  while ((i--)) {
    _$jscoverage['jquery.js'][2277]++;
    if ((! (matchers[i])(elem, context, xml))) {
      _$jscoverage['jquery.js'][2278]++;
      return false;
    }
}
  _$jscoverage['jquery.js'][2281]++;
  return true;
}): matchers[0]);
}
  _$jscoverage['jquery.js'][2286]++;
  function multipleContexts(selector, contexts, results) {
    _$jscoverage['jquery.js'][2287]++;
    var i = 0, len = contexts.length;
    _$jscoverage['jquery.js'][2289]++;
    for (; (i < len); (i++)) {
      _$jscoverage['jquery.js'][2290]++;
      Sizzle(selector, contexts[i], results);
}
    _$jscoverage['jquery.js'][2292]++;
    return results;
}
  _$jscoverage['jquery.js'][2295]++;
  function condense(unmatched, map, filter, context, xml) {
    _$jscoverage['jquery.js'][2296]++;
    var elem, newUnmatched = [], i = 0, len = unmatched.length, mapped = (map != null);
    _$jscoverage['jquery.js'][2302]++;
    for (; (i < len); (i++)) {
      _$jscoverage['jquery.js'][2303]++;
      if ((elem = unmatched[i])) {
        _$jscoverage['jquery.js'][2304]++;
        if (((! filter) || filter(elem, context, xml))) {
          _$jscoverage['jquery.js'][2305]++;
          newUnmatched.push(elem);
          _$jscoverage['jquery.js'][2306]++;
          if (mapped) {
            _$jscoverage['jquery.js'][2307]++;
            map.push(i);
          }
        }
      }
}
    _$jscoverage['jquery.js'][2313]++;
    return newUnmatched;
}
  _$jscoverage['jquery.js'][2316]++;
  function setMatcher(preFilter, selector, matcher, postFilter, postFinder, postSelector) {
    _$jscoverage['jquery.js'][2317]++;
    if ((postFilter && (! postFilter[expando]))) {
      _$jscoverage['jquery.js'][2318]++;
      postFilter = setMatcher(postFilter);
    }
    _$jscoverage['jquery.js'][2320]++;
    if ((postFinder && (! postFinder[expando]))) {
      _$jscoverage['jquery.js'][2321]++;
      postFinder = setMatcher(postFinder, postSelector);
    }
    _$jscoverage['jquery.js'][2323]++;
    return markFunction((function (seed, results, context, xml) {
  _$jscoverage['jquery.js'][2324]++;
  var temp, i, elem, preMap = [], postMap = [], preexisting = results.length, elems = (seed || multipleContexts((selector || "*"), (context.nodeType? [context]: context), [])), matcherIn = ((preFilter && (seed || (! selector)))? condense(elems, preMap, preFilter, context, xml): elems), matcherOut = (matcher? ((postFinder || (seed? preFilter: (preexisting || postFilter)))? []: results): matcherIn);
  _$jscoverage['jquery.js'][2349]++;
  if (matcher) {
    _$jscoverage['jquery.js'][2350]++;
    matcher(matcherIn, matcherOut, context, xml);
  }
  _$jscoverage['jquery.js'][2354]++;
  if (postFilter) {
    _$jscoverage['jquery.js'][2355]++;
    temp = condense(matcherOut, postMap);
    _$jscoverage['jquery.js'][2356]++;
    postFilter(temp, [], context, xml);
    _$jscoverage['jquery.js'][2359]++;
    i = temp.length;
    _$jscoverage['jquery.js'][2360]++;
    while ((i--)) {
      _$jscoverage['jquery.js'][2361]++;
      if ((elem = temp[i])) {
        _$jscoverage['jquery.js'][2362]++;
        matcherOut[postMap[i]] = (! (matcherIn[postMap[i]] = elem));
      }
}
  }
  _$jscoverage['jquery.js'][2367]++;
  if (seed) {
    _$jscoverage['jquery.js'][2368]++;
    if ((postFinder || preFilter)) {
      _$jscoverage['jquery.js'][2369]++;
      if (postFinder) {
        _$jscoverage['jquery.js'][2371]++;
        temp = [];
        _$jscoverage['jquery.js'][2372]++;
        i = matcherOut.length;
        _$jscoverage['jquery.js'][2373]++;
        while ((i--)) {
          _$jscoverage['jquery.js'][2374]++;
          if ((elem = matcherOut[i])) {
            _$jscoverage['jquery.js'][2376]++;
            temp.push((matcherIn[i] = elem));
          }
}
        _$jscoverage['jquery.js'][2379]++;
        postFinder(null, (matcherOut = []), temp, xml);
      }
      _$jscoverage['jquery.js'][2383]++;
      i = matcherOut.length;
      _$jscoverage['jquery.js'][2384]++;
      while ((i--)) {
        _$jscoverage['jquery.js'][2385]++;
        if (((elem = matcherOut[i]) && ((temp = (postFinder? indexOf(seed, elem): preMap[i])) > -1))) {
          _$jscoverage['jquery.js'][2388]++;
          seed[temp] = (! (results[temp] = elem));
        }
}
    }
  }
  else {
    _$jscoverage['jquery.js'][2395]++;
    matcherOut = condense(((matcherOut === results)? matcherOut.splice(preexisting, matcherOut.length): matcherOut));
    _$jscoverage['jquery.js'][2400]++;
    if (postFinder) {
      _$jscoverage['jquery.js'][2401]++;
      postFinder(null, results, matcherOut, xml);
    }
    else {
      _$jscoverage['jquery.js'][2403]++;
      push.apply(results, matcherOut);
    }
  }
}));
}
  _$jscoverage['jquery.js'][2409]++;
  function matcherFromTokens(tokens) {
    _$jscoverage['jquery.js'][2410]++;
    var checkContext, matcher, j, len = tokens.length, leadingRelative = Expr.relative[tokens[0].type], implicitRelative = (leadingRelative || Expr.relative[" "]), i = (leadingRelative? 1: 0), matchContext = addCombinator((function (elem) {
  _$jscoverage['jquery.js'][2418]++;
  return (elem === checkContext);
}), implicitRelative, true), matchAnyContext = addCombinator((function (elem) {
  _$jscoverage['jquery.js'][2421]++;
  return (indexOf(checkContext, elem) > -1);
}), implicitRelative, true), matchers = [(function (elem, context, xml) {
  _$jscoverage['jquery.js'][2424]++;
  var ret = (((! leadingRelative) && (xml || (context !== outermostContext))) || ((checkContext = context).nodeType? matchContext(elem, context, xml): matchAnyContext(elem, context, xml)));
  _$jscoverage['jquery.js'][2429]++;
  checkContext = null;
  _$jscoverage['jquery.js'][2430]++;
  return ret;
})];
    _$jscoverage['jquery.js'][2433]++;
    for (; (i < len); (i++)) {
      _$jscoverage['jquery.js'][2434]++;
      if ((matcher = Expr.relative[tokens[i].type])) {
        _$jscoverage['jquery.js'][2435]++;
        matchers = [addCombinator(elementMatcher(matchers), matcher)];
      }
      else {
        _$jscoverage['jquery.js'][2437]++;
        matcher = Expr.filter[tokens[i].type].apply(null, tokens[i].matches);
        _$jscoverage['jquery.js'][2440]++;
        if (matcher[expando]) {
          _$jscoverage['jquery.js'][2442]++;
          j = (++i);
          _$jscoverage['jquery.js'][2443]++;
          for (; (j < len); (j++)) {
            _$jscoverage['jquery.js'][2444]++;
            if (Expr.relative[tokens[j].type]) {
              _$jscoverage['jquery.js'][2445]++;
              break;
            }
}
          _$jscoverage['jquery.js'][2448]++;
          return setMatcher(((i > 1) && elementMatcher(matchers)), ((i > 1) && toSelector(tokens.slice(0, (i - 1)).concat({value: ((tokens[(i - 2)].type === " ")? "*": "")})).replace(rtrim, "$1")), matcher, ((i < j) && matcherFromTokens(tokens.slice(i, j))), ((j < len) && matcherFromTokens((tokens = tokens.slice(j)))), ((j < len) && toSelector(tokens)));
        }
        _$jscoverage['jquery.js'][2460]++;
        matchers.push(matcher);
      }
}
    _$jscoverage['jquery.js'][2464]++;
    return elementMatcher(matchers);
}
  _$jscoverage['jquery.js'][2467]++;
  function matcherFromGroupMatchers(elementMatchers, setMatchers) {
    _$jscoverage['jquery.js'][2468]++;
    var bySet = (setMatchers.length > 0), byElement = (elementMatchers.length > 0), superMatcher = (function (seed, context, xml, results, outermost) {
  _$jscoverage['jquery.js'][2471]++;
  var elem, j, matcher, matchedCount = 0, i = "0", unmatched = (seed && []), setMatched = [], contextBackup = outermostContext, elems = (seed || (byElement && Expr.find.TAG("*", outermost))), dirrunsUnique = (dirruns += ((contextBackup == null)? 1: (Math.random() || 0.10000000000000001))), len = elems.length;
  _$jscoverage['jquery.js'][2483]++;
  if (outermost) {
    _$jscoverage['jquery.js'][2484]++;
    outermostContext = ((context === document) || context || outermost);
  }
  _$jscoverage['jquery.js'][2490]++;
  for (; ((i !== len) && ((elem = elems[i]) != null)); (i++)) {
    _$jscoverage['jquery.js'][2491]++;
    if ((byElement && elem)) {
      _$jscoverage['jquery.js'][2492]++;
      j = 0;
      _$jscoverage['jquery.js'][2493]++;
      if (((! context) && (elem.ownerDocument !== document))) {
        _$jscoverage['jquery.js'][2494]++;
        setDocument(elem);
        _$jscoverage['jquery.js'][2495]++;
        xml = (! documentIsHTML);
      }
      _$jscoverage['jquery.js'][2497]++;
      while ((matcher = elementMatchers[(j++)])) {
        _$jscoverage['jquery.js'][2498]++;
        if (matcher(elem, (context || document), xml)) {
          _$jscoverage['jquery.js'][2499]++;
          results.push(elem);
          _$jscoverage['jquery.js'][2500]++;
          break;
        }
}
      _$jscoverage['jquery.js'][2503]++;
      if (outermost) {
        _$jscoverage['jquery.js'][2504]++;
        dirruns = dirrunsUnique;
      }
    }
    _$jscoverage['jquery.js'][2509]++;
    if (bySet) {
      _$jscoverage['jquery.js'][2511]++;
      if ((elem = ((! matcher) && elem))) {
        _$jscoverage['jquery.js'][2512]++;
        (matchedCount--);
      }
      _$jscoverage['jquery.js'][2516]++;
      if (seed) {
        _$jscoverage['jquery.js'][2517]++;
        unmatched.push(elem);
      }
    }
}
  _$jscoverage['jquery.js'][2524]++;
  matchedCount += i;
  _$jscoverage['jquery.js'][2533]++;
  if ((bySet && (i !== matchedCount))) {
    _$jscoverage['jquery.js'][2534]++;
    j = 0;
    _$jscoverage['jquery.js'][2535]++;
    while ((matcher = setMatchers[(j++)])) {
      _$jscoverage['jquery.js'][2536]++;
      matcher(unmatched, setMatched, context, xml);
}
    _$jscoverage['jquery.js'][2539]++;
    if (seed) {
      _$jscoverage['jquery.js'][2541]++;
      if ((matchedCount > 0)) {
        _$jscoverage['jquery.js'][2542]++;
        while ((i--)) {
          _$jscoverage['jquery.js'][2543]++;
          if ((! (unmatched[i] || setMatched[i]))) {
            _$jscoverage['jquery.js'][2544]++;
            setMatched[i] = pop.call(results);
          }
}
      }
      _$jscoverage['jquery.js'][2550]++;
      setMatched = condense(setMatched);
    }
    _$jscoverage['jquery.js'][2554]++;
    push.apply(results, setMatched);
    _$jscoverage['jquery.js'][2557]++;
    if ((outermost && (! seed) && (setMatched.length > 0) && ((matchedCount + setMatchers.length) > 1))) {
      _$jscoverage['jquery.js'][2560]++;
      Sizzle.uniqueSort(results);
    }
  }
  _$jscoverage['jquery.js'][2565]++;
  if (outermost) {
    _$jscoverage['jquery.js'][2566]++;
    dirruns = dirrunsUnique;
    _$jscoverage['jquery.js'][2567]++;
    outermostContext = contextBackup;
  }
  _$jscoverage['jquery.js'][2570]++;
  return unmatched;
});
    _$jscoverage['jquery.js'][2573]++;
    return (bySet? markFunction(superMatcher): superMatcher);
}
  _$jscoverage['jquery.js'][2578]++;
  compile = (Sizzle.compile = (function (selector, match) {
  _$jscoverage['jquery.js'][2579]++;
  var i, setMatchers = [], elementMatchers = [], cached = compilerCache[(selector + " ")];
  _$jscoverage['jquery.js'][2584]++;
  if ((! cached)) {
    _$jscoverage['jquery.js'][2586]++;
    if ((! match)) {
      _$jscoverage['jquery.js'][2587]++;
      match = tokenize(selector);
    }
    _$jscoverage['jquery.js'][2589]++;
    i = match.length;
    _$jscoverage['jquery.js'][2590]++;
    while ((i--)) {
      _$jscoverage['jquery.js'][2591]++;
      cached = matcherFromTokens(match[i]);
      _$jscoverage['jquery.js'][2592]++;
      if (cached[expando]) {
        _$jscoverage['jquery.js'][2593]++;
        setMatchers.push(cached);
      }
      else {
        _$jscoverage['jquery.js'][2595]++;
        elementMatchers.push(cached);
      }
}
    _$jscoverage['jquery.js'][2600]++;
    cached = compilerCache(selector, matcherFromGroupMatchers(elementMatchers, setMatchers));
    _$jscoverage['jquery.js'][2603]++;
    cached.selector = selector;
  }
  _$jscoverage['jquery.js'][2605]++;
  return cached;
}));
  _$jscoverage['jquery.js'][2617]++;
  select = (Sizzle.select = (function (selector, context, results, seed) {
  _$jscoverage['jquery.js'][2618]++;
  var i, tokens, token, type, find, compiled = (((typeof selector) === "function") && selector), match = ((! seed) && tokenize((selector = (compiled.selector || selector))));
  _$jscoverage['jquery.js'][2622]++;
  results = (results || []);
  _$jscoverage['jquery.js'][2626]++;
  if ((match.length === 1)) {
    _$jscoverage['jquery.js'][2629]++;
    tokens = (match[0] = match[0].slice(0));
    _$jscoverage['jquery.js'][2630]++;
    if (((tokens.length > 2) && ((token = tokens[0]).type === "ID") && (context.nodeType === 9) && documentIsHTML && Expr.relative[tokens[1].type])) {
      _$jscoverage['jquery.js'][2633]++;
      context = (Expr.find.ID(token.matches[0].replace(runescape, funescape), context) || [])[0];
      _$jscoverage['jquery.js'][2634]++;
      if ((! context)) {
        _$jscoverage['jquery.js'][2635]++;
        return results;
      }
      else {
        _$jscoverage['jquery.js'][2638]++;
        if (compiled) {
          _$jscoverage['jquery.js'][2639]++;
          context = context.parentNode;
        }
      }
      _$jscoverage['jquery.js'][2642]++;
      selector = selector.slice(tokens.shift().value.length);
    }
    _$jscoverage['jquery.js'][2646]++;
    i = (matchExpr.needsContext.test(selector)? 0: tokens.length);
    _$jscoverage['jquery.js'][2647]++;
    while ((i--)) {
      _$jscoverage['jquery.js'][2648]++;
      token = tokens[i];
      _$jscoverage['jquery.js'][2651]++;
      if (Expr.relative[(type = token.type)]) {
        _$jscoverage['jquery.js'][2652]++;
        break;
      }
      _$jscoverage['jquery.js'][2654]++;
      if ((find = Expr.find[type])) {
        _$jscoverage['jquery.js'][2656]++;
        if ((seed = find(token.matches[0].replace(runescape, funescape), ((rsibling.test(tokens[0].type) && testContext(context.parentNode)) || context)))) {
          _$jscoverage['jquery.js'][2662]++;
          tokens.splice(i, 1);
          _$jscoverage['jquery.js'][2663]++;
          selector = (seed.length && toSelector(tokens));
          _$jscoverage['jquery.js'][2664]++;
          if ((! selector)) {
            _$jscoverage['jquery.js'][2665]++;
            push.apply(results, seed);
            _$jscoverage['jquery.js'][2666]++;
            return results;
          }
          _$jscoverage['jquery.js'][2669]++;
          break;
        }
      }
}
  }
  _$jscoverage['jquery.js'][2677]++;
  ((compiled || compile(selector, match)))(seed, context, (! documentIsHTML), results, ((! context) || (rsibling.test(selector) && testContext(context.parentNode)) || context));
  _$jscoverage['jquery.js'][2684]++;
  return results;
}));
  _$jscoverage['jquery.js'][2690]++;
  support.sortStable = (expando.split("").sort(sortOrder).join("") === expando);
  _$jscoverage['jquery.js'][2694]++;
  support.detectDuplicates = (! (! hasDuplicate));
  _$jscoverage['jquery.js'][2697]++;
  setDocument();
  _$jscoverage['jquery.js'][2701]++;
  support.sortDetached = assert((function (el) {
  _$jscoverage['jquery.js'][2703]++;
  return (el.compareDocumentPosition(document.createElement("fieldset")) & 1);
}));
  _$jscoverage['jquery.js'][2709]++;
  if ((! assert((function (el) {
  _$jscoverage['jquery.js'][2710]++;
  el.innerHTML = "<a href='#'></a>";
  _$jscoverage['jquery.js'][2711]++;
  return (el.firstChild.getAttribute("href") === "#");
})))) {
    _$jscoverage['jquery.js'][2713]++;
    addHandle("type|href|height|width", (function (elem, name, isXML) {
  _$jscoverage['jquery.js'][2714]++;
  if ((! isXML)) {
    _$jscoverage['jquery.js'][2715]++;
    return elem.getAttribute(name, ((name.toLowerCase() === "type")? 1: 2));
  }
}));
  }
  _$jscoverage['jquery.js'][2722]++;
  if (((! support.attributes) || (! assert((function (el) {
  _$jscoverage['jquery.js'][2723]++;
  el.innerHTML = "<input/>";
  _$jscoverage['jquery.js'][2724]++;
  el.firstChild.setAttribute("value", "");
  _$jscoverage['jquery.js'][2725]++;
  return (el.firstChild.getAttribute("value") === "");
}))))) {
    _$jscoverage['jquery.js'][2727]++;
    addHandle("value", (function (elem, name, isXML) {
  _$jscoverage['jquery.js'][2728]++;
  if (((! isXML) && (elem.nodeName.toLowerCase() === "input"))) {
    _$jscoverage['jquery.js'][2729]++;
    return elem.defaultValue;
  }
}));
  }
  _$jscoverage['jquery.js'][2736]++;
  if ((! assert((function (el) {
  _$jscoverage['jquery.js'][2737]++;
  return (el.getAttribute("disabled") == null);
})))) {
    _$jscoverage['jquery.js'][2739]++;
    addHandle(booleans, (function (elem, name, isXML) {
  _$jscoverage['jquery.js'][2740]++;
  var val;
  _$jscoverage['jquery.js'][2741]++;
  if ((! isXML)) {
    _$jscoverage['jquery.js'][2742]++;
    return ((elem[name] === true)? name.toLowerCase(): (((val = elem.getAttributeNode(name)) && val.specified)? val.value: null));
  }
}));
  }
  _$jscoverage['jquery.js'][2750]++;
  return Sizzle;
})(window);
  _$jscoverage['jquery.js'][2756]++;
  jQuery.find = Sizzle;
  _$jscoverage['jquery.js'][2757]++;
  jQuery.expr = Sizzle.selectors;
  _$jscoverage['jquery.js'][2760]++;
  jQuery.expr[":"] = jQuery.expr.pseudos;
  _$jscoverage['jquery.js'][2761]++;
  jQuery.uniqueSort = (jQuery.unique = Sizzle.uniqueSort);
  _$jscoverage['jquery.js'][2762]++;
  jQuery.text = Sizzle.getText;
  _$jscoverage['jquery.js'][2763]++;
  jQuery.isXMLDoc = Sizzle.isXML;
  _$jscoverage['jquery.js'][2764]++;
  jQuery.contains = Sizzle.contains;
  _$jscoverage['jquery.js'][2765]++;
  jQuery.escapeSelector = Sizzle.escape;
  _$jscoverage['jquery.js'][2770]++;
  var dir = (function (elem, dir, until) {
  _$jscoverage['jquery.js'][2771]++;
  var matched = [], truncate = (until !== undefined);
  _$jscoverage['jquery.js'][2774]++;
  while (((elem = elem[dir]) && (elem.nodeType !== 9))) {
    _$jscoverage['jquery.js'][2775]++;
    if ((elem.nodeType === 1)) {
      _$jscoverage['jquery.js'][2776]++;
      if ((truncate && jQuery(elem).is(until))) {
        _$jscoverage['jquery.js'][2777]++;
        break;
      }
      _$jscoverage['jquery.js'][2779]++;
      matched.push(elem);
    }
}
  _$jscoverage['jquery.js'][2782]++;
  return matched;
});
  _$jscoverage['jquery.js'][2786]++;
  var siblings = (function (n, elem) {
  _$jscoverage['jquery.js'][2787]++;
  var matched = [];
  _$jscoverage['jquery.js'][2789]++;
  for (; n; (n = n.nextSibling)) {
    _$jscoverage['jquery.js'][2790]++;
    if (((n.nodeType === 1) && (n !== elem))) {
      _$jscoverage['jquery.js'][2791]++;
      matched.push(n);
    }
}
  _$jscoverage['jquery.js'][2795]++;
  return matched;
});
  _$jscoverage['jquery.js'][2799]++;
  var rneedsContext = jQuery.expr.match.needsContext;
  _$jscoverage['jquery.js'][2803]++;
  function nodeName(elem, name) {
    _$jscoverage['jquery.js'][2805]++;
    return (elem.nodeName && (elem.nodeName.toLowerCase() === name.toLowerCase()));
}
  _$jscoverage['jquery.js'][2807]++;
  ;
  _$jscoverage['jquery.js'][2808]++;
  var rsingleTag = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;
  _$jscoverage['jquery.js'][2813]++;
  function winnow(elements, qualifier, not) {
    _$jscoverage['jquery.js'][2814]++;
    if (isFunction(qualifier)) {
      _$jscoverage['jquery.js'][2815]++;
      return jQuery.grep(elements, (function (elem, i) {
  _$jscoverage['jquery.js'][2816]++;
  return ((! (! qualifier.call(elem, i, elem))) !== not);
}));
    }
    _$jscoverage['jquery.js'][2821]++;
    if (qualifier.nodeType) {
      _$jscoverage['jquery.js'][2822]++;
      return jQuery.grep(elements, (function (elem) {
  _$jscoverage['jquery.js'][2823]++;
  return ((elem === qualifier) !== not);
}));
    }
    _$jscoverage['jquery.js'][2828]++;
    if (((typeof qualifier) !== "string")) {
      _$jscoverage['jquery.js'][2829]++;
      return jQuery.grep(elements, (function (elem) {
  _$jscoverage['jquery.js'][2830]++;
  return ((indexOf.call(qualifier, elem) > -1) !== not);
}));
    }
    _$jscoverage['jquery.js'][2835]++;
    return jQuery.filter(qualifier, elements, not);
}
  _$jscoverage['jquery.js'][2838]++;
  jQuery.filter = (function (expr, elems, not) {
  _$jscoverage['jquery.js'][2839]++;
  var elem = elems[0];
  _$jscoverage['jquery.js'][2841]++;
  if (not) {
    _$jscoverage['jquery.js'][2842]++;
    expr = (":not(" + expr + ")");
  }
  _$jscoverage['jquery.js'][2845]++;
  if (((elems.length === 1) && (elem.nodeType === 1))) {
    _$jscoverage['jquery.js'][2846]++;
    return (jQuery.find.matchesSelector(elem, expr)? [elem]: []);
  }
  _$jscoverage['jquery.js'][2849]++;
  return jQuery.find.matches(expr, jQuery.grep(elems, (function (elem) {
  _$jscoverage['jquery.js'][2850]++;
  return (elem.nodeType === 1);
})));
});
  _$jscoverage['jquery.js'][2854]++;
  jQuery.fn.extend({find: (function (selector) {
  _$jscoverage['jquery.js'][2856]++;
  var i, ret, len = this.length, self = this;
  _$jscoverage['jquery.js'][2860]++;
  if (((typeof selector) !== "string")) {
    _$jscoverage['jquery.js'][2861]++;
    return this.pushStack(jQuery(selector).filter((function () {
  _$jscoverage['jquery.js'][2862]++;
  for (i = 0; (i < len); (i++)) {
    _$jscoverage['jquery.js'][2863]++;
    if (jQuery.contains(self[i], this)) {
      _$jscoverage['jquery.js'][2864]++;
      return true;
    }
}
})));
  }
  _$jscoverage['jquery.js'][2870]++;
  ret = this.pushStack([]);
  _$jscoverage['jquery.js'][2872]++;
  for (i = 0; (i < len); (i++)) {
    _$jscoverage['jquery.js'][2873]++;
    jQuery.find(selector, self[i], ret);
}
  _$jscoverage['jquery.js'][2876]++;
  return ((len > 1)? jQuery.uniqueSort(ret): ret);
}), filter: (function (selector) {
  _$jscoverage['jquery.js'][2879]++;
  return this.pushStack(winnow(this, (selector || []), false));
}), not: (function (selector) {
  _$jscoverage['jquery.js'][2882]++;
  return this.pushStack(winnow(this, (selector || []), true));
}), is: (function (selector) {
  _$jscoverage['jquery.js'][2885]++;
  return (! (! winnow(this, ((((typeof selector) === "string") && rneedsContext.test(selector))? jQuery(selector): (selector || [])), false).length));
})});
  _$jscoverage['jquery.js'][2903]++;
  var rootjQuery, rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/, init = (jQuery.fn.init = (function (selector, context, root) {
  _$jscoverage['jquery.js'][2912]++;
  var match, elem;
  _$jscoverage['jquery.js'][2915]++;
  if ((! selector)) {
    _$jscoverage['jquery.js'][2916]++;
    return this;
  }
  _$jscoverage['jquery.js'][2921]++;
  root = (root || rootjQuery);
  _$jscoverage['jquery.js'][2924]++;
  if (((typeof selector) === "string")) {
    _$jscoverage['jquery.js'][2925]++;
    if (((selector[0] === "<") && (selector[(selector.length - 1)] === ">") && (selector.length >= 3))) {
      _$jscoverage['jquery.js'][2930]++;
      match = [null, selector, null];
    }
    else {
      _$jscoverage['jquery.js'][2933]++;
      match = rquickExpr.exec(selector);
    }
    _$jscoverage['jquery.js'][2937]++;
    if ((match && (match[1] || (! context)))) {
      _$jscoverage['jquery.js'][2940]++;
      if (match[1]) {
        _$jscoverage['jquery.js'][2941]++;
        context = ((context instanceof jQuery)? context[0]: context);
        _$jscoverage['jquery.js'][2945]++;
        jQuery.merge(this, jQuery.parseHTML(match[1], ((context && context.nodeType)? (context.ownerDocument || context): document), true));
        _$jscoverage['jquery.js'][2952]++;
        if ((rsingleTag.test(match[1]) && jQuery.isPlainObject(context))) {
          _$jscoverage['jquery.js'][2953]++;
          for (match in context) {
            _$jscoverage['jquery.js'][2956]++;
            if (isFunction(this[match])) {
              _$jscoverage['jquery.js'][2957]++;
              (this[match])(context[match]);
            }
            else {
              _$jscoverage['jquery.js'][2961]++;
              this.attr(match, context[match]);
            }
}
        }
        _$jscoverage['jquery.js'][2966]++;
        return this;
      }
      else {
        _$jscoverage['jquery.js'][2970]++;
        elem = document.getElementById(match[2]);
        _$jscoverage['jquery.js'][2972]++;
        if (elem) {
          _$jscoverage['jquery.js'][2975]++;
          this[0] = elem;
          _$jscoverage['jquery.js'][2976]++;
          this.length = 1;
        }
        _$jscoverage['jquery.js'][2978]++;
        return this;
      }
    }
    else {
      _$jscoverage['jquery.js'][2982]++;
      if (((! context) || context.jquery)) {
        _$jscoverage['jquery.js'][2983]++;
        return (context || root).find(selector);
      }
      else {
        _$jscoverage['jquery.js'][2988]++;
        return this.constructor(context).find(selector);
      }
    }
  }
  else {
    _$jscoverage['jquery.js'][2992]++;
    if (selector.nodeType) {
      _$jscoverage['jquery.js'][2993]++;
      this[0] = selector;
      _$jscoverage['jquery.js'][2994]++;
      this.length = 1;
      _$jscoverage['jquery.js'][2995]++;
      return this;
    }
    else {
      _$jscoverage['jquery.js'][2999]++;
      if (isFunction(selector)) {
        _$jscoverage['jquery.js'][3000]++;
        return ((root.ready !== undefined)? root.ready(selector): selector(jQuery));
      }
    }
  }
  _$jscoverage['jquery.js'][3007]++;
  return jQuery.makeArray(selector, this);
}));
  _$jscoverage['jquery.js'][3011]++;
  init.prototype = jQuery.fn;
  _$jscoverage['jquery.js'][3014]++;
  rootjQuery = jQuery(document);
  _$jscoverage['jquery.js'][3017]++;
  var rparentsprev = /^(?:parents|prev(?:Until|All))/, guaranteedUnique = {children: true, contents: true, next: true, prev: true};
  _$jscoverage['jquery.js'][3027]++;
  jQuery.fn.extend({has: (function (target) {
  _$jscoverage['jquery.js'][3029]++;
  var targets = jQuery(target, this), l = targets.length;
  _$jscoverage['jquery.js'][3032]++;
  return this.filter((function () {
  _$jscoverage['jquery.js'][3033]++;
  var i = 0;
  _$jscoverage['jquery.js'][3034]++;
  for (; (i < l); (i++)) {
    _$jscoverage['jquery.js'][3035]++;
    if (jQuery.contains(this, targets[i])) {
      _$jscoverage['jquery.js'][3036]++;
      return true;
    }
}
}));
}), closest: (function (selectors, context) {
  _$jscoverage['jquery.js'][3043]++;
  var cur, i = 0, l = this.length, matched = [], targets = (((typeof selectors) !== "string") && jQuery(selectors));
  _$jscoverage['jquery.js'][3050]++;
  if ((! rneedsContext.test(selectors))) {
    _$jscoverage['jquery.js'][3051]++;
    for (; (i < l); (i++)) {
      _$jscoverage['jquery.js'][3052]++;
      for (cur = this[i]; (cur && (cur !== context)); (cur = cur.parentNode)) {
        _$jscoverage['jquery.js'][3055]++;
        if (((cur.nodeType < 11) && (targets? (targets.index(cur) > -1): ((cur.nodeType === 1) && jQuery.find.matchesSelector(cur, selectors))))) {
          _$jscoverage['jquery.js'][3062]++;
          matched.push(cur);
          _$jscoverage['jquery.js'][3063]++;
          break;
        }
}
}
  }
  _$jscoverage['jquery.js'][3069]++;
  return this.pushStack(((matched.length > 1)? jQuery.uniqueSort(matched): matched));
}), index: (function (elem) {
  _$jscoverage['jquery.js'][3076]++;
  if ((! elem)) {
    _$jscoverage['jquery.js'][3077]++;
    return ((this[0] && this[0].parentNode)? this.first().prevAll().length: -1);
  }
  _$jscoverage['jquery.js'][3081]++;
  if (((typeof elem) === "string")) {
    _$jscoverage['jquery.js'][3082]++;
    return indexOf.call(jQuery(elem), this[0]);
  }
  _$jscoverage['jquery.js'][3086]++;
  return indexOf.call(this, (elem.jquery? elem[0]: elem));
}), add: (function (selector, context) {
  _$jscoverage['jquery.js'][3094]++;
  return this.pushStack(jQuery.uniqueSort(jQuery.merge(this.get(), jQuery(selector, context))));
}), addBack: (function (selector) {
  _$jscoverage['jquery.js'][3102]++;
  return this.add(((selector == null)? this.prevObject: this.prevObject.filter(selector)));
})});
  _$jscoverage['jquery.js'][3108]++;
  function sibling(cur, dir) {
    _$jscoverage['jquery.js'][3109]++;
    while (((cur = cur[dir]) && (cur.nodeType !== 1))) {
}
    _$jscoverage['jquery.js'][3110]++;
    return cur;
}
  _$jscoverage['jquery.js'][3113]++;
  jQuery.each({parent: (function (elem) {
  _$jscoverage['jquery.js'][3115]++;
  var parent = elem.parentNode;
  _$jscoverage['jquery.js'][3116]++;
  return ((parent && (parent.nodeType !== 11))? parent: null);
}), parents: (function (elem) {
  _$jscoverage['jquery.js'][3119]++;
  return dir(elem, "parentNode");
}), parentsUntil: (function (elem, i, until) {
  _$jscoverage['jquery.js'][3122]++;
  return dir(elem, "parentNode", until);
}), next: (function (elem) {
  _$jscoverage['jquery.js'][3125]++;
  return sibling(elem, "nextSibling");
}), prev: (function (elem) {
  _$jscoverage['jquery.js'][3128]++;
  return sibling(elem, "previousSibling");
}), nextAll: (function (elem) {
  _$jscoverage['jquery.js'][3131]++;
  return dir(elem, "nextSibling");
}), prevAll: (function (elem) {
  _$jscoverage['jquery.js'][3134]++;
  return dir(elem, "previousSibling");
}), nextUntil: (function (elem, i, until) {
  _$jscoverage['jquery.js'][3137]++;
  return dir(elem, "nextSibling", until);
}), prevUntil: (function (elem, i, until) {
  _$jscoverage['jquery.js'][3140]++;
  return dir(elem, "previousSibling", until);
}), siblings: (function (elem) {
  _$jscoverage['jquery.js'][3143]++;
  return siblings((elem.parentNode || {}).firstChild, elem);
}), children: (function (elem) {
  _$jscoverage['jquery.js'][3146]++;
  return siblings(elem.firstChild);
}), contents: (function (elem) {
  _$jscoverage['jquery.js'][3149]++;
  if (nodeName(elem, "iframe")) {
    _$jscoverage['jquery.js'][3150]++;
    return elem.contentDocument;
  }
  _$jscoverage['jquery.js'][3156]++;
  if (nodeName(elem, "template")) {
    _$jscoverage['jquery.js'][3157]++;
    elem = (elem.content || elem);
  }
  _$jscoverage['jquery.js'][3160]++;
  return jQuery.merge([], elem.childNodes);
})}, (function (name, fn) {
  _$jscoverage['jquery.js'][3163]++;
  jQuery.fn[name] = (function (until, selector) {
  _$jscoverage['jquery.js'][3164]++;
  var matched = jQuery.map(this, fn, until);
  _$jscoverage['jquery.js'][3166]++;
  if ((name.slice(-5) !== "Until")) {
    _$jscoverage['jquery.js'][3167]++;
    selector = until;
  }
  _$jscoverage['jquery.js'][3170]++;
  if ((selector && ((typeof selector) === "string"))) {
    _$jscoverage['jquery.js'][3171]++;
    matched = jQuery.filter(selector, matched);
  }
  _$jscoverage['jquery.js'][3174]++;
  if ((this.length > 1)) {
    _$jscoverage['jquery.js'][3177]++;
    if ((! guaranteedUnique[name])) {
      _$jscoverage['jquery.js'][3178]++;
      jQuery.uniqueSort(matched);
    }
    _$jscoverage['jquery.js'][3182]++;
    if (rparentsprev.test(name)) {
      _$jscoverage['jquery.js'][3183]++;
      matched.reverse();
    }
  }
  _$jscoverage['jquery.js'][3187]++;
  return this.pushStack(matched);
});
}));
  _$jscoverage['jquery.js'][3190]++;
  var rnothtmlwhite = /[^\x20\t\r\n\f]+/g;
  _$jscoverage['jquery.js'][3195]++;
  function createOptions(options) {
    _$jscoverage['jquery.js'][3196]++;
    var object = {};
    _$jscoverage['jquery.js'][3197]++;
    jQuery.each((options.match(rnothtmlwhite) || []), (function (_, flag) {
  _$jscoverage['jquery.js'][3198]++;
  object[flag] = true;
}));
    _$jscoverage['jquery.js'][3200]++;
    return object;
}
  _$jscoverage['jquery.js'][3225]++;
  jQuery.Callbacks = (function (options) {
  _$jscoverage['jquery.js'][3229]++;
  options = (((typeof options) === "string")? createOptions(options): jQuery.extend({}, options));
  _$jscoverage['jquery.js'][3233]++;
  var firing, memory, fired, locked, list = [], queue = [], firingIndex = -1, fire = (function () {
  _$jscoverage['jquery.js'][3258]++;
  locked = (locked || options.once);
  _$jscoverage['jquery.js'][3262]++;
  fired = (firing = true);
  _$jscoverage['jquery.js'][3263]++;
  for (; queue.length; (firingIndex = -1)) {
    _$jscoverage['jquery.js'][3264]++;
    memory = queue.shift();
    _$jscoverage['jquery.js'][3265]++;
    while (((++firingIndex) < list.length)) {
      _$jscoverage['jquery.js'][3268]++;
      if (((list[firingIndex].apply(memory[0], memory[1]) === false) && options.stopOnFalse)) {
        _$jscoverage['jquery.js'][3272]++;
        firingIndex = list.length;
        _$jscoverage['jquery.js'][3273]++;
        memory = false;
      }
}
}
  _$jscoverage['jquery.js'][3279]++;
  if ((! options.memory)) {
    _$jscoverage['jquery.js'][3280]++;
    memory = false;
  }
  _$jscoverage['jquery.js'][3283]++;
  firing = false;
  _$jscoverage['jquery.js'][3286]++;
  if (locked) {
    _$jscoverage['jquery.js'][3289]++;
    if (memory) {
      _$jscoverage['jquery.js'][3290]++;
      list = [];
    }
    else {
      _$jscoverage['jquery.js'][3294]++;
      list = "";
    }
  }
}), self = {add: (function () {
  _$jscoverage['jquery.js'][3304]++;
  if (list) {
    _$jscoverage['jquery.js'][3307]++;
    if ((memory && (! firing))) {
      _$jscoverage['jquery.js'][3308]++;
      firingIndex = (list.length - 1);
      _$jscoverage['jquery.js'][3309]++;
      queue.push(memory);
    }
    _$jscoverage['jquery.js'][3312]++;
    (function add(args) {
  _$jscoverage['jquery.js'][3313]++;
  jQuery.each(args, (function (_, arg) {
  _$jscoverage['jquery.js'][3314]++;
  if (isFunction(arg)) {
    _$jscoverage['jquery.js'][3315]++;
    if (((! options.unique) || (! self.has(arg)))) {
      _$jscoverage['jquery.js'][3316]++;
      list.push(arg);
    }
  }
  else {
    _$jscoverage['jquery.js'][3318]++;
    if ((arg && arg.length && (toType(arg) !== "string"))) {
      _$jscoverage['jquery.js'][3321]++;
      add(arg);
    }
  }
}));
})(arguments);
    _$jscoverage['jquery.js'][3326]++;
    if ((memory && (! firing))) {
      _$jscoverage['jquery.js'][3327]++;
      fire();
    }
  }
  _$jscoverage['jquery.js'][3330]++;
  return this;
}), remove: (function () {
  _$jscoverage['jquery.js'][3335]++;
  jQuery.each(arguments, (function (_, arg) {
  _$jscoverage['jquery.js'][3336]++;
  var index;
  _$jscoverage['jquery.js'][3337]++;
  while (((index = jQuery.inArray(arg, list, index)) > -1)) {
    _$jscoverage['jquery.js'][3338]++;
    list.splice(index, 1);
    _$jscoverage['jquery.js'][3341]++;
    if ((index <= firingIndex)) {
      _$jscoverage['jquery.js'][3342]++;
      (firingIndex--);
    }
}
}));
  _$jscoverage['jquery.js'][3346]++;
  return this;
}), has: (function (fn) {
  _$jscoverage['jquery.js'][3352]++;
  return (fn? (jQuery.inArray(fn, list) > -1): (list.length > 0));
}), empty: (function () {
  _$jscoverage['jquery.js'][3359]++;
  if (list) {
    _$jscoverage['jquery.js'][3360]++;
    list = [];
  }
  _$jscoverage['jquery.js'][3362]++;
  return this;
}), disable: (function () {
  _$jscoverage['jquery.js'][3369]++;
  locked = (queue = []);
  _$jscoverage['jquery.js'][3370]++;
  list = (memory = "");
  _$jscoverage['jquery.js'][3371]++;
  return this;
}), disabled: (function () {
  _$jscoverage['jquery.js'][3374]++;
  return (! list);
}), lock: (function () {
  _$jscoverage['jquery.js'][3381]++;
  locked = (queue = []);
  _$jscoverage['jquery.js'][3382]++;
  if (((! memory) && (! firing))) {
    _$jscoverage['jquery.js'][3383]++;
    list = (memory = "");
  }
  _$jscoverage['jquery.js'][3385]++;
  return this;
}), locked: (function () {
  _$jscoverage['jquery.js'][3388]++;
  return (! (! locked));
}), fireWith: (function (context, args) {
  _$jscoverage['jquery.js'][3393]++;
  if ((! locked)) {
    _$jscoverage['jquery.js'][3394]++;
    args = (args || []);
    _$jscoverage['jquery.js'][3395]++;
    args = [context, (args.slice? args.slice(): args)];
    _$jscoverage['jquery.js'][3396]++;
    queue.push(args);
    _$jscoverage['jquery.js'][3397]++;
    if ((! firing)) {
      _$jscoverage['jquery.js'][3398]++;
      fire();
    }
  }
  _$jscoverage['jquery.js'][3401]++;
  return this;
}), fire: (function () {
  _$jscoverage['jquery.js'][3406]++;
  self.fireWith(this, arguments);
  _$jscoverage['jquery.js'][3407]++;
  return this;
}), fired: (function () {
  _$jscoverage['jquery.js'][3412]++;
  return (! (! fired));
})};
  _$jscoverage['jquery.js'][3416]++;
  return self;
});
  _$jscoverage['jquery.js'][3420]++;
  function Identity(v) {
    _$jscoverage['jquery.js'][3421]++;
    return v;
}
  _$jscoverage['jquery.js'][3423]++;
  function Thrower(ex) {
    _$jscoverage['jquery.js'][3424]++;
    throw ex;
}
  _$jscoverage['jquery.js'][3427]++;
  function adoptValue(value, resolve, reject, noValue) {
    _$jscoverage['jquery.js'][3428]++;
    var method;
    _$jscoverage['jquery.js'][3430]++;
    try {
      _$jscoverage['jquery.js'][3433]++;
      if ((value && isFunction((method = value.promise)))) {
        _$jscoverage['jquery.js'][3434]++;
        method.call(value).done(resolve).fail(reject);
      }
      else {
        _$jscoverage['jquery.js'][3437]++;
        if ((value && isFunction((method = value.then)))) {
          _$jscoverage['jquery.js'][3438]++;
          method.call(value, resolve, reject);
        }
        else {
          _$jscoverage['jquery.js'][3446]++;
          resolve.apply(undefined, [value].slice(noValue));
        }
      }
    }
    catch (value) {
      _$jscoverage['jquery.js'][3456]++;
      reject.apply(undefined, [value]);
    }
}
  _$jscoverage['jquery.js'][3460]++;
  jQuery.extend({Deferred: (function (func) {
  _$jscoverage['jquery.js'][3463]++;
  var tuples = [["notify", "progress", jQuery.Callbacks("memory"), jQuery.Callbacks("memory"), 2], ["resolve", "done", jQuery.Callbacks("once memory"), jQuery.Callbacks("once memory"), 0, "resolved"], ["reject", "fail", jQuery.Callbacks("once memory"), jQuery.Callbacks("once memory"), 1, "rejected"]], state = "pending", promise = {state: (function () {
  _$jscoverage['jquery.js'][3477]++;
  return state;
}), always: (function () {
  _$jscoverage['jquery.js'][3480]++;
  deferred.done(arguments).fail(arguments);
  _$jscoverage['jquery.js'][3481]++;
  return this;
}), "catch": (function (fn) {
  _$jscoverage['jquery.js'][3484]++;
  return promise.then(null, fn);
}), pipe: (function () {
  _$jscoverage['jquery.js'][3489]++;
  var fns = arguments;
  _$jscoverage['jquery.js'][3491]++;
  return jQuery.Deferred((function (newDefer) {
  _$jscoverage['jquery.js'][3492]++;
  jQuery.each(tuples, (function (i, tuple) {
  _$jscoverage['jquery.js'][3495]++;
  var fn = (isFunction(fns[tuple[4]]) && fns[tuple[4]]);
  _$jscoverage['jquery.js'][3500]++;
  (deferred[tuple[1]])((function () {
  _$jscoverage['jquery.js'][3501]++;
  var returned = (fn && fn.apply(this, arguments));
  _$jscoverage['jquery.js'][3502]++;
  if ((returned && isFunction(returned.promise))) {
    _$jscoverage['jquery.js'][3503]++;
    returned.promise().progress(newDefer.notify).done(newDefer.resolve).fail(newDefer.reject);
  }
  else {
    _$jscoverage['jquery.js'][3508]++;
    (newDefer[(tuple[0] + "With")])(this, (fn? [returned]: arguments));
  }
}));
}));
  _$jscoverage['jquery.js'][3515]++;
  fns = null;
})).promise();
}), then: (function (onFulfilled, onRejected, onProgress) {
  _$jscoverage['jquery.js'][3519]++;
  var maxDepth = 0;
  _$jscoverage['jquery.js'][3520]++;
  function resolve(depth, deferred, handler, special) {
    _$jscoverage['jquery.js'][3521]++;
    return (function () {
  _$jscoverage['jquery.js'][3522]++;
  var that = this, args = arguments, mightThrow = (function () {
  _$jscoverage['jquery.js'][3525]++;
  var returned, then;
  _$jscoverage['jquery.js'][3530]++;
  if ((depth < maxDepth)) {
    _$jscoverage['jquery.js'][3531]++;
    return;
  }
  _$jscoverage['jquery.js'][3534]++;
  returned = handler.apply(that, args);
  _$jscoverage['jquery.js'][3538]++;
  if ((returned === deferred.promise())) {
    _$jscoverage['jquery.js'][3539]++;
    throw new TypeError("Thenable self-resolution");
  }
  _$jscoverage['jquery.js'][3546]++;
  then = (returned && (((typeof returned) === "object") || ((typeof returned) === "function")) && returned.then);
  _$jscoverage['jquery.js'][3556]++;
  if (isFunction(then)) {
    _$jscoverage['jquery.js'][3559]++;
    if (special) {
      _$jscoverage['jquery.js'][3560]++;
      then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special));
    }
    else {
      _$jscoverage['jquery.js'][3570]++;
      (maxDepth++);
      _$jscoverage['jquery.js'][3572]++;
      then.call(returned, resolve(maxDepth, deferred, Identity, special), resolve(maxDepth, deferred, Thrower, special), resolve(maxDepth, deferred, Identity, deferred.notifyWith));
    }
  }
  else {
    _$jscoverage['jquery.js'][3586]++;
    if ((handler !== Identity)) {
      _$jscoverage['jquery.js'][3587]++;
      that = undefined;
      _$jscoverage['jquery.js'][3588]++;
      args = [returned];
    }
    _$jscoverage['jquery.js'][3593]++;
    ((special || deferred.resolveWith))(that, args);
  }
}), process = (special? mightThrow: (function () {
  _$jscoverage['jquery.js'][3601]++;
  try {
    _$jscoverage['jquery.js'][3602]++;
    mightThrow();
  }
  catch (e) {
    _$jscoverage['jquery.js'][3605]++;
    if (jQuery.Deferred.exceptionHook) {
      _$jscoverage['jquery.js'][3606]++;
      jQuery.Deferred.exceptionHook(e, process.stackTrace);
    }
    _$jscoverage['jquery.js'][3613]++;
    if (((depth + 1) >= maxDepth)) {
      _$jscoverage['jquery.js'][3617]++;
      if ((handler !== Thrower)) {
        _$jscoverage['jquery.js'][3618]++;
        that = undefined;
        _$jscoverage['jquery.js'][3619]++;
        args = [e];
      }
      _$jscoverage['jquery.js'][3622]++;
      deferred.rejectWith(that, args);
    }
  }
}));
  _$jscoverage['jquery.js'][3631]++;
  if (depth) {
    _$jscoverage['jquery.js'][3632]++;
    process();
  }
  else {
    _$jscoverage['jquery.js'][3637]++;
    if (jQuery.Deferred.getStackHook) {
      _$jscoverage['jquery.js'][3638]++;
      process.stackTrace = jQuery.Deferred.getStackHook();
    }
    _$jscoverage['jquery.js'][3640]++;
    window.setTimeout(process);
  }
});
}
  _$jscoverage['jquery.js'][3645]++;
  return jQuery.Deferred((function (newDefer) {
  _$jscoverage['jquery.js'][3648]++;
  tuples[0][3].add(resolve(0, newDefer, (isFunction(onProgress)? onProgress: Identity), newDefer.notifyWith));
  _$jscoverage['jquery.js'][3660]++;
  tuples[1][3].add(resolve(0, newDefer, (isFunction(onFulfilled)? onFulfilled: Identity)));
  _$jscoverage['jquery.js'][3671]++;
  tuples[2][3].add(resolve(0, newDefer, (isFunction(onRejected)? onRejected: Thrower)));
})).promise();
}), promise: (function (obj) {
  _$jscoverage['jquery.js'][3686]++;
  return ((obj != null)? jQuery.extend(obj, promise): promise);
})}, deferred = {};
  _$jscoverage['jquery.js'][3692]++;
  jQuery.each(tuples, (function (i, tuple) {
  _$jscoverage['jquery.js'][3693]++;
  var list = tuple[2], stateString = tuple[5];
  _$jscoverage['jquery.js'][3699]++;
  promise[tuple[1]] = list.add;
  _$jscoverage['jquery.js'][3702]++;
  if (stateString) {
    _$jscoverage['jquery.js'][3703]++;
    list.add((function () {
  _$jscoverage['jquery.js'][3708]++;
  state = stateString;
}), tuples[(3 - i)][2].disable, tuples[(3 - i)][3].disable, tuples[0][2].lock, tuples[0][3].lock);
  }
  _$jscoverage['jquery.js'][3730]++;
  list.add(tuple[3].fire);
  _$jscoverage['jquery.js'][3735]++;
  deferred[tuple[0]] = (function () {
  _$jscoverage['jquery.js'][3736]++;
  (deferred[(tuple[0] + "With")])(((this === deferred)? undefined: this), arguments);
  _$jscoverage['jquery.js'][3737]++;
  return this;
});
  _$jscoverage['jquery.js'][3743]++;
  deferred[(tuple[0] + "With")] = list.fireWith;
}));
  _$jscoverage['jquery.js'][3747]++;
  promise.promise(deferred);
  _$jscoverage['jquery.js'][3750]++;
  if (func) {
    _$jscoverage['jquery.js'][3751]++;
    func.call(deferred, deferred);
  }
  _$jscoverage['jquery.js'][3755]++;
  return deferred;
}), when: (function (singleValue) {
  _$jscoverage['jquery.js'][3760]++;
  var remaining = arguments.length, i = remaining, resolveContexts = Array(i), resolveValues = slice.call(arguments), master = jQuery.Deferred(), updateFunc = (function (i) {
  _$jscoverage['jquery.js'][3777]++;
  return (function (value) {
  _$jscoverage['jquery.js'][3778]++;
  resolveContexts[i] = this;
  _$jscoverage['jquery.js'][3779]++;
  resolveValues[i] = ((arguments.length > 1)? slice.call(arguments): value);
  _$jscoverage['jquery.js'][3780]++;
  if ((! (--remaining))) {
    _$jscoverage['jquery.js'][3781]++;
    master.resolveWith(resolveContexts, resolveValues);
  }
});
});
  _$jscoverage['jquery.js'][3787]++;
  if ((remaining <= 1)) {
    _$jscoverage['jquery.js'][3788]++;
    adoptValue(singleValue, master.done(updateFunc(i)).resolve, master.reject, (! remaining));
    _$jscoverage['jquery.js'][3792]++;
    if (((master.state() === "pending") || isFunction((resolveValues[i] && resolveValues[i].then)))) {
      _$jscoverage['jquery.js'][3795]++;
      return master.then();
    }
  }
  _$jscoverage['jquery.js'][3800]++;
  while ((i--)) {
    _$jscoverage['jquery.js'][3801]++;
    adoptValue(resolveValues[i], updateFunc(i), master.reject);
}
  _$jscoverage['jquery.js'][3804]++;
  return master.promise();
})});
  _$jscoverage['jquery.js'][3811]++;
  var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
  _$jscoverage['jquery.js'][3813]++;
  jQuery.Deferred.exceptionHook = (function (error, stack) {
  _$jscoverage['jquery.js'][3817]++;
  if ((window.console && window.console.warn && error && rerrorNames.test(error.name))) {
    _$jscoverage['jquery.js'][3818]++;
    window.console.warn(("jQuery.Deferred exception: " + error.message), error.stack, stack);
  }
});
  _$jscoverage['jquery.js'][3825]++;
  jQuery.readyException = (function (error) {
  _$jscoverage['jquery.js'][3826]++;
  window.setTimeout((function () {
  _$jscoverage['jquery.js'][3827]++;
  throw error;
}));
});
  _$jscoverage['jquery.js'][3835]++;
  var readyList = jQuery.Deferred();
  _$jscoverage['jquery.js'][3837]++;
  jQuery.fn.ready = (function (fn) {
  _$jscoverage['jquery.js'][3839]++;
  readyList.then(fn)["catch"]((function (error) {
  _$jscoverage['jquery.js'][3846]++;
  jQuery.readyException(error);
}));
  _$jscoverage['jquery.js'][3849]++;
  return this;
});
  _$jscoverage['jquery.js'][3852]++;
  jQuery.extend({isReady: false, readyWait: 1, ready: (function (wait) {
  _$jscoverage['jquery.js'][3865]++;
  if (((wait === true)? (--jQuery.readyWait): jQuery.isReady)) {
    _$jscoverage['jquery.js'][3866]++;
    return;
  }
  _$jscoverage['jquery.js'][3870]++;
  jQuery.isReady = true;
  _$jscoverage['jquery.js'][3873]++;
  if (((wait !== true) && ((--jQuery.readyWait) > 0))) {
    _$jscoverage['jquery.js'][3874]++;
    return;
  }
  _$jscoverage['jquery.js'][3878]++;
  readyList.resolveWith(document, [jQuery]);
})});
  _$jscoverage['jquery.js'][3882]++;
  jQuery.ready.then = readyList.then;
  _$jscoverage['jquery.js'][3885]++;
  function completed() {
    _$jscoverage['jquery.js'][3886]++;
    document.removeEventListener("DOMContentLoaded", completed);
    _$jscoverage['jquery.js'][3887]++;
    window.removeEventListener("load", completed);
    _$jscoverage['jquery.js'][3888]++;
    jQuery.ready();
}
  _$jscoverage['jquery.js'][3895]++;
  if (((document.readyState === "complete") || ((document.readyState !== "loading") && (! document.documentElement.doScroll)))) {
    _$jscoverage['jquery.js'][3899]++;
    window.setTimeout(jQuery.ready);
  }
  else {
    _$jscoverage['jquery.js'][3904]++;
    document.addEventListener("DOMContentLoaded", completed);
    _$jscoverage['jquery.js'][3907]++;
    window.addEventListener("load", completed);
  }
  _$jscoverage['jquery.js'][3915]++;
  var access = (function (elems, fn, key, value, chainable, emptyGet, raw) {
  _$jscoverage['jquery.js'][3916]++;
  var i = 0, len = elems.length, bulk = (key == null);
  _$jscoverage['jquery.js'][3921]++;
  if ((toType(key) === "object")) {
    _$jscoverage['jquery.js'][3922]++;
    chainable = true;
    _$jscoverage['jquery.js'][3923]++;
    for (i in key) {
      _$jscoverage['jquery.js'][3924]++;
      access(elems, fn, i, key[i], true, emptyGet, raw);
}
  }
  else {
    _$jscoverage['jquery.js'][3928]++;
    if ((value !== undefined)) {
      _$jscoverage['jquery.js'][3929]++;
      chainable = true;
      _$jscoverage['jquery.js'][3931]++;
      if ((! isFunction(value))) {
        _$jscoverage['jquery.js'][3932]++;
        raw = true;
      }
      _$jscoverage['jquery.js'][3935]++;
      if (bulk) {
        _$jscoverage['jquery.js'][3938]++;
        if (raw) {
          _$jscoverage['jquery.js'][3939]++;
          fn.call(elems, value);
          _$jscoverage['jquery.js'][3940]++;
          fn = null;
        }
        else {
          _$jscoverage['jquery.js'][3944]++;
          bulk = fn;
          _$jscoverage['jquery.js'][3945]++;
          fn = (function (elem, key, value) {
  _$jscoverage['jquery.js'][3946]++;
  return bulk.call(jQuery(elem), value);
});
        }
      }
      _$jscoverage['jquery.js'][3951]++;
      if (fn) {
        _$jscoverage['jquery.js'][3952]++;
        for (; (i < len); (i++)) {
          _$jscoverage['jquery.js'][3953]++;
          fn(elems[i], key, (raw? value: value.call(elems[i], i, fn(elems[i], key))));
}
      }
    }
  }
  _$jscoverage['jquery.js'][3962]++;
  if (chainable) {
    _$jscoverage['jquery.js'][3963]++;
    return elems;
  }
  _$jscoverage['jquery.js'][3967]++;
  if (bulk) {
    _$jscoverage['jquery.js'][3968]++;
    return fn.call(elems);
  }
  _$jscoverage['jquery.js'][3971]++;
  return (len? fn(elems[0], key): emptyGet);
});
  _$jscoverage['jquery.js'][3976]++;
  var rmsPrefix = /^-ms-/, rdashAlpha = /-([a-z])/g;
  _$jscoverage['jquery.js'][3980]++;
  function fcamelCase(all, letter) {
    _$jscoverage['jquery.js'][3981]++;
    return letter.toUpperCase();
}
  _$jscoverage['jquery.js'][3987]++;
  function camelCase(string) {
    _$jscoverage['jquery.js'][3988]++;
    return string.replace(rmsPrefix, "ms-").replace(rdashAlpha, fcamelCase);
}
  _$jscoverage['jquery.js'][3990]++;
  var acceptData = (function (owner) {
  _$jscoverage['jquery.js'][3998]++;
  return ((owner.nodeType === 1) || (owner.nodeType === 9) || (! (+ owner.nodeType)));
});
  _$jscoverage['jquery.js'][4004]++;
  function Data() {
    _$jscoverage['jquery.js'][4005]++;
    this.expando = (jQuery.expando + (Data.uid++));
}
  _$jscoverage['jquery.js'][4008]++;
  Data.uid = 1;
  _$jscoverage['jquery.js'][4010]++;
  Data.prototype = {cache: (function (owner) {
  _$jscoverage['jquery.js'][4015]++;
  var value = owner[this.expando];
  _$jscoverage['jquery.js'][4018]++;
  if ((! value)) {
    _$jscoverage['jquery.js'][4019]++;
    value = {};
    _$jscoverage['jquery.js'][4024]++;
    if (acceptData(owner)) {
      _$jscoverage['jquery.js'][4028]++;
      if (owner.nodeType) {
        _$jscoverage['jquery.js'][4029]++;
        owner[this.expando] = value;
      }
      else {
        _$jscoverage['jquery.js'][4035]++;
        Object.defineProperty(owner, this.expando, {value: value, configurable: true});
      }
    }
  }
  _$jscoverage['jquery.js'][4043]++;
  return value;
}), set: (function (owner, data, value) {
  _$jscoverage['jquery.js'][4046]++;
  var prop, cache = this.cache(owner);
  _$jscoverage['jquery.js'][4051]++;
  if (((typeof data) === "string")) {
    _$jscoverage['jquery.js'][4052]++;
    cache[camelCase(data)] = value;
  }
  else {
    _$jscoverage['jquery.js'][4058]++;
    for (prop in data) {
      _$jscoverage['jquery.js'][4059]++;
      cache[camelCase(prop)] = data[prop];
}
  }
  _$jscoverage['jquery.js'][4062]++;
  return cache;
}), get: (function (owner, key) {
  _$jscoverage['jquery.js'][4065]++;
  return ((key === undefined)? this.cache(owner): (owner[this.expando] && owner[this.expando][camelCase(key)]));
}), access: (function (owner, key, value) {
  _$jscoverage['jquery.js'][4084]++;
  if (((key === undefined) || (key && ((typeof key) === "string") && (value === undefined)))) {
    _$jscoverage['jquery.js'][4087]++;
    return this.get(owner, key);
  }
  _$jscoverage['jquery.js'][4096]++;
  this.set(owner, key, value);
  _$jscoverage['jquery.js'][4100]++;
  return ((value !== undefined)? value: key);
}), remove: (function (owner, key) {
  _$jscoverage['jquery.js'][4103]++;
  var i, cache = owner[this.expando];
  _$jscoverage['jquery.js'][4106]++;
  if ((cache === undefined)) {
    _$jscoverage['jquery.js'][4107]++;
    return;
  }
  _$jscoverage['jquery.js'][4110]++;
  if ((key !== undefined)) {
    _$jscoverage['jquery.js'][4113]++;
    if (Array.isArray(key)) {
      _$jscoverage['jquery.js'][4117]++;
      key = key.map(camelCase);
    }
    else {
      _$jscoverage['jquery.js'][4119]++;
      key = camelCase(key);
      _$jscoverage['jquery.js'][4123]++;
      key = ((key in cache)? [key]: (key.match(rnothtmlwhite) || []));
    }
    _$jscoverage['jquery.js'][4128]++;
    i = key.length;
    _$jscoverage['jquery.js'][4130]++;
    while ((i--)) {
      _$jscoverage['jquery.js'][4131]++;
      (delete cache[key[i]]);
}
  }
  _$jscoverage['jquery.js'][4136]++;
  if (((key === undefined) || jQuery.isEmptyObject(cache))) {
    _$jscoverage['jquery.js'][4142]++;
    if (owner.nodeType) {
      _$jscoverage['jquery.js'][4143]++;
      owner[this.expando] = undefined;
    }
    else {
      _$jscoverage['jquery.js'][4145]++;
      (delete owner[this.expando]);
    }
  }
}), hasData: (function (owner) {
  _$jscoverage['jquery.js'][4150]++;
  var cache = owner[this.expando];
  _$jscoverage['jquery.js'][4151]++;
  return ((cache !== undefined) && (! jQuery.isEmptyObject(cache)));
})};
  _$jscoverage['jquery.js'][4154]++;
  var dataPriv = new Data();
  _$jscoverage['jquery.js'][4156]++;
  var dataUser = new Data();
  _$jscoverage['jquery.js'][4170]++;
  var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/, rmultiDash = /[A-Z]/g;
  _$jscoverage['jquery.js'][4173]++;
  function getData(data) {
    _$jscoverage['jquery.js'][4174]++;
    if ((data === "true")) {
      _$jscoverage['jquery.js'][4175]++;
      return true;
    }
    _$jscoverage['jquery.js'][4178]++;
    if ((data === "false")) {
      _$jscoverage['jquery.js'][4179]++;
      return false;
    }
    _$jscoverage['jquery.js'][4182]++;
    if ((data === "null")) {
      _$jscoverage['jquery.js'][4183]++;
      return null;
    }
    _$jscoverage['jquery.js'][4187]++;
    if ((data === ((+ data) + ""))) {
      _$jscoverage['jquery.js'][4188]++;
      return (+ data);
    }
    _$jscoverage['jquery.js'][4191]++;
    if (rbrace.test(data)) {
      _$jscoverage['jquery.js'][4192]++;
      return JSON.parse(data);
    }
    _$jscoverage['jquery.js'][4195]++;
    return data;
}
  _$jscoverage['jquery.js'][4198]++;
  function dataAttr(elem, key, data) {
    _$jscoverage['jquery.js'][4199]++;
    var name;
    _$jscoverage['jquery.js'][4203]++;
    if (((data === undefined) && (elem.nodeType === 1))) {
      _$jscoverage['jquery.js'][4204]++;
      name = ("data-" + key.replace(rmultiDash, "-$&").toLowerCase());
      _$jscoverage['jquery.js'][4205]++;
      data = elem.getAttribute(name);
      _$jscoverage['jquery.js'][4207]++;
      if (((typeof data) === "string")) {
        _$jscoverage['jquery.js'][4208]++;
        try {
          _$jscoverage['jquery.js'][4209]++;
          data = getData(data);
        }
        catch (e) {
        }
        _$jscoverage['jquery.js'][4213]++;
        dataUser.set(elem, key, data);
      }
      else {
        _$jscoverage['jquery.js'][4215]++;
        data = undefined;
      }
    }
    _$jscoverage['jquery.js'][4218]++;
    return data;
}
  _$jscoverage['jquery.js'][4221]++;
  jQuery.extend({hasData: (function (elem) {
  _$jscoverage['jquery.js'][4223]++;
  return (dataUser.hasData(elem) || dataPriv.hasData(elem));
}), data: (function (elem, name, data) {
  _$jscoverage['jquery.js'][4227]++;
  return dataUser.access(elem, name, data);
}), removeData: (function (elem, name) {
  _$jscoverage['jquery.js'][4231]++;
  dataUser.remove(elem, name);
}), _data: (function (elem, name, data) {
  _$jscoverage['jquery.js'][4237]++;
  return dataPriv.access(elem, name, data);
}), _removeData: (function (elem, name) {
  _$jscoverage['jquery.js'][4241]++;
  dataPriv.remove(elem, name);
})});
  _$jscoverage['jquery.js'][4245]++;
  jQuery.fn.extend({data: (function (key, value) {
  _$jscoverage['jquery.js'][4247]++;
  var i, name, data, elem = this[0], attrs = (elem && elem.attributes);
  _$jscoverage['jquery.js'][4252]++;
  if ((key === undefined)) {
    _$jscoverage['jquery.js'][4253]++;
    if (this.length) {
      _$jscoverage['jquery.js'][4254]++;
      data = dataUser.get(elem);
      _$jscoverage['jquery.js'][4256]++;
      if (((elem.nodeType === 1) && (! dataPriv.get(elem, "hasDataAttrs")))) {
        _$jscoverage['jquery.js'][4257]++;
        i = attrs.length;
        _$jscoverage['jquery.js'][4258]++;
        while ((i--)) {
          _$jscoverage['jquery.js'][4262]++;
          if (attrs[i]) {
            _$jscoverage['jquery.js'][4263]++;
            name = attrs[i].name;
            _$jscoverage['jquery.js'][4264]++;
            if ((name.indexOf("data-") === 0)) {
              _$jscoverage['jquery.js'][4265]++;
              name = camelCase(name.slice(5));
              _$jscoverage['jquery.js'][4266]++;
              dataAttr(elem, name, data[name]);
            }
          }
}
        _$jscoverage['jquery.js'][4270]++;
        dataPriv.set(elem, "hasDataAttrs", true);
      }
    }
    _$jscoverage['jquery.js'][4274]++;
    return data;
  }
  _$jscoverage['jquery.js'][4278]++;
  if (((typeof key) === "object")) {
    _$jscoverage['jquery.js'][4279]++;
    return this.each((function () {
  _$jscoverage['jquery.js'][4280]++;
  dataUser.set(this, key);
}));
  }
  _$jscoverage['jquery.js'][4284]++;
  return access(this, (function (value) {
  _$jscoverage['jquery.js'][4285]++;
  var data;
  _$jscoverage['jquery.js'][4292]++;
  if ((elem && (value === undefined))) {
    _$jscoverage['jquery.js'][4296]++;
    data = dataUser.get(elem, key);
    _$jscoverage['jquery.js'][4297]++;
    if ((data !== undefined)) {
      _$jscoverage['jquery.js'][4298]++;
      return data;
    }
    _$jscoverage['jquery.js'][4303]++;
    data = dataAttr(elem, key);
    _$jscoverage['jquery.js'][4304]++;
    if ((data !== undefined)) {
      _$jscoverage['jquery.js'][4305]++;
      return data;
    }
    _$jscoverage['jquery.js'][4309]++;
    return;
  }
  _$jscoverage['jquery.js'][4313]++;
  this.each((function () {
  _$jscoverage['jquery.js'][4316]++;
  dataUser.set(this, key, value);
}));
}), null, value, (arguments.length > 1), null, true);
}), removeData: (function (key) {
  _$jscoverage['jquery.js'][4322]++;
  return this.each((function () {
  _$jscoverage['jquery.js'][4323]++;
  dataUser.remove(this, key);
}));
})});
  _$jscoverage['jquery.js'][4329]++;
  jQuery.extend({queue: (function (elem, type, data) {
  _$jscoverage['jquery.js'][4331]++;
  var queue;
  _$jscoverage['jquery.js'][4333]++;
  if (elem) {
    _$jscoverage['jquery.js'][4334]++;
    type = ((type || "fx") + "queue");
    _$jscoverage['jquery.js'][4335]++;
    queue = dataPriv.get(elem, type);
    _$jscoverage['jquery.js'][4338]++;
    if (data) {
      _$jscoverage['jquery.js'][4339]++;
      if (((! queue) || Array.isArray(data))) {
        _$jscoverage['jquery.js'][4340]++;
        queue = dataPriv.access(elem, type, jQuery.makeArray(data));
      }
      else {
        _$jscoverage['jquery.js'][4342]++;
        queue.push(data);
      }
    }
    _$jscoverage['jquery.js'][4345]++;
    return (queue || []);
  }
}), dequeue: (function (elem, type) {
  _$jscoverage['jquery.js'][4350]++;
  type = (type || "fx");
  _$jscoverage['jquery.js'][4352]++;
  var queue = jQuery.queue(elem, type), startLength = queue.length, fn = queue.shift(), hooks = jQuery._queueHooks(elem, type), next = (function () {
  _$jscoverage['jquery.js'][4357]++;
  jQuery.dequeue(elem, type);
});
  _$jscoverage['jquery.js'][4361]++;
  if ((fn === "inprogress")) {
    _$jscoverage['jquery.js'][4362]++;
    fn = queue.shift();
    _$jscoverage['jquery.js'][4363]++;
    (startLength--);
  }
  _$jscoverage['jquery.js'][4366]++;
  if (fn) {
    _$jscoverage['jquery.js'][4370]++;
    if ((type === "fx")) {
      _$jscoverage['jquery.js'][4371]++;
      queue.unshift("inprogress");
    }
    _$jscoverage['jquery.js'][4375]++;
    (delete hooks.stop);
    _$jscoverage['jquery.js'][4376]++;
    fn.call(elem, next, hooks);
  }
  _$jscoverage['jquery.js'][4379]++;
  if (((! startLength) && hooks)) {
    _$jscoverage['jquery.js'][4380]++;
    hooks.empty.fire();
  }
}), _queueHooks: (function (elem, type) {
  _$jscoverage['jquery.js'][4386]++;
  var key = (type + "queueHooks");
  _$jscoverage['jquery.js'][4387]++;
  return (dataPriv.get(elem, key) || dataPriv.access(elem, key, {empty: jQuery.Callbacks("once memory").add((function () {
  _$jscoverage['jquery.js'][4389]++;
  dataPriv.remove(elem, [(type + "queue"), key]);
}))}));
})});
  _$jscoverage['jquery.js'][4395]++;
  jQuery.fn.extend({queue: (function (type, data) {
  _$jscoverage['jquery.js'][4397]++;
  var setter = 2;
  _$jscoverage['jquery.js'][4399]++;
  if (((typeof type) !== "string")) {
    _$jscoverage['jquery.js'][4400]++;
    data = type;
    _$jscoverage['jquery.js'][4401]++;
    type = "fx";
    _$jscoverage['jquery.js'][4402]++;
    (setter--);
  }
  _$jscoverage['jquery.js'][4405]++;
  if ((arguments.length < setter)) {
    _$jscoverage['jquery.js'][4406]++;
    return jQuery.queue(this[0], type);
  }
  _$jscoverage['jquery.js'][4409]++;
  return ((data === undefined)? this: this.each((function () {
  _$jscoverage['jquery.js'][4412]++;
  var queue = jQuery.queue(this, type, data);
  _$jscoverage['jquery.js'][4415]++;
  jQuery._queueHooks(this, type);
  _$jscoverage['jquery.js'][4417]++;
  if (((type === "fx") && (queue[0] !== "inprogress"))) {
    _$jscoverage['jquery.js'][4418]++;
    jQuery.dequeue(this, type);
  }
})));
}), dequeue: (function (type) {
  _$jscoverage['jquery.js'][4423]++;
  return this.each((function () {
  _$jscoverage['jquery.js'][4424]++;
  jQuery.dequeue(this, type);
}));
}), clearQueue: (function (type) {
  _$jscoverage['jquery.js'][4428]++;
  return this.queue((type || "fx"), []);
}), promise: (function (type, obj) {
  _$jscoverage['jquery.js'][4434]++;
  var tmp, count = 1, defer = jQuery.Deferred(), elements = this, i = this.length, resolve = (function () {
  _$jscoverage['jquery.js'][4440]++;
  if ((! (--count))) {
    _$jscoverage['jquery.js'][4441]++;
    defer.resolveWith(elements, [elements]);
  }
});
  _$jscoverage['jquery.js'][4445]++;
  if (((typeof type) !== "string")) {
    _$jscoverage['jquery.js'][4446]++;
    obj = type;
    _$jscoverage['jquery.js'][4447]++;
    type = undefined;
  }
  _$jscoverage['jquery.js'][4449]++;
  type = (type || "fx");
  _$jscoverage['jquery.js'][4451]++;
  while ((i--)) {
    _$jscoverage['jquery.js'][4452]++;
    tmp = dataPriv.get(elements[i], (type + "queueHooks"));
    _$jscoverage['jquery.js'][4453]++;
    if ((tmp && tmp.empty)) {
      _$jscoverage['jquery.js'][4454]++;
      (count++);
      _$jscoverage['jquery.js'][4455]++;
      tmp.empty.add(resolve);
    }
}
  _$jscoverage['jquery.js'][4458]++;
  resolve();
  _$jscoverage['jquery.js'][4459]++;
  return defer.promise(obj);
})});
  _$jscoverage['jquery.js'][4462]++;
  var pnum = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source;
  _$jscoverage['jquery.js'][4464]++;
  var rcssNum = new RegExp(("^(?:([+-])=|)(" + pnum + ")([a-z%]*)$"), "i");
  _$jscoverage['jquery.js'][4467]++;
  var cssExpand = ["Top", "Right", "Bottom", "Left"];
  _$jscoverage['jquery.js'][4469]++;
  var isHiddenWithinTree = (function (elem, el) {
  _$jscoverage['jquery.js'][4473]++;
  elem = (el || elem);
  _$jscoverage['jquery.js'][4476]++;
  return ((elem.style.display === "none") || ((elem.style.display === "") && jQuery.contains(elem.ownerDocument, elem) && (jQuery.css(elem, "display") === "none")));
});
  _$jscoverage['jquery.js'][4488]++;
  var swap = (function (elem, options, callback, args) {
  _$jscoverage['jquery.js'][4489]++;
  var ret, name, old = {};
  _$jscoverage['jquery.js'][4493]++;
  for (name in options) {
    _$jscoverage['jquery.js'][4494]++;
    old[name] = elem.style[name];
    _$jscoverage['jquery.js'][4495]++;
    elem.style[name] = options[name];
}
  _$jscoverage['jquery.js'][4498]++;
  ret = callback.apply(elem, (args || []));
  _$jscoverage['jquery.js'][4501]++;
  for (name in options) {
    _$jscoverage['jquery.js'][4502]++;
    elem.style[name] = old[name];
}
  _$jscoverage['jquery.js'][4505]++;
  return ret;
});
  _$jscoverage['jquery.js'][4511]++;
  function adjustCSS(elem, prop, valueParts, tween) {
    _$jscoverage['jquery.js'][4512]++;
    var adjusted, scale, maxIterations = 20, currentValue = (tween? (function () {
  _$jscoverage['jquery.js'][4516]++;
  return tween.cur();
}): (function () {
  _$jscoverage['jquery.js'][4519]++;
  return jQuery.css(elem, prop, "");
})), initial = currentValue(), unit = ((valueParts && valueParts[3]) || (jQuery.cssNumber[prop]? "": "px")), initialInUnit = ((jQuery.cssNumber[prop] || ((unit !== "px") && (+ initial))) && rcssNum.exec(jQuery.css(elem, prop)));
    _$jscoverage['jquery.js'][4528]++;
    if ((initialInUnit && (initialInUnit[3] !== unit))) {
      _$jscoverage['jquery.js'][4532]++;
      initial = (initial / 2);
      _$jscoverage['jquery.js'][4535]++;
      unit = (unit || initialInUnit[3]);
      _$jscoverage['jquery.js'][4538]++;
      initialInUnit = ((+ initial) || 1);
      _$jscoverage['jquery.js'][4540]++;
      while ((maxIterations--)) {
        _$jscoverage['jquery.js'][4544]++;
        jQuery.style(elem, prop, (initialInUnit + unit));
        _$jscoverage['jquery.js'][4545]++;
        if ((((1 - scale) * (1 - (scale = ((currentValue() / initial) || 0.5)))) <= 0)) {
          _$jscoverage['jquery.js'][4546]++;
          maxIterations = 0;
        }
        _$jscoverage['jquery.js'][4548]++;
        initialInUnit = (initialInUnit / scale);
}
      _$jscoverage['jquery.js'][4552]++;
      initialInUnit = (initialInUnit * 2);
      _$jscoverage['jquery.js'][4553]++;
      jQuery.style(elem, prop, (initialInUnit + unit));
      _$jscoverage['jquery.js'][4556]++;
      valueParts = (valueParts || []);
    }
    _$jscoverage['jquery.js'][4559]++;
    if (valueParts) {
      _$jscoverage['jquery.js'][4560]++;
      initialInUnit = ((+ initialInUnit) || (+ initial) || 0);
      _$jscoverage['jquery.js'][4563]++;
      adjusted = (valueParts[1]? (initialInUnit + ((valueParts[1] + 1) * valueParts[2])): (+ valueParts[2]));
      _$jscoverage['jquery.js'][4566]++;
      if (tween) {
        _$jscoverage['jquery.js'][4567]++;
        tween.unit = unit;
        _$jscoverage['jquery.js'][4568]++;
        tween.start = initialInUnit;
        _$jscoverage['jquery.js'][4569]++;
        tween.end = adjusted;
      }
    }
    _$jscoverage['jquery.js'][4572]++;
    return adjusted;
}
  _$jscoverage['jquery.js'][4576]++;
  var defaultDisplayMap = {};
  _$jscoverage['jquery.js'][4578]++;
  function getDefaultDisplay(elem) {
    _$jscoverage['jquery.js'][4579]++;
    var temp, doc = elem.ownerDocument, nodeName = elem.nodeName, display = defaultDisplayMap[nodeName];
    _$jscoverage['jquery.js'][4584]++;
    if (display) {
      _$jscoverage['jquery.js'][4585]++;
      return display;
    }
    _$jscoverage['jquery.js'][4588]++;
    temp = doc.body.appendChild(doc.createElement(nodeName));
    _$jscoverage['jquery.js'][4589]++;
    display = jQuery.css(temp, "display");
    _$jscoverage['jquery.js'][4591]++;
    temp.parentNode.removeChild(temp);
    _$jscoverage['jquery.js'][4593]++;
    if ((display === "none")) {
      _$jscoverage['jquery.js'][4594]++;
      display = "block";
    }
    _$jscoverage['jquery.js'][4596]++;
    defaultDisplayMap[nodeName] = display;
    _$jscoverage['jquery.js'][4598]++;
    return display;
}
  _$jscoverage['jquery.js'][4601]++;
  function showHide(elements, show) {
    _$jscoverage['jquery.js'][4602]++;
    var display, elem, values = [], index = 0, length = elements.length;
    _$jscoverage['jquery.js'][4608]++;
    for (; (index < length); (index++)) {
      _$jscoverage['jquery.js'][4609]++;
      elem = elements[index];
      _$jscoverage['jquery.js'][4610]++;
      if ((! elem.style)) {
        _$jscoverage['jquery.js'][4611]++;
        continue;
      }
      _$jscoverage['jquery.js'][4614]++;
      display = elem.style.display;
      _$jscoverage['jquery.js'][4615]++;
      if (show) {
        _$jscoverage['jquery.js'][4620]++;
        if ((display === "none")) {
          _$jscoverage['jquery.js'][4621]++;
          values[index] = (dataPriv.get(elem, "display") || null);
          _$jscoverage['jquery.js'][4622]++;
          if ((! values[index])) {
            _$jscoverage['jquery.js'][4623]++;
            elem.style.display = "";
          }
        }
        _$jscoverage['jquery.js'][4626]++;
        if (((elem.style.display === "") && isHiddenWithinTree(elem))) {
          _$jscoverage['jquery.js'][4627]++;
          values[index] = getDefaultDisplay(elem);
        }
      }
      else {
        _$jscoverage['jquery.js'][4630]++;
        if ((display !== "none")) {
          _$jscoverage['jquery.js'][4631]++;
          values[index] = "none";
          _$jscoverage['jquery.js'][4634]++;
          dataPriv.set(elem, "display", display);
        }
      }
}
    _$jscoverage['jquery.js'][4640]++;
    for (index = 0; (index < length); (index++)) {
      _$jscoverage['jquery.js'][4641]++;
      if ((values[index] != null)) {
        _$jscoverage['jquery.js'][4642]++;
        elements[index].style.display = values[index];
      }
}
    _$jscoverage['jquery.js'][4646]++;
    return elements;
}
  _$jscoverage['jquery.js'][4649]++;
  jQuery.fn.extend({show: (function () {
  _$jscoverage['jquery.js'][4651]++;
  return showHide(this, true);
}), hide: (function () {
  _$jscoverage['jquery.js'][4654]++;
  return showHide(this);
}), toggle: (function (state) {
  _$jscoverage['jquery.js'][4657]++;
  if (((typeof state) === "boolean")) {
    _$jscoverage['jquery.js'][4658]++;
    return (state? this.show(): this.hide());
  }
  _$jscoverage['jquery.js'][4661]++;
  return this.each((function () {
  _$jscoverage['jquery.js'][4662]++;
  if (isHiddenWithinTree(this)) {
    _$jscoverage['jquery.js'][4663]++;
    jQuery(this).show();
  }
  else {
    _$jscoverage['jquery.js'][4665]++;
    jQuery(this).hide();
  }
}));
})});
  _$jscoverage['jquery.js'][4670]++;
  var rcheckableType = /^(?:checkbox|radio)$/i;
  _$jscoverage['jquery.js'][4672]++;
  var rtagName = /<([a-z][^\/\0>\x20\t\r\n\f]+)/i;
  _$jscoverage['jquery.js'][4674]++;
  var rscriptType = /^$|^module$|\/(?:java|ecma)script/i;
  _$jscoverage['jquery.js'][4679]++;
  var wrapMap = {option: [1, "<select multiple='multiple'>", "</select>"], thead: [1, "<table>", "</table>"], col: [2, "<table><colgroup>", "</colgroup></table>"], tr: [2, "<table><tbody>", "</tbody></table>"], td: [3, "<table><tbody><tr>", "</tr></tbody></table>"], _default: [0, "", ""]};
  _$jscoverage['jquery.js'][4696]++;
  wrapMap.optgroup = wrapMap.option;
  _$jscoverage['jquery.js'][4698]++;
  wrapMap.tbody = (wrapMap.tfoot = (wrapMap.colgroup = (wrapMap.caption = wrapMap.thead)));
  _$jscoverage['jquery.js'][4699]++;
  wrapMap.th = wrapMap.td;
  _$jscoverage['jquery.js'][4702]++;
  function getAll(context, tag) {
    _$jscoverage['jquery.js'][4706]++;
    var ret;
    _$jscoverage['jquery.js'][4708]++;
    if (((typeof context.getElementsByTagName) !== "undefined")) {
      _$jscoverage['jquery.js'][4709]++;
      ret = context.getElementsByTagName((tag || "*"));
    }
    else {
      _$jscoverage['jquery.js'][4711]++;
      if (((typeof context.querySelectorAll) !== "undefined")) {
        _$jscoverage['jquery.js'][4712]++;
        ret = context.querySelectorAll((tag || "*"));
      }
      else {
        _$jscoverage['jquery.js'][4715]++;
        ret = [];
      }
    }
    _$jscoverage['jquery.js'][4718]++;
    if (((tag === undefined) || (tag && nodeName(context, tag)))) {
      _$jscoverage['jquery.js'][4719]++;
      return jQuery.merge([context], ret);
    }
    _$jscoverage['jquery.js'][4722]++;
    return ret;
}
  _$jscoverage['jquery.js'][4727]++;
  function setGlobalEval(elems, refElements) {
    _$jscoverage['jquery.js'][4728]++;
    var i = 0, l = elems.length;
    _$jscoverage['jquery.js'][4731]++;
    for (; (i < l); (i++)) {
      _$jscoverage['jquery.js'][4732]++;
      dataPriv.set(elems[i], "globalEval", ((! refElements) || dataPriv.get(refElements[i], "globalEval")));
}
}
  _$jscoverage['jquery.js'][4741]++;
  var rhtml = /<|&#?\w+;/;
  _$jscoverage['jquery.js'][4743]++;
  function buildFragment(elems, context, scripts, selection, ignored) {
    _$jscoverage['jquery.js'][4744]++;
    var elem, tmp, tag, wrap, contains, j, fragment = context.createDocumentFragment(), nodes = [], i = 0, l = elems.length;
    _$jscoverage['jquery.js'][4750]++;
    for (; (i < l); (i++)) {
      _$jscoverage['jquery.js'][4751]++;
      elem = elems[i];
      _$jscoverage['jquery.js'][4753]++;
      if ((elem || (elem === 0))) {
        _$jscoverage['jquery.js'][4756]++;
        if ((toType(elem) === "object")) {
          _$jscoverage['jquery.js'][4760]++;
          jQuery.merge(nodes, (elem.nodeType? [elem]: elem));
        }
        else {
          _$jscoverage['jquery.js'][4763]++;
          if ((! rhtml.test(elem))) {
            _$jscoverage['jquery.js'][4764]++;
            nodes.push(context.createTextNode(elem));
          }
          else {
            _$jscoverage['jquery.js'][4768]++;
            tmp = (tmp || fragment.appendChild(context.createElement("div")));
            _$jscoverage['jquery.js'][4771]++;
            tag = (rtagName.exec(elem) || ["", ""])[1].toLowerCase();
            _$jscoverage['jquery.js'][4772]++;
            wrap = (wrapMap[tag] || wrapMap._default);
            _$jscoverage['jquery.js'][4773]++;
            tmp.innerHTML = (wrap[1] + jQuery.htmlPrefilter(elem) + wrap[2]);
            _$jscoverage['jquery.js'][4776]++;
            j = wrap[0];
            _$jscoverage['jquery.js'][4777]++;
            while ((j--)) {
              _$jscoverage['jquery.js'][4778]++;
              tmp = tmp.lastChild;
}
            _$jscoverage['jquery.js'][4783]++;
            jQuery.merge(nodes, tmp.childNodes);
            _$jscoverage['jquery.js'][4786]++;
            tmp = fragment.firstChild;
            _$jscoverage['jquery.js'][4789]++;
            tmp.textContent = "";
          }
        }
      }
}
    _$jscoverage['jquery.js'][4795]++;
    fragment.textContent = "";
    _$jscoverage['jquery.js'][4797]++;
    i = 0;
    _$jscoverage['jquery.js'][4798]++;
    while ((elem = nodes[(i++)])) {
      _$jscoverage['jquery.js'][4801]++;
      if ((selection && (jQuery.inArray(elem, selection) > -1))) {
        _$jscoverage['jquery.js'][4802]++;
        if (ignored) {
          _$jscoverage['jquery.js'][4803]++;
          ignored.push(elem);
        }
        _$jscoverage['jquery.js'][4805]++;
        continue;
      }
      _$jscoverage['jquery.js'][4808]++;
      contains = jQuery.contains(elem.ownerDocument, elem);
      _$jscoverage['jquery.js'][4811]++;
      tmp = getAll(fragment.appendChild(elem), "script");
      _$jscoverage['jquery.js'][4814]++;
      if (contains) {
        _$jscoverage['jquery.js'][4815]++;
        setGlobalEval(tmp);
      }
      _$jscoverage['jquery.js'][4819]++;
      if (scripts) {
        _$jscoverage['jquery.js'][4820]++;
        j = 0;
        _$jscoverage['jquery.js'][4821]++;
        while ((elem = tmp[(j++)])) {
          _$jscoverage['jquery.js'][4822]++;
          if (rscriptType.test((elem.type || ""))) {
            _$jscoverage['jquery.js'][4823]++;
            scripts.push(elem);
          }
}
      }
}
    _$jscoverage['jquery.js'][4829]++;
    return fragment;
}
  _$jscoverage['jquery.js'][4833]++;
  (function () {
  _$jscoverage['jquery.js'][4834]++;
  var fragment = document.createDocumentFragment(), div = fragment.appendChild(document.createElement("div")), input = document.createElement("input");
  _$jscoverage['jquery.js'][4842]++;
  input.setAttribute("type", "radio");
  _$jscoverage['jquery.js'][4843]++;
  input.setAttribute("checked", "checked");
  _$jscoverage['jquery.js'][4844]++;
  input.setAttribute("name", "t");
  _$jscoverage['jquery.js'][4846]++;
  div.appendChild(input);
  _$jscoverage['jquery.js'][4850]++;
  support.checkClone = div.cloneNode(true).cloneNode(true).lastChild.checked;
  _$jscoverage['jquery.js'][4854]++;
  div.innerHTML = "<textarea>x</textarea>";
  _$jscoverage['jquery.js'][4855]++;
  support.noCloneChecked = (! (! div.cloneNode(true).lastChild.defaultValue));
})();
  _$jscoverage['jquery.js'][4857]++;
  var documentElement = document.documentElement;
  _$jscoverage['jquery.js'][4861]++;
  var rkeyEvent = /^key/, rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/, rtypenamespace = /^([^.]*)(?:\.(.+)|)/;
  _$jscoverage['jquery.js'][4866]++;
  function returnTrue() {
    _$jscoverage['jquery.js'][4867]++;
    return true;
}
  _$jscoverage['jquery.js'][4870]++;
  function returnFalse() {
    _$jscoverage['jquery.js'][4871]++;
    return false;
}
  _$jscoverage['jquery.js'][4876]++;
  function safeActiveElement() {
    _$jscoverage['jquery.js'][4877]++;
    try {
      _$jscoverage['jquery.js'][4878]++;
      return document.activeElement;
    }
    catch (err) {
    }
}
  _$jscoverage['jquery.js'][4882]++;
  function on(elem, types, selector, data, fn, one) {
    _$jscoverage['jquery.js'][4883]++;
    var origFn, type;
    _$jscoverage['jquery.js'][4886]++;
    if (((typeof types) === "object")) {
      _$jscoverage['jquery.js'][4889]++;
      if (((typeof selector) !== "string")) {
        _$jscoverage['jquery.js'][4892]++;
        data = (data || selector);
        _$jscoverage['jquery.js'][4893]++;
        selector = undefined;
      }
      _$jscoverage['jquery.js'][4895]++;
      for (type in types) {
        _$jscoverage['jquery.js'][4896]++;
        on(elem, type, selector, data, types[type], one);
}
      _$jscoverage['jquery.js'][4898]++;
      return elem;
    }
    _$jscoverage['jquery.js'][4901]++;
    if (((data == null) && (fn == null))) {
      _$jscoverage['jquery.js'][4904]++;
      fn = selector;
      _$jscoverage['jquery.js'][4905]++;
      data = (selector = undefined);
    }
    else {
      _$jscoverage['jquery.js'][4906]++;
      if ((fn == null)) {
        _$jscoverage['jquery.js'][4907]++;
        if (((typeof selector) === "string")) {
          _$jscoverage['jquery.js'][4910]++;
          fn = data;
          _$jscoverage['jquery.js'][4911]++;
          data = undefined;
        }
        else {
          _$jscoverage['jquery.js'][4915]++;
          fn = data;
          _$jscoverage['jquery.js'][4916]++;
          data = selector;
          _$jscoverage['jquery.js'][4917]++;
          selector = undefined;
        }
      }
    }
    _$jscoverage['jquery.js'][4920]++;
    if ((fn === false)) {
      _$jscoverage['jquery.js'][4921]++;
      fn = returnFalse;
    }
    else {
      _$jscoverage['jquery.js'][4922]++;
      if ((! fn)) {
        _$jscoverage['jquery.js'][4923]++;
        return elem;
      }
    }
    _$jscoverage['jquery.js'][4926]++;
    if ((one === 1)) {
      _$jscoverage['jquery.js'][4927]++;
      origFn = fn;
      _$jscoverage['jquery.js'][4928]++;
      fn = (function (event) {
  _$jscoverage['jquery.js'][4931]++;
  jQuery().off(event);
  _$jscoverage['jquery.js'][4932]++;
  return origFn.apply(this, arguments);
});
      _$jscoverage['jquery.js'][4936]++;
      fn.guid = (origFn.guid || (origFn.guid = (jQuery.guid++)));
    }
    _$jscoverage['jquery.js'][4938]++;
    return elem.each((function () {
  _$jscoverage['jquery.js'][4939]++;
  jQuery.event.add(this, types, fn, data, selector);
}));
}
  _$jscoverage['jquery.js'][4947]++;
  jQuery.event = {global: {}, add: (function (elem, types, handler, data, selector) {
  _$jscoverage['jquery.js'][4953]++;
  var handleObjIn, eventHandle, tmp, events, t, handleObj, special, handlers, type, namespaces, origType, elemData = dataPriv.get(elem);
  _$jscoverage['jquery.js'][4959]++;
  if ((! elemData)) {
    _$jscoverage['jquery.js'][4960]++;
    return;
  }
  _$jscoverage['jquery.js'][4964]++;
  if (handler.handler) {
    _$jscoverage['jquery.js'][4965]++;
    handleObjIn = handler;
    _$jscoverage['jquery.js'][4966]++;
    handler = handleObjIn.handler;
    _$jscoverage['jquery.js'][4967]++;
    selector = handleObjIn.selector;
  }
  _$jscoverage['jquery.js'][4972]++;
  if (selector) {
    _$jscoverage['jquery.js'][4973]++;
    jQuery.find.matchesSelector(documentElement, selector);
  }
  _$jscoverage['jquery.js'][4977]++;
  if ((! handler.guid)) {
    _$jscoverage['jquery.js'][4978]++;
    handler.guid = (jQuery.guid++);
  }
  _$jscoverage['jquery.js'][4982]++;
  if ((! (events = elemData.events))) {
    _$jscoverage['jquery.js'][4983]++;
    events = (elemData.events = {});
  }
  _$jscoverage['jquery.js'][4985]++;
  if ((! (eventHandle = elemData.handle))) {
    _$jscoverage['jquery.js'][4986]++;
    eventHandle = (elemData.handle = (function (e) {
  _$jscoverage['jquery.js'][4990]++;
  return ((((typeof jQuery) !== "undefined") && (jQuery.event.triggered !== e.type))? jQuery.event.dispatch.apply(elem, arguments): undefined);
}));
  }
  _$jscoverage['jquery.js'][4996]++;
  types = ((types || "").match(rnothtmlwhite) || [""]);
  _$jscoverage['jquery.js'][4997]++;
  t = types.length;
  _$jscoverage['jquery.js'][4998]++;
  while ((t--)) {
    _$jscoverage['jquery.js'][4999]++;
    tmp = (rtypenamespace.exec(types[t]) || []);
    _$jscoverage['jquery.js'][5000]++;
    type = (origType = tmp[1]);
    _$jscoverage['jquery.js'][5001]++;
    namespaces = (tmp[2] || "").split(".").sort();
    _$jscoverage['jquery.js'][5004]++;
    if ((! type)) {
      _$jscoverage['jquery.js'][5005]++;
      continue;
    }
    _$jscoverage['jquery.js'][5009]++;
    special = (jQuery.event.special[type] || {});
    _$jscoverage['jquery.js'][5012]++;
    type = ((selector? special.delegateType: special.bindType) || type);
    _$jscoverage['jquery.js'][5015]++;
    special = (jQuery.event.special[type] || {});
    _$jscoverage['jquery.js'][5018]++;
    handleObj = jQuery.extend({type: type, origType: origType, data: data, handler: handler, guid: handler.guid, selector: selector, needsContext: (selector && jQuery.expr.match.needsContext.test(selector)), namespace: namespaces.join(".")}, handleObjIn);
    _$jscoverage['jquery.js'][5030]++;
    if ((! (handlers = events[type]))) {
      _$jscoverage['jquery.js'][5031]++;
      handlers = (events[type] = []);
      _$jscoverage['jquery.js'][5032]++;
      handlers.delegateCount = 0;
      _$jscoverage['jquery.js'][5035]++;
      if (((! special.setup) || (special.setup.call(elem, data, namespaces, eventHandle) === false))) {
        _$jscoverage['jquery.js'][5038]++;
        if (elem.addEventListener) {
          _$jscoverage['jquery.js'][5039]++;
          elem.addEventListener(type, eventHandle);
        }
      }
    }
    _$jscoverage['jquery.js'][5044]++;
    if (special.add) {
      _$jscoverage['jquery.js'][5045]++;
      special.add.call(elem, handleObj);
      _$jscoverage['jquery.js'][5047]++;
      if ((! handleObj.handler.guid)) {
        _$jscoverage['jquery.js'][5048]++;
        handleObj.handler.guid = handler.guid;
      }
    }
    _$jscoverage['jquery.js'][5053]++;
    if (selector) {
      _$jscoverage['jquery.js'][5054]++;
      handlers.splice((handlers.delegateCount++), 0, handleObj);
    }
    else {
      _$jscoverage['jquery.js'][5056]++;
      handlers.push(handleObj);
    }
    _$jscoverage['jquery.js'][5060]++;
    jQuery.event.global[type] = true;
}
}), remove: (function (elem, types, handler, selector, mappedTypes) {
  _$jscoverage['jquery.js'][5068]++;
  var j, origCount, tmp, events, t, handleObj, special, handlers, type, namespaces, origType, elemData = (dataPriv.hasData(elem) && dataPriv.get(elem));
  _$jscoverage['jquery.js'][5073]++;
  if (((! elemData) || (! (events = elemData.events)))) {
    _$jscoverage['jquery.js'][5074]++;
    return;
  }
  _$jscoverage['jquery.js'][5078]++;
  types = ((types || "").match(rnothtmlwhite) || [""]);
  _$jscoverage['jquery.js'][5079]++;
  t = types.length;
  _$jscoverage['jquery.js'][5080]++;
  while ((t--)) {
    _$jscoverage['jquery.js'][5081]++;
    tmp = (rtypenamespace.exec(types[t]) || []);
    _$jscoverage['jquery.js'][5082]++;
    type = (origType = tmp[1]);
    _$jscoverage['jquery.js'][5083]++;
    namespaces = (tmp[2] || "").split(".").sort();
    _$jscoverage['jquery.js'][5086]++;
    if ((! type)) {
      _$jscoverage['jquery.js'][5087]++;
      for (type in events) {
        _$jscoverage['jquery.js'][5088]++;
        jQuery.event.remove(elem, (type + types[t]), handler, selector, true);
}
      _$jscoverage['jquery.js'][5090]++;
      continue;
    }
    _$jscoverage['jquery.js'][5093]++;
    special = (jQuery.event.special[type] || {});
    _$jscoverage['jquery.js'][5094]++;
    type = ((selector? special.delegateType: special.bindType) || type);
    _$jscoverage['jquery.js'][5095]++;
    handlers = (events[type] || []);
    _$jscoverage['jquery.js'][5096]++;
    tmp = (tmp[2] && new RegExp(("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)")));
    _$jscoverage['jquery.js'][5100]++;
    origCount = (j = handlers.length);
    _$jscoverage['jquery.js'][5101]++;
    while ((j--)) {
      _$jscoverage['jquery.js'][5102]++;
      handleObj = handlers[j];
      _$jscoverage['jquery.js'][5104]++;
      if (((mappedTypes || (origType === handleObj.origType)) && ((! handler) || (handler.guid === handleObj.guid)) && ((! tmp) || tmp.test(handleObj.namespace)) && ((! selector) || (selector === handleObj.selector) || ((selector === "**") && handleObj.selector)))) {
        _$jscoverage['jquery.js'][5109]++;
        handlers.splice(j, 1);
        _$jscoverage['jquery.js'][5111]++;
        if (handleObj.selector) {
          _$jscoverage['jquery.js'][5112]++;
          (handlers.delegateCount--);
        }
        _$jscoverage['jquery.js'][5114]++;
        if (special.remove) {
          _$jscoverage['jquery.js'][5115]++;
          special.remove.call(elem, handleObj);
        }
      }
}
    _$jscoverage['jquery.js'][5122]++;
    if ((origCount && (! handlers.length))) {
      _$jscoverage['jquery.js'][5123]++;
      if (((! special.teardown) || (special.teardown.call(elem, namespaces, elemData.handle) === false))) {
        _$jscoverage['jquery.js'][5126]++;
        jQuery.removeEvent(elem, type, elemData.handle);
      }
      _$jscoverage['jquery.js'][5129]++;
      (delete events[type]);
    }
}
  _$jscoverage['jquery.js'][5134]++;
  if (jQuery.isEmptyObject(events)) {
    _$jscoverage['jquery.js'][5135]++;
    dataPriv.remove(elem, "handle events");
  }
}), dispatch: (function (nativeEvent) {
  _$jscoverage['jquery.js'][5142]++;
  var event = jQuery.event.fix(nativeEvent);
  _$jscoverage['jquery.js'][5144]++;
  var i, j, ret, matched, handleObj, handlerQueue, args = new Array(arguments.length), handlers = ((dataPriv.get(this, "events") || {})[event.type] || []), special = (jQuery.event.special[event.type] || {});
  _$jscoverage['jquery.js'][5150]++;
  args[0] = event;
  _$jscoverage['jquery.js'][5152]++;
  for (i = 1; (i < arguments.length); (i++)) {
    _$jscoverage['jquery.js'][5153]++;
    args[i] = arguments[i];
}
  _$jscoverage['jquery.js'][5156]++;
  event.delegateTarget = this;
  _$jscoverage['jquery.js'][5159]++;
  if ((special.preDispatch && (special.preDispatch.call(this, event) === false))) {
    _$jscoverage['jquery.js'][5160]++;
    return;
  }
  _$jscoverage['jquery.js'][5164]++;
  handlerQueue = jQuery.event.handlers.call(this, event, handlers);
  _$jscoverage['jquery.js'][5167]++;
  i = 0;
  _$jscoverage['jquery.js'][5168]++;
  while (((matched = handlerQueue[(i++)]) && (! event.isPropagationStopped()))) {
    _$jscoverage['jquery.js'][5169]++;
    event.currentTarget = matched.elem;
    _$jscoverage['jquery.js'][5171]++;
    j = 0;
    _$jscoverage['jquery.js'][5172]++;
    while (((handleObj = matched.handlers[(j++)]) && (! event.isImmediatePropagationStopped()))) {
      _$jscoverage['jquery.js'][5177]++;
      if (((! event.rnamespace) || event.rnamespace.test(handleObj.namespace))) {
        _$jscoverage['jquery.js'][5179]++;
        event.handleObj = handleObj;
        _$jscoverage['jquery.js'][5180]++;
        event.data = handleObj.data;
        _$jscoverage['jquery.js'][5182]++;
        ret = ((jQuery.event.special[handleObj.origType] || {}).handle || handleObj.handler).apply(matched.elem, args);
        _$jscoverage['jquery.js'][5185]++;
        if ((ret !== undefined)) {
          _$jscoverage['jquery.js'][5186]++;
          if (((event.result = ret) === false)) {
            _$jscoverage['jquery.js'][5187]++;
            event.preventDefault();
            _$jscoverage['jquery.js'][5188]++;
            event.stopPropagation();
          }
        }
      }
}
}
  _$jscoverage['jquery.js'][5196]++;
  if (special.postDispatch) {
    _$jscoverage['jquery.js'][5197]++;
    special.postDispatch.call(this, event);
  }
  _$jscoverage['jquery.js'][5200]++;
  return event.result;
}), handlers: (function (event, handlers) {
  _$jscoverage['jquery.js'][5204]++;
  var i, handleObj, sel, matchedHandlers, matchedSelectors, handlerQueue = [], delegateCount = handlers.delegateCount, cur = event.target;
  _$jscoverage['jquery.js'][5210]++;
  if ((delegateCount && cur.nodeType && (! ((event.type === "click") && (event.button >= 1))))) {
    _$jscoverage['jquery.js'][5223]++;
    for (; (cur !== this); (cur = (cur.parentNode || this))) {
      _$jscoverage['jquery.js'][5227]++;
      if (((cur.nodeType === 1) && (! ((event.type === "click") && (cur.disabled === true))))) {
        _$jscoverage['jquery.js'][5228]++;
        matchedHandlers = [];
        _$jscoverage['jquery.js'][5229]++;
        matchedSelectors = {};
        _$jscoverage['jquery.js'][5230]++;
        for (i = 0; (i < delegateCount); (i++)) {
          _$jscoverage['jquery.js'][5231]++;
          handleObj = handlers[i];
          _$jscoverage['jquery.js'][5234]++;
          sel = (handleObj.selector + " ");
          _$jscoverage['jquery.js'][5236]++;
          if ((matchedSelectors[sel] === undefined)) {
            _$jscoverage['jquery.js'][5237]++;
            matchedSelectors[sel] = (handleObj.needsContext? (jQuery(sel, this).index(cur) > -1): jQuery.find(sel, this, null, [cur]).length);
          }
          _$jscoverage['jquery.js'][5241]++;
          if (matchedSelectors[sel]) {
            _$jscoverage['jquery.js'][5242]++;
            matchedHandlers.push(handleObj);
          }
}
        _$jscoverage['jquery.js'][5245]++;
        if (matchedHandlers.length) {
          _$jscoverage['jquery.js'][5246]++;
          handlerQueue.push({elem: cur, handlers: matchedHandlers});
        }
      }
}
  }
  _$jscoverage['jquery.js'][5253]++;
  cur = this;
  _$jscoverage['jquery.js'][5254]++;
  if ((delegateCount < handlers.length)) {
    _$jscoverage['jquery.js'][5255]++;
    handlerQueue.push({elem: cur, handlers: handlers.slice(delegateCount)});
  }
  _$jscoverage['jquery.js'][5258]++;
  return handlerQueue;
}), addProp: (function (name, hook) {
  _$jscoverage['jquery.js'][5262]++;
  Object.defineProperty(jQuery.Event.prototype, name, {enumerable: true, configurable: true, get: (isFunction(hook)? (function () {
  _$jscoverage['jquery.js'][5268]++;
  if (this.originalEvent) {
    _$jscoverage['jquery.js'][5269]++;
    return hook(this.originalEvent);
  }
}): (function () {
  _$jscoverage['jquery.js'][5273]++;
  if (this.originalEvent) {
    _$jscoverage['jquery.js'][5274]++;
    return this.originalEvent[name];
  }
})), set: (function (value) {
  _$jscoverage['jquery.js'][5279]++;
  Object.defineProperty(this, name, {enumerable: true, configurable: true, writable: true, value: value});
})});
}), fix: (function (originalEvent) {
  _$jscoverage['jquery.js'][5290]++;
  return (originalEvent[jQuery.expando]? originalEvent: new (jQuery.Event)(originalEvent));
}), special: {load: {noBubble: true}, focus: {trigger: (function () {
  _$jscoverage['jquery.js'][5305]++;
  if (((this !== safeActiveElement()) && this.focus)) {
    _$jscoverage['jquery.js'][5306]++;
    this.focus();
    _$jscoverage['jquery.js'][5307]++;
    return false;
  }
}), delegateType: "focusin"}, blur: {trigger: (function () {
  _$jscoverage['jquery.js'][5314]++;
  if (((this === safeActiveElement()) && this.blur)) {
    _$jscoverage['jquery.js'][5315]++;
    this.blur();
    _$jscoverage['jquery.js'][5316]++;
    return false;
  }
}), delegateType: "focusout"}, click: {trigger: (function () {
  _$jscoverage['jquery.js'][5325]++;
  if (((this.type === "checkbox") && this.click && nodeName(this, "input"))) {
    _$jscoverage['jquery.js'][5326]++;
    this.click();
    _$jscoverage['jquery.js'][5327]++;
    return false;
  }
}), _default: (function (event) {
  _$jscoverage['jquery.js'][5333]++;
  return nodeName(event.target, "a");
})}, beforeunload: {postDispatch: (function (event) {
  _$jscoverage['jquery.js'][5342]++;
  if (((event.result !== undefined) && event.originalEvent)) {
    _$jscoverage['jquery.js'][5343]++;
    event.originalEvent.returnValue = event.result;
  }
})}}};
  _$jscoverage['jquery.js'][5350]++;
  jQuery.removeEvent = (function (elem, type, handle) {
  _$jscoverage['jquery.js'][5353]++;
  if (elem.removeEventListener) {
    _$jscoverage['jquery.js'][5354]++;
    elem.removeEventListener(type, handle);
  }
});
  _$jscoverage['jquery.js'][5358]++;
  jQuery.Event = (function (src, props) {
  _$jscoverage['jquery.js'][5361]++;
  if ((! (this instanceof jQuery.Event))) {
    _$jscoverage['jquery.js'][5362]++;
    return new (jQuery.Event)(src, props);
  }
  _$jscoverage['jquery.js'][5366]++;
  if ((src && src.type)) {
    _$jscoverage['jquery.js'][5367]++;
    this.originalEvent = src;
    _$jscoverage['jquery.js'][5368]++;
    this.type = src.type;
    _$jscoverage['jquery.js'][5372]++;
    this.isDefaultPrevented = ((src.defaultPrevented || ((src.defaultPrevented === undefined) && (src.returnValue === false)))? returnTrue: returnFalse);
    _$jscoverage['jquery.js'][5383]++;
    this.target = ((src.target && (src.target.nodeType === 3))? src.target.parentNode: src.target);
    _$jscoverage['jquery.js'][5387]++;
    this.currentTarget = src.currentTarget;
    _$jscoverage['jquery.js'][5388]++;
    this.relatedTarget = src.relatedTarget;
  }
  else {
    _$jscoverage['jquery.js'][5392]++;
    this.type = src;
  }
  _$jscoverage['jquery.js'][5396]++;
  if (props) {
    _$jscoverage['jquery.js'][5397]++;
    jQuery.extend(this, props);
  }
  _$jscoverage['jquery.js'][5401]++;
  this.timeStamp = ((src && src.timeStamp) || Date.now());
  _$jscoverage['jquery.js'][5404]++;
  this[jQuery.expando] = true;
});
  _$jscoverage['jquery.js'][5409]++;
  jQuery.Event.prototype = {constructor: jQuery.Event, isDefaultPrevented: returnFalse, isPropagationStopped: returnFalse, isImmediatePropagationStopped: returnFalse, isSimulated: false, preventDefault: (function () {
  _$jscoverage['jquery.js'][5417]++;
  var e = this.originalEvent;
  _$jscoverage['jquery.js'][5419]++;
  this.isDefaultPrevented = returnTrue;
  _$jscoverage['jquery.js'][5421]++;
  if ((e && (! this.isSimulated))) {
    _$jscoverage['jquery.js'][5422]++;
    e.preventDefault();
  }
}), stopPropagation: (function () {
  _$jscoverage['jquery.js'][5426]++;
  var e = this.originalEvent;
  _$jscoverage['jquery.js'][5428]++;
  this.isPropagationStopped = returnTrue;
  _$jscoverage['jquery.js'][5430]++;
  if ((e && (! this.isSimulated))) {
    _$jscoverage['jquery.js'][5431]++;
    e.stopPropagation();
  }
}), stopImmediatePropagation: (function () {
  _$jscoverage['jquery.js'][5435]++;
  var e = this.originalEvent;
  _$jscoverage['jquery.js'][5437]++;
  this.isImmediatePropagationStopped = returnTrue;
  _$jscoverage['jquery.js'][5439]++;
  if ((e && (! this.isSimulated))) {
    _$jscoverage['jquery.js'][5440]++;
    e.stopImmediatePropagation();
  }
  _$jscoverage['jquery.js'][5443]++;
  this.stopPropagation();
})};
  _$jscoverage['jquery.js'][5448]++;
  jQuery.each({altKey: true, bubbles: true, cancelable: true, changedTouches: true, ctrlKey: true, detail: true, eventPhase: true, metaKey: true, pageX: true, pageY: true, shiftKey: true, view: true, "char": true, charCode: true, key: true, keyCode: true, button: true, buttons: true, clientX: true, clientY: true, offsetX: true, offsetY: true, pointerId: true, pointerType: true, screenX: true, screenY: true, targetTouches: true, toElement: true, touches: true, which: (function (event) {
  _$jscoverage['jquery.js'][5480]++;
  var button = event.button;
  _$jscoverage['jquery.js'][5483]++;
  if (((event.which == null) && rkeyEvent.test(event.type))) {
    _$jscoverage['jquery.js'][5484]++;
    return ((event.charCode != null)? event.charCode: event.keyCode);
  }
  _$jscoverage['jquery.js'][5488]++;
  if (((! event.which) && (button !== undefined) && rmouseEvent.test(event.type))) {
    _$jscoverage['jquery.js'][5489]++;
    if ((button & 1)) {
      _$jscoverage['jquery.js'][5490]++;
      return 1;
    }
    _$jscoverage['jquery.js'][5493]++;
    if ((button & 2)) {
      _$jscoverage['jquery.js'][5494]++;
      return 3;
    }
    _$jscoverage['jquery.js'][5497]++;
    if ((button & 4)) {
      _$jscoverage['jquery.js'][5498]++;
      return 2;
    }
    _$jscoverage['jquery.js'][5501]++;
    return 0;
  }
  _$jscoverage['jquery.js'][5504]++;
  return event.which;
})}, jQuery.event.addProp);
  _$jscoverage['jquery.js'][5516]++;
  jQuery.each({mouseenter: "mouseover", mouseleave: "mouseout", pointerenter: "pointerover", pointerleave: "pointerout"}, (function (orig, fix) {
  _$jscoverage['jquery.js'][5522]++;
  jQuery.event.special[orig] = {delegateType: fix, bindType: fix, handle: (function (event) {
  _$jscoverage['jquery.js'][5527]++;
  var ret, target = this, related = event.relatedTarget, handleObj = event.handleObj;
  _$jscoverage['jquery.js'][5534]++;
  if (((! related) || ((related !== target) && (! jQuery.contains(target, related))))) {
    _$jscoverage['jquery.js'][5535]++;
    event.type = handleObj.origType;
    _$jscoverage['jquery.js'][5536]++;
    ret = handleObj.handler.apply(this, arguments);
    _$jscoverage['jquery.js'][5537]++;
    event.type = fix;
  }
  _$jscoverage['jquery.js'][5539]++;
  return ret;
})};
}));
  _$jscoverage['jquery.js'][5544]++;
  jQuery.fn.extend({on: (function (types, selector, data, fn) {
  _$jscoverage['jquery.js'][5547]++;
  return on(this, types, selector, data, fn);
}), one: (function (types, selector, data, fn) {
  _$jscoverage['jquery.js'][5550]++;
  return on(this, types, selector, data, fn, 1);
}), off: (function (types, selector, fn) {
  _$jscoverage['jquery.js'][5553]++;
  var handleObj, type;
  _$jscoverage['jquery.js'][5554]++;
  if ((types && types.preventDefault && types.handleObj)) {
    _$jscoverage['jquery.js'][5557]++;
    handleObj = types.handleObj;
    _$jscoverage['jquery.js'][5558]++;
    jQuery(types.delegateTarget).off((handleObj.namespace? (handleObj.origType + "." + handleObj.namespace): handleObj.origType), handleObj.selector, handleObj.handler);
    _$jscoverage['jquery.js'][5565]++;
    return this;
  }
  _$jscoverage['jquery.js'][5567]++;
  if (((typeof types) === "object")) {
    _$jscoverage['jquery.js'][5570]++;
    for (type in types) {
      _$jscoverage['jquery.js'][5571]++;
      this.off(type, selector, types[type]);
}
    _$jscoverage['jquery.js'][5573]++;
    return this;
  }
  _$jscoverage['jquery.js'][5575]++;
  if (((selector === false) || ((typeof selector) === "function"))) {
    _$jscoverage['jquery.js'][5578]++;
    fn = selector;
    _$jscoverage['jquery.js'][5579]++;
    selector = undefined;
  }
  _$jscoverage['jquery.js'][5581]++;
  if ((fn === false)) {
    _$jscoverage['jquery.js'][5582]++;
    fn = returnFalse;
  }
  _$jscoverage['jquery.js'][5584]++;
  return this.each((function () {
  _$jscoverage['jquery.js'][5585]++;
  jQuery.event.remove(this, types, fn, selector);
}));
})});
  _$jscoverage['jquery.js'][5591]++;
  var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi, rnoInnerhtml = /<script|<style|<link/i, rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i, rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;
  _$jscoverage['jquery.js'][5610]++;
  function manipulationTarget(elem, content) {
    _$jscoverage['jquery.js'][5611]++;
    if ((nodeName(elem, "table") && nodeName(((content.nodeType !== 11)? content: content.firstChild), "tr"))) {
      _$jscoverage['jquery.js'][5614]++;
      return (jQuery(elem).children("tbody")[0] || elem);
    }
    _$jscoverage['jquery.js'][5617]++;
    return elem;
}
  _$jscoverage['jquery.js'][5621]++;
  function disableScript(elem) {
    _$jscoverage['jquery.js'][5622]++;
    elem.type = ((elem.getAttribute("type") !== null) + "/" + elem.type);
    _$jscoverage['jquery.js'][5623]++;
    return elem;
}
  _$jscoverage['jquery.js'][5625]++;
  function restoreScript(elem) {
    _$jscoverage['jquery.js'][5626]++;
    if (((elem.type || "").slice(0, 5) === "true/")) {
      _$jscoverage['jquery.js'][5627]++;
      elem.type = elem.type.slice(5);
    }
    else {
      _$jscoverage['jquery.js'][5629]++;
      elem.removeAttribute("type");
    }
    _$jscoverage['jquery.js'][5632]++;
    return elem;
}
  _$jscoverage['jquery.js'][5635]++;
  function cloneCopyEvent(src, dest) {
    _$jscoverage['jquery.js'][5636]++;
    var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;
    _$jscoverage['jquery.js'][5638]++;
    if ((dest.nodeType !== 1)) {
      _$jscoverage['jquery.js'][5639]++;
      return;
    }
    _$jscoverage['jquery.js'][5643]++;
    if (dataPriv.hasData(src)) {
      _$jscoverage['jquery.js'][5644]++;
      pdataOld = dataPriv.access(src);
      _$jscoverage['jquery.js'][5645]++;
      pdataCur = dataPriv.set(dest, pdataOld);
      _$jscoverage['jquery.js'][5646]++;
      events = pdataOld.events;
      _$jscoverage['jquery.js'][5648]++;
      if (events) {
        _$jscoverage['jquery.js'][5649]++;
        (delete pdataCur.handle);
        _$jscoverage['jquery.js'][5650]++;
        pdataCur.events = {};
        _$jscoverage['jquery.js'][5652]++;
        for (type in events) {
          _$jscoverage['jquery.js'][5653]++;
          for (((i = 0), (l = events[type].length)); (i < l); (i++)) {
            _$jscoverage['jquery.js'][5654]++;
            jQuery.event.add(dest, type, events[type][i]);
}
}
      }
    }
    _$jscoverage['jquery.js'][5661]++;
    if (dataUser.hasData(src)) {
      _$jscoverage['jquery.js'][5662]++;
      udataOld = dataUser.access(src);
      _$jscoverage['jquery.js'][5663]++;
      udataCur = jQuery.extend({}, udataOld);
      _$jscoverage['jquery.js'][5665]++;
      dataUser.set(dest, udataCur);
    }
}
  _$jscoverage['jquery.js'][5670]++;
  function fixInput(src, dest) {
    _$jscoverage['jquery.js'][5671]++;
    var nodeName = dest.nodeName.toLowerCase();
    _$jscoverage['jquery.js'][5674]++;
    if (((nodeName === "input") && rcheckableType.test(src.type))) {
      _$jscoverage['jquery.js'][5675]++;
      dest.checked = src.checked;
    }
    else {
      _$jscoverage['jquery.js'][5678]++;
      if (((nodeName === "input") || (nodeName === "textarea"))) {
        _$jscoverage['jquery.js'][5679]++;
        dest.defaultValue = src.defaultValue;
      }
    }
}
  _$jscoverage['jquery.js'][5683]++;
  function domManip(collection, args, callback, ignored) {
    _$jscoverage['jquery.js'][5686]++;
    args = concat.apply([], args);
    _$jscoverage['jquery.js'][5688]++;
    var fragment, first, scripts, hasScripts, node, doc, i = 0, l = collection.length, iNoClone = (l - 1), value = args[0], valueIsFunction = isFunction(value);
    _$jscoverage['jquery.js'][5696]++;
    if ((valueIsFunction || ((l > 1) && ((typeof value) === "string") && (! support.checkClone) && rchecked.test(value)))) {
      _$jscoverage['jquery.js'][5699]++;
      return collection.each((function (index) {
  _$jscoverage['jquery.js'][5700]++;
  var self = collection.eq(index);
  _$jscoverage['jquery.js'][5701]++;
  if (valueIsFunction) {
    _$jscoverage['jquery.js'][5702]++;
    args[0] = value.call(this, index, self.html());
  }
  _$jscoverage['jquery.js'][5704]++;
  domManip(self, args, callback, ignored);
}));
    }
    _$jscoverage['jquery.js'][5708]++;
    if (l) {
      _$jscoverage['jquery.js'][5709]++;
      fragment = buildFragment(args, collection[0].ownerDocument, false, collection, ignored);
      _$jscoverage['jquery.js'][5710]++;
      first = fragment.firstChild;
      _$jscoverage['jquery.js'][5712]++;
      if ((fragment.childNodes.length === 1)) {
        _$jscoverage['jquery.js'][5713]++;
        fragment = first;
      }
      _$jscoverage['jquery.js'][5717]++;
      if ((first || ignored)) {
        _$jscoverage['jquery.js'][5718]++;
        scripts = jQuery.map(getAll(fragment, "script"), disableScript);
        _$jscoverage['jquery.js'][5719]++;
        hasScripts = scripts.length;
        _$jscoverage['jquery.js'][5724]++;
        for (; (i < l); (i++)) {
          _$jscoverage['jquery.js'][5725]++;
          node = fragment;
          _$jscoverage['jquery.js'][5727]++;
          if ((i !== iNoClone)) {
            _$jscoverage['jquery.js'][5728]++;
            node = jQuery.clone(node, true, true);
            _$jscoverage['jquery.js'][5731]++;
            if (hasScripts) {
              _$jscoverage['jquery.js'][5735]++;
              jQuery.merge(scripts, getAll(node, "script"));
            }
          }
          _$jscoverage['jquery.js'][5739]++;
          callback.call(collection[i], node, i);
}
        _$jscoverage['jquery.js'][5742]++;
        if (hasScripts) {
          _$jscoverage['jquery.js'][5743]++;
          doc = scripts[(scripts.length - 1)].ownerDocument;
          _$jscoverage['jquery.js'][5746]++;
          jQuery.map(scripts, restoreScript);
          _$jscoverage['jquery.js'][5749]++;
          for (i = 0; (i < hasScripts); (i++)) {
            _$jscoverage['jquery.js'][5750]++;
            node = scripts[i];
            _$jscoverage['jquery.js'][5751]++;
            if ((rscriptType.test((node.type || "")) && (! dataPriv.access(node, "globalEval")) && jQuery.contains(doc, node))) {
              _$jscoverage['jquery.js'][5755]++;
              if ((node.src && ((node.type || "").toLowerCase() !== "module"))) {
                _$jscoverage['jquery.js'][5758]++;
                if (jQuery._evalUrl) {
                  _$jscoverage['jquery.js'][5759]++;
                  jQuery._evalUrl(node.src);
                }
              }
              else {
                _$jscoverage['jquery.js'][5762]++;
                DOMEval(node.textContent.replace(rcleanScript, ""), doc, node);
              }
            }
}
        }
      }
    }
    _$jscoverage['jquery.js'][5770]++;
    return collection;
}
  _$jscoverage['jquery.js'][5773]++;
  function remove(elem, selector, keepData) {
    _$jscoverage['jquery.js'][5774]++;
    var node, nodes = (selector? jQuery.filter(selector, elem): elem), i = 0;
    _$jscoverage['jquery.js'][5778]++;
    for (; ((node = nodes[i]) != null); (i++)) {
      _$jscoverage['jquery.js'][5779]++;
      if (((! keepData) && (node.nodeType === 1))) {
        _$jscoverage['jquery.js'][5780]++;
        jQuery.cleanData(getAll(node));
      }
      _$jscoverage['jquery.js'][5783]++;
      if (node.parentNode) {
        _$jscoverage['jquery.js'][5784]++;
        if ((keepData && jQuery.contains(node.ownerDocument, node))) {
          _$jscoverage['jquery.js'][5785]++;
          setGlobalEval(getAll(node, "script"));
        }
        _$jscoverage['jquery.js'][5787]++;
        node.parentNode.removeChild(node);
      }
}
    _$jscoverage['jquery.js'][5791]++;
    return elem;
}
  _$jscoverage['jquery.js'][5794]++;
  jQuery.extend({htmlPrefilter: (function (html) {
  _$jscoverage['jquery.js'][5796]++;
  return html.replace(rxhtmlTag, "<$1></$2>");
}), clone: (function (elem, dataAndEvents, deepDataAndEvents) {
  _$jscoverage['jquery.js'][5800]++;
  var i, l, srcElements, destElements, clone = elem.cloneNode(true), inPage = jQuery.contains(elem.ownerDocument, elem);
  _$jscoverage['jquery.js'][5805]++;
  if (((! support.noCloneChecked) && ((elem.nodeType === 1) || (elem.nodeType === 11)) && (! jQuery.isXMLDoc(elem)))) {
    _$jscoverage['jquery.js'][5809]++;
    destElements = getAll(clone);
    _$jscoverage['jquery.js'][5810]++;
    srcElements = getAll(elem);
    _$jscoverage['jquery.js'][5812]++;
    for (((i = 0), (l = srcElements.length)); (i < l); (i++)) {
      _$jscoverage['jquery.js'][5813]++;
      fixInput(srcElements[i], destElements[i]);
}
  }
  _$jscoverage['jquery.js'][5818]++;
  if (dataAndEvents) {
    _$jscoverage['jquery.js'][5819]++;
    if (deepDataAndEvents) {
      _$jscoverage['jquery.js'][5820]++;
      srcElements = (srcElements || getAll(elem));
      _$jscoverage['jquery.js'][5821]++;
      destElements = (destElements || getAll(clone));
      _$jscoverage['jquery.js'][5823]++;
      for (((i = 0), (l = srcElements.length)); (i < l); (i++)) {
        _$jscoverage['jquery.js'][5824]++;
        cloneCopyEvent(srcElements[i], destElements[i]);
}
    }
    else {
      _$jscoverage['jquery.js'][5827]++;
      cloneCopyEvent(elem, clone);
    }
  }
  _$jscoverage['jquery.js'][5832]++;
  destElements = getAll(clone, "script");
  _$jscoverage['jquery.js'][5833]++;
  if ((destElements.length > 0)) {
    _$jscoverage['jquery.js'][5834]++;
    setGlobalEval(destElements, ((! inPage) && getAll(elem, "script")));
  }
  _$jscoverage['jquery.js'][5838]++;
  return clone;
}), cleanData: (function (elems) {
  _$jscoverage['jquery.js'][5842]++;
  var data, elem, type, special = jQuery.event.special, i = 0;
  _$jscoverage['jquery.js'][5846]++;
  for (; ((elem = elems[i]) !== undefined); (i++)) {
    _$jscoverage['jquery.js'][5847]++;
    if (acceptData(elem)) {
      _$jscoverage['jquery.js'][5848]++;
      if ((data = elem[dataPriv.expando])) {
        _$jscoverage['jquery.js'][5849]++;
        if (data.events) {
          _$jscoverage['jquery.js'][5850]++;
          for (type in data.events) {
            _$jscoverage['jquery.js'][5851]++;
            if (special[type]) {
              _$jscoverage['jquery.js'][5852]++;
              jQuery.event.remove(elem, type);
            }
            else {
              _$jscoverage['jquery.js'][5856]++;
              jQuery.removeEvent(elem, type, data.handle);
            }
}
        }
        _$jscoverage['jquery.js'][5863]++;
        elem[dataPriv.expando] = undefined;
      }
      _$jscoverage['jquery.js'][5865]++;
      if (elem[dataUser.expando]) {
        _$jscoverage['jquery.js'][5869]++;
        elem[dataUser.expando] = undefined;
      }
    }
}
})});
  _$jscoverage['jquery.js'][5876]++;
  jQuery.fn.extend({detach: (function (selector) {
  _$jscoverage['jquery.js'][5878]++;
  return remove(this, selector, true);
}), remove: (function (selector) {
  _$jscoverage['jquery.js'][5882]++;
  return remove(this, selector);
}), text: (function (value) {
  _$jscoverage['jquery.js'][5886]++;
  return access(this, (function (value) {
  _$jscoverage['jquery.js'][5887]++;
  return ((value === undefined)? jQuery.text(this): this.empty().each((function () {
  _$jscoverage['jquery.js'][5890]++;
  if (((this.nodeType === 1) || (this.nodeType === 11) || (this.nodeType === 9))) {
    _$jscoverage['jquery.js'][5891]++;
    this.textContent = value;
  }
})));
}), null, value, arguments.length);
}), append: (function () {
  _$jscoverage['jquery.js'][5898]++;
  return domManip(this, arguments, (function (elem) {
  _$jscoverage['jquery.js'][5899]++;
  if (((this.nodeType === 1) || (this.nodeType === 11) || (this.nodeType === 9))) {
    _$jscoverage['jquery.js'][5900]++;
    var target = manipulationTarget(this, elem);
    _$jscoverage['jquery.js'][5901]++;
    target.appendChild(elem);
  }
}));
}), prepend: (function () {
  _$jscoverage['jquery.js'][5907]++;
  return domManip(this, arguments, (function (elem) {
  _$jscoverage['jquery.js'][5908]++;
  if (((this.nodeType === 1) || (this.nodeType === 11) || (this.nodeType === 9))) {
    _$jscoverage['jquery.js'][5909]++;
    var target = manipulationTarget(this, elem);
    _$jscoverage['jquery.js'][5910]++;
    target.insertBefore(elem, target.firstChild);
  }
}));
}), before: (function () {
  _$jscoverage['jquery.js'][5916]++;
  return domManip(this, arguments, (function (elem) {
  _$jscoverage['jquery.js'][5917]++;
  if (this.parentNode) {
    _$jscoverage['jquery.js'][5918]++;
    this.parentNode.insertBefore(elem, this);
  }
}));
}), after: (function () {
  _$jscoverage['jquery.js'][5924]++;
  return domManip(this, arguments, (function (elem) {
  _$jscoverage['jquery.js'][5925]++;
  if (this.parentNode) {
    _$jscoverage['jquery.js'][5926]++;
    this.parentNode.insertBefore(elem, this.nextSibling);
  }
}));
}), empty: (function () {
  _$jscoverage['jquery.js'][5932]++;
  var elem, i = 0;
  _$jscoverage['jquery.js'][5935]++;
  for (; ((elem = this[i]) != null); (i++)) {
    _$jscoverage['jquery.js'][5936]++;
    if ((elem.nodeType === 1)) {
      _$jscoverage['jquery.js'][5939]++;
      jQuery.cleanData(getAll(elem, false));
      _$jscoverage['jquery.js'][5942]++;
      elem.textContent = "";
    }
}
  _$jscoverage['jquery.js'][5946]++;
  return this;
}), clone: (function (dataAndEvents, deepDataAndEvents) {
  _$jscoverage['jquery.js'][5950]++;
  dataAndEvents = ((dataAndEvents == null)? false: dataAndEvents);
  _$jscoverage['jquery.js'][5951]++;
  deepDataAndEvents = ((deepDataAndEvents == null)? dataAndEvents: deepDataAndEvents);
  _$jscoverage['jquery.js'][5953]++;
  return this.map((function () {
  _$jscoverage['jquery.js'][5954]++;
  return jQuery.clone(this, dataAndEvents, deepDataAndEvents);
}));
}), html: (function (value) {
  _$jscoverage['jquery.js'][5959]++;
  return access(this, (function (value) {
  _$jscoverage['jquery.js'][5960]++;
  var elem = (this[0] || {}), i = 0, l = this.length;
  _$jscoverage['jquery.js'][5964]++;
  if (((value === undefined) && (elem.nodeType === 1))) {
    _$jscoverage['jquery.js'][5965]++;
    return elem.innerHTML;
  }
  _$jscoverage['jquery.js'][5969]++;
  if ((((typeof value) === "string") && (! rnoInnerhtml.test(value)) && (! wrapMap[(rtagName.exec(value) || ["", ""])[1].toLowerCase()]))) {
    _$jscoverage['jquery.js'][5972]++;
    value = jQuery.htmlPrefilter(value);
    _$jscoverage['jquery.js'][5974]++;
    try {
      _$jscoverage['jquery.js'][5975]++;
      for (; (i < l); (i++)) {
        _$jscoverage['jquery.js'][5976]++;
        elem = (this[i] || {});
        _$jscoverage['jquery.js'][5979]++;
        if ((elem.nodeType === 1)) {
          _$jscoverage['jquery.js'][5980]++;
          jQuery.cleanData(getAll(elem, false));
          _$jscoverage['jquery.js'][5981]++;
          elem.innerHTML = value;
        }
}
      _$jscoverage['jquery.js'][5985]++;
      elem = 0;
    }
    catch (e) {
    }
  }
  _$jscoverage['jquery.js'][5991]++;
  if (elem) {
    _$jscoverage['jquery.js'][5992]++;
    this.empty().append(value);
  }
}), null, value, arguments.length);
}), replaceWith: (function () {
  _$jscoverage['jquery.js'][5998]++;
  var ignored = [];
  _$jscoverage['jquery.js'][6001]++;
  return domManip(this, arguments, (function (elem) {
  _$jscoverage['jquery.js'][6002]++;
  var parent = this.parentNode;
  _$jscoverage['jquery.js'][6004]++;
  if ((jQuery.inArray(this, ignored) < 0)) {
    _$jscoverage['jquery.js'][6005]++;
    jQuery.cleanData(getAll(this));
    _$jscoverage['jquery.js'][6006]++;
    if (parent) {
      _$jscoverage['jquery.js'][6007]++;
      parent.replaceChild(elem, this);
    }
  }
}), ignored);
})});
  _$jscoverage['jquery.js'][6016]++;
  jQuery.each({appendTo: "append", prependTo: "prepend", insertBefore: "before", insertAfter: "after", replaceAll: "replaceWith"}, (function (name, original) {
  _$jscoverage['jquery.js'][6023]++;
  jQuery.fn[name] = (function (selector) {
  _$jscoverage['jquery.js'][6024]++;
  var elems, ret = [], insert = jQuery(selector), last = (insert.length - 1), i = 0;
  _$jscoverage['jquery.js'][6030]++;
  for (; (i <= last); (i++)) {
    _$jscoverage['jquery.js'][6031]++;
    elems = ((i === last)? this: this.clone(true));
    _$jscoverage['jquery.js'][6032]++;
    (jQuery(insert[i])[original])(elems);
    _$jscoverage['jquery.js'][6036]++;
    push.apply(ret, elems.get());
}
  _$jscoverage['jquery.js'][6039]++;
  return this.pushStack(ret);
});
}));
  _$jscoverage['jquery.js'][6042]++;
  var rnumnonpx = new RegExp(("^(" + pnum + ")(?!px)[a-z%]+$"), "i");
  _$jscoverage['jquery.js'][6044]++;
  var getStyles = (function (elem) {
  _$jscoverage['jquery.js'][6049]++;
  var view = elem.ownerDocument.defaultView;
  _$jscoverage['jquery.js'][6051]++;
  if (((! view) || (! view.opener))) {
    _$jscoverage['jquery.js'][6052]++;
    view = window;
  }
  _$jscoverage['jquery.js'][6055]++;
  return view.getComputedStyle(elem);
});
  _$jscoverage['jquery.js'][6058]++;
  var rboxStyle = new RegExp(cssExpand.join("|"), "i");
  _$jscoverage['jquery.js'][6062]++;
  (function () {
  _$jscoverage['jquery.js'][6066]++;
  function computeStyleTests() {
    _$jscoverage['jquery.js'][6069]++;
    if ((! div)) {
      _$jscoverage['jquery.js'][6070]++;
      return;
    }
    _$jscoverage['jquery.js'][6073]++;
    container.style.cssText = "position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0";
    _$jscoverage['jquery.js'][6075]++;
    div.style.cssText = "position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%";
    _$jscoverage['jquery.js'][6079]++;
    documentElement.appendChild(container).appendChild(div);
    _$jscoverage['jquery.js'][6081]++;
    var divStyle = window.getComputedStyle(div);
    _$jscoverage['jquery.js'][6082]++;
    pixelPositionVal = (divStyle.top !== "1%");
    _$jscoverage['jquery.js'][6085]++;
    reliableMarginLeftVal = (roundPixelMeasures(divStyle.marginLeft) === 12);
    _$jscoverage['jquery.js'][6089]++;
    div.style.right = "60%";
    _$jscoverage['jquery.js'][6090]++;
    pixelBoxStylesVal = (roundPixelMeasures(divStyle.right) === 36);
    _$jscoverage['jquery.js'][6094]++;
    boxSizingReliableVal = (roundPixelMeasures(divStyle.width) === 36);
    _$jscoverage['jquery.js'][6098]++;
    div.style.position = "absolute";
    _$jscoverage['jquery.js'][6099]++;
    scrollboxSizeVal = ((div.offsetWidth === 36) || "absolute");
    _$jscoverage['jquery.js'][6101]++;
    documentElement.removeChild(container);
    _$jscoverage['jquery.js'][6105]++;
    div = null;
}
  _$jscoverage['jquery.js'][6108]++;
  function roundPixelMeasures(measure) {
    _$jscoverage['jquery.js'][6109]++;
    return Math.round(parseFloat(measure));
}
  _$jscoverage['jquery.js'][6112]++;
  var pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal, reliableMarginLeftVal, container = document.createElement("div"), div = document.createElement("div");
  _$jscoverage['jquery.js'][6118]++;
  if ((! div.style)) {
    _$jscoverage['jquery.js'][6119]++;
    return;
  }
  _$jscoverage['jquery.js'][6124]++;
  div.style.backgroundClip = "content-box";
  _$jscoverage['jquery.js'][6125]++;
  div.cloneNode(true).style.backgroundClip = "";
  _$jscoverage['jquery.js'][6126]++;
  support.clearCloneStyle = (div.style.backgroundClip === "content-box");
  _$jscoverage['jquery.js'][6128]++;
  jQuery.extend(support, {boxSizingReliable: (function () {
  _$jscoverage['jquery.js'][6130]++;
  computeStyleTests();
  _$jscoverage['jquery.js'][6131]++;
  return boxSizingReliableVal;
}), pixelBoxStyles: (function () {
  _$jscoverage['jquery.js'][6134]++;
  computeStyleTests();
  _$jscoverage['jquery.js'][6135]++;
  return pixelBoxStylesVal;
}), pixelPosition: (function () {
  _$jscoverage['jquery.js'][6138]++;
  computeStyleTests();
  _$jscoverage['jquery.js'][6139]++;
  return pixelPositionVal;
}), reliableMarginLeft: (function () {
  _$jscoverage['jquery.js'][6142]++;
  computeStyleTests();
  _$jscoverage['jquery.js'][6143]++;
  return reliableMarginLeftVal;
}), scrollboxSize: (function () {
  _$jscoverage['jquery.js'][6146]++;
  computeStyleTests();
  _$jscoverage['jquery.js'][6147]++;
  return scrollboxSizeVal;
})});
})();
  _$jscoverage['jquery.js'][6153]++;
  function curCSS(elem, name, computed) {
    _$jscoverage['jquery.js'][6154]++;
    var width, minWidth, maxWidth, ret, style = elem.style;
    _$jscoverage['jquery.js'][6162]++;
    computed = (computed || getStyles(elem));
    _$jscoverage['jquery.js'][6167]++;
    if (computed) {
      _$jscoverage['jquery.js'][6168]++;
      ret = (computed.getPropertyValue(name) || computed[name]);
      _$jscoverage['jquery.js'][6170]++;
      if (((ret === "") && (! jQuery.contains(elem.ownerDocument, elem)))) {
        _$jscoverage['jquery.js'][6171]++;
        ret = jQuery.style(elem, name);
      }
      _$jscoverage['jquery.js'][6179]++;
      if (((! support.pixelBoxStyles()) && rnumnonpx.test(ret) && rboxStyle.test(name))) {
        _$jscoverage['jquery.js'][6182]++;
        width = style.width;
        _$jscoverage['jquery.js'][6183]++;
        minWidth = style.minWidth;
        _$jscoverage['jquery.js'][6184]++;
        maxWidth = style.maxWidth;
        _$jscoverage['jquery.js'][6187]++;
        style.minWidth = (style.maxWidth = (style.width = ret));
        _$jscoverage['jquery.js'][6188]++;
        ret = computed.width;
        _$jscoverage['jquery.js'][6191]++;
        style.width = width;
        _$jscoverage['jquery.js'][6192]++;
        style.minWidth = minWidth;
        _$jscoverage['jquery.js'][6193]++;
        style.maxWidth = maxWidth;
      }
    }
    _$jscoverage['jquery.js'][6197]++;
    return ((ret !== undefined)? (ret + ""): ret);
}
  _$jscoverage['jquery.js'][6206]++;
  function addGetHookIf(conditionFn, hookFn) {
    _$jscoverage['jquery.js'][6209]++;
    return ({get: (function () {
  _$jscoverage['jquery.js'][6211]++;
  if (conditionFn()) {
    _$jscoverage['jquery.js'][6215]++;
    (delete this.get);
    _$jscoverage['jquery.js'][6216]++;
    return;
  }
  _$jscoverage['jquery.js'][6220]++;
  return (this.get = hookFn).apply(this, arguments);
})});
}
  _$jscoverage['jquery.js'][6226]++;
  var rdisplayswap = /^(none|table(?!-c[ea]).+)/, rcustomProp = /^--/, cssShow = {position: "absolute", visibility: "hidden", display: "block"}, cssNormalTransform = {letterSpacing: "0", fontWeight: "400"}, cssPrefixes = ["Webkit", "Moz", "ms"], emptyStyle = document.createElement("div").style;
  _$jscoverage['jquery.js'][6243]++;
  function vendorPropName(name) {
    _$jscoverage['jquery.js'][6246]++;
    if ((name in emptyStyle)) {
      _$jscoverage['jquery.js'][6247]++;
      return name;
    }
    _$jscoverage['jquery.js'][6251]++;
    var capName = (name[0].toUpperCase() + name.slice(1)), i = cssPrefixes.length;
    _$jscoverage['jquery.js'][6254]++;
    while ((i--)) {
      _$jscoverage['jquery.js'][6255]++;
      name = (cssPrefixes[i] + capName);
      _$jscoverage['jquery.js'][6256]++;
      if ((name in emptyStyle)) {
        _$jscoverage['jquery.js'][6257]++;
        return name;
      }
}
}
  _$jscoverage['jquery.js'][6264]++;
  function finalPropName(name) {
    _$jscoverage['jquery.js'][6265]++;
    var ret = jQuery.cssProps[name];
    _$jscoverage['jquery.js'][6266]++;
    if ((! ret)) {
      _$jscoverage['jquery.js'][6267]++;
      ret = (jQuery.cssProps[name] = (vendorPropName(name) || name));
    }
    _$jscoverage['jquery.js'][6269]++;
    return ret;
}
  _$jscoverage['jquery.js'][6272]++;
  function setPositiveNumber(elem, value, subtract) {
    _$jscoverage['jquery.js'][6276]++;
    var matches = rcssNum.exec(value);
    _$jscoverage['jquery.js'][6277]++;
    return (matches? (Math.max(0, (matches[2] - (subtract || 0))) + (matches[3] || "px")): value);
}
  _$jscoverage['jquery.js'][6284]++;
  function boxModelAdjustment(elem, dimension, box, isBorderBox, styles, computedVal) {
    _$jscoverage['jquery.js'][6285]++;
    var i = ((dimension === "width")? 1: 0), extra = 0, delta = 0;
    _$jscoverage['jquery.js'][6290]++;
    if ((box === (isBorderBox? "border": "content"))) {
      _$jscoverage['jquery.js'][6291]++;
      return 0;
    }
    _$jscoverage['jquery.js'][6294]++;
    for (; (i < 4); (i += 2)) {
      _$jscoverage['jquery.js'][6297]++;
      if ((box === "margin")) {
        _$jscoverage['jquery.js'][6298]++;
        delta += jQuery.css(elem, (box + cssExpand[i]), true, styles);
      }
      _$jscoverage['jquery.js'][6302]++;
      if ((! isBorderBox)) {
        _$jscoverage['jquery.js'][6305]++;
        delta += jQuery.css(elem, ("padding" + cssExpand[i]), true, styles);
        _$jscoverage['jquery.js'][6308]++;
        if ((box !== "padding")) {
          _$jscoverage['jquery.js'][6309]++;
          delta += jQuery.css(elem, ("border" + cssExpand[i] + "Width"), true, styles);
        }
        else {
          _$jscoverage['jquery.js'][6313]++;
          extra += jQuery.css(elem, ("border" + cssExpand[i] + "Width"), true, styles);
        }
      }
      else {
        _$jscoverage['jquery.js'][6321]++;
        if ((box === "content")) {
          _$jscoverage['jquery.js'][6322]++;
          delta -= jQuery.css(elem, ("padding" + cssExpand[i]), true, styles);
        }
        _$jscoverage['jquery.js'][6326]++;
        if ((box !== "margin")) {
          _$jscoverage['jquery.js'][6327]++;
          delta -= jQuery.css(elem, ("border" + cssExpand[i] + "Width"), true, styles);
        }
      }
}
    _$jscoverage['jquery.js'][6333]++;
    if (((! isBorderBox) && (computedVal >= 0))) {
      _$jscoverage['jquery.js'][6337]++;
      delta += Math.max(0, Math.ceil((elem[("offset" + dimension[0].toUpperCase() + dimension.slice(1))] - computedVal - delta - extra - 0.5)));
    }
    _$jscoverage['jquery.js'][6346]++;
    return delta;
}
  _$jscoverage['jquery.js'][6349]++;
  function getWidthOrHeight(elem, dimension, extra) {
    _$jscoverage['jquery.js'][6352]++;
    var styles = getStyles(elem), val = curCSS(elem, dimension, styles), isBorderBox = (jQuery.css(elem, "boxSizing", false, styles) === "border-box"), valueIsBorderBox = isBorderBox;
    _$jscoverage['jquery.js'][6359]++;
    if (rnumnonpx.test(val)) {
      _$jscoverage['jquery.js'][6360]++;
      if ((! extra)) {
        _$jscoverage['jquery.js'][6361]++;
        return val;
      }
      _$jscoverage['jquery.js'][6363]++;
      val = "auto";
    }
    _$jscoverage['jquery.js'][6368]++;
    valueIsBorderBox = (valueIsBorderBox && (support.boxSizingReliable() || (val === elem.style[dimension])));
    _$jscoverage['jquery.js'][6375]++;
    if (((val === "auto") || ((! parseFloat(val)) && (jQuery.css(elem, "display", false, styles) === "inline")))) {
      _$jscoverage['jquery.js'][6378]++;
      val = elem[("offset" + dimension[0].toUpperCase() + dimension.slice(1))];
      _$jscoverage['jquery.js'][6381]++;
      valueIsBorderBox = true;
    }
    _$jscoverage['jquery.js'][6385]++;
    val = (parseFloat(val) || 0);
    _$jscoverage['jquery.js'][6388]++;
    return (val + boxModelAdjustment(elem, dimension, (extra || (isBorderBox? "border": "content")), valueIsBorderBox, styles, val) + "px");
}
  _$jscoverage['jquery.js'][6402]++;
  jQuery.extend({cssHooks: {opacity: {get: (function (elem, computed) {
  _$jscoverage['jquery.js'][6409]++;
  if (computed) {
    _$jscoverage['jquery.js'][6412]++;
    var ret = curCSS(elem, "opacity");
    _$jscoverage['jquery.js'][6413]++;
    return ((ret === "")? "1": ret);
  }
})}}, cssNumber: {"animationIterationCount": true, "columnCount": true, "fillOpacity": true, "flexGrow": true, "flexShrink": true, "fontWeight": true, "lineHeight": true, "opacity": true, "order": true, "orphans": true, "widows": true, "zIndex": true, "zoom": true}, cssProps: {}, style: (function (elem, name, value, extra) {
  _$jscoverage['jquery.js'][6444]++;
  if (((! elem) || (elem.nodeType === 3) || (elem.nodeType === 8) || (! elem.style))) {
    _$jscoverage['jquery.js'][6445]++;
    return;
  }
  _$jscoverage['jquery.js'][6449]++;
  var ret, type, hooks, origName = camelCase(name), isCustomProp = rcustomProp.test(name), style = elem.style;
  _$jscoverage['jquery.js'][6457]++;
  if ((! isCustomProp)) {
    _$jscoverage['jquery.js'][6458]++;
    name = finalPropName(origName);
  }
  _$jscoverage['jquery.js'][6462]++;
  hooks = (jQuery.cssHooks[name] || jQuery.cssHooks[origName]);
  _$jscoverage['jquery.js'][6465]++;
  if ((value !== undefined)) {
    _$jscoverage['jquery.js'][6466]++;
    type = (typeof value);
    _$jscoverage['jquery.js'][6469]++;
    if (((type === "string") && (ret = rcssNum.exec(value)) && ret[1])) {
      _$jscoverage['jquery.js'][6470]++;
      value = adjustCSS(elem, name, ret);
      _$jscoverage['jquery.js'][6473]++;
      type = "number";
    }
    _$jscoverage['jquery.js'][6477]++;
    if (((value == null) || (value !== value))) {
      _$jscoverage['jquery.js'][6478]++;
      return;
    }
    _$jscoverage['jquery.js'][6482]++;
    if ((type === "number")) {
      _$jscoverage['jquery.js'][6483]++;
      value += ((ret && ret[3]) || (jQuery.cssNumber[origName]? "": "px"));
    }
    _$jscoverage['jquery.js'][6487]++;
    if (((! support.clearCloneStyle) && (value === "") && (name.indexOf("background") === 0))) {
      _$jscoverage['jquery.js'][6488]++;
      style[name] = "inherit";
    }
    _$jscoverage['jquery.js'][6492]++;
    if (((! hooks) || (! ("set" in hooks)) || ((value = hooks.set(elem, value, extra)) !== undefined))) {
      _$jscoverage['jquery.js'][6495]++;
      if (isCustomProp) {
        _$jscoverage['jquery.js'][6496]++;
        style.setProperty(name, value);
      }
      else {
        _$jscoverage['jquery.js'][6498]++;
        style[name] = value;
      }
    }
  }
  else {
    _$jscoverage['jquery.js'][6505]++;
    if ((hooks && ("get" in hooks) && ((ret = hooks.get(elem, false, extra)) !== undefined))) {
      _$jscoverage['jquery.js'][6508]++;
      return ret;
    }
    _$jscoverage['jquery.js'][6512]++;
    return style[name];
  }
}), css: (function (elem, name, extra, styles) {
  _$jscoverage['jquery.js'][6517]++;
  var val, num, hooks, origName = camelCase(name), isCustomProp = rcustomProp.test(name);
  _$jscoverage['jquery.js'][6524]++;
  if ((! isCustomProp)) {
    _$jscoverage['jquery.js'][6525]++;
    name = finalPropName(origName);
  }
  _$jscoverage['jquery.js'][6529]++;
  hooks = (jQuery.cssHooks[name] || jQuery.cssHooks[origName]);
  _$jscoverage['jquery.js'][6532]++;
  if ((hooks && ("get" in hooks))) {
    _$jscoverage['jquery.js'][6533]++;
    val = hooks.get(elem, true, extra);
  }
  _$jscoverage['jquery.js'][6537]++;
  if ((val === undefined)) {
    _$jscoverage['jquery.js'][6538]++;
    val = curCSS(elem, name, styles);
  }
  _$jscoverage['jquery.js'][6542]++;
  if (((val === "normal") && (name in cssNormalTransform))) {
    _$jscoverage['jquery.js'][6543]++;
    val = cssNormalTransform[name];
  }
  _$jscoverage['jquery.js'][6547]++;
  if (((extra === "") || extra)) {
    _$jscoverage['jquery.js'][6548]++;
    num = parseFloat(val);
    _$jscoverage['jquery.js'][6549]++;
    return (((extra === true) || isFinite(num))? (num || 0): val);
  }
  _$jscoverage['jquery.js'][6552]++;
  return val;
})});
  _$jscoverage['jquery.js'][6556]++;
  jQuery.each(["height", "width"], (function (i, dimension) {
  _$jscoverage['jquery.js'][6557]++;
  jQuery.cssHooks[dimension] = {get: (function (elem, computed, extra) {
  _$jscoverage['jquery.js'][6559]++;
  if (computed) {
    _$jscoverage['jquery.js'][6563]++;
    return ((rdisplayswap.test(jQuery.css(elem, "display")) && ((! elem.getClientRects().length) || (! elem.getBoundingClientRect().width)))? swap(elem, cssShow, (function () {
  _$jscoverage['jquery.js'][6573]++;
  return getWidthOrHeight(elem, dimension, extra);
})): getWidthOrHeight(elem, dimension, extra));
  }
}), set: (function (elem, value, extra) {
  _$jscoverage['jquery.js'][6580]++;
  var matches, styles = getStyles(elem), isBorderBox = (jQuery.css(elem, "boxSizing", false, styles) === "border-box"), subtract = (extra && boxModelAdjustment(elem, dimension, extra, isBorderBox, styles));
  _$jscoverage['jquery.js'][6593]++;
  if ((isBorderBox && (support.scrollboxSize() === styles.position))) {
    _$jscoverage['jquery.js'][6594]++;
    subtract -= Math.ceil((elem[("offset" + dimension[0].toUpperCase() + dimension.slice(1))] - parseFloat(styles[dimension]) - boxModelAdjustment(elem, dimension, "border", false, styles) - 0.5));
  }
  _$jscoverage['jquery.js'][6603]++;
  if ((subtract && (matches = rcssNum.exec(value)) && ((matches[3] || "px") !== "px"))) {
    _$jscoverage['jquery.js'][6606]++;
    elem.style[dimension] = value;
    _$jscoverage['jquery.js'][6607]++;
    value = jQuery.css(elem, dimension);
  }
  _$jscoverage['jquery.js'][6610]++;
  return setPositiveNumber(elem, value, subtract);
})};
}));
  _$jscoverage['jquery.js'][6615]++;
  jQuery.cssHooks.marginLeft = addGetHookIf(support.reliableMarginLeft, (function (elem, computed) {
  _$jscoverage['jquery.js'][6617]++;
  if (computed) {
    _$jscoverage['jquery.js'][6618]++;
    return ((parseFloat(curCSS(elem, "marginLeft")) || (elem.getBoundingClientRect().left - swap(elem, {marginLeft: 0}, (function () {
  _$jscoverage['jquery.js'][6621]++;
  return elem.getBoundingClientRect().left;
})))) + "px");
  }
}));
  _$jscoverage['jquery.js'][6629]++;
  jQuery.each({margin: "", padding: "", border: "Width"}, (function (prefix, suffix) {
  _$jscoverage['jquery.js'][6634]++;
  jQuery.cssHooks[(prefix + suffix)] = {expand: (function (value) {
  _$jscoverage['jquery.js'][6636]++;
  var i = 0, expanded = {}, parts = (((typeof value) === "string")? value.split(" "): [value]);
  _$jscoverage['jquery.js'][6642]++;
  for (; (i < 4); (i++)) {
    _$jscoverage['jquery.js'][6643]++;
    expanded[(prefix + cssExpand[i] + suffix)] = (parts[i] || parts[(i - 2)] || parts[0]);
}
  _$jscoverage['jquery.js'][6647]++;
  return expanded;
})};
  _$jscoverage['jquery.js'][6651]++;
  if ((prefix !== "margin")) {
    _$jscoverage['jquery.js'][6652]++;
    jQuery.cssHooks[(prefix + suffix)].set = setPositiveNumber;
  }
}));
  _$jscoverage['jquery.js'][6656]++;
  jQuery.fn.extend({css: (function (name, value) {
  _$jscoverage['jquery.js'][6658]++;
  return access(this, (function (elem, name, value) {
  _$jscoverage['jquery.js'][6659]++;
  var styles, len, map = {}, i = 0;
  _$jscoverage['jquery.js'][6663]++;
  if (Array.isArray(name)) {
    _$jscoverage['jquery.js'][6664]++;
    styles = getStyles(elem);
    _$jscoverage['jquery.js'][6665]++;
    len = name.length;
    _$jscoverage['jquery.js'][6667]++;
    for (; (i < len); (i++)) {
      _$jscoverage['jquery.js'][6668]++;
      map[name[i]] = jQuery.css(elem, name[i], false, styles);
}
    _$jscoverage['jquery.js'][6671]++;
    return map;
  }
  _$jscoverage['jquery.js'][6674]++;
  return ((value !== undefined)? jQuery.style(elem, name, value): jQuery.css(elem, name));
}), name, value, (arguments.length > 1));
})});
  _$jscoverage['jquery.js'][6682]++;
  function Tween(elem, options, prop, end, easing) {
    _$jscoverage['jquery.js'][6683]++;
    return new (Tween.prototype.init)(elem, options, prop, end, easing);
}
  _$jscoverage['jquery.js'][6685]++;
  jQuery.Tween = Tween;
  _$jscoverage['jquery.js'][6687]++;
  Tween.prototype = {constructor: Tween, init: (function (elem, options, prop, end, easing, unit) {
  _$jscoverage['jquery.js'][6690]++;
  this.elem = elem;
  _$jscoverage['jquery.js'][6691]++;
  this.prop = prop;
  _$jscoverage['jquery.js'][6692]++;
  this.easing = (easing || jQuery.easing._default);
  _$jscoverage['jquery.js'][6693]++;
  this.options = options;
  _$jscoverage['jquery.js'][6694]++;
  this.start = (this.now = this.cur());
  _$jscoverage['jquery.js'][6695]++;
  this.end = end;
  _$jscoverage['jquery.js'][6696]++;
  this.unit = (unit || (jQuery.cssNumber[prop]? "": "px"));
}), cur: (function () {
  _$jscoverage['jquery.js'][6699]++;
  var hooks = Tween.propHooks[this.prop];
  _$jscoverage['jquery.js'][6701]++;
  return ((hooks && hooks.get)? hooks.get(this): Tween.propHooks._default.get(this));
}), run: (function (percent) {
  _$jscoverage['jquery.js'][6706]++;
  var eased, hooks = Tween.propHooks[this.prop];
  _$jscoverage['jquery.js'][6709]++;
  if (this.options.duration) {
    _$jscoverage['jquery.js'][6710]++;
    this.pos = (eased = (jQuery.easing[this.easing])(percent, (this.options.duration * percent), 0, 1, this.options.duration));
  }
  else {
    _$jscoverage['jquery.js'][6714]++;
    this.pos = (eased = percent);
  }
  _$jscoverage['jquery.js'][6716]++;
  this.now = (((this.end - this.start) * eased) + this.start);
  _$jscoverage['jquery.js'][6718]++;
  if (this.options.step) {
    _$jscoverage['jquery.js'][6719]++;
    this.options.step.call(this.elem, this.now, this);
  }
  _$jscoverage['jquery.js'][6722]++;
  if ((hooks && hooks.set)) {
    _$jscoverage['jquery.js'][6723]++;
    hooks.set(this);
  }
  else {
    _$jscoverage['jquery.js'][6725]++;
    Tween.propHooks._default.set(this);
  }
  _$jscoverage['jquery.js'][6727]++;
  return this;
})};
  _$jscoverage['jquery.js'][6731]++;
  Tween.prototype.init.prototype = Tween.prototype;
  _$jscoverage['jquery.js'][6733]++;
  Tween.propHooks = {_default: {get: (function (tween) {
  _$jscoverage['jquery.js'][6736]++;
  var result;
  _$jscoverage['jquery.js'][6740]++;
  if (((tween.elem.nodeType !== 1) || ((tween.elem[tween.prop] != null) && (tween.elem.style[tween.prop] == null)))) {
    _$jscoverage['jquery.js'][6742]++;
    return tween.elem[tween.prop];
  }
  _$jscoverage['jquery.js'][6749]++;
  result = jQuery.css(tween.elem, tween.prop, "");
  _$jscoverage['jquery.js'][6752]++;
  return (((! result) || (result === "auto"))? 0: result);
}), set: (function (tween) {
  _$jscoverage['jquery.js'][6759]++;
  if (jQuery.fx.step[tween.prop]) {
    _$jscoverage['jquery.js'][6760]++;
    (jQuery.fx.step[tween.prop])(tween);
  }
  else {
    _$jscoverage['jquery.js'][6761]++;
    if (((tween.elem.nodeType === 1) && ((tween.elem.style[jQuery.cssProps[tween.prop]] != null) || jQuery.cssHooks[tween.prop]))) {
      _$jscoverage['jquery.js'][6764]++;
      jQuery.style(tween.elem, tween.prop, (tween.now + tween.unit));
    }
    else {
      _$jscoverage['jquery.js'][6766]++;
      tween.elem[tween.prop] = tween.now;
    }
  }
})}};
  _$jscoverage['jquery.js'][6774]++;
  Tween.propHooks.scrollTop = (Tween.propHooks.scrollLeft = {set: (function (tween) {
  _$jscoverage['jquery.js'][6776]++;
  if ((tween.elem.nodeType && tween.elem.parentNode)) {
    _$jscoverage['jquery.js'][6777]++;
    tween.elem[tween.prop] = tween.now;
  }
})});
  _$jscoverage['jquery.js'][6782]++;
  jQuery.easing = {linear: (function (p) {
  _$jscoverage['jquery.js'][6784]++;
  return p;
}), swing: (function (p) {
  _$jscoverage['jquery.js'][6787]++;
  return (0.5 - (Math.cos((p * Math.PI)) / 2));
}), _default: "swing"};
  _$jscoverage['jquery.js'][6792]++;
  jQuery.fx = Tween.prototype.init;
  _$jscoverage['jquery.js'][6795]++;
  jQuery.fx.step = {};
  _$jscoverage['jquery.js'][6800]++;
  var fxNow, inProgress, rfxtypes = /^(?:toggle|show|hide)$/, rrun = /queueHooks$/;
  _$jscoverage['jquery.js'][6805]++;
  function schedule() {
    _$jscoverage['jquery.js'][6806]++;
    if (inProgress) {
      _$jscoverage['jquery.js'][6807]++;
      if (((document.hidden === false) && window.requestAnimationFrame)) {
        _$jscoverage['jquery.js'][6808]++;
        window.requestAnimationFrame(schedule);
      }
      else {
        _$jscoverage['jquery.js'][6810]++;
        window.setTimeout(schedule, jQuery.fx.interval);
      }
      _$jscoverage['jquery.js'][6813]++;
      jQuery.fx.tick();
    }
}
  _$jscoverage['jquery.js'][6818]++;
  function createFxNow() {
    _$jscoverage['jquery.js'][6819]++;
    window.setTimeout((function () {
  _$jscoverage['jquery.js'][6820]++;
  fxNow = undefined;
}));
    _$jscoverage['jquery.js'][6822]++;
    return (fxNow = Date.now());
}
  _$jscoverage['jquery.js'][6826]++;
  function genFx(type, includeWidth) {
    _$jscoverage['jquery.js'][6827]++;
    var which, i = 0, attrs = {height: type};
    _$jscoverage['jquery.js'][6833]++;
    includeWidth = (includeWidth? 1: 0);
    _$jscoverage['jquery.js'][6834]++;
    for (; (i < 4); (i += (2 - includeWidth))) {
      _$jscoverage['jquery.js'][6835]++;
      which = cssExpand[i];
      _$jscoverage['jquery.js'][6836]++;
      attrs[("margin" + which)] = (attrs[("padding" + which)] = type);
}
    _$jscoverage['jquery.js'][6839]++;
    if (includeWidth) {
      _$jscoverage['jquery.js'][6840]++;
      attrs.opacity = (attrs.width = type);
    }
    _$jscoverage['jquery.js'][6843]++;
    return attrs;
}
  _$jscoverage['jquery.js'][6846]++;
  function createTween(value, prop, animation) {
    _$jscoverage['jquery.js'][6847]++;
    var tween, collection = (Animation.tweeners[prop] || []).concat(Animation.tweeners["*"]), index = 0, length = collection.length;
    _$jscoverage['jquery.js'][6851]++;
    for (; (index < length); (index++)) {
      _$jscoverage['jquery.js'][6852]++;
      if ((tween = collection[index].call(animation, prop, value))) {
        _$jscoverage['jquery.js'][6855]++;
        return tween;
      }
}
}
  _$jscoverage['jquery.js'][6860]++;
  function defaultPrefilter(elem, props, opts) {
    _$jscoverage['jquery.js'][6861]++;
    var prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display, isBox = (("width" in props) || ("height" in props)), anim = this, orig = {}, style = elem.style, hidden = (elem.nodeType && isHiddenWithinTree(elem)), dataShow = dataPriv.get(elem, "fxshow");
    _$jscoverage['jquery.js'][6870]++;
    if ((! opts.queue)) {
      _$jscoverage['jquery.js'][6871]++;
      hooks = jQuery._queueHooks(elem, "fx");
      _$jscoverage['jquery.js'][6872]++;
      if ((hooks.unqueued == null)) {
        _$jscoverage['jquery.js'][6873]++;
        hooks.unqueued = 0;
        _$jscoverage['jquery.js'][6874]++;
        oldfire = hooks.empty.fire;
        _$jscoverage['jquery.js'][6875]++;
        hooks.empty.fire = (function () {
  _$jscoverage['jquery.js'][6876]++;
  if ((! hooks.unqueued)) {
    _$jscoverage['jquery.js'][6877]++;
    oldfire();
  }
});
      }
      _$jscoverage['jquery.js'][6881]++;
      (hooks.unqueued++);
      _$jscoverage['jquery.js'][6883]++;
      anim.always((function () {
  _$jscoverage['jquery.js'][6886]++;
  anim.always((function () {
  _$jscoverage['jquery.js'][6887]++;
  (hooks.unqueued--);
  _$jscoverage['jquery.js'][6888]++;
  if ((! jQuery.queue(elem, "fx").length)) {
    _$jscoverage['jquery.js'][6889]++;
    hooks.empty.fire();
  }
}));
}));
    }
    _$jscoverage['jquery.js'][6896]++;
    for (prop in props) {
      _$jscoverage['jquery.js'][6897]++;
      value = props[prop];
      _$jscoverage['jquery.js'][6898]++;
      if (rfxtypes.test(value)) {
        _$jscoverage['jquery.js'][6899]++;
        (delete props[prop]);
        _$jscoverage['jquery.js'][6900]++;
        toggle = (toggle || (value === "toggle"));
        _$jscoverage['jquery.js'][6901]++;
        if ((value === (hidden? "hide": "show"))) {
          _$jscoverage['jquery.js'][6905]++;
          if (((value === "show") && dataShow && (dataShow[prop] !== undefined))) {
            _$jscoverage['jquery.js'][6906]++;
            hidden = true;
          }
          else {
            _$jscoverage['jquery.js'][6910]++;
            continue;
          }
        }
        _$jscoverage['jquery.js'][6913]++;
        orig[prop] = ((dataShow && dataShow[prop]) || jQuery.style(elem, prop));
      }
}
    _$jscoverage['jquery.js'][6918]++;
    propTween = (! jQuery.isEmptyObject(props));
    _$jscoverage['jquery.js'][6919]++;
    if (((! propTween) && jQuery.isEmptyObject(orig))) {
      _$jscoverage['jquery.js'][6920]++;
      return;
    }
    _$jscoverage['jquery.js'][6924]++;
    if ((isBox && (elem.nodeType === 1))) {
      _$jscoverage['jquery.js'][6930]++;
      opts.overflow = [style.overflow, style.overflowX, style.overflowY];
      _$jscoverage['jquery.js'][6933]++;
      restoreDisplay = (dataShow && dataShow.display);
      _$jscoverage['jquery.js'][6934]++;
      if ((restoreDisplay == null)) {
        _$jscoverage['jquery.js'][6935]++;
        restoreDisplay = dataPriv.get(elem, "display");
      }
      _$jscoverage['jquery.js'][6937]++;
      display = jQuery.css(elem, "display");
      _$jscoverage['jquery.js'][6938]++;
      if ((display === "none")) {
        _$jscoverage['jquery.js'][6939]++;
        if (restoreDisplay) {
          _$jscoverage['jquery.js'][6940]++;
          display = restoreDisplay;
        }
        else {
          _$jscoverage['jquery.js'][6944]++;
          showHide([elem], true);
          _$jscoverage['jquery.js'][6945]++;
          restoreDisplay = (elem.style.display || restoreDisplay);
          _$jscoverage['jquery.js'][6946]++;
          display = jQuery.css(elem, "display");
          _$jscoverage['jquery.js'][6947]++;
          showHide([elem]);
        }
      }
      _$jscoverage['jquery.js'][6952]++;
      if (((display === "inline") || ((display === "inline-block") && (restoreDisplay != null)))) {
        _$jscoverage['jquery.js'][6953]++;
        if ((jQuery.css(elem, "float") === "none")) {
          _$jscoverage['jquery.js'][6956]++;
          if ((! propTween)) {
            _$jscoverage['jquery.js'][6957]++;
            anim.done((function () {
  _$jscoverage['jquery.js'][6958]++;
  style.display = restoreDisplay;
}));
            _$jscoverage['jquery.js'][6960]++;
            if ((restoreDisplay == null)) {
              _$jscoverage['jquery.js'][6961]++;
              display = style.display;
              _$jscoverage['jquery.js'][6962]++;
              restoreDisplay = ((display === "none")? "": display);
            }
          }
          _$jscoverage['jquery.js'][6965]++;
          style.display = "inline-block";
        }
      }
    }
    _$jscoverage['jquery.js'][6970]++;
    if (opts.overflow) {
      _$jscoverage['jquery.js'][6971]++;
      style.overflow = "hidden";
      _$jscoverage['jquery.js'][6972]++;
      anim.always((function () {
  _$jscoverage['jquery.js'][6973]++;
  style.overflow = opts.overflow[0];
  _$jscoverage['jquery.js'][6974]++;
  style.overflowX = opts.overflow[1];
  _$jscoverage['jquery.js'][6975]++;
  style.overflowY = opts.overflow[2];
}));
    }
    _$jscoverage['jquery.js'][6980]++;
    propTween = false;
    _$jscoverage['jquery.js'][6981]++;
    for (prop in orig) {
      _$jscoverage['jquery.js'][6984]++;
      if ((! propTween)) {
        _$jscoverage['jquery.js'][6985]++;
        if (dataShow) {
          _$jscoverage['jquery.js'][6986]++;
          if (("hidden" in dataShow)) {
            _$jscoverage['jquery.js'][6987]++;
            hidden = dataShow.hidden;
          }
        }
        else {
          _$jscoverage['jquery.js'][6990]++;
          dataShow = dataPriv.access(elem, "fxshow", {display: restoreDisplay});
        }
        _$jscoverage['jquery.js'][6994]++;
        if (toggle) {
          _$jscoverage['jquery.js'][6995]++;
          dataShow.hidden = (! hidden);
        }
        _$jscoverage['jquery.js'][6999]++;
        if (hidden) {
          _$jscoverage['jquery.js'][7000]++;
          showHide([elem], true);
        }
        _$jscoverage['jquery.js'][7005]++;
        anim.done((function () {
  _$jscoverage['jquery.js'][7010]++;
  if ((! hidden)) {
    _$jscoverage['jquery.js'][7011]++;
    showHide([elem]);
  }
  _$jscoverage['jquery.js'][7013]++;
  dataPriv.remove(elem, "fxshow");
  _$jscoverage['jquery.js'][7014]++;
  for (prop in orig) {
    _$jscoverage['jquery.js'][7015]++;
    jQuery.style(elem, prop, orig[prop]);
}
}));
      }
      _$jscoverage['jquery.js'][7021]++;
      propTween = createTween((hidden? dataShow[prop]: 0), prop, anim);
      _$jscoverage['jquery.js'][7022]++;
      if ((! (prop in dataShow))) {
        _$jscoverage['jquery.js'][7023]++;
        dataShow[prop] = propTween.start;
        _$jscoverage['jquery.js'][7024]++;
        if (hidden) {
          _$jscoverage['jquery.js'][7025]++;
          propTween.end = propTween.start;
          _$jscoverage['jquery.js'][7026]++;
          propTween.start = 0;
        }
      }
}
}
  _$jscoverage['jquery.js'][7032]++;
  function propFilter(props, specialEasing) {
    _$jscoverage['jquery.js'][7033]++;
    var index, name, easing, value, hooks;
    _$jscoverage['jquery.js'][7036]++;
    for (index in props) {
      _$jscoverage['jquery.js'][7037]++;
      name = camelCase(index);
      _$jscoverage['jquery.js'][7038]++;
      easing = specialEasing[name];
      _$jscoverage['jquery.js'][7039]++;
      value = props[index];
      _$jscoverage['jquery.js'][7040]++;
      if (Array.isArray(value)) {
        _$jscoverage['jquery.js'][7041]++;
        easing = value[1];
        _$jscoverage['jquery.js'][7042]++;
        value = (props[index] = value[0]);
      }
      _$jscoverage['jquery.js'][7045]++;
      if ((index !== name)) {
        _$jscoverage['jquery.js'][7046]++;
        props[name] = value;
        _$jscoverage['jquery.js'][7047]++;
        (delete props[index]);
      }
      _$jscoverage['jquery.js'][7050]++;
      hooks = jQuery.cssHooks[name];
      _$jscoverage['jquery.js'][7051]++;
      if ((hooks && ("expand" in hooks))) {
        _$jscoverage['jquery.js'][7052]++;
        value = hooks.expand(value);
        _$jscoverage['jquery.js'][7053]++;
        (delete props[name]);
        _$jscoverage['jquery.js'][7057]++;
        for (index in value) {
          _$jscoverage['jquery.js'][7058]++;
          if ((! (index in props))) {
            _$jscoverage['jquery.js'][7059]++;
            props[index] = value[index];
            _$jscoverage['jquery.js'][7060]++;
            specialEasing[index] = easing;
          }
}
      }
      else {
        _$jscoverage['jquery.js'][7064]++;
        specialEasing[name] = easing;
      }
}
}
  _$jscoverage['jquery.js'][7069]++;
  function Animation(elem, properties, options) {
    _$jscoverage['jquery.js'][7070]++;
    var result, stopped, index = 0, length = Animation.prefilters.length, deferred = jQuery.Deferred().always((function () {
  _$jscoverage['jquery.js'][7077]++;
  (delete tick.elem);
})), tick = (function () {
  _$jscoverage['jquery.js'][7080]++;
  if (stopped) {
    _$jscoverage['jquery.js'][7081]++;
    return false;
  }
  _$jscoverage['jquery.js'][7083]++;
  var currentTime = (fxNow || createFxNow()), remaining = Math.max(0, ((animation.startTime + animation.duration) - currentTime)), temp = ((remaining / animation.duration) || 0), percent = (1 - temp), index = 0, length = animation.tweens.length;
  _$jscoverage['jquery.js'][7093]++;
  for (; (index < length); (index++)) {
    _$jscoverage['jquery.js'][7094]++;
    animation.tweens[index].run(percent);
}
  _$jscoverage['jquery.js'][7097]++;
  deferred.notifyWith(elem, [animation, percent, remaining]);
  _$jscoverage['jquery.js'][7100]++;
  if (((percent < 1) && length)) {
    _$jscoverage['jquery.js'][7101]++;
    return remaining;
  }
  _$jscoverage['jquery.js'][7105]++;
  if ((! length)) {
    _$jscoverage['jquery.js'][7106]++;
    deferred.notifyWith(elem, [animation, 1, 0]);
  }
  _$jscoverage['jquery.js'][7110]++;
  deferred.resolveWith(elem, [animation]);
  _$jscoverage['jquery.js'][7111]++;
  return false;
}), animation = deferred.promise({elem: elem, props: jQuery.extend({}, properties), opts: jQuery.extend(true, {specialEasing: {}, easing: jQuery.easing._default}, options), originalProperties: properties, originalOptions: options, startTime: (fxNow || createFxNow()), duration: options.duration, tweens: [], createTween: (function (prop, end) {
  _$jscoverage['jquery.js'][7126]++;
  var tween = jQuery.Tween(elem, animation.opts, prop, end, (animation.opts.specialEasing[prop] || animation.opts.easing));
  _$jscoverage['jquery.js'][7128]++;
  animation.tweens.push(tween);
  _$jscoverage['jquery.js'][7129]++;
  return tween;
}), stop: (function (gotoEnd) {
  _$jscoverage['jquery.js'][7132]++;
  var index = 0, length = (gotoEnd? animation.tweens.length: 0);
  _$jscoverage['jquery.js'][7137]++;
  if (stopped) {
    _$jscoverage['jquery.js'][7138]++;
    return this;
  }
  _$jscoverage['jquery.js'][7140]++;
  stopped = true;
  _$jscoverage['jquery.js'][7141]++;
  for (; (index < length); (index++)) {
    _$jscoverage['jquery.js'][7142]++;
    animation.tweens[index].run(1);
}
  _$jscoverage['jquery.js'][7146]++;
  if (gotoEnd) {
    _$jscoverage['jquery.js'][7147]++;
    deferred.notifyWith(elem, [animation, 1, 0]);
    _$jscoverage['jquery.js'][7148]++;
    deferred.resolveWith(elem, [animation, gotoEnd]);
  }
  else {
    _$jscoverage['jquery.js'][7150]++;
    deferred.rejectWith(elem, [animation, gotoEnd]);
  }
  _$jscoverage['jquery.js'][7152]++;
  return this;
})}), props = animation.props;
    _$jscoverage['jquery.js'][7157]++;
    propFilter(props, animation.opts.specialEasing);
    _$jscoverage['jquery.js'][7159]++;
    for (; (index < length); (index++)) {
      _$jscoverage['jquery.js'][7160]++;
      result = Animation.prefilters[index].call(animation, elem, props, animation.opts);
      _$jscoverage['jquery.js'][7161]++;
      if (result) {
        _$jscoverage['jquery.js'][7162]++;
        if (isFunction(result.stop)) {
          _$jscoverage['jquery.js'][7163]++;
          jQuery._queueHooks(animation.elem, animation.opts.queue).stop = result.stop.bind(result);
        }
        _$jscoverage['jquery.js'][7166]++;
        return result;
      }
}
    _$jscoverage['jquery.js'][7170]++;
    jQuery.map(props, createTween, animation);
    _$jscoverage['jquery.js'][7172]++;
    if (isFunction(animation.opts.start)) {
      _$jscoverage['jquery.js'][7173]++;
      animation.opts.start.call(elem, animation);
    }
    _$jscoverage['jquery.js'][7177]++;
    animation.progress(animation.opts.progress).done(animation.opts.done, animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always);
    _$jscoverage['jquery.js'][7183]++;
    jQuery.fx.timer(jQuery.extend(tick, {elem: elem, anim: animation, queue: animation.opts.queue}));
    _$jscoverage['jquery.js'][7191]++;
    return animation;
}
  _$jscoverage['jquery.js'][7194]++;
  jQuery.Animation = jQuery.extend(Animation, {tweeners: {"*": [(function (prop, value) {
  _$jscoverage['jquery.js'][7198]++;
  var tween = this.createTween(prop, value);
  _$jscoverage['jquery.js'][7199]++;
  adjustCSS(tween.elem, prop, rcssNum.exec(value), tween);
  _$jscoverage['jquery.js'][7200]++;
  return tween;
})]}, tweener: (function (props, callback) {
  _$jscoverage['jquery.js'][7205]++;
  if (isFunction(props)) {
    _$jscoverage['jquery.js'][7206]++;
    callback = props;
    _$jscoverage['jquery.js'][7207]++;
    props = ["*"];
  }
  else {
    _$jscoverage['jquery.js'][7209]++;
    props = props.match(rnothtmlwhite);
  }
  _$jscoverage['jquery.js'][7212]++;
  var prop, index = 0, length = props.length;
  _$jscoverage['jquery.js'][7216]++;
  for (; (index < length); (index++)) {
    _$jscoverage['jquery.js'][7217]++;
    prop = props[index];
    _$jscoverage['jquery.js'][7218]++;
    Animation.tweeners[prop] = (Animation.tweeners[prop] || []);
    _$jscoverage['jquery.js'][7219]++;
    Animation.tweeners[prop].unshift(callback);
}
}), prefilters: [defaultPrefilter], prefilter: (function (callback, prepend) {
  _$jscoverage['jquery.js'][7226]++;
  if (prepend) {
    _$jscoverage['jquery.js'][7227]++;
    Animation.prefilters.unshift(callback);
  }
  else {
    _$jscoverage['jquery.js'][7229]++;
    Animation.prefilters.push(callback);
  }
})});
  _$jscoverage['jquery.js'][7234]++;
  jQuery.speed = (function (speed, easing, fn) {
  _$jscoverage['jquery.js'][7235]++;
  var opt = ((speed && ((typeof speed) === "object"))? jQuery.extend({}, speed): {complete: (fn || ((! fn) && easing) || (isFunction(speed) && speed)), duration: speed, easing: ((fn && easing) || (easing && (! isFunction(easing)) && easing))});
  _$jscoverage['jquery.js'][7243]++;
  if (jQuery.fx.off) {
    _$jscoverage['jquery.js'][7244]++;
    opt.duration = 0;
  }
  else {
    _$jscoverage['jquery.js'][7247]++;
    if (((typeof opt.duration) !== "number")) {
      _$jscoverage['jquery.js'][7248]++;
      if ((opt.duration in jQuery.fx.speeds)) {
        _$jscoverage['jquery.js'][7249]++;
        opt.duration = jQuery.fx.speeds[opt.duration];
      }
      else {
        _$jscoverage['jquery.js'][7252]++;
        opt.duration = jQuery.fx.speeds._default;
      }
    }
  }
  _$jscoverage['jquery.js'][7258]++;
  if (((opt.queue == null) || (opt.queue === true))) {
    _$jscoverage['jquery.js'][7259]++;
    opt.queue = "fx";
  }
  _$jscoverage['jquery.js'][7263]++;
  opt.old = opt.complete;
  _$jscoverage['jquery.js'][7265]++;
  opt.complete = (function () {
  _$jscoverage['jquery.js'][7266]++;
  if (isFunction(opt.old)) {
    _$jscoverage['jquery.js'][7267]++;
    opt.old.call(this);
  }
  _$jscoverage['jquery.js'][7270]++;
  if (opt.queue) {
    _$jscoverage['jquery.js'][7271]++;
    jQuery.dequeue(this, opt.queue);
  }
});
  _$jscoverage['jquery.js'][7275]++;
  return opt;
});
  _$jscoverage['jquery.js'][7278]++;
  jQuery.fn.extend({fadeTo: (function (speed, to, easing, callback) {
  _$jscoverage['jquery.js'][7282]++;
  return this.filter(isHiddenWithinTree).css("opacity", 0).show().end().animate({opacity: to}, speed, easing, callback);
}), animate: (function (prop, speed, easing, callback) {
  _$jscoverage['jquery.js'][7288]++;
  var empty = jQuery.isEmptyObject(prop), optall = jQuery.speed(speed, easing, callback), doAnimation = (function () {
  _$jscoverage['jquery.js'][7293]++;
  var anim = Animation(this, jQuery.extend({}, prop), optall);
  _$jscoverage['jquery.js'][7296]++;
  if ((empty || dataPriv.get(this, "finish"))) {
    _$jscoverage['jquery.js'][7297]++;
    anim.stop(true);
  }
});
  _$jscoverage['jquery.js'][7300]++;
  doAnimation.finish = doAnimation;
  _$jscoverage['jquery.js'][7302]++;
  return ((empty || (optall.queue === false))? this.each(doAnimation): this.queue(optall.queue, doAnimation));
}), stop: (function (type, clearQueue, gotoEnd) {
  _$jscoverage['jquery.js'][7307]++;
  var stopQueue = (function (hooks) {
  _$jscoverage['jquery.js'][7308]++;
  var stop = hooks.stop;
  _$jscoverage['jquery.js'][7309]++;
  (delete hooks.stop);
  _$jscoverage['jquery.js'][7310]++;
  stop(gotoEnd);
});
  _$jscoverage['jquery.js'][7313]++;
  if (((typeof type) !== "string")) {
    _$jscoverage['jquery.js'][7314]++;
    gotoEnd = clearQueue;
    _$jscoverage['jquery.js'][7315]++;
    clearQueue = type;
    _$jscoverage['jquery.js'][7316]++;
    type = undefined;
  }
  _$jscoverage['jquery.js'][7318]++;
  if ((clearQueue && (type !== false))) {
    _$jscoverage['jquery.js'][7319]++;
    this.queue((type || "fx"), []);
  }
  _$jscoverage['jquery.js'][7322]++;
  return this.each((function () {
  _$jscoverage['jquery.js'][7323]++;
  var dequeue = true, index = ((type != null) && (type + "queueHooks")), timers = jQuery.timers, data = dataPriv.get(this);
  _$jscoverage['jquery.js'][7328]++;
  if (index) {
    _$jscoverage['jquery.js'][7329]++;
    if ((data[index] && data[index].stop)) {
      _$jscoverage['jquery.js'][7330]++;
      stopQueue(data[index]);
    }
  }
  else {
    _$jscoverage['jquery.js'][7333]++;
    for (index in data) {
      _$jscoverage['jquery.js'][7334]++;
      if ((data[index] && data[index].stop && rrun.test(index))) {
        _$jscoverage['jquery.js'][7335]++;
        stopQueue(data[index]);
      }
}
  }
  _$jscoverage['jquery.js'][7340]++;
  for (index = timers.length; (index--);) {
    _$jscoverage['jquery.js'][7341]++;
    if (((timers[index].elem === this) && ((type == null) || (timers[index].queue === type)))) {
      _$jscoverage['jquery.js'][7344]++;
      timers[index].anim.stop(gotoEnd);
      _$jscoverage['jquery.js'][7345]++;
      dequeue = false;
      _$jscoverage['jquery.js'][7346]++;
      timers.splice(index, 1);
    }
}
  _$jscoverage['jquery.js'][7353]++;
  if ((dequeue || (! gotoEnd))) {
    _$jscoverage['jquery.js'][7354]++;
    jQuery.dequeue(this, type);
  }
}));
}), finish: (function (type) {
  _$jscoverage['jquery.js'][7359]++;
  if ((type !== false)) {
    _$jscoverage['jquery.js'][7360]++;
    type = (type || "fx");
  }
  _$jscoverage['jquery.js'][7362]++;
  return this.each((function () {
  _$jscoverage['jquery.js'][7363]++;
  var index, data = dataPriv.get(this), queue = data[(type + "queue")], hooks = data[(type + "queueHooks")], timers = jQuery.timers, length = (queue? queue.length: 0);
  _$jscoverage['jquery.js'][7371]++;
  data.finish = true;
  _$jscoverage['jquery.js'][7374]++;
  jQuery.queue(this, type, []);
  _$jscoverage['jquery.js'][7376]++;
  if ((hooks && hooks.stop)) {
    _$jscoverage['jquery.js'][7377]++;
    hooks.stop.call(this, true);
  }
  _$jscoverage['jquery.js'][7381]++;
  for (index = timers.length; (index--);) {
    _$jscoverage['jquery.js'][7382]++;
    if (((timers[index].elem === this) && (timers[index].queue === type))) {
      _$jscoverage['jquery.js'][7383]++;
      timers[index].anim.stop(true);
      _$jscoverage['jquery.js'][7384]++;
      timers.splice(index, 1);
    }
}
  _$jscoverage['jquery.js'][7389]++;
  for (index = 0; (index < length); (index++)) {
    _$jscoverage['jquery.js'][7390]++;
    if ((queue[index] && queue[index].finish)) {
      _$jscoverage['jquery.js'][7391]++;
      queue[index].finish.call(this);
    }
}
  _$jscoverage['jquery.js'][7396]++;
  (delete data.finish);
}));
})});
  _$jscoverage['jquery.js'][7401]++;
  jQuery.each(["toggle", "show", "hide"], (function (i, name) {
  _$jscoverage['jquery.js'][7402]++;
  var cssFn = jQuery.fn[name];
  _$jscoverage['jquery.js'][7403]++;
  jQuery.fn[name] = (function (speed, easing, callback) {
  _$jscoverage['jquery.js'][7404]++;
  return (((speed == null) || ((typeof speed) === "boolean"))? cssFn.apply(this, arguments): this.animate(genFx(name, true), speed, easing, callback));
});
}));
  _$jscoverage['jquery.js'][7411]++;
  jQuery.each({slideDown: genFx("show"), slideUp: genFx("hide"), slideToggle: genFx("toggle"), fadeIn: {opacity: "show"}, fadeOut: {opacity: "hide"}, fadeToggle: {opacity: "toggle"}}, (function (name, props) {
  _$jscoverage['jquery.js'][7419]++;
  jQuery.fn[name] = (function (speed, easing, callback) {
  _$jscoverage['jquery.js'][7420]++;
  return this.animate(props, speed, easing, callback);
});
}));
  _$jscoverage['jquery.js'][7424]++;
  jQuery.timers = [];
  _$jscoverage['jquery.js'][7425]++;
  jQuery.fx.tick = (function () {
  _$jscoverage['jquery.js'][7426]++;
  var timer, i = 0, timers = jQuery.timers;
  _$jscoverage['jquery.js'][7430]++;
  fxNow = Date.now();
  _$jscoverage['jquery.js'][7432]++;
  for (; (i < timers.length); (i++)) {
    _$jscoverage['jquery.js'][7433]++;
    timer = timers[i];
    _$jscoverage['jquery.js'][7436]++;
    if (((! timer()) && (timers[i] === timer))) {
      _$jscoverage['jquery.js'][7437]++;
      timers.splice((i--), 1);
    }
}
  _$jscoverage['jquery.js'][7441]++;
  if ((! timers.length)) {
    _$jscoverage['jquery.js'][7442]++;
    jQuery.fx.stop();
  }
  _$jscoverage['jquery.js'][7444]++;
  fxNow = undefined;
});
  _$jscoverage['jquery.js'][7447]++;
  jQuery.fx.timer = (function (timer) {
  _$jscoverage['jquery.js'][7448]++;
  jQuery.timers.push(timer);
  _$jscoverage['jquery.js'][7449]++;
  jQuery.fx.start();
});
  _$jscoverage['jquery.js'][7452]++;
  jQuery.fx.interval = 13;
  _$jscoverage['jquery.js'][7453]++;
  jQuery.fx.start = (function () {
  _$jscoverage['jquery.js'][7454]++;
  if (inProgress) {
    _$jscoverage['jquery.js'][7455]++;
    return;
  }
  _$jscoverage['jquery.js'][7458]++;
  inProgress = true;
  _$jscoverage['jquery.js'][7459]++;
  schedule();
});
  _$jscoverage['jquery.js'][7462]++;
  jQuery.fx.stop = (function () {
  _$jscoverage['jquery.js'][7463]++;
  inProgress = null;
});
  _$jscoverage['jquery.js'][7466]++;
  jQuery.fx.speeds = {slow: 600, fast: 200, _default: 400};
  _$jscoverage['jquery.js'][7477]++;
  jQuery.fn.delay = (function (time, type) {
  _$jscoverage['jquery.js'][7478]++;
  time = (jQuery.fx? (jQuery.fx.speeds[time] || time): time);
  _$jscoverage['jquery.js'][7479]++;
  type = (type || "fx");
  _$jscoverage['jquery.js'][7481]++;
  return this.queue(type, (function (next, hooks) {
  _$jscoverage['jquery.js'][7482]++;
  var timeout = window.setTimeout(next, time);
  _$jscoverage['jquery.js'][7483]++;
  hooks.stop = (function () {
  _$jscoverage['jquery.js'][7484]++;
  window.clearTimeout(timeout);
});
}));
});
  _$jscoverage['jquery.js'][7490]++;
  (function () {
  _$jscoverage['jquery.js'][7491]++;
  var input = document.createElement("input"), select = document.createElement("select"), opt = select.appendChild(document.createElement("option"));
  _$jscoverage['jquery.js'][7495]++;
  input.type = "checkbox";
  _$jscoverage['jquery.js'][7499]++;
  support.checkOn = (input.value !== "");
  _$jscoverage['jquery.js'][7503]++;
  support.optSelected = opt.selected;
  _$jscoverage['jquery.js'][7507]++;
  input = document.createElement("input");
  _$jscoverage['jquery.js'][7508]++;
  input.value = "t";
  _$jscoverage['jquery.js'][7509]++;
  input.type = "radio";
  _$jscoverage['jquery.js'][7510]++;
  support.radioValue = (input.value === "t");
})();
  _$jscoverage['jquery.js'][7514]++;
  var boolHook, attrHandle = jQuery.expr.attrHandle;
  _$jscoverage['jquery.js'][7517]++;
  jQuery.fn.extend({attr: (function (name, value) {
  _$jscoverage['jquery.js'][7519]++;
  return access(this, jQuery.attr, name, value, (arguments.length > 1));
}), removeAttr: (function (name) {
  _$jscoverage['jquery.js'][7523]++;
  return this.each((function () {
  _$jscoverage['jquery.js'][7524]++;
  jQuery.removeAttr(this, name);
}));
})});
  _$jscoverage['jquery.js'][7529]++;
  jQuery.extend({attr: (function (elem, name, value) {
  _$jscoverage['jquery.js'][7531]++;
  var ret, hooks, nType = elem.nodeType;
  _$jscoverage['jquery.js'][7535]++;
  if (((nType === 3) || (nType === 8) || (nType === 2))) {
    _$jscoverage['jquery.js'][7536]++;
    return;
  }
  _$jscoverage['jquery.js'][7540]++;
  if (((typeof elem.getAttribute) === "undefined")) {
    _$jscoverage['jquery.js'][7541]++;
    return jQuery.prop(elem, name, value);
  }
  _$jscoverage['jquery.js'][7546]++;
  if (((nType !== 1) || (! jQuery.isXMLDoc(elem)))) {
    _$jscoverage['jquery.js'][7547]++;
    hooks = (jQuery.attrHooks[name.toLowerCase()] || (jQuery.expr.match.bool.test(name)? boolHook: undefined));
  }
  _$jscoverage['jquery.js'][7551]++;
  if ((value !== undefined)) {
    _$jscoverage['jquery.js'][7552]++;
    if ((value === null)) {
      _$jscoverage['jquery.js'][7553]++;
      jQuery.removeAttr(elem, name);
      _$jscoverage['jquery.js'][7554]++;
      return;
    }
    _$jscoverage['jquery.js'][7557]++;
    if ((hooks && ("set" in hooks) && ((ret = hooks.set(elem, value, name)) !== undefined))) {
      _$jscoverage['jquery.js'][7559]++;
      return ret;
    }
    _$jscoverage['jquery.js'][7562]++;
    elem.setAttribute(name, (value + ""));
    _$jscoverage['jquery.js'][7563]++;
    return value;
  }
  _$jscoverage['jquery.js'][7566]++;
  if ((hooks && ("get" in hooks) && ((ret = hooks.get(elem, name)) !== null))) {
    _$jscoverage['jquery.js'][7567]++;
    return ret;
  }
  _$jscoverage['jquery.js'][7570]++;
  ret = jQuery.find.attr(elem, name);
  _$jscoverage['jquery.js'][7573]++;
  return ((ret == null)? undefined: ret);
}), attrHooks: {type: {set: (function (elem, value) {
  _$jscoverage['jquery.js'][7579]++;
  if (((! support.radioValue) && (value === "radio") && nodeName(elem, "input"))) {
    _$jscoverage['jquery.js'][7581]++;
    var val = elem.value;
    _$jscoverage['jquery.js'][7582]++;
    elem.setAttribute("type", value);
    _$jscoverage['jquery.js'][7583]++;
    if (val) {
      _$jscoverage['jquery.js'][7584]++;
      elem.value = val;
    }
    _$jscoverage['jquery.js'][7586]++;
    return value;
  }
})}}, removeAttr: (function (elem, value) {
  _$jscoverage['jquery.js'][7593]++;
  var name, i = 0, attrNames = (value && value.match(rnothtmlwhite));
  _$jscoverage['jquery.js'][7600]++;
  if ((attrNames && (elem.nodeType === 1))) {
    _$jscoverage['jquery.js'][7601]++;
    while ((name = attrNames[(i++)])) {
      _$jscoverage['jquery.js'][7602]++;
      elem.removeAttribute(name);
}
  }
})});
  _$jscoverage['jquery.js'][7609]++;
  boolHook = {set: (function (elem, value, name) {
  _$jscoverage['jquery.js'][7611]++;
  if ((value === false)) {
    _$jscoverage['jquery.js'][7614]++;
    jQuery.removeAttr(elem, name);
  }
  else {
    _$jscoverage['jquery.js'][7616]++;
    elem.setAttribute(name, name);
  }
  _$jscoverage['jquery.js'][7618]++;
  return name;
})};
  _$jscoverage['jquery.js'][7622]++;
  jQuery.each(jQuery.expr.match.bool.source.match(/\w+/g), (function (i, name) {
  _$jscoverage['jquery.js'][7623]++;
  var getter = (attrHandle[name] || jQuery.find.attr);
  _$jscoverage['jquery.js'][7625]++;
  attrHandle[name] = (function (elem, name, isXML) {
  _$jscoverage['jquery.js'][7626]++;
  var ret, handle, lowercaseName = name.toLowerCase();
  _$jscoverage['jquery.js'][7629]++;
  if ((! isXML)) {
    _$jscoverage['jquery.js'][7632]++;
    handle = attrHandle[lowercaseName];
    _$jscoverage['jquery.js'][7633]++;
    attrHandle[lowercaseName] = ret;
    _$jscoverage['jquery.js'][7634]++;
    ret = ((getter(elem, name, isXML) != null)? lowercaseName: null);
    _$jscoverage['jquery.js'][7637]++;
    attrHandle[lowercaseName] = handle;
  }
  _$jscoverage['jquery.js'][7639]++;
  return ret;
});
}));
  _$jscoverage['jquery.js'][7646]++;
  var rfocusable = /^(?:input|select|textarea|button)$/i, rclickable = /^(?:a|area)$/i;
  _$jscoverage['jquery.js'][7649]++;
  jQuery.fn.extend({prop: (function (name, value) {
  _$jscoverage['jquery.js'][7651]++;
  return access(this, jQuery.prop, name, value, (arguments.length > 1));
}), removeProp: (function (name) {
  _$jscoverage['jquery.js'][7655]++;
  return this.each((function () {
  _$jscoverage['jquery.js'][7656]++;
  (delete this[(jQuery.propFix[name] || name)]);
}));
})});
  _$jscoverage['jquery.js'][7661]++;
  jQuery.extend({prop: (function (elem, name, value) {
  _$jscoverage['jquery.js'][7663]++;
  var ret, hooks, nType = elem.nodeType;
  _$jscoverage['jquery.js'][7667]++;
  if (((nType === 3) || (nType === 8) || (nType === 2))) {
    _$jscoverage['jquery.js'][7668]++;
    return;
  }
  _$jscoverage['jquery.js'][7671]++;
  if (((nType !== 1) || (! jQuery.isXMLDoc(elem)))) {
    _$jscoverage['jquery.js'][7674]++;
    name = (jQuery.propFix[name] || name);
    _$jscoverage['jquery.js'][7675]++;
    hooks = jQuery.propHooks[name];
  }
  _$jscoverage['jquery.js'][7678]++;
  if ((value !== undefined)) {
    _$jscoverage['jquery.js'][7679]++;
    if ((hooks && ("set" in hooks) && ((ret = hooks.set(elem, value, name)) !== undefined))) {
      _$jscoverage['jquery.js'][7681]++;
      return ret;
    }
    _$jscoverage['jquery.js'][7684]++;
    return (elem[name] = value);
  }
  _$jscoverage['jquery.js'][7687]++;
  if ((hooks && ("get" in hooks) && ((ret = hooks.get(elem, name)) !== null))) {
    _$jscoverage['jquery.js'][7688]++;
    return ret;
  }
  _$jscoverage['jquery.js'][7691]++;
  return elem[name];
}), propHooks: {tabIndex: {get: (function (elem) {
  _$jscoverage['jquery.js'][7703]++;
  var tabindex = jQuery.find.attr(elem, "tabindex");
  _$jscoverage['jquery.js'][7705]++;
  if (tabindex) {
    _$jscoverage['jquery.js'][7706]++;
    return parseInt(tabindex, 10);
  }
  _$jscoverage['jquery.js'][7709]++;
  if ((rfocusable.test(elem.nodeName) || (rclickable.test(elem.nodeName) && elem.href))) {
    _$jscoverage['jquery.js'][7714]++;
    return 0;
  }
  _$jscoverage['jquery.js'][7717]++;
  return -1;
})}}, propFix: {"for": "htmlFor", "class": "className"}});
  _$jscoverage['jquery.js'][7736]++;
  if ((! support.optSelected)) {
    _$jscoverage['jquery.js'][7737]++;
    jQuery.propHooks.selected = {get: (function (elem) {
  _$jscoverage['jquery.js'][7742]++;
  var parent = elem.parentNode;
  _$jscoverage['jquery.js'][7743]++;
  if ((parent && parent.parentNode)) {
    _$jscoverage['jquery.js'][7744]++;
    parent.parentNode.selectedIndex;
  }
  _$jscoverage['jquery.js'][7746]++;
  return null;
}), set: (function (elem) {
  _$jscoverage['jquery.js'][7752]++;
  var parent = elem.parentNode;
  _$jscoverage['jquery.js'][7753]++;
  if (parent) {
    _$jscoverage['jquery.js'][7754]++;
    parent.selectedIndex;
    _$jscoverage['jquery.js'][7756]++;
    if (parent.parentNode) {
      _$jscoverage['jquery.js'][7757]++;
      parent.parentNode.selectedIndex;
    }
  }
})};
  }
  _$jscoverage['jquery.js'][7764]++;
  jQuery.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], (function () {
  _$jscoverage['jquery.js'][7776]++;
  jQuery.propFix[this.toLowerCase()] = this;
}));
  _$jscoverage['jquery.js'][7784]++;
  function stripAndCollapse(value) {
    _$jscoverage['jquery.js'][7785]++;
    var tokens = (value.match(rnothtmlwhite) || []);
    _$jscoverage['jquery.js'][7786]++;
    return tokens.join(" ");
}
  _$jscoverage['jquery.js'][7790]++;
  function getClass(elem) {
    _$jscoverage['jquery.js'][7791]++;
    return ((elem.getAttribute && elem.getAttribute("class")) || "");
}
  _$jscoverage['jquery.js'][7794]++;
  function classesToArray(value) {
    _$jscoverage['jquery.js'][7795]++;
    if (Array.isArray(value)) {
      _$jscoverage['jquery.js'][7796]++;
      return value;
    }
    _$jscoverage['jquery.js'][7798]++;
    if (((typeof value) === "string")) {
      _$jscoverage['jquery.js'][7799]++;
      return (value.match(rnothtmlwhite) || []);
    }
    _$jscoverage['jquery.js'][7801]++;
    return [];
}
  _$jscoverage['jquery.js'][7804]++;
  jQuery.fn.extend({addClass: (function (value) {
  _$jscoverage['jquery.js'][7806]++;
  var classes, elem, cur, curValue, clazz, j, finalValue, i = 0;
  _$jscoverage['jquery.js'][7809]++;
  if (isFunction(value)) {
    _$jscoverage['jquery.js'][7810]++;
    return this.each((function (j) {
  _$jscoverage['jquery.js'][7811]++;
  jQuery(this).addClass(value.call(this, j, getClass(this)));
}));
  }
  _$jscoverage['jquery.js'][7815]++;
  classes = classesToArray(value);
  _$jscoverage['jquery.js'][7817]++;
  if (classes.length) {
    _$jscoverage['jquery.js'][7818]++;
    while ((elem = this[(i++)])) {
      _$jscoverage['jquery.js'][7819]++;
      curValue = getClass(elem);
      _$jscoverage['jquery.js'][7820]++;
      cur = ((elem.nodeType === 1) && (" " + stripAndCollapse(curValue) + " "));
      _$jscoverage['jquery.js'][7822]++;
      if (cur) {
        _$jscoverage['jquery.js'][7823]++;
        j = 0;
        _$jscoverage['jquery.js'][7824]++;
        while ((clazz = classes[(j++)])) {
          _$jscoverage['jquery.js'][7825]++;
          if ((cur.indexOf((" " + clazz + " ")) < 0)) {
            _$jscoverage['jquery.js'][7826]++;
            cur += (clazz + " ");
          }
}
        _$jscoverage['jquery.js'][7831]++;
        finalValue = stripAndCollapse(cur);
        _$jscoverage['jquery.js'][7832]++;
        if ((curValue !== finalValue)) {
          _$jscoverage['jquery.js'][7833]++;
          elem.setAttribute("class", finalValue);
        }
      }
}
  }
  _$jscoverage['jquery.js'][7839]++;
  return this;
}), removeClass: (function (value) {
  _$jscoverage['jquery.js'][7843]++;
  var classes, elem, cur, curValue, clazz, j, finalValue, i = 0;
  _$jscoverage['jquery.js'][7846]++;
  if (isFunction(value)) {
    _$jscoverage['jquery.js'][7847]++;
    return this.each((function (j) {
  _$jscoverage['jquery.js'][7848]++;
  jQuery(this).removeClass(value.call(this, j, getClass(this)));
}));
  }
  _$jscoverage['jquery.js'][7852]++;
  if ((! arguments.length)) {
    _$jscoverage['jquery.js'][7853]++;
    return this.attr("class", "");
  }
  _$jscoverage['jquery.js'][7856]++;
  classes = classesToArray(value);
  _$jscoverage['jquery.js'][7858]++;
  if (classes.length) {
    _$jscoverage['jquery.js'][7859]++;
    while ((elem = this[(i++)])) {
      _$jscoverage['jquery.js'][7860]++;
      curValue = getClass(elem);
      _$jscoverage['jquery.js'][7863]++;
      cur = ((elem.nodeType === 1) && (" " + stripAndCollapse(curValue) + " "));
      _$jscoverage['jquery.js'][7865]++;
      if (cur) {
        _$jscoverage['jquery.js'][7866]++;
        j = 0;
        _$jscoverage['jquery.js'][7867]++;
        while ((clazz = classes[(j++)])) {
          _$jscoverage['jquery.js'][7870]++;
          while ((cur.indexOf((" " + clazz + " ")) > -1)) {
            _$jscoverage['jquery.js'][7871]++;
            cur = cur.replace((" " + clazz + " "), " ");
}
}
        _$jscoverage['jquery.js'][7876]++;
        finalValue = stripAndCollapse(cur);
        _$jscoverage['jquery.js'][7877]++;
        if ((curValue !== finalValue)) {
          _$jscoverage['jquery.js'][7878]++;
          elem.setAttribute("class", finalValue);
        }
      }
}
  }
  _$jscoverage['jquery.js'][7884]++;
  return this;
}), toggleClass: (function (value, stateVal) {
  _$jscoverage['jquery.js'][7888]++;
  var type = (typeof value), isValidValue = ((type === "string") || Array.isArray(value));
  _$jscoverage['jquery.js'][7891]++;
  if ((((typeof stateVal) === "boolean") && isValidValue)) {
    _$jscoverage['jquery.js'][7892]++;
    return (stateVal? this.addClass(value): this.removeClass(value));
  }
  _$jscoverage['jquery.js'][7895]++;
  if (isFunction(value)) {
    _$jscoverage['jquery.js'][7896]++;
    return this.each((function (i) {
  _$jscoverage['jquery.js'][7897]++;
  jQuery(this).toggleClass(value.call(this, i, getClass(this), stateVal), stateVal);
}));
  }
  _$jscoverage['jquery.js'][7904]++;
  return this.each((function () {
  _$jscoverage['jquery.js'][7905]++;
  var className, i, self, classNames;
  _$jscoverage['jquery.js'][7907]++;
  if (isValidValue) {
    _$jscoverage['jquery.js'][7910]++;
    i = 0;
    _$jscoverage['jquery.js'][7911]++;
    self = jQuery(this);
    _$jscoverage['jquery.js'][7912]++;
    classNames = classesToArray(value);
    _$jscoverage['jquery.js'][7914]++;
    while ((className = classNames[(i++)])) {
      _$jscoverage['jquery.js'][7917]++;
      if (self.hasClass(className)) {
        _$jscoverage['jquery.js'][7918]++;
        self.removeClass(className);
      }
      else {
        _$jscoverage['jquery.js'][7920]++;
        self.addClass(className);
      }
}
  }
  else {
    _$jscoverage['jquery.js'][7925]++;
    if (((value === undefined) || (type === "boolean"))) {
      _$jscoverage['jquery.js'][7926]++;
      className = getClass(this);
      _$jscoverage['jquery.js'][7927]++;
      if (className) {
        _$jscoverage['jquery.js'][7930]++;
        dataPriv.set(this, "__className__", className);
      }
      _$jscoverage['jquery.js'][7937]++;
      if (this.setAttribute) {
        _$jscoverage['jquery.js'][7938]++;
        this.setAttribute("class", ((className || (value === false))? "": (dataPriv.get(this, "__className__") || "")));
      }
    }
  }
}));
}), hasClass: (function (selector) {
  _$jscoverage['jquery.js'][7949]++;
  var className, elem, i = 0;
  _$jscoverage['jquery.js'][7952]++;
  className = (" " + selector + " ");
  _$jscoverage['jquery.js'][7953]++;
  while ((elem = this[(i++)])) {
    _$jscoverage['jquery.js'][7954]++;
    if (((elem.nodeType === 1) && ((" " + stripAndCollapse(getClass(elem)) + " ").indexOf(className) > -1))) {
      _$jscoverage['jquery.js'][7956]++;
      return true;
    }
}
  _$jscoverage['jquery.js'][7960]++;
  return false;
})});
  _$jscoverage['jquery.js'][7967]++;
  var rreturn = /\r/g;
  _$jscoverage['jquery.js'][7969]++;
  jQuery.fn.extend({val: (function (value) {
  _$jscoverage['jquery.js'][7971]++;
  var hooks, ret, valueIsFunction, elem = this[0];
  _$jscoverage['jquery.js'][7974]++;
  if ((! arguments.length)) {
    _$jscoverage['jquery.js'][7975]++;
    if (elem) {
      _$jscoverage['jquery.js'][7976]++;
      hooks = (jQuery.valHooks[elem.type] || jQuery.valHooks[elem.nodeName.toLowerCase()]);
      _$jscoverage['jquery.js'][7979]++;
      if ((hooks && ("get" in hooks) && ((ret = hooks.get(elem, "value")) !== undefined))) {
        _$jscoverage['jquery.js'][7983]++;
        return ret;
      }
      _$jscoverage['jquery.js'][7986]++;
      ret = elem.value;
      _$jscoverage['jquery.js'][7989]++;
      if (((typeof ret) === "string")) {
        _$jscoverage['jquery.js'][7990]++;
        return ret.replace(rreturn, "");
      }
      _$jscoverage['jquery.js'][7994]++;
      return ((ret == null)? "": ret);
    }
    _$jscoverage['jquery.js'][7997]++;
    return;
  }
  _$jscoverage['jquery.js'][8000]++;
  valueIsFunction = isFunction(value);
  _$jscoverage['jquery.js'][8002]++;
  return this.each((function (i) {
  _$jscoverage['jquery.js'][8003]++;
  var val;
  _$jscoverage['jquery.js'][8005]++;
  if ((this.nodeType !== 1)) {
    _$jscoverage['jquery.js'][8006]++;
    return;
  }
  _$jscoverage['jquery.js'][8009]++;
  if (valueIsFunction) {
    _$jscoverage['jquery.js'][8010]++;
    val = value.call(this, i, jQuery(this).val());
  }
  else {
    _$jscoverage['jquery.js'][8012]++;
    val = value;
  }
  _$jscoverage['jquery.js'][8016]++;
  if ((val == null)) {
    _$jscoverage['jquery.js'][8017]++;
    val = "";
  }
  else {
    _$jscoverage['jquery.js'][8019]++;
    if (((typeof val) === "number")) {
      _$jscoverage['jquery.js'][8020]++;
      val += "";
    }
    else {
      _$jscoverage['jquery.js'][8022]++;
      if (Array.isArray(val)) {
        _$jscoverage['jquery.js'][8023]++;
        val = jQuery.map(val, (function (value) {
  _$jscoverage['jquery.js'][8024]++;
  return ((value == null)? "": (value + ""));
}));
      }
    }
  }
  _$jscoverage['jquery.js'][8028]++;
  hooks = (jQuery.valHooks[this.type] || jQuery.valHooks[this.nodeName.toLowerCase()]);
  _$jscoverage['jquery.js'][8031]++;
  if (((! hooks) || (! ("set" in hooks)) || (hooks.set(this, val, "value") === undefined))) {
    _$jscoverage['jquery.js'][8032]++;
    this.value = val;
  }
}));
})});
  _$jscoverage['jquery.js'][8038]++;
  jQuery.extend({valHooks: {option: {get: (function (elem) {
  _$jscoverage['jquery.js'][8043]++;
  var val = jQuery.find.attr(elem, "value");
  _$jscoverage['jquery.js'][8044]++;
  return ((val != null)? val: stripAndCollapse(jQuery.text(elem)));
})}, select: {get: (function (elem) {
  _$jscoverage['jquery.js'][8056]++;
  var value, option, i, options = elem.options, index = elem.selectedIndex, one = (elem.type === "select-one"), values = (one? null: []), max = (one? (index + 1): options.length);
  _$jscoverage['jquery.js'][8063]++;
  if ((index < 0)) {
    _$jscoverage['jquery.js'][8064]++;
    i = max;
  }
  else {
    _$jscoverage['jquery.js'][8067]++;
    i = (one? index: 0);
  }
  _$jscoverage['jquery.js'][8071]++;
  for (; (i < max); (i++)) {
    _$jscoverage['jquery.js'][8072]++;
    option = options[i];
    _$jscoverage['jquery.js'][8076]++;
    if (((option.selected || (i === index)) && (! option.disabled) && ((! option.parentNode.disabled) || (! nodeName(option.parentNode, "optgroup"))))) {
      _$jscoverage['jquery.js'][8084]++;
      value = jQuery(option).val();
      _$jscoverage['jquery.js'][8087]++;
      if (one) {
        _$jscoverage['jquery.js'][8088]++;
        return value;
      }
      _$jscoverage['jquery.js'][8092]++;
      values.push(value);
    }
}
  _$jscoverage['jquery.js'][8096]++;
  return values;
}), set: (function (elem, value) {
  _$jscoverage['jquery.js'][8100]++;
  var optionSet, option, options = elem.options, values = jQuery.makeArray(value), i = options.length;
  _$jscoverage['jquery.js'][8105]++;
  while ((i--)) {
    _$jscoverage['jquery.js'][8106]++;
    option = options[i];
    _$jscoverage['jquery.js'][8110]++;
    if ((option.selected = (jQuery.inArray(jQuery.valHooks.option.get(option), values) > -1))) {
      _$jscoverage['jquery.js'][8113]++;
      optionSet = true;
    }
}
  _$jscoverage['jquery.js'][8120]++;
  if ((! optionSet)) {
    _$jscoverage['jquery.js'][8121]++;
    elem.selectedIndex = -1;
  }
  _$jscoverage['jquery.js'][8123]++;
  return values;
})}}});
  _$jscoverage['jquery.js'][8130]++;
  jQuery.each(["radio", "checkbox"], (function () {
  _$jscoverage['jquery.js'][8131]++;
  jQuery.valHooks[this] = {set: (function (elem, value) {
  _$jscoverage['jquery.js'][8133]++;
  if (Array.isArray(value)) {
    _$jscoverage['jquery.js'][8134]++;
    return (elem.checked = (jQuery.inArray(jQuery(elem).val(), value) > -1));
  }
})};
  _$jscoverage['jquery.js'][8138]++;
  if ((! support.checkOn)) {
    _$jscoverage['jquery.js'][8139]++;
    jQuery.valHooks[this].get = (function (elem) {
  _$jscoverage['jquery.js'][8140]++;
  return ((elem.getAttribute("value") === null)? "on": elem.value);
});
  }
}));
  _$jscoverage['jquery.js'][8151]++;
  support.focusin = ("onfocusin" in window);
  _$jscoverage['jquery.js'][8154]++;
  var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/, stopPropagationCallback = (function (e) {
  _$jscoverage['jquery.js'][8156]++;
  e.stopPropagation();
});
  _$jscoverage['jquery.js'][8159]++;
  jQuery.extend(jQuery.event, {trigger: (function (event, data, elem, onlyHandlers) {
  _$jscoverage['jquery.js'][8163]++;
  var i, cur, tmp, bubbleType, ontype, handle, special, lastElement, eventPath = [(elem || document)], type = (hasOwn.call(event, "type")? event.type: event), namespaces = (hasOwn.call(event, "namespace")? event.namespace.split("."): []);
  _$jscoverage['jquery.js'][8168]++;
  cur = (lastElement = (tmp = (elem = (elem || document))));
  _$jscoverage['jquery.js'][8171]++;
  if (((elem.nodeType === 3) || (elem.nodeType === 8))) {
    _$jscoverage['jquery.js'][8172]++;
    return;
  }
  _$jscoverage['jquery.js'][8176]++;
  if (rfocusMorph.test((type + jQuery.event.triggered))) {
    _$jscoverage['jquery.js'][8177]++;
    return;
  }
  _$jscoverage['jquery.js'][8180]++;
  if ((type.indexOf(".") > -1)) {
    _$jscoverage['jquery.js'][8183]++;
    namespaces = type.split(".");
    _$jscoverage['jquery.js'][8184]++;
    type = namespaces.shift();
    _$jscoverage['jquery.js'][8185]++;
    namespaces.sort();
  }
  _$jscoverage['jquery.js'][8187]++;
  ontype = ((type.indexOf(":") < 0) && ("on" + type));
  _$jscoverage['jquery.js'][8190]++;
  event = (event[jQuery.expando]? event: new (jQuery.Event)(type, (((typeof event) === "object") && event)));
  _$jscoverage['jquery.js'][8195]++;
  event.isTrigger = (onlyHandlers? 2: 3);
  _$jscoverage['jquery.js'][8196]++;
  event.namespace = namespaces.join(".");
  _$jscoverage['jquery.js'][8197]++;
  event.rnamespace = (event.namespace? new RegExp(("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)")): null);
  _$jscoverage['jquery.js'][8202]++;
  event.result = undefined;
  _$jscoverage['jquery.js'][8203]++;
  if ((! event.target)) {
    _$jscoverage['jquery.js'][8204]++;
    event.target = elem;
  }
  _$jscoverage['jquery.js'][8208]++;
  data = ((data == null)? [event]: jQuery.makeArray(data, [event]));
  _$jscoverage['jquery.js'][8213]++;
  special = (jQuery.event.special[type] || {});
  _$jscoverage['jquery.js'][8214]++;
  if (((! onlyHandlers) && special.trigger && (special.trigger.apply(elem, data) === false))) {
    _$jscoverage['jquery.js'][8215]++;
    return;
  }
  _$jscoverage['jquery.js'][8220]++;
  if (((! onlyHandlers) && (! special.noBubble) && (! isWindow(elem)))) {
    _$jscoverage['jquery.js'][8222]++;
    bubbleType = (special.delegateType || type);
    _$jscoverage['jquery.js'][8223]++;
    if ((! rfocusMorph.test((bubbleType + type)))) {
      _$jscoverage['jquery.js'][8224]++;
      cur = cur.parentNode;
    }
    _$jscoverage['jquery.js'][8226]++;
    for (; cur; (cur = cur.parentNode)) {
      _$jscoverage['jquery.js'][8227]++;
      eventPath.push(cur);
      _$jscoverage['jquery.js'][8228]++;
      tmp = cur;
}
    _$jscoverage['jquery.js'][8232]++;
    if ((tmp === (elem.ownerDocument || document))) {
      _$jscoverage['jquery.js'][8233]++;
      eventPath.push((tmp.defaultView || tmp.parentWindow || window));
    }
  }
  _$jscoverage['jquery.js'][8238]++;
  i = 0;
  _$jscoverage['jquery.js'][8239]++;
  while (((cur = eventPath[(i++)]) && (! event.isPropagationStopped()))) {
    _$jscoverage['jquery.js'][8240]++;
    lastElement = cur;
    _$jscoverage['jquery.js'][8241]++;
    event.type = ((i > 1)? bubbleType: (special.bindType || type));
    _$jscoverage['jquery.js'][8246]++;
    handle = ((dataPriv.get(cur, "events") || {})[event.type] && dataPriv.get(cur, "handle"));
    _$jscoverage['jquery.js'][8248]++;
    if (handle) {
      _$jscoverage['jquery.js'][8249]++;
      handle.apply(cur, data);
    }
    _$jscoverage['jquery.js'][8253]++;
    handle = (ontype && cur[ontype]);
    _$jscoverage['jquery.js'][8254]++;
    if ((handle && handle.apply && acceptData(cur))) {
      _$jscoverage['jquery.js'][8255]++;
      event.result = handle.apply(cur, data);
      _$jscoverage['jquery.js'][8256]++;
      if ((event.result === false)) {
        _$jscoverage['jquery.js'][8257]++;
        event.preventDefault();
      }
    }
}
  _$jscoverage['jquery.js'][8261]++;
  event.type = type;
  _$jscoverage['jquery.js'][8264]++;
  if (((! onlyHandlers) && (! event.isDefaultPrevented()))) {
    _$jscoverage['jquery.js'][8266]++;
    if ((((! special._default) || (special._default.apply(eventPath.pop(), data) === false)) && acceptData(elem))) {
      _$jscoverage['jquery.js'][8272]++;
      if ((ontype && isFunction(elem[type]) && (! isWindow(elem)))) {
        _$jscoverage['jquery.js'][8275]++;
        tmp = elem[ontype];
        _$jscoverage['jquery.js'][8277]++;
        if (tmp) {
          _$jscoverage['jquery.js'][8278]++;
          elem[ontype] = null;
        }
        _$jscoverage['jquery.js'][8282]++;
        jQuery.event.triggered = type;
        _$jscoverage['jquery.js'][8284]++;
        if (event.isPropagationStopped()) {
          _$jscoverage['jquery.js'][8285]++;
          lastElement.addEventListener(type, stopPropagationCallback);
        }
        _$jscoverage['jquery.js'][8288]++;
        (elem[type])();
        _$jscoverage['jquery.js'][8290]++;
        if (event.isPropagationStopped()) {
          _$jscoverage['jquery.js'][8291]++;
          lastElement.removeEventListener(type, stopPropagationCallback);
        }
        _$jscoverage['jquery.js'][8294]++;
        jQuery.event.triggered = undefined;
        _$jscoverage['jquery.js'][8296]++;
        if (tmp) {
          _$jscoverage['jquery.js'][8297]++;
          elem[ontype] = tmp;
        }
      }
    }
  }
  _$jscoverage['jquery.js'][8303]++;
  return event.result;
}), simulate: (function (type, elem, event) {
  _$jscoverage['jquery.js'][8309]++;
  var e = jQuery.extend(new (jQuery.Event)(), event, {type: type, isSimulated: true});
  _$jscoverage['jquery.js'][8318]++;
  jQuery.event.trigger(e, null, elem);
})});
  _$jscoverage['jquery.js'][8323]++;
  jQuery.fn.extend({trigger: (function (type, data) {
  _$jscoverage['jquery.js'][8326]++;
  return this.each((function () {
  _$jscoverage['jquery.js'][8327]++;
  jQuery.event.trigger(type, data, this);
}));
}), triggerHandler: (function (type, data) {
  _$jscoverage['jquery.js'][8331]++;
  var elem = this[0];
  _$jscoverage['jquery.js'][8332]++;
  if (elem) {
    _$jscoverage['jquery.js'][8333]++;
    return jQuery.event.trigger(type, data, elem, true);
  }
})});
  _$jscoverage['jquery.js'][8347]++;
  if ((! support.focusin)) {
    _$jscoverage['jquery.js'][8348]++;
    jQuery.each({focus: "focusin", blur: "focusout"}, (function (orig, fix) {
  _$jscoverage['jquery.js'][8351]++;
  var handler = (function (event) {
  _$jscoverage['jquery.js'][8352]++;
  jQuery.event.simulate(fix, event.target, jQuery.event.fix(event));
});
  _$jscoverage['jquery.js'][8355]++;
  jQuery.event.special[fix] = {setup: (function () {
  _$jscoverage['jquery.js'][8357]++;
  var doc = (this.ownerDocument || this), attaches = dataPriv.access(doc, fix);
  _$jscoverage['jquery.js'][8360]++;
  if ((! attaches)) {
    _$jscoverage['jquery.js'][8361]++;
    doc.addEventListener(orig, handler, true);
  }
  _$jscoverage['jquery.js'][8363]++;
  dataPriv.access(doc, fix, ((attaches || 0) + 1));
}), teardown: (function () {
  _$jscoverage['jquery.js'][8366]++;
  var doc = (this.ownerDocument || this), attaches = (dataPriv.access(doc, fix) - 1);
  _$jscoverage['jquery.js'][8369]++;
  if ((! attaches)) {
    _$jscoverage['jquery.js'][8370]++;
    doc.removeEventListener(orig, handler, true);
    _$jscoverage['jquery.js'][8371]++;
    dataPriv.remove(doc, fix);
  }
  else {
    _$jscoverage['jquery.js'][8374]++;
    dataPriv.access(doc, fix, attaches);
  }
})};
}));
  }
  _$jscoverage['jquery.js'][8380]++;
  var location = window.location;
  _$jscoverage['jquery.js'][8382]++;
  var nonce = Date.now();
  _$jscoverage['jquery.js'][8384]++;
  var rquery = /\?/;
  _$jscoverage['jquery.js'][8389]++;
  jQuery.parseXML = (function (data) {
  _$jscoverage['jquery.js'][8390]++;
  var xml;
  _$jscoverage['jquery.js'][8391]++;
  if (((! data) || ((typeof data) !== "string"))) {
    _$jscoverage['jquery.js'][8392]++;
    return null;
  }
  _$jscoverage['jquery.js'][8397]++;
  try {
    _$jscoverage['jquery.js'][8398]++;
    xml = new (window.DOMParser)().parseFromString(data, "text/xml");
  }
  catch (e) {
    _$jscoverage['jquery.js'][8400]++;
    xml = undefined;
  }
  _$jscoverage['jquery.js'][8403]++;
  if (((! xml) || xml.getElementsByTagName("parsererror").length)) {
    _$jscoverage['jquery.js'][8404]++;
    jQuery.error(("Invalid XML: " + data));
  }
  _$jscoverage['jquery.js'][8406]++;
  return xml;
});
  _$jscoverage['jquery.js'][8410]++;
  var rbracket = /\[\]$/, rCRLF = /\r?\n/g, rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i, rsubmittable = /^(?:input|select|textarea|keygen)/i;
  _$jscoverage['jquery.js'][8416]++;
  function buildParams(prefix, obj, traditional, add) {
    _$jscoverage['jquery.js'][8417]++;
    var name;
    _$jscoverage['jquery.js'][8419]++;
    if (Array.isArray(obj)) {
      _$jscoverage['jquery.js'][8422]++;
      jQuery.each(obj, (function (i, v) {
  _$jscoverage['jquery.js'][8423]++;
  if ((traditional || rbracket.test(prefix))) {
    _$jscoverage['jquery.js'][8426]++;
    add(prefix, v);
  }
  else {
    _$jscoverage['jquery.js'][8431]++;
    buildParams((prefix + "[" + ((((typeof v) === "object") && (v != null))? i: "") + "]"), v, traditional, add);
  }
}));
    }
    else {
      _$jscoverage['jquery.js'][8440]++;
      if (((! traditional) && (toType(obj) === "object"))) {
        _$jscoverage['jquery.js'][8443]++;
        for (name in obj) {
          _$jscoverage['jquery.js'][8444]++;
          buildParams((prefix + "[" + name + "]"), obj[name], traditional, add);
}
      }
      else {
        _$jscoverage['jquery.js'][8450]++;
        add(prefix, obj);
      }
    }
}
  _$jscoverage['jquery.js'][8456]++;
  jQuery.param = (function (a, traditional) {
  _$jscoverage['jquery.js'][8457]++;
  var prefix, s = [], add = (function (key, valueOrFunction) {
  _$jscoverage['jquery.js'][8462]++;
  var value = (isFunction(valueOrFunction)? valueOrFunction(): valueOrFunction);
  _$jscoverage['jquery.js'][8466]++;
  s[s.length] = (encodeURIComponent(key) + "=" + encodeURIComponent(((value == null)? "": value)));
});
  _$jscoverage['jquery.js'][8471]++;
  if ((Array.isArray(a) || (a.jquery && (! jQuery.isPlainObject(a))))) {
    _$jscoverage['jquery.js'][8474]++;
    jQuery.each(a, (function () {
  _$jscoverage['jquery.js'][8475]++;
  add(this.name, this.value);
}));
  }
  else {
    _$jscoverage['jquery.js'][8482]++;
    for (prefix in a) {
      _$jscoverage['jquery.js'][8483]++;
      buildParams(prefix, a[prefix], traditional, add);
}
  }
  _$jscoverage['jquery.js'][8488]++;
  return s.join("&");
});
  _$jscoverage['jquery.js'][8491]++;
  jQuery.fn.extend({serialize: (function () {
  _$jscoverage['jquery.js'][8493]++;
  return jQuery.param(this.serializeArray());
}), serializeArray: (function () {
  _$jscoverage['jquery.js'][8496]++;
  return this.map((function () {
  _$jscoverage['jquery.js'][8499]++;
  var elements = jQuery.prop(this, "elements");
  _$jscoverage['jquery.js'][8500]++;
  return (elements? jQuery.makeArray(elements): this);
})).filter((function () {
  _$jscoverage['jquery.js'][8503]++;
  var type = this.type;
  _$jscoverage['jquery.js'][8506]++;
  return (this.name && (! jQuery(this).is(":disabled")) && rsubmittable.test(this.nodeName) && (! rsubmitterTypes.test(type)) && (this.checked || (! rcheckableType.test(type))));
})).map((function (i, elem) {
  _$jscoverage['jquery.js'][8511]++;
  var val = jQuery(this).val();
  _$jscoverage['jquery.js'][8513]++;
  if ((val == null)) {
    _$jscoverage['jquery.js'][8514]++;
    return null;
  }
  _$jscoverage['jquery.js'][8517]++;
  if (Array.isArray(val)) {
    _$jscoverage['jquery.js'][8518]++;
    return jQuery.map(val, (function (val) {
  _$jscoverage['jquery.js'][8519]++;
  return ({name: elem.name, value: val.replace(rCRLF, "\r\n")});
}));
  }
  _$jscoverage['jquery.js'][8523]++;
  return ({name: elem.name, value: val.replace(rCRLF, "\r\n")});
})).get();
})});
  _$jscoverage['jquery.js'][8529]++;
  var r20 = /%20/g, rhash = /#.*$/, rantiCache = /([?&])_=[^&]*/, rheaders = /^(.*?):[ \t]*([^\r\n]*)$/gm, rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/, rnoContent = /^(?:GET|HEAD)$/, rprotocol = /^\/\//, prefilters = {}, transports = {}, allTypes = "*/".concat("*"), originAnchor = document.createElement("a");
  _$jscoverage['jquery.js'][8563]++;
  originAnchor.href = location.href;
  _$jscoverage['jquery.js'][8566]++;
  function addToPrefiltersOrTransports(structure) {
    _$jscoverage['jquery.js'][8569]++;
    return (function (dataTypeExpression, func) {
  _$jscoverage['jquery.js'][8571]++;
  if (((typeof dataTypeExpression) !== "string")) {
    _$jscoverage['jquery.js'][8572]++;
    func = dataTypeExpression;
    _$jscoverage['jquery.js'][8573]++;
    dataTypeExpression = "*";
  }
  _$jscoverage['jquery.js'][8576]++;
  var dataType, i = 0, dataTypes = (dataTypeExpression.toLowerCase().match(rnothtmlwhite) || []);
  _$jscoverage['jquery.js'][8580]++;
  if (isFunction(func)) {
    _$jscoverage['jquery.js'][8583]++;
    while ((dataType = dataTypes[(i++)])) {
      _$jscoverage['jquery.js'][8586]++;
      if ((dataType[0] === "+")) {
        _$jscoverage['jquery.js'][8587]++;
        dataType = (dataType.slice(1) || "*");
        _$jscoverage['jquery.js'][8588]++;
        (structure[dataType] = (structure[dataType] || [])).unshift(func);
      }
      else {
        _$jscoverage['jquery.js'][8592]++;
        (structure[dataType] = (structure[dataType] || [])).push(func);
      }
}
  }
});
}
  _$jscoverage['jquery.js'][8600]++;
  function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {
    _$jscoverage['jquery.js'][8602]++;
    var inspected = {}, seekingTransport = (structure === transports);
    _$jscoverage['jquery.js'][8605]++;
    function inspect(dataType) {
      _$jscoverage['jquery.js'][8606]++;
      var selected;
      _$jscoverage['jquery.js'][8607]++;
      inspected[dataType] = true;
      _$jscoverage['jquery.js'][8608]++;
      jQuery.each((structure[dataType] || []), (function (_, prefilterOrFactory) {
  _$jscoverage['jquery.js'][8609]++;
  var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);
  _$jscoverage['jquery.js'][8610]++;
  if ((((typeof dataTypeOrTransport) === "string") && (! seekingTransport) && (! inspected[dataTypeOrTransport]))) {
    _$jscoverage['jquery.js'][8613]++;
    options.dataTypes.unshift(dataTypeOrTransport);
    _$jscoverage['jquery.js'][8614]++;
    inspect(dataTypeOrTransport);
    _$jscoverage['jquery.js'][8615]++;
    return false;
  }
  else {
    _$jscoverage['jquery.js'][8616]++;
    if (seekingTransport) {
      _$jscoverage['jquery.js'][8617]++;
      return (! (selected = dataTypeOrTransport));
    }
  }
}));
      _$jscoverage['jquery.js'][8620]++;
      return selected;
}
    _$jscoverage['jquery.js'][8623]++;
    return (inspect(options.dataTypes[0]) || ((! inspected["*"]) && inspect("*")));
}
  _$jscoverage['jquery.js'][8629]++;
  function ajaxExtend(target, src) {
    _$jscoverage['jquery.js'][8630]++;
    var key, deep, flatOptions = (jQuery.ajaxSettings.flatOptions || {});
    _$jscoverage['jquery.js'][8633]++;
    for (key in src) {
      _$jscoverage['jquery.js'][8634]++;
      if ((src[key] !== undefined)) {
        _$jscoverage['jquery.js'][8635]++;
        (flatOptions[key]? target: (deep || (deep = {})))[key] = src[key];
      }
}
    _$jscoverage['jquery.js'][8638]++;
    if (deep) {
      _$jscoverage['jquery.js'][8639]++;
      jQuery.extend(true, target, deep);
    }
    _$jscoverage['jquery.js'][8642]++;
    return target;
}
  _$jscoverage['jquery.js'][8649]++;
  function ajaxHandleResponses(s, jqXHR, responses) {
    _$jscoverage['jquery.js'][8651]++;
    var ct, type, finalDataType, firstDataType, contents = s.contents, dataTypes = s.dataTypes;
    _$jscoverage['jquery.js'][8656]++;
    while ((dataTypes[0] === "*")) {
      _$jscoverage['jquery.js'][8657]++;
      dataTypes.shift();
      _$jscoverage['jquery.js'][8658]++;
      if ((ct === undefined)) {
        _$jscoverage['jquery.js'][8659]++;
        ct = (s.mimeType || jqXHR.getResponseHeader("Content-Type"));
      }
}
    _$jscoverage['jquery.js'][8664]++;
    if (ct) {
      _$jscoverage['jquery.js'][8665]++;
      for (type in contents) {
        _$jscoverage['jquery.js'][8666]++;
        if ((contents[type] && contents[type].test(ct))) {
          _$jscoverage['jquery.js'][8667]++;
          dataTypes.unshift(type);
          _$jscoverage['jquery.js'][8668]++;
          break;
        }
}
    }
    _$jscoverage['jquery.js'][8674]++;
    if ((dataTypes[0] in responses)) {
      _$jscoverage['jquery.js'][8675]++;
      finalDataType = dataTypes[0];
    }
    else {
      _$jscoverage['jquery.js'][8679]++;
      for (type in responses) {
        _$jscoverage['jquery.js'][8680]++;
        if (((! dataTypes[0]) || s.converters[(type + " " + dataTypes[0])])) {
          _$jscoverage['jquery.js'][8681]++;
          finalDataType = type;
          _$jscoverage['jquery.js'][8682]++;
          break;
        }
        _$jscoverage['jquery.js'][8684]++;
        if ((! firstDataType)) {
          _$jscoverage['jquery.js'][8685]++;
          firstDataType = type;
        }
}
      _$jscoverage['jquery.js'][8690]++;
      finalDataType = (finalDataType || firstDataType);
    }
    _$jscoverage['jquery.js'][8696]++;
    if (finalDataType) {
      _$jscoverage['jquery.js'][8697]++;
      if ((finalDataType !== dataTypes[0])) {
        _$jscoverage['jquery.js'][8698]++;
        dataTypes.unshift(finalDataType);
      }
      _$jscoverage['jquery.js'][8700]++;
      return responses[finalDataType];
    }
}
  _$jscoverage['jquery.js'][8707]++;
  function ajaxConvert(s, response, jqXHR, isSuccess) {
    _$jscoverage['jquery.js'][8708]++;
    var conv2, current, conv, tmp, prev, converters = {}, dataTypes = s.dataTypes.slice();
    _$jscoverage['jquery.js'][8715]++;
    if (dataTypes[1]) {
      _$jscoverage['jquery.js'][8716]++;
      for (conv in s.converters) {
        _$jscoverage['jquery.js'][8717]++;
        converters[conv.toLowerCase()] = s.converters[conv];
}
    }
    _$jscoverage['jquery.js'][8721]++;
    current = dataTypes.shift();
    _$jscoverage['jquery.js'][8724]++;
    while (current) {
      _$jscoverage['jquery.js'][8726]++;
      if (s.responseFields[current]) {
        _$jscoverage['jquery.js'][8727]++;
        jqXHR[s.responseFields[current]] = response;
      }
      _$jscoverage['jquery.js'][8731]++;
      if (((! prev) && isSuccess && s.dataFilter)) {
        _$jscoverage['jquery.js'][8732]++;
        response = s.dataFilter(response, s.dataType);
      }
      _$jscoverage['jquery.js'][8735]++;
      prev = current;
      _$jscoverage['jquery.js'][8736]++;
      current = dataTypes.shift();
      _$jscoverage['jquery.js'][8738]++;
      if (current) {
        _$jscoverage['jquery.js'][8741]++;
        if ((current === "*")) {
          _$jscoverage['jquery.js'][8743]++;
          current = prev;
        }
        else {
          _$jscoverage['jquery.js'][8746]++;
          if (((prev !== "*") && (prev !== current))) {
            _$jscoverage['jquery.js'][8749]++;
            conv = (converters[(prev + " " + current)] || converters[("* " + current)]);
            _$jscoverage['jquery.js'][8752]++;
            if ((! conv)) {
              _$jscoverage['jquery.js'][8753]++;
              for (conv2 in converters) {
                _$jscoverage['jquery.js'][8756]++;
                tmp = conv2.split(" ");
                _$jscoverage['jquery.js'][8757]++;
                if ((tmp[1] === current)) {
                  _$jscoverage['jquery.js'][8760]++;
                  conv = (converters[(prev + " " + tmp[0])] || converters[("* " + tmp[0])]);
                  _$jscoverage['jquery.js'][8762]++;
                  if (conv) {
                    _$jscoverage['jquery.js'][8765]++;
                    if ((conv === true)) {
                      _$jscoverage['jquery.js'][8766]++;
                      conv = converters[conv2];
                    }
                    else {
                      _$jscoverage['jquery.js'][8769]++;
                      if ((converters[conv2] !== true)) {
                        _$jscoverage['jquery.js'][8770]++;
                        current = tmp[0];
                        _$jscoverage['jquery.js'][8771]++;
                        dataTypes.unshift(tmp[1]);
                      }
                    }
                    _$jscoverage['jquery.js'][8773]++;
                    break;
                  }
                }
}
            }
            _$jscoverage['jquery.js'][8780]++;
            if ((conv !== true)) {
              _$jscoverage['jquery.js'][8783]++;
              if ((conv && s["throws"])) {
                _$jscoverage['jquery.js'][8784]++;
                response = conv(response);
              }
              else {
                _$jscoverage['jquery.js'][8786]++;
                try {
                  _$jscoverage['jquery.js'][8787]++;
                  response = conv(response);
                }
                catch (e) {
                  _$jscoverage['jquery.js'][8789]++;
                  return ({state: "parsererror", error: (conv? e: ("No conversion from " + prev + " to " + current))});
                }
              }
            }
          }
        }
      }
}
    _$jscoverage['jquery.js'][8800]++;
    return ({state: "success", data: response});
}
  _$jscoverage['jquery.js'][8803]++;
  jQuery.extend({active: 0, lastModified: {}, etag: {}, ajaxSettings: {url: location.href, type: "GET", isLocal: rlocalProtocol.test(location.protocol), global: true, processData: true, async: true, contentType: "application/x-www-form-urlencoded; charset=UTF-8", accepts: {"*": allTypes, text: "text/plain", html: "text/html", xml: "application/xml, text/xml", json: "application/json, text/javascript"}, contents: {xml: /\bxml\b/, html: /\bhtml/, json: /\bjson\b/}, responseFields: {xml: "responseXML", text: "responseText", json: "responseJSON"}, converters: {"* text": String, "text html": true, "text json": JSON.parse, "text xml": jQuery.parseXML}, flatOptions: {url: true, context: true}}, ajaxSetup: (function (target, settings) {
  _$jscoverage['jquery.js'][8884]++;
  return (settings? ajaxExtend(ajaxExtend(target, jQuery.ajaxSettings), settings): ajaxExtend(jQuery.ajaxSettings, target));
}), ajaxPrefilter: addToPrefiltersOrTransports(prefilters), ajaxTransport: addToPrefiltersOrTransports(transports), ajax: (function (url, options) {
  _$jscoverage['jquery.js'][8900]++;
  if (((typeof url) === "object")) {
    _$jscoverage['jquery.js'][8901]++;
    options = url;
    _$jscoverage['jquery.js'][8902]++;
    url = undefined;
  }
  _$jscoverage['jquery.js'][8906]++;
  options = (options || {});
  _$jscoverage['jquery.js'][8908]++;
  var transport, cacheURL, responseHeadersString, responseHeaders, timeoutTimer, urlAnchor, completed, fireGlobals, i, uncached, s = jQuery.ajaxSetup({}, options), callbackContext = (s.context || s), globalEventContext = ((s.context && (callbackContext.nodeType || callbackContext.jquery))? jQuery(callbackContext): jQuery.event), deferred = jQuery.Deferred(), completeDeferred = jQuery.Callbacks("once memory"), statusCode = (s.statusCode || {}), requestHeaders = {}, requestHeadersNames = {}, strAbort = "canceled", jqXHR = {readyState: 0, getResponseHeader: (function (key) {
  _$jscoverage['jquery.js'][8967]++;
  var match;
  _$jscoverage['jquery.js'][8968]++;
  if (completed) {
    _$jscoverage['jquery.js'][8969]++;
    if ((! responseHeaders)) {
      _$jscoverage['jquery.js'][8970]++;
      responseHeaders = {};
      _$jscoverage['jquery.js'][8971]++;
      while ((match = rheaders.exec(responseHeadersString))) {
        _$jscoverage['jquery.js'][8972]++;
        responseHeaders[match[1].toLowerCase()] = match[2];
}
    }
    _$jscoverage['jquery.js'][8975]++;
    match = responseHeaders[key.toLowerCase()];
  }
  _$jscoverage['jquery.js'][8977]++;
  return ((match == null)? null: match);
}), getAllResponseHeaders: (function () {
  _$jscoverage['jquery.js'][8982]++;
  return (completed? responseHeadersString: null);
}), setRequestHeader: (function (name, value) {
  _$jscoverage['jquery.js'][8987]++;
  if ((completed == null)) {
    _$jscoverage['jquery.js'][8988]++;
    name = (requestHeadersNames[name.toLowerCase()] = (requestHeadersNames[name.toLowerCase()] || name));
    _$jscoverage['jquery.js'][8990]++;
    requestHeaders[name] = value;
  }
  _$jscoverage['jquery.js'][8992]++;
  return this;
}), overrideMimeType: (function (type) {
  _$jscoverage['jquery.js'][8997]++;
  if ((completed == null)) {
    _$jscoverage['jquery.js'][8998]++;
    s.mimeType = type;
  }
  _$jscoverage['jquery.js'][9000]++;
  return this;
}), statusCode: (function (map) {
  _$jscoverage['jquery.js'][9005]++;
  var code;
  _$jscoverage['jquery.js'][9006]++;
  if (map) {
    _$jscoverage['jquery.js'][9007]++;
    if (completed) {
      _$jscoverage['jquery.js'][9010]++;
      jqXHR.always(map[jqXHR.status]);
    }
    else {
      _$jscoverage['jquery.js'][9014]++;
      for (code in map) {
        _$jscoverage['jquery.js'][9015]++;
        statusCode[code] = [statusCode[code], map[code]];
}
    }
  }
  _$jscoverage['jquery.js'][9019]++;
  return this;
}), abort: (function (statusText) {
  _$jscoverage['jquery.js'][9024]++;
  var finalText = (statusText || strAbort);
  _$jscoverage['jquery.js'][9025]++;
  if (transport) {
    _$jscoverage['jquery.js'][9026]++;
    transport.abort(finalText);
  }
  _$jscoverage['jquery.js'][9028]++;
  done(0, finalText);
  _$jscoverage['jquery.js'][9029]++;
  return this;
})};
  _$jscoverage['jquery.js'][9034]++;
  deferred.promise(jqXHR);
  _$jscoverage['jquery.js'][9039]++;
  s.url = ((url || s.url || location.href) + "").replace(rprotocol, (location.protocol + "//"));
  _$jscoverage['jquery.js'][9043]++;
  s.type = (options.method || options.type || s.method || s.type);
  _$jscoverage['jquery.js'][9046]++;
  s.dataTypes = ((s.dataType || "*").toLowerCase().match(rnothtmlwhite) || [""]);
  _$jscoverage['jquery.js'][9049]++;
  if ((s.crossDomain == null)) {
    _$jscoverage['jquery.js'][9050]++;
    urlAnchor = document.createElement("a");
    _$jscoverage['jquery.js'][9055]++;
    try {
      _$jscoverage['jquery.js'][9056]++;
      urlAnchor.href = s.url;
      _$jscoverage['jquery.js'][9060]++;
      urlAnchor.href = urlAnchor.href;
      _$jscoverage['jquery.js'][9061]++;
      s.crossDomain = ((originAnchor.protocol + "//" + originAnchor.host) !== (urlAnchor.protocol + "//" + urlAnchor.host));
    }
    catch (e) {
      _$jscoverage['jquery.js'][9067]++;
      s.crossDomain = true;
    }
  }
  _$jscoverage['jquery.js'][9072]++;
  if ((s.data && s.processData && ((typeof s.data) !== "string"))) {
    _$jscoverage['jquery.js'][9073]++;
    s.data = jQuery.param(s.data, s.traditional);
  }
  _$jscoverage['jquery.js'][9077]++;
  inspectPrefiltersOrTransports(prefilters, s, options, jqXHR);
  _$jscoverage['jquery.js'][9080]++;
  if (completed) {
    _$jscoverage['jquery.js'][9081]++;
    return jqXHR;
  }
  _$jscoverage['jquery.js'][9086]++;
  fireGlobals = (jQuery.event && s.global);
  _$jscoverage['jquery.js'][9089]++;
  if ((fireGlobals && ((jQuery.active++) === 0))) {
    _$jscoverage['jquery.js'][9090]++;
    jQuery.event.trigger("ajaxStart");
  }
  _$jscoverage['jquery.js'][9094]++;
  s.type = s.type.toUpperCase();
  _$jscoverage['jquery.js'][9097]++;
  s.hasContent = (! rnoContent.test(s.type));
  _$jscoverage['jquery.js'][9102]++;
  cacheURL = s.url.replace(rhash, "");
  _$jscoverage['jquery.js'][9105]++;
  if ((! s.hasContent)) {
    _$jscoverage['jquery.js'][9108]++;
    uncached = s.url.slice(cacheURL.length);
    _$jscoverage['jquery.js'][9111]++;
    if ((s.data && (s.processData || ((typeof s.data) === "string")))) {
      _$jscoverage['jquery.js'][9112]++;
      cacheURL += ((rquery.test(cacheURL)? "&": "?") + s.data);
      _$jscoverage['jquery.js'][9115]++;
      (delete s.data);
    }
    _$jscoverage['jquery.js'][9119]++;
    if ((s.cache === false)) {
      _$jscoverage['jquery.js'][9120]++;
      cacheURL = cacheURL.replace(rantiCache, "$1");
      _$jscoverage['jquery.js'][9121]++;
      uncached = ((rquery.test(cacheURL)? "&": "?") + "_=" + (nonce++) + uncached);
    }
    _$jscoverage['jquery.js'][9125]++;
    s.url = (cacheURL + uncached);
  }
  else {
    _$jscoverage['jquery.js'][9128]++;
    if ((s.data && s.processData && ((s.contentType || "").indexOf("application/x-www-form-urlencoded") === 0))) {
      _$jscoverage['jquery.js'][9130]++;
      s.data = s.data.replace(r20, "+");
    }
  }
  _$jscoverage['jquery.js'][9134]++;
  if (s.ifModified) {
    _$jscoverage['jquery.js'][9135]++;
    if (jQuery.lastModified[cacheURL]) {
      _$jscoverage['jquery.js'][9136]++;
      jqXHR.setRequestHeader("If-Modified-Since", jQuery.lastModified[cacheURL]);
    }
    _$jscoverage['jquery.js'][9138]++;
    if (jQuery.etag[cacheURL]) {
      _$jscoverage['jquery.js'][9139]++;
      jqXHR.setRequestHeader("If-None-Match", jQuery.etag[cacheURL]);
    }
  }
  _$jscoverage['jquery.js'][9144]++;
  if (((s.data && s.hasContent && (s.contentType !== false)) || options.contentType)) {
    _$jscoverage['jquery.js'][9145]++;
    jqXHR.setRequestHeader("Content-Type", s.contentType);
  }
  _$jscoverage['jquery.js'][9149]++;
  jqXHR.setRequestHeader("Accept", ((s.dataTypes[0] && s.accepts[s.dataTypes[0]])? (s.accepts[s.dataTypes[0]] + ((s.dataTypes[0] !== "*")? (", " + allTypes + "; q=0.01"): "")): s.accepts["*"]));
  _$jscoverage['jquery.js'][9158]++;
  for (i in s.headers) {
    _$jscoverage['jquery.js'][9159]++;
    jqXHR.setRequestHeader(i, s.headers[i]);
}
  _$jscoverage['jquery.js'][9163]++;
  if ((s.beforeSend && ((s.beforeSend.call(callbackContext, jqXHR, s) === false) || completed))) {
    _$jscoverage['jquery.js'][9167]++;
    return jqXHR.abort();
  }
  _$jscoverage['jquery.js'][9171]++;
  strAbort = "abort";
  _$jscoverage['jquery.js'][9174]++;
  completeDeferred.add(s.complete);
  _$jscoverage['jquery.js'][9175]++;
  jqXHR.done(s.success);
  _$jscoverage['jquery.js'][9176]++;
  jqXHR.fail(s.error);
  _$jscoverage['jquery.js'][9179]++;
  transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR);
  _$jscoverage['jquery.js'][9182]++;
  if ((! transport)) {
    _$jscoverage['jquery.js'][9183]++;
    done(-1, "No Transport");
  }
  else {
    _$jscoverage['jquery.js'][9185]++;
    jqXHR.readyState = 1;
    _$jscoverage['jquery.js'][9188]++;
    if (fireGlobals) {
      _$jscoverage['jquery.js'][9189]++;
      globalEventContext.trigger("ajaxSend", [jqXHR, s]);
    }
    _$jscoverage['jquery.js'][9193]++;
    if (completed) {
      _$jscoverage['jquery.js'][9194]++;
      return jqXHR;
    }
    _$jscoverage['jquery.js'][9198]++;
    if ((s.async && (s.timeout > 0))) {
      _$jscoverage['jquery.js'][9199]++;
      timeoutTimer = window.setTimeout((function () {
  _$jscoverage['jquery.js'][9200]++;
  jqXHR.abort("timeout");
}), s.timeout);
    }
    _$jscoverage['jquery.js'][9204]++;
    try {
      _$jscoverage['jquery.js'][9205]++;
      completed = false;
      _$jscoverage['jquery.js'][9206]++;
      transport.send(requestHeaders, done);
    }
    catch (e) {
      _$jscoverage['jquery.js'][9210]++;
      if (completed) {
        _$jscoverage['jquery.js'][9211]++;
        throw e;
      }
      _$jscoverage['jquery.js'][9215]++;
      done(-1, e);
    }
  }
  _$jscoverage['jquery.js'][9220]++;
  function done(status, nativeStatusText, responses, headers) {
    _$jscoverage['jquery.js'][9221]++;
    var isSuccess, success, error, response, modified, statusText = nativeStatusText;
    _$jscoverage['jquery.js'][9225]++;
    if (completed) {
      _$jscoverage['jquery.js'][9226]++;
      return;
    }
    _$jscoverage['jquery.js'][9229]++;
    completed = true;
    _$jscoverage['jquery.js'][9232]++;
    if (timeoutTimer) {
      _$jscoverage['jquery.js'][9233]++;
      window.clearTimeout(timeoutTimer);
    }
    _$jscoverage['jquery.js'][9238]++;
    transport = undefined;
    _$jscoverage['jquery.js'][9241]++;
    responseHeadersString = (headers || "");
    _$jscoverage['jquery.js'][9244]++;
    jqXHR.readyState = ((status > 0)? 4: 0);
    _$jscoverage['jquery.js'][9247]++;
    isSuccess = (((status >= 200) && (status < 300)) || (status === 304));
    _$jscoverage['jquery.js'][9250]++;
    if (responses) {
      _$jscoverage['jquery.js'][9251]++;
      response = ajaxHandleResponses(s, jqXHR, responses);
    }
    _$jscoverage['jquery.js'][9255]++;
    response = ajaxConvert(s, response, jqXHR, isSuccess);
    _$jscoverage['jquery.js'][9258]++;
    if (isSuccess) {
      _$jscoverage['jquery.js'][9261]++;
      if (s.ifModified) {
        _$jscoverage['jquery.js'][9262]++;
        modified = jqXHR.getResponseHeader("Last-Modified");
        _$jscoverage['jquery.js'][9263]++;
        if (modified) {
          _$jscoverage['jquery.js'][9264]++;
          jQuery.lastModified[cacheURL] = modified;
        }
        _$jscoverage['jquery.js'][9266]++;
        modified = jqXHR.getResponseHeader("etag");
        _$jscoverage['jquery.js'][9267]++;
        if (modified) {
          _$jscoverage['jquery.js'][9268]++;
          jQuery.etag[cacheURL] = modified;
        }
      }
      _$jscoverage['jquery.js'][9273]++;
      if (((status === 204) || (s.type === "HEAD"))) {
        _$jscoverage['jquery.js'][9274]++;
        statusText = "nocontent";
      }
      else {
        _$jscoverage['jquery.js'][9277]++;
        if ((status === 304)) {
          _$jscoverage['jquery.js'][9278]++;
          statusText = "notmodified";
        }
        else {
          _$jscoverage['jquery.js'][9282]++;
          statusText = response.state;
          _$jscoverage['jquery.js'][9283]++;
          success = response.data;
          _$jscoverage['jquery.js'][9284]++;
          error = response.error;
          _$jscoverage['jquery.js'][9285]++;
          isSuccess = (! error);
        }
      }
    }
    else {
      _$jscoverage['jquery.js'][9290]++;
      error = statusText;
      _$jscoverage['jquery.js'][9291]++;
      if ((status || (! statusText))) {
        _$jscoverage['jquery.js'][9292]++;
        statusText = "error";
        _$jscoverage['jquery.js'][9293]++;
        if ((status < 0)) {
          _$jscoverage['jquery.js'][9294]++;
          status = 0;
        }
      }
    }
    _$jscoverage['jquery.js'][9300]++;
    jqXHR.status = status;
    _$jscoverage['jquery.js'][9301]++;
    jqXHR.statusText = ((nativeStatusText || statusText) + "");
    _$jscoverage['jquery.js'][9304]++;
    if (isSuccess) {
      _$jscoverage['jquery.js'][9305]++;
      deferred.resolveWith(callbackContext, [success, statusText, jqXHR]);
    }
    else {
      _$jscoverage['jquery.js'][9307]++;
      deferred.rejectWith(callbackContext, [jqXHR, statusText, error]);
    }
    _$jscoverage['jquery.js'][9311]++;
    jqXHR.statusCode(statusCode);
    _$jscoverage['jquery.js'][9312]++;
    statusCode = undefined;
    _$jscoverage['jquery.js'][9314]++;
    if (fireGlobals) {
      _$jscoverage['jquery.js'][9315]++;
      globalEventContext.trigger((isSuccess? "ajaxSuccess": "ajaxError"), [jqXHR, s, (isSuccess? success: error)]);
    }
    _$jscoverage['jquery.js'][9320]++;
    completeDeferred.fireWith(callbackContext, [jqXHR, statusText]);
    _$jscoverage['jquery.js'][9322]++;
    if (fireGlobals) {
      _$jscoverage['jquery.js'][9323]++;
      globalEventContext.trigger("ajaxComplete", [jqXHR, s]);
      _$jscoverage['jquery.js'][9326]++;
      if ((! (--jQuery.active))) {
        _$jscoverage['jquery.js'][9327]++;
        jQuery.event.trigger("ajaxStop");
      }
    }
}
  _$jscoverage['jquery.js'][9332]++;
  return jqXHR;
}), getJSON: (function (url, data, callback) {
  _$jscoverage['jquery.js'][9336]++;
  return jQuery.get(url, data, callback, "json");
}), getScript: (function (url, callback) {
  _$jscoverage['jquery.js'][9340]++;
  return jQuery.get(url, undefined, callback, "script");
})});
  _$jscoverage['jquery.js'][9344]++;
  jQuery.each(["get", "post"], (function (i, method) {
  _$jscoverage['jquery.js'][9345]++;
  jQuery[method] = (function (url, data, callback, type) {
  _$jscoverage['jquery.js'][9348]++;
  if (isFunction(data)) {
    _$jscoverage['jquery.js'][9349]++;
    type = (type || callback);
    _$jscoverage['jquery.js'][9350]++;
    callback = data;
    _$jscoverage['jquery.js'][9351]++;
    data = undefined;
  }
  _$jscoverage['jquery.js'][9355]++;
  return jQuery.ajax(jQuery.extend({url: url, type: method, dataType: type, data: data, success: callback}, (jQuery.isPlainObject(url) && url)));
});
}));
  _$jscoverage['jquery.js'][9366]++;
  jQuery._evalUrl = (function (url) {
  _$jscoverage['jquery.js'][9367]++;
  return jQuery.ajax({url: url, type: "GET", dataType: "script", cache: true, async: false, global: false, "throws": true});
});
  _$jscoverage['jquery.js'][9381]++;
  jQuery.fn.extend({wrapAll: (function (html) {
  _$jscoverage['jquery.js'][9383]++;
  var wrap;
  _$jscoverage['jquery.js'][9385]++;
  if (this[0]) {
    _$jscoverage['jquery.js'][9386]++;
    if (isFunction(html)) {
      _$jscoverage['jquery.js'][9387]++;
      html = html.call(this[0]);
    }
    _$jscoverage['jquery.js'][9391]++;
    wrap = jQuery(html, this[0].ownerDocument).eq(0).clone(true);
    _$jscoverage['jquery.js'][9393]++;
    if (this[0].parentNode) {
      _$jscoverage['jquery.js'][9394]++;
      wrap.insertBefore(this[0]);
    }
    _$jscoverage['jquery.js'][9397]++;
    wrap.map((function () {
  _$jscoverage['jquery.js'][9398]++;
  var elem = this;
  _$jscoverage['jquery.js'][9400]++;
  while (elem.firstElementChild) {
    _$jscoverage['jquery.js'][9401]++;
    elem = elem.firstElementChild;
}
  _$jscoverage['jquery.js'][9404]++;
  return elem;
})).append(this);
  }
  _$jscoverage['jquery.js'][9408]++;
  return this;
}), wrapInner: (function (html) {
  _$jscoverage['jquery.js'][9412]++;
  if (isFunction(html)) {
    _$jscoverage['jquery.js'][9413]++;
    return this.each((function (i) {
  _$jscoverage['jquery.js'][9414]++;
  jQuery(this).wrapInner(html.call(this, i));
}));
  }
  _$jscoverage['jquery.js'][9418]++;
  return this.each((function () {
  _$jscoverage['jquery.js'][9419]++;
  var self = jQuery(this), contents = self.contents();
  _$jscoverage['jquery.js'][9422]++;
  if (contents.length) {
    _$jscoverage['jquery.js'][9423]++;
    contents.wrapAll(html);
  }
  else {
    _$jscoverage['jquery.js'][9426]++;
    self.append(html);
  }
}));
}), wrap: (function (html) {
  _$jscoverage['jquery.js'][9432]++;
  var htmlIsFunction = isFunction(html);
  _$jscoverage['jquery.js'][9434]++;
  return this.each((function (i) {
  _$jscoverage['jquery.js'][9435]++;
  jQuery(this).wrapAll((htmlIsFunction? html.call(this, i): html));
}));
}), unwrap: (function (selector) {
  _$jscoverage['jquery.js'][9440]++;
  this.parent(selector).not("body").each((function () {
  _$jscoverage['jquery.js'][9441]++;
  jQuery(this).replaceWith(this.childNodes);
}));
  _$jscoverage['jquery.js'][9443]++;
  return this;
})});
  _$jscoverage['jquery.js'][9448]++;
  jQuery.expr.pseudos.hidden = (function (elem) {
  _$jscoverage['jquery.js'][9449]++;
  return (! jQuery.expr.pseudos.visible(elem));
});
  _$jscoverage['jquery.js'][9451]++;
  jQuery.expr.pseudos.visible = (function (elem) {
  _$jscoverage['jquery.js'][9452]++;
  return (! (! (elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length)));
});
  _$jscoverage['jquery.js'][9458]++;
  jQuery.ajaxSettings.xhr = (function () {
  _$jscoverage['jquery.js'][9459]++;
  try {
    _$jscoverage['jquery.js'][9460]++;
    return new (window.XMLHttpRequest)();
  }
  catch (e) {
  }
});
  _$jscoverage['jquery.js'][9464]++;
  var xhrSuccessStatus = {0: 200, 1223: 204}, xhrSupported = jQuery.ajaxSettings.xhr();
  _$jscoverage['jquery.js'][9475]++;
  support.cors = ((! (! xhrSupported)) && ("withCredentials" in xhrSupported));
  _$jscoverage['jquery.js'][9476]++;
  support.ajax = (xhrSupported = (! (! xhrSupported)));
  _$jscoverage['jquery.js'][9478]++;
  jQuery.ajaxTransport((function (options) {
  _$jscoverage['jquery.js'][9479]++;
  var callback, errorCallback;
  _$jscoverage['jquery.js'][9482]++;
  if ((support.cors || (xhrSupported && (! options.crossDomain)))) {
    _$jscoverage['jquery.js'][9483]++;
    return ({send: (function (headers, complete) {
  _$jscoverage['jquery.js'][9485]++;
  var i, xhr = options.xhr();
  _$jscoverage['jquery.js'][9488]++;
  xhr.open(options.type, options.url, options.async, options.username, options.password);
  _$jscoverage['jquery.js'][9497]++;
  if (options.xhrFields) {
    _$jscoverage['jquery.js'][9498]++;
    for (i in options.xhrFields) {
      _$jscoverage['jquery.js'][9499]++;
      xhr[i] = options.xhrFields[i];
}
  }
  _$jscoverage['jquery.js'][9504]++;
  if ((options.mimeType && xhr.overrideMimeType)) {
    _$jscoverage['jquery.js'][9505]++;
    xhr.overrideMimeType(options.mimeType);
  }
  _$jscoverage['jquery.js'][9513]++;
  if (((! options.crossDomain) && (! headers["X-Requested-With"]))) {
    _$jscoverage['jquery.js'][9514]++;
    headers["X-Requested-With"] = "XMLHttpRequest";
  }
  _$jscoverage['jquery.js'][9518]++;
  for (i in headers) {
    _$jscoverage['jquery.js'][9519]++;
    xhr.setRequestHeader(i, headers[i]);
}
  _$jscoverage['jquery.js'][9523]++;
  callback = (function (type) {
  _$jscoverage['jquery.js'][9524]++;
  return (function () {
  _$jscoverage['jquery.js'][9525]++;
  if (callback) {
    _$jscoverage['jquery.js'][9526]++;
    callback = (errorCallback = (xhr.onload = (xhr.onerror = (xhr.onabort = (xhr.ontimeout = (xhr.onreadystatechange = null))))));
    _$jscoverage['jquery.js'][9530]++;
    if ((type === "abort")) {
      _$jscoverage['jquery.js'][9531]++;
      xhr.abort();
    }
    else {
      _$jscoverage['jquery.js'][9532]++;
      if ((type === "error")) {
        _$jscoverage['jquery.js'][9537]++;
        if (((typeof xhr.status) !== "number")) {
          _$jscoverage['jquery.js'][9538]++;
          complete(0, "error");
        }
        else {
          _$jscoverage['jquery.js'][9540]++;
          complete(xhr.status, xhr.statusText);
        }
      }
      else {
        _$jscoverage['jquery.js'][9548]++;
        complete((xhrSuccessStatus[xhr.status] || xhr.status), xhr.statusText, ((((xhr.responseType || "text") !== "text") || ((typeof xhr.responseText) !== "string"))? {binary: xhr.response}: {text: xhr.responseText}), xhr.getAllResponseHeaders());
      }
    }
  }
});
});
  _$jscoverage['jquery.js'][9567]++;
  xhr.onload = callback();
  _$jscoverage['jquery.js'][9568]++;
  errorCallback = (xhr.onerror = (xhr.ontimeout = callback("error")));
  _$jscoverage['jquery.js'][9573]++;
  if ((xhr.onabort !== undefined)) {
    _$jscoverage['jquery.js'][9574]++;
    xhr.onabort = errorCallback;
  }
  else {
    _$jscoverage['jquery.js'][9576]++;
    xhr.onreadystatechange = (function () {
  _$jscoverage['jquery.js'][9579]++;
  if ((xhr.readyState === 4)) {
    _$jscoverage['jquery.js'][9585]++;
    window.setTimeout((function () {
  _$jscoverage['jquery.js'][9586]++;
  if (callback) {
    _$jscoverage['jquery.js'][9587]++;
    errorCallback();
  }
}));
  }
});
  }
  _$jscoverage['jquery.js'][9595]++;
  callback = callback("abort");
  _$jscoverage['jquery.js'][9597]++;
  try {
    _$jscoverage['jquery.js'][9600]++;
    xhr.send(((options.hasContent && options.data) || null));
  }
  catch (e) {
    _$jscoverage['jquery.js'][9604]++;
    if (callback) {
      _$jscoverage['jquery.js'][9605]++;
      throw e;
    }
  }
}), abort: (function () {
  _$jscoverage['jquery.js'][9611]++;
  if (callback) {
    _$jscoverage['jquery.js'][9612]++;
    callback();
  }
})});
  }
}));
  _$jscoverage['jquery.js'][9623]++;
  jQuery.ajaxPrefilter((function (s) {
  _$jscoverage['jquery.js'][9624]++;
  if (s.crossDomain) {
    _$jscoverage['jquery.js'][9625]++;
    s.contents.script = false;
  }
}));
  _$jscoverage['jquery.js'][9630]++;
  jQuery.ajaxSetup({accepts: {script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"}, contents: {script: /\b(?:java|ecma)script\b/}, converters: {"text script": (function (text) {
  _$jscoverage['jquery.js'][9640]++;
  jQuery.globalEval(text);
  _$jscoverage['jquery.js'][9641]++;
  return text;
})}});
  _$jscoverage['jquery.js'][9647]++;
  jQuery.ajaxPrefilter("script", (function (s) {
  _$jscoverage['jquery.js'][9648]++;
  if ((s.cache === undefined)) {
    _$jscoverage['jquery.js'][9649]++;
    s.cache = false;
  }
  _$jscoverage['jquery.js'][9651]++;
  if (s.crossDomain) {
    _$jscoverage['jquery.js'][9652]++;
    s.type = "GET";
  }
}));
  _$jscoverage['jquery.js'][9657]++;
  jQuery.ajaxTransport("script", (function (s) {
  _$jscoverage['jquery.js'][9660]++;
  if (s.crossDomain) {
    _$jscoverage['jquery.js'][9661]++;
    var script, callback;
    _$jscoverage['jquery.js'][9662]++;
    return ({send: (function (_, complete) {
  _$jscoverage['jquery.js'][9664]++;
  script = jQuery("<script>").prop({charset: s.scriptCharset, src: s.url}).on("load error", (callback = (function (evt) {
  _$jscoverage['jquery.js'][9670]++;
  script.remove();
  _$jscoverage['jquery.js'][9671]++;
  callback = null;
  _$jscoverage['jquery.js'][9672]++;
  if (evt) {
    _$jscoverage['jquery.js'][9673]++;
    complete(((evt.type === "error")? 404: 200), evt.type);
  }
})));
  _$jscoverage['jquery.js'][9679]++;
  document.head.appendChild(script[0]);
}), abort: (function () {
  _$jscoverage['jquery.js'][9682]++;
  if (callback) {
    _$jscoverage['jquery.js'][9683]++;
    callback();
  }
})});
  }
}));
  _$jscoverage['jquery.js'][9693]++;
  var oldCallbacks = [], rjsonp = /(=)\?(?=&|$)|\?\?/;
  _$jscoverage['jquery.js'][9697]++;
  jQuery.ajaxSetup({jsonp: "callback", jsonpCallback: (function () {
  _$jscoverage['jquery.js'][9700]++;
  var callback = (oldCallbacks.pop() || (jQuery.expando + "_" + (nonce++)));
  _$jscoverage['jquery.js'][9701]++;
  this[callback] = true;
  _$jscoverage['jquery.js'][9702]++;
  return callback;
})});
  _$jscoverage['jquery.js'][9707]++;
  jQuery.ajaxPrefilter("json jsonp", (function (s, originalSettings, jqXHR) {
  _$jscoverage['jquery.js'][9709]++;
  var callbackName, overwritten, responseContainer, jsonProp = ((s.jsonp !== false) && (rjsonp.test(s.url)? "url": (((typeof s.data) === "string") && ((s.contentType || "").indexOf("application/x-www-form-urlencoded") === 0) && rjsonp.test(s.data) && "data")));
  _$jscoverage['jquery.js'][9719]++;
  if ((jsonProp || (s.dataTypes[0] === "jsonp"))) {
    _$jscoverage['jquery.js'][9722]++;
    callbackName = (s.jsonpCallback = (isFunction(s.jsonpCallback)? s.jsonpCallback(): s.jsonpCallback));
    _$jscoverage['jquery.js'][9727]++;
    if (jsonProp) {
      _$jscoverage['jquery.js'][9728]++;
      s[jsonProp] = s[jsonProp].replace(rjsonp, ("$1" + callbackName));
    }
    else {
      _$jscoverage['jquery.js'][9729]++;
      if ((s.jsonp !== false)) {
        _$jscoverage['jquery.js'][9730]++;
        s.url += ((rquery.test(s.url)? "&": "?") + s.jsonp + "=" + callbackName);
      }
    }
    _$jscoverage['jquery.js'][9734]++;
    s.converters["script json"] = (function () {
  _$jscoverage['jquery.js'][9735]++;
  if ((! responseContainer)) {
    _$jscoverage['jquery.js'][9736]++;
    jQuery.error((callbackName + " was not called"));
  }
  _$jscoverage['jquery.js'][9738]++;
  return responseContainer[0];
});
    _$jscoverage['jquery.js'][9742]++;
    s.dataTypes[0] = "json";
    _$jscoverage['jquery.js'][9745]++;
    overwritten = window[callbackName];
    _$jscoverage['jquery.js'][9746]++;
    window[callbackName] = (function () {
  _$jscoverage['jquery.js'][9747]++;
  responseContainer = arguments;
});
    _$jscoverage['jquery.js'][9751]++;
    jqXHR.always((function () {
  _$jscoverage['jquery.js'][9754]++;
  if ((overwritten === undefined)) {
    _$jscoverage['jquery.js'][9755]++;
    jQuery(window).removeProp(callbackName);
  }
  else {
    _$jscoverage['jquery.js'][9759]++;
    window[callbackName] = overwritten;
  }
  _$jscoverage['jquery.js'][9763]++;
  if (s[callbackName]) {
    _$jscoverage['jquery.js'][9766]++;
    s.jsonpCallback = originalSettings.jsonpCallback;
    _$jscoverage['jquery.js'][9769]++;
    oldCallbacks.push(callbackName);
  }
  _$jscoverage['jquery.js'][9773]++;
  if ((responseContainer && isFunction(overwritten))) {
    _$jscoverage['jquery.js'][9774]++;
    overwritten(responseContainer[0]);
  }
  _$jscoverage['jquery.js'][9777]++;
  responseContainer = (overwritten = undefined);
}));
    _$jscoverage['jquery.js'][9781]++;
    return "script";
  }
}));
  _$jscoverage['jquery.js'][9793]++;
  support.createHTMLDocument = (function () {
  _$jscoverage['jquery.js'][9794]++;
  var body = document.implementation.createHTMLDocument("").body;
  _$jscoverage['jquery.js'][9795]++;
  body.innerHTML = "<form></form><form></form>";
  _$jscoverage['jquery.js'][9796]++;
  return (body.childNodes.length === 2);
})();
  _$jscoverage['jquery.js'][9804]++;
  jQuery.parseHTML = (function (data, context, keepScripts) {
  _$jscoverage['jquery.js'][9805]++;
  if (((typeof data) !== "string")) {
    _$jscoverage['jquery.js'][9806]++;
    return [];
  }
  _$jscoverage['jquery.js'][9808]++;
  if (((typeof context) === "boolean")) {
    _$jscoverage['jquery.js'][9809]++;
    keepScripts = context;
    _$jscoverage['jquery.js'][9810]++;
    context = false;
  }
  _$jscoverage['jquery.js'][9813]++;
  var base, parsed, scripts;
  _$jscoverage['jquery.js'][9815]++;
  if ((! context)) {
    _$jscoverage['jquery.js'][9819]++;
    if (support.createHTMLDocument) {
      _$jscoverage['jquery.js'][9820]++;
      context = document.implementation.createHTMLDocument("");
      _$jscoverage['jquery.js'][9825]++;
      base = context.createElement("base");
      _$jscoverage['jquery.js'][9826]++;
      base.href = document.location.href;
      _$jscoverage['jquery.js'][9827]++;
      context.head.appendChild(base);
    }
    else {
      _$jscoverage['jquery.js'][9829]++;
      context = document;
    }
  }
  _$jscoverage['jquery.js'][9833]++;
  parsed = rsingleTag.exec(data);
  _$jscoverage['jquery.js'][9834]++;
  scripts = ((! keepScripts) && []);
  _$jscoverage['jquery.js'][9837]++;
  if (parsed) {
    _$jscoverage['jquery.js'][9838]++;
    return [context.createElement(parsed[1])];
  }
  _$jscoverage['jquery.js'][9841]++;
  parsed = buildFragment([data], context, scripts);
  _$jscoverage['jquery.js'][9843]++;
  if ((scripts && scripts.length)) {
    _$jscoverage['jquery.js'][9844]++;
    jQuery(scripts).remove();
  }
  _$jscoverage['jquery.js'][9847]++;
  return jQuery.merge([], parsed.childNodes);
});
  _$jscoverage['jquery.js'][9854]++;
  jQuery.fn.load = (function (url, params, callback) {
  _$jscoverage['jquery.js'][9855]++;
  var selector, type, response, self = this, off = url.indexOf(" ");
  _$jscoverage['jquery.js'][9859]++;
  if ((off > -1)) {
    _$jscoverage['jquery.js'][9860]++;
    selector = stripAndCollapse(url.slice(off));
    _$jscoverage['jquery.js'][9861]++;
    url = url.slice(0, off);
  }
  _$jscoverage['jquery.js'][9865]++;
  if (isFunction(params)) {
    _$jscoverage['jquery.js'][9868]++;
    callback = params;
    _$jscoverage['jquery.js'][9869]++;
    params = undefined;
  }
  else {
    _$jscoverage['jquery.js'][9872]++;
    if ((params && ((typeof params) === "object"))) {
      _$jscoverage['jquery.js'][9873]++;
      type = "POST";
    }
  }
  _$jscoverage['jquery.js'][9877]++;
  if ((self.length > 0)) {
    _$jscoverage['jquery.js'][9878]++;
    jQuery.ajax({url: url, type: (type || "GET"), dataType: "html", data: params}).done((function (responseText) {
  _$jscoverage['jquery.js'][9890]++;
  response = arguments;
  _$jscoverage['jquery.js'][9892]++;
  self.html((selector? jQuery("<div>").append(jQuery.parseHTML(responseText)).find(selector): responseText));
})).always((callback && (function (jqXHR, status) {
  _$jscoverage['jquery.js'][9905]++;
  self.each((function () {
  _$jscoverage['jquery.js'][9906]++;
  callback.apply(this, (response || [jqXHR.responseText, status, jqXHR]));
}));
})));
  }
  _$jscoverage['jquery.js'][9911]++;
  return this;
});
  _$jscoverage['jquery.js'][9918]++;
  jQuery.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], (function (i, type) {
  _$jscoverage['jquery.js'][9926]++;
  jQuery.fn[type] = (function (fn) {
  _$jscoverage['jquery.js'][9927]++;
  return this.on(type, fn);
});
}));
  _$jscoverage['jquery.js'][9934]++;
  jQuery.expr.pseudos.animated = (function (elem) {
  _$jscoverage['jquery.js'][9935]++;
  return jQuery.grep(jQuery.timers, (function (fn) {
  _$jscoverage['jquery.js'][9936]++;
  return (elem === fn.elem);
})).length;
});
  _$jscoverage['jquery.js'][9943]++;
  jQuery.offset = {setOffset: (function (elem, options, i) {
  _$jscoverage['jquery.js'][9945]++;
  var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition, position = jQuery.css(elem, "position"), curElem = jQuery(elem), props = {};
  _$jscoverage['jquery.js'][9951]++;
  if ((position === "static")) {
    _$jscoverage['jquery.js'][9952]++;
    elem.style.position = "relative";
  }
  _$jscoverage['jquery.js'][9955]++;
  curOffset = curElem.offset();
  _$jscoverage['jquery.js'][9956]++;
  curCSSTop = jQuery.css(elem, "top");
  _$jscoverage['jquery.js'][9957]++;
  curCSSLeft = jQuery.css(elem, "left");
  _$jscoverage['jquery.js'][9958]++;
  calculatePosition = (((position === "absolute") || (position === "fixed")) && ((curCSSTop + curCSSLeft).indexOf("auto") > -1));
  _$jscoverage['jquery.js'][9963]++;
  if (calculatePosition) {
    _$jscoverage['jquery.js'][9964]++;
    curPosition = curElem.position();
    _$jscoverage['jquery.js'][9965]++;
    curTop = curPosition.top;
    _$jscoverage['jquery.js'][9966]++;
    curLeft = curPosition.left;
  }
  else {
    _$jscoverage['jquery.js'][9969]++;
    curTop = (parseFloat(curCSSTop) || 0);
    _$jscoverage['jquery.js'][9970]++;
    curLeft = (parseFloat(curCSSLeft) || 0);
  }
  _$jscoverage['jquery.js'][9973]++;
  if (isFunction(options)) {
    _$jscoverage['jquery.js'][9976]++;
    options = options.call(elem, i, jQuery.extend({}, curOffset));
  }
  _$jscoverage['jquery.js'][9979]++;
  if ((options.top != null)) {
    _$jscoverage['jquery.js'][9980]++;
    props.top = ((options.top - curOffset.top) + curTop);
  }
  _$jscoverage['jquery.js'][9982]++;
  if ((options.left != null)) {
    _$jscoverage['jquery.js'][9983]++;
    props.left = ((options.left - curOffset.left) + curLeft);
  }
  _$jscoverage['jquery.js'][9986]++;
  if (("using" in options)) {
    _$jscoverage['jquery.js'][9987]++;
    options.using.call(elem, props);
  }
  else {
    _$jscoverage['jquery.js'][9990]++;
    curElem.css(props);
  }
})};
  _$jscoverage['jquery.js'][9995]++;
  jQuery.fn.extend({offset: (function (options) {
  _$jscoverage['jquery.js'][10001]++;
  if (arguments.length) {
    _$jscoverage['jquery.js'][10002]++;
    return ((options === undefined)? this: this.each((function (i) {
  _$jscoverage['jquery.js'][10005]++;
  jQuery.offset.setOffset(this, options, i);
})));
  }
  _$jscoverage['jquery.js'][10009]++;
  var rect, win, elem = this[0];
  _$jscoverage['jquery.js'][10012]++;
  if ((! elem)) {
    _$jscoverage['jquery.js'][10013]++;
    return;
  }
  _$jscoverage['jquery.js'][10020]++;
  if ((! elem.getClientRects().length)) {
    _$jscoverage['jquery.js'][10021]++;
    return ({top: 0, left: 0});
  }
  _$jscoverage['jquery.js'][10025]++;
  rect = elem.getBoundingClientRect();
  _$jscoverage['jquery.js'][10026]++;
  win = elem.ownerDocument.defaultView;
  _$jscoverage['jquery.js'][10027]++;
  return ({top: (rect.top + win.pageYOffset), left: (rect.left + win.pageXOffset)});
}), position: (function () {
  _$jscoverage['jquery.js'][10036]++;
  if ((! this[0])) {
    _$jscoverage['jquery.js'][10037]++;
    return;
  }
  _$jscoverage['jquery.js'][10040]++;
  var offsetParent, offset, doc, elem = this[0], parentOffset = {top: 0, left: 0};
  _$jscoverage['jquery.js'][10045]++;
  if ((jQuery.css(elem, "position") === "fixed")) {
    _$jscoverage['jquery.js'][10048]++;
    offset = elem.getBoundingClientRect();
  }
  else {
    _$jscoverage['jquery.js'][10051]++;
    offset = this.offset();
    _$jscoverage['jquery.js'][10055]++;
    doc = elem.ownerDocument;
    _$jscoverage['jquery.js'][10056]++;
    offsetParent = (elem.offsetParent || doc.documentElement);
    _$jscoverage['jquery.js'][10057]++;
    while ((offsetParent && ((offsetParent === doc.body) || (offsetParent === doc.documentElement)) && (jQuery.css(offsetParent, "position") === "static"))) {
      _$jscoverage['jquery.js'][10061]++;
      offsetParent = offsetParent.parentNode;
}
    _$jscoverage['jquery.js'][10063]++;
    if ((offsetParent && (offsetParent !== elem) && (offsetParent.nodeType === 1))) {
      _$jscoverage['jquery.js'][10066]++;
      parentOffset = jQuery(offsetParent).offset();
      _$jscoverage['jquery.js'][10067]++;
      parentOffset.top += jQuery.css(offsetParent, "borderTopWidth", true);
      _$jscoverage['jquery.js'][10068]++;
      parentOffset.left += jQuery.css(offsetParent, "borderLeftWidth", true);
    }
  }
  _$jscoverage['jquery.js'][10073]++;
  return ({top: (offset.top - parentOffset.top - jQuery.css(elem, "marginTop", true)), left: (offset.left - parentOffset.left - jQuery.css(elem, "marginLeft", true))});
}), offsetParent: (function () {
  _$jscoverage['jquery.js'][10090]++;
  return this.map((function () {
  _$jscoverage['jquery.js'][10091]++;
  var offsetParent = this.offsetParent;
  _$jscoverage['jquery.js'][10093]++;
  while ((offsetParent && (jQuery.css(offsetParent, "position") === "static"))) {
    _$jscoverage['jquery.js'][10094]++;
    offsetParent = offsetParent.offsetParent;
}
  _$jscoverage['jquery.js'][10097]++;
  return (offsetParent || documentElement);
}));
})});
  _$jscoverage['jquery.js'][10103]++;
  jQuery.each({scrollLeft: "pageXOffset", scrollTop: "pageYOffset"}, (function (method, prop) {
  _$jscoverage['jquery.js'][10104]++;
  var top = ("pageYOffset" === prop);
  _$jscoverage['jquery.js'][10106]++;
  jQuery.fn[method] = (function (val) {
  _$jscoverage['jquery.js'][10107]++;
  return access(this, (function (elem, method, val) {
  _$jscoverage['jquery.js'][10110]++;
  var win;
  _$jscoverage['jquery.js'][10111]++;
  if (isWindow(elem)) {
    _$jscoverage['jquery.js'][10112]++;
    win = elem;
  }
  else {
    _$jscoverage['jquery.js'][10113]++;
    if ((elem.nodeType === 9)) {
      _$jscoverage['jquery.js'][10114]++;
      win = elem.defaultView;
    }
  }
  _$jscoverage['jquery.js'][10117]++;
  if ((val === undefined)) {
    _$jscoverage['jquery.js'][10118]++;
    return (win? win[prop]: elem[method]);
  }
  _$jscoverage['jquery.js'][10121]++;
  if (win) {
    _$jscoverage['jquery.js'][10122]++;
    win.scrollTo(((! top)? val: win.pageXOffset), (top? val: win.pageYOffset));
  }
  else {
    _$jscoverage['jquery.js'][10128]++;
    elem[method] = val;
  }
}), method, val, arguments.length);
});
}));
  _$jscoverage['jquery.js'][10140]++;
  jQuery.each(["top", "left"], (function (i, prop) {
  _$jscoverage['jquery.js'][10141]++;
  jQuery.cssHooks[prop] = addGetHookIf(support.pixelPosition, (function (elem, computed) {
  _$jscoverage['jquery.js'][10143]++;
  if (computed) {
    _$jscoverage['jquery.js'][10144]++;
    computed = curCSS(elem, prop);
    _$jscoverage['jquery.js'][10147]++;
    return (rnumnonpx.test(computed)? (jQuery(elem).position()[prop] + "px"): computed);
  }
}));
}));
  _$jscoverage['jquery.js'][10157]++;
  jQuery.each({Height: "height", Width: "width"}, (function (name, type) {
  _$jscoverage['jquery.js'][10158]++;
  jQuery.each({padding: ("inner" + name), content: type, "": ("outer" + name)}, (function (defaultExtra, funcName) {
  _$jscoverage['jquery.js'][10162]++;
  jQuery.fn[funcName] = (function (margin, value) {
  _$jscoverage['jquery.js'][10163]++;
  var chainable = (arguments.length && (defaultExtra || ((typeof margin) !== "boolean"))), extra = (defaultExtra || (((margin === true) || (value === true))? "margin": "border"));
  _$jscoverage['jquery.js'][10166]++;
  return access(this, (function (elem, type, value) {
  _$jscoverage['jquery.js'][10167]++;
  var doc;
  _$jscoverage['jquery.js'][10169]++;
  if (isWindow(elem)) {
    _$jscoverage['jquery.js'][10172]++;
    return ((funcName.indexOf("outer") === 0)? elem[("inner" + name)]: elem.document.documentElement[("client" + name)]);
  }
  _$jscoverage['jquery.js'][10178]++;
  if ((elem.nodeType === 9)) {
    _$jscoverage['jquery.js'][10179]++;
    doc = elem.documentElement;
    _$jscoverage['jquery.js'][10183]++;
    return Math.max(elem.body[("scroll" + name)], doc[("scroll" + name)], elem.body[("offset" + name)], doc[("offset" + name)], doc[("client" + name)]);
  }
  _$jscoverage['jquery.js'][10190]++;
  return ((value === undefined)? jQuery.css(elem, type, extra): jQuery.style(elem, type, value, extra));
}), type, (chainable? margin: undefined), chainable);
});
}));
}));
  _$jscoverage['jquery.js'][10203]++;
  jQuery.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "), (function (i, name) {
  _$jscoverage['jquery.js'][10209]++;
  jQuery.fn[name] = (function (data, fn) {
  _$jscoverage['jquery.js'][10210]++;
  return ((arguments.length > 0)? this.on(name, null, data, fn): this.trigger(name));
});
}));
  _$jscoverage['jquery.js'][10216]++;
  jQuery.fn.extend({hover: (function (fnOver, fnOut) {
  _$jscoverage['jquery.js'][10218]++;
  return this.mouseenter(fnOver).mouseleave((fnOut || fnOver));
})});
  _$jscoverage['jquery.js'][10225]++;
  jQuery.fn.extend({bind: (function (types, data, fn) {
  _$jscoverage['jquery.js'][10228]++;
  return this.on(types, null, data, fn);
}), unbind: (function (types, fn) {
  _$jscoverage['jquery.js'][10231]++;
  return this.off(types, null, fn);
}), delegate: (function (selector, types, data, fn) {
  _$jscoverage['jquery.js'][10235]++;
  return this.on(types, selector, data, fn);
}), undelegate: (function (selector, types, fn) {
  _$jscoverage['jquery.js'][10240]++;
  return ((arguments.length === 1)? this.off(selector, "**"): this.off(types, (selector || "**"), fn));
})});
  _$jscoverage['jquery.js'][10250]++;
  jQuery.proxy = (function (fn, context) {
  _$jscoverage['jquery.js'][10251]++;
  var tmp, args, proxy;
  _$jscoverage['jquery.js'][10253]++;
  if (((typeof context) === "string")) {
    _$jscoverage['jquery.js'][10254]++;
    tmp = fn[context];
    _$jscoverage['jquery.js'][10255]++;
    context = fn;
    _$jscoverage['jquery.js'][10256]++;
    fn = tmp;
  }
  _$jscoverage['jquery.js'][10261]++;
  if ((! isFunction(fn))) {
    _$jscoverage['jquery.js'][10262]++;
    return undefined;
  }
  _$jscoverage['jquery.js'][10266]++;
  args = slice.call(arguments, 2);
  _$jscoverage['jquery.js'][10267]++;
  proxy = (function () {
  _$jscoverage['jquery.js'][10268]++;
  return fn.apply((context || this), args.concat(slice.call(arguments)));
});
  _$jscoverage['jquery.js'][10272]++;
  proxy.guid = (fn.guid = (fn.guid || (jQuery.guid++)));
  _$jscoverage['jquery.js'][10274]++;
  return proxy;
});
  _$jscoverage['jquery.js'][10277]++;
  jQuery.holdReady = (function (hold) {
  _$jscoverage['jquery.js'][10278]++;
  if (hold) {
    _$jscoverage['jquery.js'][10279]++;
    (jQuery.readyWait++);
  }
  else {
    _$jscoverage['jquery.js'][10281]++;
    jQuery.ready(true);
  }
});
  _$jscoverage['jquery.js'][10284]++;
  jQuery.isArray = Array.isArray;
  _$jscoverage['jquery.js'][10285]++;
  jQuery.parseJSON = JSON.parse;
  _$jscoverage['jquery.js'][10286]++;
  jQuery.nodeName = nodeName;
  _$jscoverage['jquery.js'][10287]++;
  jQuery.isFunction = isFunction;
  _$jscoverage['jquery.js'][10288]++;
  jQuery.isWindow = isWindow;
  _$jscoverage['jquery.js'][10289]++;
  jQuery.camelCase = camelCase;
  _$jscoverage['jquery.js'][10290]++;
  jQuery.type = toType;
  _$jscoverage['jquery.js'][10292]++;
  jQuery.now = Date.now;
  _$jscoverage['jquery.js'][10294]++;
  jQuery.isNumeric = (function (obj) {
  _$jscoverage['jquery.js'][10299]++;
  var type = jQuery.type(obj);
  _$jscoverage['jquery.js'][10300]++;
  return (((type === "number") || (type === "string")) && (! isNaN((obj - parseFloat(obj)))));
});
  _$jscoverage['jquery.js'][10324]++;
  if ((((typeof define) === "function") && define.amd)) {
    _$jscoverage['jquery.js'][10325]++;
    define("jquery", [], (function () {
  _$jscoverage['jquery.js'][10326]++;
  return jQuery;
}));
  }
  _$jscoverage['jquery.js'][10333]++;
  var _jQuery = window.jQuery, _$ = window.$;
  _$jscoverage['jquery.js'][10341]++;
  jQuery.noConflict = (function (deep) {
  _$jscoverage['jquery.js'][10342]++;
  if ((window.$ === jQuery)) {
    _$jscoverage['jquery.js'][10343]++;
    window.$ = _$;
  }
  _$jscoverage['jquery.js'][10346]++;
  if ((deep && (window.jQuery === jQuery))) {
    _$jscoverage['jquery.js'][10347]++;
    window.jQuery = _jQuery;
  }
  _$jscoverage['jquery.js'][10350]++;
  return jQuery;
});
  _$jscoverage['jquery.js'][10356]++;
  if ((! noGlobal)) {
    _$jscoverage['jquery.js'][10357]++;
    window.jQuery = (window.$ = jQuery);
  }
  _$jscoverage['jquery.js'][10363]++;
  return jQuery;
}));
